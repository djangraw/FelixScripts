echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb8930
endif
set output_dir = tb8930.srtt
if ( -d tb8930.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb8930.srtt
mkdir tb8930.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb8930.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb8930.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb8930.srtt/pb00.tb8930.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.4 s
3dTcat -prefix tb8930.srtt/pb00.tb8930.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.9 s
3dTcat -prefix tb8930.srtt/pb00.tb8930.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.1 s
set tr_counts = ( 150 150 150 )
cd tb8930.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8930.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8930.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8930.r01.tcat+orig.BRIK is 19.400013 degrees from plumb.
++ 27087 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8930.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8930.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8930.r02.tcat+orig.BRIK is 19.400013 degrees from plumb.
++ 26950 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8930.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8930.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8930.r03.tcat+orig.BRIK is 19.400013 degrees from plumb.
++ 26874 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb8930.r01.tshift -tpattern alt+z2 pb00.tb8930.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8930.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8930.r01.tcat+orig.BRIK is 19.400013 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8930.r02.tshift -tpattern alt+z2 pb00.tb8930.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8930.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8930.r02.tcat+orig.BRIK is 19.400013 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8930.r03.tshift -tpattern alt+z2 pb00.tb8930.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8930.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8930.r03.tcat+orig.BRIK is 19.400013 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb8930.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 19.400013 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 423.082794
 + Used gradual clip level = 383.593811 .. 473.107513
 + Number voxels above clip level = 27519
 + Clustering voxels ...
 + Largest cluster has 27180 voxels
 + Clustering voxels ...
 + Largest cluster has 26807 voxels
 + Filled   291 voxels in small holes; now have 27098 voxels
 + Filled     1 voxels in large holes; now have 27099 voxels
 + Clustering voxels ...
 + Largest cluster has 27098 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 103973 voxels
 + Mask now has 27099 voxels
++ 27099 voxels in the mask [out of 131072: 20.67%]
++ first  14 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1031.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1031.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 19.400013 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 19.400013 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1476685 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 27099 voxels [17.4%] in weight mask
++ Number of points for matching = 27099
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.259 29.073 18.951 (index)
 + source center of mass = 84.221 172.212 179.121 (index)
 + source-target CM = 0.349 0.656 -4.010 (xyz)
 + center of mass shifts = 0.349 0.656 -4.010
++ shift param auto-range: -69.2..69.9 -68.9..70.2 -51.5..43.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.650764 .. 10.349236
 + Range param#2 [y-shift] = -9.344490 .. 10.655510
 + Range param#3 [z-shift] = -14.009598 .. 5.990402
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.650764 .. 40.349236
 + Range param#2 [y-shift] = -39.344490 .. 40.655510
 + Range param#3 [z-shift] = -44.009598 .. 35.990402
 + 12 free parameters
++ Normalized convergence radius = 0.000472
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1476685 [out of 18819504] voxels
 + base mask has 37154 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=95 usiz=188
 + - copying weight image
 + - using 27099 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 23375 total points stored in 219 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo-.-+.-..o+++-.++-.o$-.- + - best 45 costs found:
    0 v=-0.056470:   0.35   0.66  -4.01   0.00   0.00   0.00  [grid]
    1 v=-0.045518: -26.32 -26.01   9.32 -15.00 -30.00  30.00  [grid]
    2 v=-0.041802: -12.98 -12.68   9.32 -15.00 -15.00  15.00  [grid]
    3 v=-0.039347:  -3.73  -5.57   3.79  -4.32 -22.85 -18.95  [rand]
    4 v=-0.039332:  -8.29 -19.78  13.46 -25.20 -18.50 -13.54  [rand]
    5 v=-0.037635: -19.14  17.33  -1.41 -30.54  19.59  20.03  [rand]
    6 v=-0.037110: -12.98 -26.01   9.32 -15.00 -30.00  15.00  [grid]
    7 v=-0.037078: -26.32 -26.01  22.66 -15.00 -30.00  15.00  [grid]
    8 v=-0.036370: -26.32 -12.68   9.32 -15.00 -15.00  30.00  [grid]
    9 v=-0.036232: -24.00 -29.04   9.02 -28.68 -38.91  32.36  [rand]
   10 v=-0.035803:  -9.47 -24.10   7.37  -3.10 -34.36   2.55  [rand]
   11 v=-0.035665: -12.98 -12.68   9.32 -15.00 -30.00  15.00  [grid]
   12 v=-0.034606:  13.68 -12.68   9.32  30.00 -30.00 -15.00  [grid]
   13 v=-0.034460: -26.32 -12.68   9.32 -30.00 -15.00  30.00  [grid]
   14 v=-0.033023: -15.63 -18.84  -9.73 -20.53   3.14  10.08  [rand]
   15 v=-0.032800:  -3.73   6.88   3.79   4.32 -22.85 -18.95  [rand]
   16 v=-0.032782: -12.98 -12.68   9.32 -15.00 -15.00 -15.00  [grid]
   17 v=-0.032492: -12.98 -26.01  22.66 -15.00 -30.00 -15.00  [grid]
   18 v=-0.031512: -13.86  10.11   0.83 -15.99  13.53  29.93  [rand]
   19 v=-0.031293: -26.32 -26.01  22.66 -30.00  15.00  30.00  [grid]
   20 v=-0.031090:  -4.99 -29.10   9.66 -22.21  -7.92 -40.02  [rand]
   21 v=-0.030020: -12.98 -26.01   9.32 -15.00 -30.00 -15.00  [grid]
   22 v=-0.029696: -12.98 -12.68  22.66 -15.00 -15.00 -15.00  [grid]
   23 v=-0.029196:  -3.73  -5.57   3.79   4.32 -22.85 -18.95  [rand]
   24 v=-0.028686: -26.32 -12.68  22.66 -30.00  15.00  15.00  [grid]
   25 v=-0.028058:  13.68 -12.68   9.32  15.00 -15.00 -15.00  [grid]
   26 v=-0.027535:  -3.73   6.88 -11.81   4.32  22.85 -18.95  [rand]
   27 v=-0.027309: -12.98 -26.01   9.32 -15.00 -30.00  30.00  [grid]
   28 v=-0.026584:  13.68 -12.68   9.32  30.00 -30.00 -30.00  [grid]
   29 v=-0.026476: -20.63 -27.73  28.24  -3.65 -28.33  14.78  [rand]
   30 v=-0.026411: -15.87  14.76  31.12 -15.74  34.09   7.78  [rand]
   31 v=-0.025950: -13.68 -15.06  10.66 -24.25 -37.55   4.41  [rand]
   32 v=-0.025880: -12.98  13.99 -30.68 -30.00 -30.00  15.00  [grid]
   33 v=-0.025592: -12.98  13.99   9.32 -15.00  15.00 -15.00  [grid]
   34 v=-0.025499:  13.68 -26.01   9.32  30.00 -30.00 -30.00  [grid]
   35 v=-0.025315: -26.32 -26.01   9.32 -15.00 -30.00  15.00  [grid]
   36 v=-0.025249: -12.98 -26.01   9.32 -15.00 -15.00  15.00  [grid]
   37 v=-0.025227: -12.98 -26.01   9.32 -15.00 -15.00 -15.00  [grid]
   38 v=-0.025007: -12.98 -12.68   9.32 -15.00 -15.00  30.00  [grid]
   39 v=-0.024721: -12.98  13.99   9.32  30.00  15.00  30.00  [grid]
   40 v=-0.024358:  -9.47 -24.10   7.37  -3.10 -34.36  -2.55  [rand]
   41 v=-0.024300: -16.51 -17.93  10.44 -19.57 -37.09  16.59  [rand]
   42 v=-0.024165: -12.98 -12.68  22.66 -15.00 -30.00 -15.00  [grid]
   43 v=-0.024159: -26.32 -26.01  22.66 -30.00 -15.00  30.00  [grid]
   44 v=-0.024037: -26.32 -26.01  22.66 -15.00  15.00  30.00  [grid]
*[#8004=-0.314897] *[#8017=-0.33875] *[#8018=-0.35636] *[#8019=-0.365997] *[#8020=-0.366312] *[#8023=-0.369213] *[#8026=-0.375683]  + - costs of the above after a little optimization:
  * 0 v=-0.375683:   0.68  -0.55  -0.03   0.10   0.12  -0.68  [grid]
    1 v=-0.051676: -27.01 -29.31  10.19 -13.51 -31.26  32.28  [grid]
    2 v=-0.096484:  -9.65 -13.27  11.03  -4.26 -16.07  12.99  [grid]
    3 v=-0.062209:  -4.33 -13.82   5.03  -6.36 -26.51 -19.95  [rand]
    4 v=-0.060448:  -6.70 -19.79  15.88 -17.25 -19.06 -11.61  [rand]
    5 v=-0.047759: -18.19  16.32  -0.71 -29.84  20.30  26.16  [rand]
    6 v=-0.075615: -13.80 -21.36  13.99 -10.28 -29.05  14.06  [grid]
    7 v=-0.048460: -26.88 -27.63  20.85 -17.00 -31.12  11.41  [grid]
    8 v=-0.062643: -22.94 -10.62  12.58  -5.13 -14.39  27.66  [grid]
    9 v=-0.039379: -23.32 -29.08   8.93 -28.21 -38.84  32.46  [rand]
   10 v=-0.077462:  -5.55 -29.39  10.80  -0.99 -30.70   7.86  [rand]
   11 v=-0.076223: -15.26 -19.03  13.36 -12.62 -25.95  14.74  [grid]
   12 v=-0.042729:  11.85 -13.25   9.84  29.13 -29.63 -14.47  [grid]
   13 v=-0.041855: -25.23 -12.22  10.86 -29.51 -13.98  35.34  [grid]
   14 v=-0.049666: -14.23 -18.77  -9.79 -15.35   2.06   8.59  [rand]
   15 v=-0.044470:  -4.12   6.01   0.31   1.72 -23.28 -15.99  [rand]
   16 v=-0.054077: -11.48 -14.65  12.82 -17.90 -13.31 -14.67  [grid]
   17 v=-0.078090:  -8.92 -24.17  19.38 -12.25 -28.41  -4.87  [grid]
   18 v=-0.053094: -19.08   8.80   2.07 -13.80  11.64  27.98  [rand]
   19 v=-0.033273: -25.56 -26.00  22.98 -29.80  19.02  30.13  [grid]
   20 v=-0.034976:  -5.20 -26.65   9.83 -21.52  -7.88 -39.76  [rand]
   21 v=-0.070657:  -6.21 -27.72  13.38 -11.03 -29.00 -12.87  [grid]
   22 v=-0.097982:  -7.98 -11.09  14.15  -8.93 -13.74  -2.01  [grid]
   23 v=-0.053342:  -4.25 -10.45   4.63  -7.61 -22.91 -21.62  [rand]
   24 v=-0.039420: -26.00 -14.37  23.62 -29.86  15.21  18.55  [grid]
   25 v=-0.040107:  10.37 -12.74  11.02  14.34 -18.26 -13.81  [grid]
   26 v=-0.038950:  -4.09   7.78  -7.88   4.36  22.95 -17.76  [rand]
   27 v=-0.055628: -12.84 -26.27  11.86  -5.48 -28.13  32.01  [grid]
   28 v=-0.047700:  15.21 -16.28  11.57  37.84 -30.77 -28.99  [grid]
   29 v=-0.055385: -17.39 -28.38  29.39  -4.99 -33.62  12.29  [rand]
   30 v=-0.028222: -15.84  15.13  31.02 -16.79  33.35   7.59  [rand]
   31 v=-0.038267: -12.36 -15.11  11.33 -18.13 -36.43   5.32  [rand]
   32 v=-0.033198: -13.01  13.91 -27.01 -30.05 -29.72  14.48  [grid]
   33 v=-0.055114:  -5.02  11.97   4.28  -8.36  13.45 -10.11  [grid]
   34 v=-0.046565:  13.72 -22.96   8.78  27.89 -38.58 -36.06  [grid]
   35 v=-0.046873: -23.73 -24.94  11.35 -19.61 -26.56  21.62  [grid]
   36 v=-0.073433: -10.20 -15.02  12.00  -7.66 -15.48  14.99  [grid]
   37 v=-0.062527:  -7.13 -22.21   5.98 -14.47 -16.77 -21.59  [grid]
   38 v=-0.050382: -13.57 -15.33   9.39  -7.36 -18.64  28.22  [grid]
   39 v=-0.026079: -13.03  13.75   9.05  29.95  15.04  30.49  [grid]
   40 v=-0.065635:  -4.04 -24.72  12.23  -3.70 -35.14  -1.71  [rand]
   41 v=-0.057664: -12.92 -22.27  13.94 -15.91 -33.38  16.39  [rand]
   42 v=-0.036480:  -9.07 -14.51  20.34 -17.00 -30.47 -13.65  [grid]
   43 v=-0.037930: -26.74 -25.85  27.50 -28.89 -14.10  29.71  [grid]
   44 v=-0.026728: -26.72 -26.65  22.07 -15.74  15.23  34.04  [grid]
 + - save # 0 for twobest
 + - save #22 for twobest
 + - save # 2 for twobest
 + - save #17 for twobest
 + - save #10 for twobest
 + - save #11 for twobest
 + - skip # 6 for twobest: too close to set #11
 + - skip #36 for twobest: too close to set # 2
 + - save #21 for twobest
 + - save #40 for twobest
 + - save # 8 for twobest
 + - save #37 for twobest
 + - save # 3 for twobest
 + - save # 4 for twobest
 + - save #41 for twobest
 + - save #27 for twobest
 + - save #29 for twobest
 + - save #33 for twobest
 + - save #16 for twobest
 + - skip #23 for twobest: too close to set # 3
 + - save #18 for twobest
 + - save # 1 for twobest
 + - save #38 for twobest
 + - save #14 for twobest
 + - save # 7 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=95 usiz=188
 + - retaining old weight image
 + - using 27099 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23713 total points stored in 239 'RHDD(13.7332)' bloks
*[#9631=-0.416292] *[#9639=-0.425459] *[#9650=-0.428619] *[#9652=-0.434031] *[#9655=-0.435912] *[#9661=-0.436203] *[#9663=-0.436248] *[#9665=-0.436341] *[#9668=-0.437194] *[#9673=-0.437518] *[#9680=-0.437578] *[#9682=-0.437833] 
 + - param set #1 has cost=-0.437833
 + -- Parameters = 0.3935 -0.2024 -0.1745 -0.0345 0.1450 -0.8123 0.9999 1.0185 0.9984 -0.0004 0.0008 0.0005
 + - param set #2 has cost=-0.084217
 + -- Parameters = -6.6341 -10.9458 13.4886 -5.6829 -14.8292 0.3087 1.0051 1.0097 0.9897 0.0023 0.0034 0.0071
 + - param set #3 has cost=-0.088543
 + -- Parameters = -7.6249 -13.0205 10.9246 -4.6290 -15.6200 7.8198 1.0052 1.0099 1.0063 -0.0021 -0.0006 0.0021
 + - param set #4 has cost=-0.061064
 + -- Parameters = -8.1589 -23.5928 18.8231 -11.8577 -28.9786 -4.2346 1.0004 1.0023 0.9959 0.0034 0.0012 0.0109
 + - param set #5 has cost=-0.064491
 + -- Parameters = -5.6826 -31.6440 10.6851 -1.7452 -31.2598 7.5213 0.9987 1.0069 1.0003 0.0000 0.0017 -0.0009
 + - param set #6 has cost=-0.065697
 + -- Parameters = -15.3961 -20.7218 13.5750 -10.6535 -25.4628 13.5518 0.9965 1.0248 0.9979 -0.0016 0.0017 0.0004
 + - param set #7 has cost=-0.058621
 + -- Parameters = -5.8391 -28.1400 12.8217 -11.7082 -29.8409 -9.6187 0.9940 0.9947 0.9961 -0.0026 -0.0040 -0.0030
 + - param set #8 has cost=-0.050340
 + -- Parameters = -4.4118 -24.9427 11.9326 -3.3394 -34.9922 -5.8814 1.0020 1.0179 0.9982 0.0025 0.0009 -0.0001
 + - param set #9 has cost=-0.045991
 + -- Parameters = -23.1434 -9.1506 12.7849 -2.6318 -9.5234 30.0931 1.0033 1.0285 0.9835 -0.0025 -0.0038 -0.0021
 + - param set #10 has cost=-0.043426
 + -- Parameters = -6.9587 -23.2527 5.8939 -13.2736 -16.8766 -21.6418 0.9902 1.0052 0.9984 0.0135 -0.0000 0.0044
 + - param set #11 has cost=-0.049882
 + -- Parameters = -4.1851 -15.8445 7.5267 -5.0217 -32.1579 -14.6966 0.9973 1.0199 0.9998 0.0057 0.0134 0.0033
 + - param set #12 has cost=-0.436785
 + -- Parameters = 0.4433 -0.4533 -0.3403 0.1147 0.4836 -0.8180 0.9964 1.0092 1.0037 0.0022 -0.0011 0.0019
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0253 
 + --- dist(#3,#1) = 0.175 
 + --- dist(#4,#1) = 0.171 
 + --- dist(#5,#1) = 0.285 
 + --- dist(#6,#1) = 0.393 
 + --- dist(#7,#1) = 0.324 
 + --- dist(#8,#1) = 0.349 
 + --- dist(#9,#1) = 0.39 
 + --- dist(#10,#1) = 0.359 
 + --- dist(#11,#1) = 0.343 
 + --- dist(#12,#1) = 0.288 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=95 usiz=188
 + - retaining old weight image
 + - using 27099 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24162 total points stored in 251 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.429431
 + -- Parameters = 0.4157 -0.2197 -0.3678 0.0589 0.1554 -0.9045 0.9999 1.0185 1.0100 0.0033 0.0005 -0.0046
 + - param set #2 has cost=-0.429260
 + -- Parameters = 0.4757 -0.2195 -0.3507 0.1560 0.2231 -0.8179 0.9944 1.0215 1.0055 0.0054 -0.0006 -0.0018
 + - param set #3 has cost=-0.080817
 + -- Parameters = -7.1096 -12.1643 11.2580 -3.9553 -16.6459 6.2557 0.9915 1.0147 0.9814 0.0173 0.0121 -0.0072
 + - param set #4 has cost=-0.075615
 + -- Parameters = -6.8464 -11.3555 13.3866 -5.3308 -16.0907 2.0877 1.0057 1.0148 0.9856 0.0051 0.0103 0.0147
 + - param set #5 has cost=-0.057037
 + -- Parameters = -14.5953 -20.6767 12.9837 -10.1755 -25.2302 11.1357 0.9880 1.0322 1.0034 0.0026 0.0107 -0.0021
 + - param set #6 has cost=-0.054138
 + -- Parameters = -5.5248 -31.4610 9.1386 -1.9352 -31.8347 8.2140 0.9999 1.0065 1.0023 0.0012 0.0020 0.0006
 + - param set #7 has cost=-0.058093
 + -- Parameters = -7.4547 -23.0425 18.4329 -11.1015 -29.2180 -3.7645 1.0054 1.0052 0.9326 0.0209 0.0049 0.0153
 + - param set #8 has cost=-0.052251
 + -- Parameters = -5.7427 -27.7846 12.4355 -12.0315 -29.5297 -10.0545 0.9907 0.9959 0.9982 -0.0035 -0.0054 0.0042
 + - param set #9 has cost=-0.048204
 + -- Parameters = -4.1981 -25.4014 11.0559 -6.2075 -33.6319 -4.0816 1.0051 1.0336 0.9962 0.0022 0.0009 0.0013
 + - param set #10 has cost=-0.040258
 + -- Parameters = -4.2576 -16.1014 7.7124 -4.8842 -32.5111 -14.5981 1.0095 1.0206 1.0007 0.0060 0.0139 0.0041
 + - param set #11 has cost=-0.037881
 + -- Parameters = -22.5110 -8.6933 12.7685 -2.3083 -9.9810 31.0766 1.0218 1.0178 0.9738 -0.0071 -0.0159 -0.0055
 + - param set #12 has cost=-0.032392
 + -- Parameters = -7.0134 -23.1893 5.7633 -13.2357 -16.6416 -21.9119 0.9889 1.0037 0.9999 0.0143 0.0008 0.0109
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.015 XXX
 + --- dist(#3,#1) = 0.181 
 + --- dist(#4,#1) = 0.326 
 + --- dist(#5,#1) = 0.282 
 + --- dist(#6,#1) = 0.391 
 + --- dist(#7,#1) = 0.345 
 + --- dist(#8,#1) = 0.375 
 + --- dist(#9,#1) = 0.363 
 + --- dist(#10,#1) = 0.355 
 + --- dist(#11,#1) = 0.287 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=95 usiz=188
 + - retaining old weight image
 + - using 27099 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24042 total points stored in 254 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.428739
 + -- Parameters = 0.4661 -0.1450 -0.3416 0.1163 0.0142 -0.9335 0.9992 1.0228 1.0048 0.0031 0.0020 -0.0062
 + - param set #2 has cost=-0.074333
 + -- Parameters = -6.7393 -11.8374 10.7863 -3.5281 -16.8102 6.1993 0.9878 1.0186 0.9788 0.0086 0.0137 -0.0232
 + - param set #3 has cost=-0.068010
 + -- Parameters = -7.2539 -12.4933 11.5985 -4.2769 -16.1547 5.5606 1.0021 0.9997 0.9973 0.0017 0.0108 0.0046
 + - param set #4 has cost=-0.052902
 + -- Parameters = -7.2624 -23.1348 17.8689 -11.2538 -29.2527 -3.5297 1.0143 0.9962 0.9206 0.0238 0.0068 0.0100
 + - param set #5 has cost=-0.048009
 + -- Parameters = -13.6107 -20.4985 13.7823 -9.2476 -25.8410 10.4294 0.9839 1.0336 1.0162 0.0094 0.0202 -0.0062
 + - param set #6 has cost=-0.045596
 + -- Parameters = -5.7547 -31.9266 9.3303 -2.3886 -31.9722 7.7407 1.0029 1.0030 1.0000 0.0009 0.0023 0.0010
 + - param set #7 has cost=-0.047229
 + -- Parameters = -5.9197 -27.0041 11.9464 -12.3475 -30.3227 -9.4175 0.9929 1.0003 0.9986 -0.0013 -0.0062 0.0014
 + - param set #8 has cost=-0.044528
 + -- Parameters = -3.7738 -25.7263 11.1136 -5.9224 -33.4353 -3.7561 1.0071 1.0427 1.0002 0.0022 0.0040 0.0003
 + - param set #9 has cost=-0.036671
 + -- Parameters = -3.3903 -15.8511 7.9433 -4.7379 -33.3472 -14.7112 1.0134 1.0164 1.0070 0.0004 0.0149 0.0059
 + - param set #10 has cost=-0.034148
 + -- Parameters = -22.4810 -8.7856 13.1361 -2.2984 -10.3581 31.2257 1.0109 1.0173 0.9746 -0.0068 -0.0157 -0.0059
 + - param set #11 has cost=-0.026531
 + -- Parameters = -6.9972 -22.9410 5.4512 -13.0805 -16.0793 -21.8332 0.9881 1.0016 0.9989 0.0151 0.0004 0.0126
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.187 
 + --- dist(#3,#1) = 0.18 
 + --- dist(#4,#1) = 0.325 
 + --- dist(#5,#1) = 0.287 
 + --- dist(#6,#1) = 0.337 
 + --- dist(#7,#1) = 0.397 
 + --- dist(#8,#1) = 0.372 
 + --- dist(#9,#1) = 0.371 
 + --- dist(#10,#1) = 0.357 
 + --- dist(#11,#1) = 0.285 
 + - Total coarse refinement net CPU time = 0.0 s; 3021 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=95 usiz=188
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 24127 total points stored in 256 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.419932 *
 + -- Parameters = 0.4661 -0.1450 -0.3416 0.1163 0.0142 -0.9335 0.9992 1.0228 1.0048 0.0031 0.0020 -0.0062
 + - cost(#2)=-0.067171  
 + -- Parameters = -6.7393 -11.8374 10.7863 -3.5281 -16.8102 6.1993 0.9878 1.0186 0.9788 0.0086 0.0137 -0.0232
 + - cost(#3)=-0.061241  
 + -- Parameters = -7.2539 -12.4933 11.5985 -4.2769 -16.1547 5.5606 1.0021 0.9997 0.9973 0.0017 0.0108 0.0046
 + - cost(#4)=-0.049933  
 + -- Parameters = -7.2624 -23.1348 17.8689 -11.2538 -29.2527 -3.5297 1.0143 0.9962 0.9206 0.0238 0.0068 0.0100
 + - cost(#5)=-0.043298  
 + -- Parameters = -13.6107 -20.4985 13.7823 -9.2476 -25.8410 10.4294 0.9839 1.0336 1.0162 0.0094 0.0202 -0.0062
 + - cost(#6)=-0.044104  
 + -- Parameters = -5.9197 -27.0041 11.9464 -12.3475 -30.3227 -9.4175 0.9929 1.0003 0.9986 -0.0013 -0.0062 0.0014
 + - cost(#7)=-0.044574  
 + -- Parameters = -5.7547 -31.9266 9.3303 -2.3886 -31.9722 7.7407 1.0029 1.0030 1.0000 0.0009 0.0023 0.0010
 + - cost(#8)=-0.040584  
 + -- Parameters = -3.7738 -25.7263 11.1136 -5.9224 -33.4353 -3.7561 1.0071 1.0427 1.0002 0.0022 0.0040 0.0003
 + - cost(#9)=-0.032811  
 + -- Parameters = -3.3903 -15.8511 7.9433 -4.7379 -33.3472 -14.7112 1.0134 1.0164 1.0070 0.0004 0.0149 0.0059
 + - cost(#10)=-0.029830  
 + -- Parameters = -22.4810 -8.7856 13.1361 -2.2984 -10.3581 31.2257 1.0109 1.0173 0.9746 -0.0068 -0.0157 -0.0059
 + - cost(#11)=-0.025054  
 + -- Parameters = -6.9972 -22.9410 5.4512 -13.0805 -16.0793 -21.8332 0.9881 1.0016 0.9989 0.0151 0.0004 0.0126
 + - cost(#12)=-0.073245  
 + -- Parameters = 0.3492 0.6555 -4.0096 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.421835 *
 + -- Parameters = 0.4308 -0.0141 -0.3511 0.0529 -0.3472 -0.9719 1.0040 1.0259 1.0063 0.0016 0.0045 -0.0142
 + - cost(#2)=-0.068520  
 + -- Parameters = -6.5643 -11.9360 10.8637 -3.3874 -16.6291 5.5517 0.9889 1.0127 0.9803 0.0106 0.0160 -0.0275
 + - cost(#3)=-0.064715  
 + -- Parameters = -6.8554 -12.2912 11.1666 -3.8074 -16.0401 5.5899 0.9856 1.0034 1.0016 0.0028 0.0102 0.0001
 + - cost(#4)=-0.050348  
 + -- Parameters = -7.2817 -23.0446 17.8727 -11.2215 -29.4236 -3.4610 1.0147 0.9991 0.9204 0.0259 0.0067 0.0103
 + - cost(#5)=-0.044174  
 + -- Parameters = -13.4655 -20.5130 13.8761 -9.1723 -25.7314 10.1782 0.9845 1.0331 1.0153 0.0170 0.0232 -0.0061
 + - cost(#6)=-0.045804  
 + -- Parameters = -5.9387 -27.0954 11.8911 -12.3592 -30.1611 -9.0581 0.9937 1.0043 1.0093 -0.0018 -0.0075 0.0031
 + - cost(#7)=-0.045213  
 + -- Parameters = -5.5743 -31.7953 8.9828 -2.4622 -31.6261 7.5799 1.0035 0.9991 0.9992 -0.0037 0.0023 0.0007
 + - cost(#8)=-0.043767  
 + -- Parameters = -3.8491 -26.8887 12.5341 -5.7279 -33.0349 -3.6991 1.0081 1.0420 0.9990 0.0027 0.0044 0.0015
 + - cost(#9)=-0.033280  
 + -- Parameters = -3.2423 -15.8874 7.7194 -4.6344 -33.1620 -14.7684 1.0135 1.0101 1.0068 -0.0001 0.0149 0.0061
 + - cost(#10)=-0.030424  
 + -- Parameters = -22.5012 -8.9311 13.0798 -2.4156 -10.6516 31.0361 1.0114 1.0146 0.9808 -0.0071 -0.0164 -0.0063
 + - cost(#11)=-0.025428  
 + -- Parameters = -6.9015 -23.2154 5.4615 -13.0269 -15.9517 -21.8177 0.9894 0.9990 0.9999 0.0094 -0.0003 0.0138
 + - cost(#12)=-0.416051  
 + -- Parameters = 0.4578 -0.1458 -0.3206 0.1464 0.3731 -0.7309 1.0038 1.0215 1.0073 0.0074 -0.0025 0.0009
 + - case #1 is now the best
 + - Initial  cost = -0.421835
 + - Initial fine Parameters = 0.4308 -0.0141 -0.3511 0.0529 -0.3472 -0.9719 1.0040 1.0259 1.0063 0.0016 0.0045 -0.0142
 + - Finalish cost = -0.423229 ; 320 funcs
 + - Final    cost = -0.423310 ; 313 funcs
 + Final fine fit Parameters:
       x-shift= 0.4728   y-shift= 0.1240   z-shift=-0.3576
       z-angle= 0.0831   x-angle=-0.9509   y-angle=-0.8342
       x-scale= 1.0013   y-scale= 1.0281   z-scale= 1.0033
     y/x-shear= 0.0021 z/x-shear= 0.0008 z/y-shear=-0.0250
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.4728 0.1240 -0.3576 0.0831 -0.9509 -0.8342 1.0013 1.0281 1.0033 0.0021 0.0008 -0.0250
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.2
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 19.400013 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0040 -0.9666 0.3173 220.7822 -0.0132 0.3501 0.9522 51.1694 -1.0012 0.0017 -0.0146 200.3790
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 17.9 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2906.490100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 71.5798 47.2301   ITER = 9/137
71.5798

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 6s 9ms]
lev=0 0..171 0..213 0..166: [first cost=-0.67053] ... done [cost:-0.67053==>-0.73018]
lev=1 patch=129x161x125 [clock= 14m 3s 425ms]........:[cost=-0.77031]:........ done [cost:-0.73018==>-0.77447 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 22m 52s 293ms]......................... done [cost:-0.77447==>-0.82587 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 29m 43s 146ms]................ done [cost:-0.82587==>-0.89102 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 34m 50s 115ms]........... done [cost:-0.89102==>-0.92728 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 38m 40s 101ms]..................... done [cost:-0.92728==>-1.00650 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 42m 19s 190ms].................. done [cost:-1.00650==>-1.05351 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 45m 49s 189ms]....................................... done [cost:-1.05351==>-1.12483 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 49m 32s 490ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8930/tb8930.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 7.7 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb8930.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 19.400013 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8930.r01.tshift+orig.BRIK is 19.400013 degrees from plumb.
++ Reading input dataset ./pb01.tb8930.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28614 voxels
 + 4517 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.172  pitch=-0.462  yaw=-0.142  dS=-0.041  dL=-0.374  dP=-0.349
++ Mean: roll=-0.055  pitch=-0.181  yaw=-0.022  dS=+0.300  dL=-0.135  dP=-0.111
++ Max : roll=+0.109  pitch=+0.057  yaw=+0.084  dS=+0.863  dL=+0.148  dP=+0.038
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.11(0.11) 0.13(0.16) 0.15(0.07) 0.26(0.12) 0.35(0.14) 0.25(0.13) 0.27(0.09) 0.30(0.14) 0.31(0.08) 0.29(0.08) 0.18(0.13) 0.16(0.07) 0.19(0.06) 0.15(0.05) 0.14(0.04) 0.19(0.07) 0.16(0.04) 0.14(0.05) 0.18(0.07) 0.19(0.03) 0.23(0.05) 0.18(0.10) 0.17(0.02) 0.18(0.05) 0.20(0.02) 0.24(0.09) 0.23(0.06) 0.23(0.03) 0.23(0.06) 0.29(0.08) 0.25(0.06) 0.33(0.09) 0.33(0.03) 0.32(0.07) 0.35(0.11) 0.25(0.11) 0.38(0.15) 0.32(0.08) 0.29(0.08) 0.33(0.08) 0.28(0.07) 0.30(0.05) 0.24(0.08) 0.27(0.04) 0.30(0.06) 0.25(0.10) 0.35(0.11) 0.35(0.09) 0.35(0.05) 0.35(0.07) 0.35(0.03) 0.34(0.05) 0.26(0.09) 0.25(0.04) 0.34(0.24) 0.46(0.18) 0.46(0.08) 0.60(0.14) 0.60(0.10) 0.64(0.10) 0.50(0.15) 0.39(0.14) 0.49(0.11) 0.62(0.15) 0.64(0.07) 0.54(0.09) 0.63(0.12) 0.63(0.06) 0.51(0.13) 0.22(0.45) 0.87(0.83) 0.89(0.09) 0.84(0.14) 0.92(0.12) 0.87(0.08) 1.00(0.15) 0.85(0.16) 0.67(0.18) 0.86(0.20) 0.87(0.09) 0.92(0.08) 0.97(0.12) 0.91(0.09) 0.95(0.07) 0.98(0.05) 0.88(0.12) 0.54(0.42) 1.05(0.57) 0.98(0.09) 1.00(0.09) 1.06(0.07) 1.01(0.07) 1.01(0.02) 1.05(0.05) 1.02(0.04) 1.08(0.10) 0.97(0.12) 1.06(0.09) 1.04(0.05) 1.03(0.04) 1.09(0.08) 1.07(0.12) 1.17(0.12) 1.18(0.10) 1.02(0.18) 1.12(0.14) 1.19(0.07) 1.15(0.08) 1.16(0.03) 1.17(0.06) 1.10(0.22) 1.22(0.31) 1.29(0.13) 1.17(0.13) 1.20(0.07) 1.22(0.06) 1.15(0.09) 1.25(0.11) 1.09(0.22) 1.10(0.12) 1.31(0.26) 1.24(0.10) 1.23(0.03) 1.24(0.04) 0.93(0.38) 0.89(0.16) 0.66(0.45) 0.74(0.34) 0.65(0.23) 0.68(0.26) 0.78(0.13) 0.80(0.13) 1.04(0.27) 1.08(0.08) 1.13(0.08) 1.10(0.07) 1.00(0.14) 1.02(0.05) 1.08(0.07) 1.13(0.14) 1.35(0.24) 1.42(0.13) 1.33(0.09) 1.37(0.06) 1.40(0.12) 1.00(0.54) 1.12(0.21) 1.31(0.30) 1.55(0.34)
++ Max displacement in automask = 1.55 (mm) at sub-brick 149
++ Max delta displ  in automask = 0.83 (mm) at sub-brick 71
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb8930.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8930.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8930.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8930.r01.tshift+orig.BRIK is 19.400013 degrees from plumb.
++ Source dataset: ./pb01.tb8930.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 19.400013 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb8930.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 19.400013 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8930.r02.tshift+orig.BRIK is 19.400013 degrees from plumb.
++ Reading input dataset ./pb01.tb8930.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28371 voxels
 + 4512 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.367  pitch=-2.978  yaw=-0.524  dS=+0.718  dL=-0.684  dP=-0.030
++ Mean: roll=-0.118  pitch=-2.539  yaw=-0.240  dS=+1.071  dL=-0.273  dP=+0.189
++ Max : roll=+0.266  pitch=-1.633  yaw=-0.055  dS=+1.449  dL=+0.149  dP=+0.326
++ Max displacements (mm) for each sub-brick:
 4.49(0.00) 4.22(0.39) 4.32(0.34) 4.77(0.45) 4.90(0.38) 4.86(0.22) 4.92(0.19) 4.60(0.45) 4.69(0.36) 4.76(0.17) 4.70(0.23) 4.53(0.29) 4.64(0.21) 4.71(0.11) 4.72(0.07) 4.80(0.15) 4.82(0.16) 4.72(0.28) 4.78(0.20) 4.87(0.09) 4.81(0.11) 4.80(0.03) 4.89(0.10) 4.86(0.05) 4.85(0.04) 4.88(0.07) 4.83(0.09) 4.89(0.12) 4.97(0.09) 5.02(0.06) 4.97(0.06) 4.76(0.21) 5.03(0.28) 4.78(0.37) 5.00(0.42) 5.13(0.28) 5.07(0.17) 5.18(0.17) 5.27(0.10) 5.22(0.10) 5.24(0.08) 5.20(0.13) 5.11(0.13) 5.25(0.15) 5.21(0.05) 5.24(0.06) 5.25(0.04) 5.26(0.03) 5.30(0.06) 5.28(0.04) 5.29(0.08) 5.32(0.10) 5.34(0.08) 5.34(0.12) 5.27(0.15) 4.98(0.76) 4.54(0.45) 5.05(0.54) 5.16(0.18) 5.20(0.08) 4.95(0.33) 4.78(0.29) 4.98(0.46) 4.88(0.35) 4.98(0.13) 5.13(0.36) 5.03(0.13) 5.15(0.26) 5.51(0.39) 5.48(0.30) 5.56(0.30) 5.55(0.17) 5.54(0.18) 5.22(0.67) 5.12(0.36) 4.93(0.23) 5.16(0.24) 5.19(0.13) 5.27(0.08) 5.33(0.11) 5.33(0.05) 5.41(0.23) 5.47(0.17) 5.42(0.07) 5.67(0.28) 5.12(0.69) 5.39(0.43) 5.50(0.19) 5.44(0.20) 5.22(0.26) 5.29(0.11) 5.58(0.31) 5.79(0.23) 5.54(0.31) 5.50(0.08) 5.47(0.15) 5.46(0.04) 5.69(0.22) 5.83(0.17) 5.90(0.09) 5.82(0.11) 5.90(0.09) 5.76(0.14) 5.98(0.24) 5.72(0.29) 5.91(0.19) 5.85(0.08) 5.83(0.06) 5.86(0.06) 5.87(0.04) 5.89(0.04) 5.95(0.07) 5.84(0.12) 5.93(0.09) 5.86(0.07) 5.85(0.05) 5.96(0.13) 5.88(0.08) 5.88(0.05) 5.97(0.10) 5.88(0.10) 6.00(0.13) 5.92(0.08) 5.90(0.07) 5.91(0.08) 5.78(0.14) 5.96(0.20) 5.84(0.13) 5.88(0.07) 5.88(0.08) 5.96(0.09) 5.96(0.08) 5.86(0.19) 5.87(0.03) 5.82(0.06) 5.77(0.06) 5.75(0.07) 5.72(0.05) 5.68(0.05) 5.76(0.09) 5.73(0.08) 4.01(1.96) 3.58(0.64) 4.62(1.15) 4.79(0.36) 5.15(0.40) 5.22(0.16) 5.20(0.33) 5.70(0.53) 5.47(0.29)
++ Max displacement in automask = 6.00 (mm) at sub-brick 121
++ Max delta displ  in automask = 1.96 (mm) at sub-brick 141
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb8930.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8930.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8930.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8930.r02.tshift+orig.BRIK is 19.400013 degrees from plumb.
++ Source dataset: ./pb01.tb8930.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.6
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 19.400013 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb8930.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 19.400013 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8930.r03.tshift+orig.BRIK is 19.400013 degrees from plumb.
++ Reading input dataset ./pb01.tb8930.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28445 voxels
 + 4470 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.488  pitch=-4.717  yaw=-0.895  dS=+1.202  dL=-1.118  dP=-0.420
++ Mean: roll=-0.199  pitch=-2.035  yaw=-0.570  dS=+1.829  dL=-0.616  dP=-0.091
++ Max : roll=+0.254  pitch=-0.973  yaw=-0.028  dS=+2.915  dL=-0.112  dP=+0.348
++ Max displacements (mm) for each sub-brick:
 5.89(0.00) 5.27(0.66) 5.31(0.11) 5.64(0.46) 5.87(0.47) 6.83(1.03) 9.51(2.93) 10.71(1.21) 9.63(1.12) 7.27(2.51) 6.58(0.70) 8.94(2.46) 10.03(1.17) 7.92(2.30) 6.35(1.81) 6.45(0.23) 6.43(0.15) 6.45(0.10) 6.44(0.04) 6.39(0.13) 6.41(0.08) 6.41(0.09) 6.41(0.07) 6.37(0.11) 6.39(0.07) 6.40(0.05) 6.24(0.20) 6.36(0.13) 6.42(0.15) 6.52(0.16) 6.70(0.19) 6.70(0.08) 6.74(0.07) 6.89(0.21) 6.91(0.09) 7.06(0.15) 7.04(0.10) 7.12(0.11) 7.04(0.10) 7.31(0.28) 7.25(0.08) 7.28(0.05) 7.37(0.10) 7.39(0.09) 7.35(0.09) 7.35(0.06) 7.37(0.09) 7.33(0.06) 7.35(0.03) 7.32(0.07) 7.39(0.16) 7.42(0.11) 7.43(0.09) 7.34(0.12) 6.76(0.64) 6.44(0.43) 6.23(0.41) 5.22(1.15) 4.44(0.96) 4.53(0.35) 4.70(0.36) 4.67(0.40) 4.54(0.45) 4.83(0.45) 4.34(0.49) 3.51(0.85) 4.00(0.60) 4.17(0.26) 4.17(0.22) 4.10(0.29) 4.06(0.44) 4.02(0.30) 4.26(0.26) 4.05(0.30) 4.00(0.13) 3.96(0.22) 4.09(0.18) 4.32(0.29) 4.00(0.42) 3.72(0.33) 4.10(0.45) 3.89(0.24) 3.96(0.24) 3.95(0.26) 3.69(0.35) 3.56(0.22) 3.50(0.17) 4.01(0.56) 3.91(0.16) 4.04(0.15) 3.61(0.49) 3.96(0.40) 3.81(0.19) 4.10(0.33) 4.26(0.27) 4.33(0.27) 4.17(0.23) 4.34(0.18) 4.43(0.10) 4.35(0.10) 4.12(0.42) 4.45(0.36) 4.51(0.16) 4.44(0.11) 4.49(0.06) 4.47(0.04) 4.30(0.22) 4.05(0.76) 4.23(0.24) 4.40(0.22) 4.45(0.11) 4.46(0.13) 4.51(0.08) 4.56(0.07) 4.50(0.09) 4.57(0.10) 4.60(0.09) 4.68(0.10) 4.56(0.12) 4.61(0.07) 4.60(0.09) 4.54(0.09) 4.50(0.08) 4.55(0.09) 4.51(0.06) 4.52(0.03) 4.54(0.05) 4.54(0.04) 4.48(0.10) 4.46(0.04) 4.47(0.03) 4.48(0.05) 4.46(0.05) 4.53(0.18) 4.52(1.07) 5.55(1.31) 5.38(0.59) 4.52(1.05) 4.67(0.19) 4.79(0.16) 4.55(0.31) 4.87(0.39) 4.95(0.33) 5.15(0.22) 6.21(1.08) 6.12(0.26) 7.34(2.55) 8.16(0.88) 8.28(0.57) 8.66(0.40)
++ Max displacement in automask = 10.71 (mm) at sub-brick 7
++ Max delta displ  in automask = 2.93 (mm) at sub-brick 6
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb8930.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8930.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8930.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8930.r03.tshift+orig.BRIK is 19.400013 degrees from plumb.
++ Source dataset: ./pb01.tb8930.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 19.400013 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8930.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8930.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8930.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8930.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8930.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8930.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 19.400013 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb8930
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb8930+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb8930+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1356355 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 292792 voxels [68.7%] in weight mask
++ Number of points for matching = 137612
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.104048
   sp   = 0.33021
   mi   = -0.559875
   crM  = 0.0213987
   nmi  = 0.820258
   je   = 2.55502
   hel  = -0.117806
   crA  = 0.146786
   crU  = 0.158928
   lss  = 0.895952
   lpc  = 0.242325
   lpa  = 0.757675
   lpc+ = 0.342997
   ncd  = 0.986862
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.8
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb8930+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb8930+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 36.4 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8930.r01.blur pb02.tb8930.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8930.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb8930.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8930.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8930.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8930.r02.blur pb02.tb8930.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8930.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb8930.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8930.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8930.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8930.r03.blur pb02.tb8930.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8930.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb8930.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8930.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8930.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb8930.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8930.r01.blur+orig
++ Forming automask
 + Fixed clip level = 410.268799
 + Used gradual clip level = 354.343658 .. 466.849579
 + Number voxels above clip level = 50342
 + Clustering voxels ...
 + Largest cluster has 50154 voxels
 + Clustering voxels ...
 + Largest cluster has 50119 voxels
 + Filled    37 voxels in small holes; now have 50156 voxels
 + Filled     1 voxels in large holes; now have 50157 voxels
 + Clustering voxels ...
 + Largest cluster has 50157 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376118 voxels
 + Mask now has 50157 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368582 voxels
++ 57693 voxels in the mask [out of 426275: 13.53%]
++ first  15 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  23 y-planes are zero [from I]
++ last   15 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb8930.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8930.r02.blur+orig
++ Forming automask
 + Fixed clip level = 411.506134
 + Used gradual clip level = 352.835999 .. 468.007965
 + Number voxels above clip level = 49985
 + Clustering voxels ...
 + Largest cluster has 49793 voxels
 + Clustering voxels ...
 + Largest cluster has 49753 voxels
 + Filled    35 voxels in small holes; now have 49788 voxels
 + Clustering voxels ...
 + Largest cluster has 49788 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376487 voxels
 + Mask now has 49788 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 369013 voxels
++ 57262 voxels in the mask [out of 426275: 13.43%]
++ first  15 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  23 y-planes are zero [from I]
++ last   15 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb8930.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8930.r03.blur+orig
++ Forming automask
 + Fixed clip level = 410.298340
 + Used gradual clip level = 352.735779 .. 465.521912
 + Number voxels above clip level = 49989
 + Clustering voxels ...
 + Largest cluster has 49805 voxels
 + Clustering voxels ...
 + Largest cluster has 49759 voxels
 + Filled    33 voxels in small holes; now have 49792 voxels
 + Clustering voxels ...
 + Largest cluster has 49792 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376483 voxels
 + Mask now has 49792 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368991 voxels
++ 57284 voxels in the mask [out of 426275: 13.44%]
++ first  15 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  23 y-planes are zero [from I]
++ last   15 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb8930
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 57859 survived, 368416 were zero
++ writing result full_mask.tb8930...
3dresample -master full_mask.tb8930+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb8930
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 52839 survived, 373436 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb8930...
3dABoverlap -no_automask full_mask.tb8930+orig mask_anat.tb8930+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb8930+orig.BRIK  B=./mask_anat.tb8930+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
57859        52839        59698        51000        6859         1839         11.8547      3.4804     0.8666     0.9939     0.9102
3ddot -dodice full_mask.tb8930+orig mask_anat.tb8930+orig
tee out.mask_ae_dice.txt
0.921426	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb8930
total number of censored TRs (simple form) = 63
1deval -a motion_tb8930_censor.1D -b outcount_tb8930_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb8930_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb8930.r01.blur+orig.HEAD pb03.tb8930.r02.blur+orig.HEAD pb03.tb8930.r03.blur+orig.HEAD -censor censor_tb8930_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb8930 -errts errts.tb8930 -bucket stats.tb8930
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb8930.r01.blur+orig.HEAD pb03.tb8930.r02.blur+orig.HEAD pb03.tb8930.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 49926 voxels (out of 426275 = 11.7%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 387 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb8930.r01.blur+orig.HEAD pb03.tb8930.r02.blur+orig.HEAD pb03.tb8930.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb8930_REML -Rvar stats.tb8930_REMLvar \
 -Rfitts fitts.tb8930_REML -Rerrts errts.tb8930_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (387x24):  4.8169  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (387x6):  1.03605  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (387x18):  3.92531  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (387x6):  2.91376  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (387x12):  1.34515  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.48284e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.10 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.878
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.899
++ Job #3: processing voxels 127881 to 170507; elapsed time=5.919
++ Job #4: processing voxels 170508 to 213134; elapsed time=5.942
++ Job #5: processing voxels 213135 to 255761; elapsed time=5.965
++ Job #6: processing voxels 255762 to 298388; elapsed time=5.988
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.025
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.045
++ Job #9: processing voxels 383643 to 426274; elapsed time=6.075
++ Job #0: processing voxels 0 to 42626; elapsed time=6.079
++ voxel loop:0123456789.0123456789.0123456789.0123++ Job #7 finished; elapsed time=30.023
4++ Job #2 finished; elapsed time=30.990
++ Job #1 finished; elapsed time=31.078
5++ Job #5 finished; elapsed time=31.456
++ Job #8 finished; elapsed time=31.849
++ Job #4 finished; elapsed time=31.921
6789.0123++ Job #9 finished; elapsed time=34.572
++ Job #6 finished; elapsed time=34.581
45678++ Job #3 finished; elapsed time=35.662
9.
++ Job #0 waiting for children to finish; elapsed time=35.768
++ Job #0 now finishing up; elapsed time=35.768
++ Smallest FDR q [0 Full_Fstat] = 1.23837e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 4.62344e-12
++ Smallest FDR q [3 uns1_Fstat] = 4.62286e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 1.89961e-13
++ Smallest FDR q [6 uns2_Fstat] = 1.89928e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 3.543e-13
++ Smallest FDR q [9 uns3_Fstat] = 3.54187e-13
++ Smallest FDR q [11 str1#0_Tstat] = 5.7434e-13
++ Smallest FDR q [12 str1_Fstat] = 5.7434e-13
++ Smallest FDR q [14 str2#0_Tstat] = 5.73748e-14
++ Smallest FDR q [15 str2_Fstat] = 5.73491e-14
++ Smallest FDR q [17 str3#0_Tstat] = 1.39729e-13
++ Smallest FDR q [18 str3_Fstat] = 1.39736e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.58711e-13
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.58684e-13
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.34177e-13
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.34156e-13
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 1.54109e-10
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 1.54126e-10
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 5.67041e-07
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 5.67014e-07
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 1.32711e-08
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 1.32702e-08
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 2.77927e-12
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 2.77927e-12
++ Wrote bucket dataset into ./stats.tb8930+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb8930+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb8930+orig.BRIK
++ Program finished; elapsed time=79.597
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.834       0.870  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.737       0.806  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.705       0.783  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.472       0.561  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.464       0.522  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.457       0.540  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:      -0.425       0.000  ( 0 vs. 16)  Run#1Pol#0  vs.  str2#0
  medium:      -0.406       0.000  ( 4 vs. 15)  Run#2Pol#0  vs.  str1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb8930.r01.blur+orig.HEAD pb03.tb8930.r02.blur+orig.HEAD pb03.tb8930.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb8930_REML -Rvar stats.tb8930_REMLvar -Rfitts fitts.tb8930_REML -Rerrts errts.tb8930_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 49926 voxels (out of 426275 = 11.7%)
++ -----  matrix condition (387x24):  4.8169  ++ VERY GOOD ++
 + masked off 246532 voxels for being all zero; 179743 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 324 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=29.99
 + X matrix: 46.695% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=387 cols=24; 109*1 cases; total CPU=0.00 Elapsed=30.02
 +  average case bandwidth = 11.47
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=88.05
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=128.83
++ Output dataset ./stats.tb8930_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb8930_REML+orig.BRIK
++ Output dataset ./errts.tb8930_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb8930_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 9.70311e-09
[7m*+ WARNING:[0m Smallest FDR q [2 uns1#0_Tstat] = 0.107019 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [3 uns1_Fstat] = 0.107019 ==> few true single voxel detections
++ Smallest FDR q [5 uns2#0_Tstat] = 2.60153e-07
++ Smallest FDR q [6 uns2_Fstat] = 2.60153e-07
++ Smallest FDR q [8 uns3#0_Tstat] = 1.63532e-08
++ Smallest FDR q [9 uns3_Fstat] = 1.63531e-08
++ Smallest FDR q [11 str1#0_Tstat] = 0.00701987
++ Smallest FDR q [12 str1_Fstat] = 0.00701987
++ Smallest FDR q [14 str2#0_Tstat] = 2.53474e-08
++ Smallest FDR q [15 str2_Fstat] = 2.53474e-08
++ Smallest FDR q [17 str3#0_Tstat] = 7.55736e-08
++ Smallest FDR q [18 str3_Fstat] = 7.55736e-08
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.07599e-06
++ Smallest FDR q [21 unstructured_Fstat] = 1.07599e-06
++ Smallest FDR q [23 structured#0_Tstat] = 5.49809e-09
++ Smallest FDR q [24 structured_Fstat] = 5.49808e-09
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.196009 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.196009 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999898 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999898 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.209132 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.209132 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.0530274
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.0530274
 + Added 25 FDR curves to dataset stats.tb8930_REML+orig
++ Output dataset ./stats.tb8930_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=179.71
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb8930 pb03.tb8930.r01.blur+orig.HEAD pb03.tb8930.r02.blur+orig.HEAD pb03.tb8930.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ elapsed time = 1471.7 s
3dTstat -mean -prefix rm.signal.all all_runs.tb8930+orig[0..68,72..86,89..203,206..221,224..233,236..289,294..296,299,302,315..352,355,359..361,367,368,371..378,381..388,392..398,401..405,408..432,438..442,449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox

*** failure while reading from brick file ./all_runs.tb8930+orig.BRIK
*** desired 329936850 bytes but only got 34954550
*** Unix error message: Success
   THD_load_datablock
  3dTstat main
** Command line was:
3dTstat -mean -prefix rm.signal.all 'all_runs.tb8930+orig[0..68,72..86,89..203,206..221,224..233,236..289,294..296,299,302,315..352,355,359..361,367,368,371..378,381..388,392..398,401..405,408..432,438..442,449]'
[7m** FATAL ERROR:[0m Unable to compute output dataset!
** Program compile date = Jul 20 2017
