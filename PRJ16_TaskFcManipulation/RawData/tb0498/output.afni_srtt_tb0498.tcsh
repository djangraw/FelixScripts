echo auto-generated by afni_proc.py, Wed Aug  9 05:51:11 2017
auto-generated by afni_proc.py, Wed Aug  9 05:51:11 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 05:51:11 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0498
endif
set output_dir = tb0498.srtt
if ( -d tb0498.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0498.srtt
mkdir tb0498.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0498.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0498.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0498.srtt/pb00.tb0498.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0498.srtt/pb00.tb0498.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0498.srtt/pb00.tb0498.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0498.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0498.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r01.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 28261 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0498.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r02.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 28379 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0498.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r03.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 28386 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0498.r01.tshift -tpattern alt+z2 pb00.tb0498.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r01.tcat+orig.BRIK is 10.299996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0498.r02.tshift -tpattern alt+z2 pb00.tb0498.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r02.tcat+orig.BRIK is 10.299996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0498.r03.tshift -tpattern alt+z2 pb00.tb0498.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r03.tcat+orig.BRIK is 10.299996 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0498.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 10.299996 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 350.988007
 + Used gradual clip level = 324.011993 .. 394.548004
 + Number voxels above clip level = 29496
 + Clustering voxels ...
 + Largest cluster has 28753 voxels
 + Clustering voxels ...
 + Largest cluster has 27949 voxels
 + Filled   289 voxels in small holes; now have 28238 voxels
 + Clustering voxels ...
 + Largest cluster has 28238 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 102824 voxels
 + Mask now has 28248 voxels
++ 28248 voxels in the mask [out of 131072: 21.55%]
++ first  13 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 867.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/867.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 10.299996 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1496902 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 28248 voxels [18.1%] in weight mask
++ Number of points for matching = 28248
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.867 29.582 19.461 (index)
 + source center of mass = 87.351 159.824 184.735 (index)
 + source-target CM = -1.343 2.418 -3.664 (xyz)
 + center of mass shifts = -1.343 2.418 -3.664
++ shift param auto-range: -70.9..68.2 -67.1..71.9 -51.2..43.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.343231 .. 8.656769
 + Range param#2 [y-shift] = -7.582458 .. 12.417542
 + Range param#3 [z-shift] = -13.664497 .. 6.335503
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.343231 .. 38.656769
 + Range param#2 [y-shift] = -37.582458 .. 42.417542
 + Range param#3 [z-shift] = -43.664497 .. 36.335503
 + 12 free parameters
++ Normalized convergence radius = 0.000457
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1496902 [out of 15629504] voxels
 + base mask has 38970 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=67 usiz=170.5
 + - copying weight image
 + - using 28248 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24602 total points stored in 231 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo-+.+.o-+*[#60=-0.0533653] *.-..++o+$.-.-+
 + - best 45 costs found:
    0 v=-0.053365: -14.68 -10.92   9.67 -15.00 -15.00 -15.00  [grid]
    1 v=-0.050009: -14.68 -24.25   9.67 -15.00 -30.00 -15.00  [grid]
    2 v=-0.049226: -15.37 -13.30  11.00 -24.25 -37.55   4.41  [rand]
    3 v=-0.045652: -14.68  15.75   9.67  15.00  15.00  30.00  [grid]
    4 v=-0.045354:  -5.42   8.64   4.13  -4.32 -22.85 -18.95  [rand]
    5 v=-0.044979: -11.17 -22.34   7.72  -3.10 -34.36   2.55  [rand]
    6 v=-0.042188: -11.17 -22.34   7.72  -3.10 -34.36  -2.55  [rand]
    7 v=-0.041685:  -1.34   2.42  -3.66   0.00   0.00   0.00  [grid]
    8 v=-0.041252: -12.94  -2.14   0.23 -24.53 -29.49 -26.10  [rand]
    9 v=-0.040179:  32.98  19.00 -12.27  16.34   8.64 -40.54  [rand]
   10 v=-0.039968: -14.68 -24.25   9.67 -15.00 -30.00  15.00  [grid]
   11 v=-0.039871: -14.68 -10.92   9.67 -15.00 -30.00  15.00  [grid]
   12 v=-0.039710: -18.20 -16.17  10.79 -19.57 -37.09  16.59  [rand]
   13 v=-0.039606: -14.68 -24.25   9.67 -30.00 -30.00  15.00  [grid]
   14 v=-0.038245: -12.94   6.98   0.23 -24.53  29.49 -26.10  [rand]
   15 v=-0.037615: -15.55  11.87   1.17 -15.99  13.53  29.93  [rand]
   16 v=-0.037015: -17.33 -17.08   2.06 -20.53   3.14 -10.08  [rand]
   17 v=-0.036763:  -5.42   8.64   4.13  -4.32  22.85 -18.95  [rand]
   18 v=-0.036497: -14.68 -10.92   9.67 -15.00 -15.00  15.00  [grid]
   19 v=-0.035523:   8.48  27.18 -15.05   3.10  34.36   2.55  [rand]
   20 v=-0.035457:  -9.98 -18.01  13.81 -25.20 -18.50 -13.54  [rand]
   21 v=-0.035100:  -5.42   8.64   4.13   4.32 -22.85 -18.95  [rand]
   22 v=-0.034453: -17.33 -17.08  -9.39 -20.53  -3.14  10.08  [rand]
   23 v=-0.034404: -14.68 -10.92   9.67 -15.00 -15.00 -30.00  [grid]
   24 v=-0.034104:   8.48  27.18 -15.05   3.10  34.36  -2.55  [rand]
   25 v=-0.033922: -11.17 -22.34   7.72   3.10 -34.36   2.55  [rand]
   26 v=-0.033840: -23.69 -13.97  12.17 -41.11 -22.86   3.97  [rand]
   27 v=-0.033425: -14.68 -24.25   9.67 -15.00 -15.00 -15.00  [grid]
   28 v=-0.032586: -15.37 -13.30  11.00 -24.25 -37.55  -4.41  [rand]
   29 v=-0.032570:  14.64 -17.08  -9.39  20.53  -3.14 -10.08  [rand]
   30 v=-0.032491:  -7.33  -0.99  20.86  29.81   4.26  23.54  [rand]
   31 v=-0.032057: -14.68 -10.92   9.67 -15.00 -15.00  30.00  [grid]
   32 v=-0.032051: -14.68 -24.25  23.00 -15.00 -30.00  30.00  [grid]
   33 v=-0.031656: -17.33 -17.08  -9.39 -20.53   3.14  10.08  [rand]
   34 v=-0.031405: -24.88  -6.13  12.30 -26.66 -31.62  32.06  [rand]
   35 v=-0.030903: -20.83  19.09  -1.06 -30.54  19.59  20.03  [rand]
   36 v=-0.029985: -14.68  15.75   9.67 -30.00  15.00  30.00  [grid]
   37 v=-0.029801: -14.68  15.75   9.67 -15.00  30.00 -15.00  [grid]
   38 v=-0.029660:  -7.33   5.82  20.86  29.81   4.26  23.54  [rand]
   39 v=-0.029563: -20.83 -14.25  -6.27 -30.54 -19.59 -20.03  [rand]
   40 v=-0.029561: -14.68  15.75   9.67 -30.00  15.00 -15.00  [grid]
   41 v=-0.029272: -14.68  15.75   9.67 -30.00  15.00  15.00  [grid]
   42 v=-0.029124: -26.31 -26.63  31.78  17.69 -14.58  34.92  [rand]
   43 v=-0.029073:  -7.33  -0.99  20.86  29.81  -4.26  23.54  [rand]
   44 v=-0.028911:  -5.42   8.64   4.13   4.32  22.85  18.95  [rand]
*[#8004=-0.0538489] *[#8016=-0.0545533] *[#8048=-0.0555357] *[#8054=-0.057125] *[#8060=-0.0611705] *[#8068=-0.0624183] *[#8072=-0.0628031] *[#8073=-0.0640531] *[#8075=-0.0642199] *[#8078=-0.0642282] *[#8080=-0.0645323] *[#8082=-0.0645904] *[#8152=-0.0661336] *[#8158=-0.067515] *[#8159=-0.0687538] *[#8160=-0.0728184] *[#8161=-0.075995] *[#8163=-0.0766818] *[#8164=-0.0767322] *[#8165=-0.0773791] *[#8168=-0.078429] *[#8202=-0.0786658] *[#8205=-0.078863] *[#8206=-0.080563] *[#8207=-0.0816221] *[#8208=-0.0831293] *[#8209=-0.083704] *[#8210=-0.0878053] *[#8226=-0.241649] *[#8233=-0.246446] *[#8235=-0.247899] *[#8236=-0.250309] *[#8238=-0.269309] *[#8239=-0.313737] *[#8240=-0.387129] *[#8242=-0.407331] *[#8244=-0.418352] *[#8245=-0.422925] *[#8247=-0.437705] *[#8248=-0.438962] *[#8252=-0.454605] *[#8255=-0.459691] *[#8260=-0.460641]  + - costs of the above after a little optimization:
    0 v=-0.054553: -14.69 -10.92  13.62 -14.66 -15.28 -14.91  [grid]
    1 v=-0.052659: -14.46 -28.20  10.16 -15.23 -30.33 -14.56  [grid]
    2 v=-0.064590: -11.29 -13.67  16.67 -23.33 -36.33   3.43  [rand]
    3 v=-0.062024: -15.19  14.50   8.98  15.25  16.55  34.44  [grid]
    4 v=-0.052950:  -6.57   7.92   2.54  -7.91 -24.04 -21.30  [rand]
    5 v=-0.078429:  -7.46 -26.48  10.75  -3.83 -35.37   1.36  [rand]
    6 v=-0.087805:  -6.20 -31.35   6.75  -2.19 -30.61   1.93  [rand]
  * 7 v=-0.460641:  -0.63  -0.50   1.34   0.75  -2.06  -0.17  [grid]
    8 v=-0.053472: -13.35  -2.27   1.61 -23.57 -23.79 -26.03  [rand]
    9 v=-0.050807:  33.95  18.76 -13.79  14.28  14.10 -43.39  [rand]
   10 v=-0.082369:  -9.41 -26.83  11.27  -7.02 -31.87   5.10  [grid]
   11 v=-0.067219: -15.11 -10.47  15.07 -12.80 -33.23  12.88  [grid]
   12 v=-0.042203: -18.15 -16.46  10.30 -20.86 -36.74  15.57  [rand]
   13 v=-0.046985: -14.46 -18.87  10.44 -29.91 -28.93  14.42  [grid]
   14 v=-0.057020: -13.18  12.63   0.95 -24.19  29.19 -25.98  [rand]
   15 v=-0.043406: -15.36  11.36   1.51 -11.49  13.57  29.95  [rand]
   16 v=-0.056170: -16.27 -16.15   5.27 -19.30   3.41 -10.54  [rand]
   17 v=-0.044939:  -6.50   8.58   9.72  -3.33  22.19 -19.96  [rand]
   18 v=-0.071779: -13.12  -3.16  12.34 -13.08 -19.62  13.44  [grid]
   19 v=-0.051357:   8.69  21.02 -14.38   3.45  33.85   2.97  [rand]
   20 v=-0.049419: -15.83 -17.99  14.29 -26.11 -19.08 -13.16  [rand]
   21 v=-0.049895:  -6.79   9.13   1.96   1.89 -24.61 -14.75  [rand]
   22 v=-0.063575: -13.07 -16.87  -9.84 -13.53  -1.43   8.79  [rand]
   23 v=-0.127217:  -6.58  -8.20   6.70  -3.57 -11.86   4.19  [grid]
   24 v=-0.058322:   2.40  23.12 -17.25   0.81  31.76  -3.13  [rand]
   25 v=-0.076288:  -6.37 -26.29  12.61  -2.18 -37.41   2.00  [rand]
   26 v=-0.063184: -21.88  -7.47  12.35 -42.34 -29.09   4.52  [rand]
   27 v=-0.051200: -10.50 -24.16  10.02 -14.34 -15.18 -14.35  [grid]
   28 v=-0.082536: -11.13 -12.95  15.25 -12.89 -29.71   2.30  [rand]
   29 v=-0.034902:  14.03 -17.20  -9.44  20.88  -2.89  -9.87  [rand]
   30 v=-0.051080: -10.72  -1.32  19.40  26.16   2.14  20.05  [rand]
   31 v=-0.045739: -15.62  -7.78  15.02 -14.88 -20.32  30.17  [grid]
   32 v=-0.052113: -19.09 -28.18  20.16 -17.82 -32.07  29.28  [grid]
   33 v=-0.062913: -12.35 -16.21  -8.56 -17.44   1.84   8.06  [rand]
   34 v=-0.052904: -22.06  -4.99  16.48 -23.05 -30.13  29.53  [rand]
   35 v=-0.061242: -11.54  16.67   0.92 -27.76  20.39  20.75  [rand]
   36 v=-0.060408:  -9.62  14.07   6.49 -27.20  15.85  27.98  [grid]
   37 v=-0.046295: -10.87  11.54   9.20 -17.73  26.95 -15.19  [grid]
   38 v=-0.044411:  -7.78   1.19  16.07  27.82   5.28  22.48  [rand]
   39 v=-0.046027: -21.16 -18.18  -9.65 -28.36 -18.70 -24.16  [rand]
   40 v=-0.040511: -14.31  12.27  10.50 -30.04  14.89 -15.16  [grid]
   41 v=-0.071286: -12.45  15.38   1.34 -20.23  13.45  13.23  [grid]
   42 v=-0.038025: -27.25 -31.18  32.32  18.04 -14.22  34.51  [rand]
   43 v=-0.042643: -12.29  -3.18  19.75  30.39  -3.73  23.48  [rand]
   44 v=-0.043913:  -5.43  14.03   4.75   4.37  22.62  19.56  [rand]
 + - save # 7 for twobest
 + - save #23 for twobest
 + - save # 6 for twobest
 + - save #28 for twobest
 + - save #10 for twobest
 + - skip # 5 for twobest: too close to set #10
 + - skip #25 for twobest: too close to set # 5
 + - save #18 for twobest
 + - save #41 for twobest
 + - save #11 for twobest
 + - save # 2 for twobest
 + - save #22 for twobest
 + - save #26 for twobest
 + - skip #33 for twobest: too close to set #22
 + - save # 3 for twobest
 + - save #35 for twobest
 + - save #36 for twobest
 + - save #24 for twobest
 + - save #14 for twobest
 + - save #16 for twobest
 + - save # 0 for twobest
 + - save # 8 for twobest
 + - save # 4 for twobest
 + - save #34 for twobest
 + - save # 1 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=67 usiz=170.5
 + - retaining old weight image
 + - using 28248 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24596 total points stored in 248 'RHDD(13.7332)' bloks
*[#9706=-0.464441] *[#9730=-0.467106] *[#9731=-0.468209] *[#9732=-0.468276] *[#9733=-0.470811] *[#9734=-0.471731] *[#9735=-0.47231] *[#9736=-0.473771] *[#9740=-0.47484] *[#9744=-0.474924] *[#9745=-0.475409] *[#9746=-0.475575] *[#9747=-0.476456] *[#9748=-0.476549] *[#9749=-0.477373] *[#9750=-0.477598] *[#9752=-0.478656] *[#9753=-0.479167] *[#9754=-0.47938] *[#9757=-0.479447] *[#9759=-0.479759] *[#9762=-0.47976] *[#9768=-0.479995] *[#9775=-0.480209] 
 + - param set #1 has cost=-0.480209
 + -- Parameters = -0.5581 -0.5137 0.8444 1.0045 -1.7632 -0.3054 1.0033 1.0083 0.9970 0.0019 0.0003 -0.0017
 + - param set #2 has cost=-0.382800
 + -- Parameters = 0.0333 -1.1451 -0.9018 1.3409 -1.6220 0.3759 1.0433 0.9890 1.0456 0.0121 0.0143 -0.0285
 + - param set #3 has cost=-0.068957
 + -- Parameters = -6.6282 -29.6811 6.6519 -3.3876 -29.9731 5.1493 1.0038 0.9990 1.0006 0.0029 0.0100 0.0031
 + - param set #4 has cost=-0.072898
 + -- Parameters = -11.0495 -13.3621 13.9542 -13.0680 -29.4491 4.5486 1.0036 0.9972 0.9940 -0.0024 -0.0008 0.0127
 + - param set #5 has cost=-0.074297
 + -- Parameters = -8.8277 -26.6234 7.5031 -7.5786 -30.3121 -0.3484 0.9736 1.0528 0.9901 -0.0051 -0.0021 -0.0022
 + - param set #6 has cost=-0.063807
 + -- Parameters = -12.6190 -3.0081 11.7537 -13.6840 -20.3611 8.1639 0.9953 1.0383 0.9951 -0.0030 -0.0000 -0.0028
 + - param set #7 has cost=-0.058136
 + -- Parameters = -11.1193 14.9392 2.1623 -17.8905 10.8612 11.7084 0.9988 1.0071 1.0041 0.0023 0.0010 0.0065
 + - param set #8 has cost=-0.073889
 + -- Parameters = -11.5151 -12.8979 14.0803 -12.2399 -29.7127 4.3222 0.9937 1.0054 0.9739 0.0056 -0.0019 0.0068
 + - param set #9 has cost=-0.072972
 + -- Parameters = -10.5242 -13.9669 14.8627 -11.3139 -32.2000 5.1750 1.0111 1.0000 0.9940 0.0021 0.0000 -0.0007
 + - param set #10 has cost=-0.059505
 + -- Parameters = -11.8923 -16.6765 -9.2623 -12.0277 -0.6541 6.4226 1.0059 0.9936 1.0228 0.0067 -0.0013 0.0009
 + - param set #11 has cost=-0.049742
 + -- Parameters = -22.3111 -6.4549 12.0015 -42.7883 -25.0365 3.9854 1.0010 0.9988 1.0001 0.0015 -0.0012 0.0003
 + - param set #12 has cost=-0.476997
 + -- Parameters = -0.4948 -0.7103 0.6804 0.9831 -1.7453 -0.1324 0.9972 0.9998 0.9997 -0.0014 -0.0038 -0.0043
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0231 
 + --- dist(#3,#1) = 0.133 
 + --- dist(#4,#1) = 0.326 
 + --- dist(#5,#1) = 0.311 
 + --- dist(#6,#1) = 0.338 
 + --- dist(#7,#1) = 0.308 
 + --- dist(#8,#1) = 0.365 
 + --- dist(#9,#1) = 0.207 
 + --- dist(#10,#1) = 0.202 
 + --- dist(#11,#1) = 0.21 
 + --- dist(#12,#1) = 0.487 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=67 usiz=170.5
 + - retaining old weight image
 + - using 28248 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24695 total points stored in 256 'RHDD(13.5933)' bloks
*[#10658=-0.482942] *[#10669=-0.484578] *[#10684=-0.484877] *[#10690=-0.48507] *[#10692=-0.48508] *[#10694=-0.485278] *[#10695=-0.485349] *[#10698=-0.485544] *[#10699=-0.485718] *[#10700=-0.485949] *[#10701=-0.486033] *[#10704=-0.486048] *[#10706=-0.486112] *[#10707=-0.486264] *[#10708=-0.486454] *[#10711=-0.486557] *[#10712=-0.486569] *[#10717=-0.486738] *[#10720=-0.486745] *[#10728=-0.486816] *[#10729=-0.48682] *[#10731=-0.486864] *[#10732=-0.486935] *[#10734=-0.486984] *[#10737=-0.487018] *[#10740=-0.487082] *[#10746=-0.487104] *[#10747=-0.487189] *[#10748=-0.487237] *[#10749=-0.487313] *[#10754=-0.48757] 
 + - param set #1 has cost=-0.487570
 + -- Parameters = -0.5576 -0.5856 0.7926 1.1506 -1.8814 -0.5318 1.0039 1.0048 0.9923 0.0022 0.0133 -0.0050
*[#10849=-0.487635] *[#10852=-0.487651] *[#10854=-0.487708] 
 + - param set #2 has cost=-0.487708
 + -- Parameters = -0.4781 -0.8460 0.6255 1.1264 -1.8065 -0.2929 1.0023 0.9956 0.9989 0.0004 0.0031 -0.0070
 + - param set #3 has cost=-0.485970
 + -- Parameters = -0.6405 -0.2811 0.4172 1.1425 -2.9871 -1.0248 1.0039 1.0023 1.0169 0.0027 0.0227 -0.0311
 + - param set #4 has cost=-0.062718
 + -- Parameters = -8.6951 -26.6614 6.7105 -7.5616 -29.8376 -0.9429 0.9791 1.0530 0.9823 -0.0045 -0.0026 -0.0051
 + - param set #5 has cost=-0.063742
 + -- Parameters = -10.5484 -14.2609 14.2740 -13.0674 -30.2699 4.9547 1.0006 1.0115 0.9658 0.0069 -0.0024 0.0183
 + - param set #6 has cost=-0.063167
 + -- Parameters = -10.0833 -13.7368 14.5163 -11.3005 -31.5427 5.7204 1.0203 0.9902 0.9792 0.0002 0.0076 0.0032
 + - param set #7 has cost=-0.063889
 + -- Parameters = -10.6374 -13.4816 14.5021 -12.3174 -30.3267 5.1955 1.0121 1.0043 0.9749 0.0020 0.0044 0.0292
 + - param set #8 has cost=-0.057146
 + -- Parameters = -6.3892 -29.5709 6.6890 -3.1945 -30.1354 5.1655 1.0047 0.9995 0.9994 0.0034 0.0100 0.0038
 + - param set #9 has cost=-0.055505
 + -- Parameters = -11.6664 -2.7873 12.0023 -12.9751 -20.2014 7.5207 1.0092 1.0346 0.9936 -0.0046 0.0011 -0.0021
 + - param set #10 has cost=-0.057825
 + -- Parameters = -10.9964 -18.2586 -8.9255 -9.3134 -1.2365 5.4548 1.0199 0.9725 1.0141 -0.0067 0.0092 0.0087
 + - param set #11 has cost=-0.054107
 + -- Parameters = -10.8464 14.8063 2.0003 -17.3653 10.5504 10.8251 0.9875 1.0176 1.0243 0.0036 -0.0034 0.0123
 + - param set #12 has cost=-0.043779
 + -- Parameters = -22.4920 -5.9402 12.1939 -42.8935 -24.7013 3.2821 0.9954 0.9866 1.0081 0.0109 -0.0046 -0.0030
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0462 
 + --- dist(#3,#1) = 0.108 
 + --- dist(#4,#1) = 0.317 
 + --- dist(#5,#1) = 0.316 
 + --- dist(#6,#1) = 0.33 
 + --- dist(#7,#1) = 0.323 
 + --- dist(#8,#1) = 0.218 
 + --- dist(#9,#1) = 0.359 
 + --- dist(#10,#1) = 0.204 
 + --- dist(#11,#1) = 0.205 
 + --- dist(#12,#1) = 0.489 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=67 usiz=170.5
 + - retaining old weight image
 + - using 28248 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24805 total points stored in 263 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.467758
 + -- Parameters = -0.4688 -0.5154 0.7224 1.0643 -2.3899 -0.2940 1.0038 1.0000 0.9993 -0.0031 0.0051 -0.0175
 + - param set #2 has cost=-0.467523
 + -- Parameters = -0.6026 -0.5961 0.6687 1.1033 -2.1914 -0.5493 1.0007 0.9965 0.9978 0.0011 0.0113 -0.0145
 + - param set #3 has cost=-0.469973
 + -- Parameters = -0.6718 -0.2000 0.6420 1.1033 -2.9897 -0.7855 1.0032 1.0011 1.0036 0.0007 0.0159 -0.0291
 + - param set #4 has cost=-0.056097
 + -- Parameters = -10.6745 -13.8741 14.4175 -12.2701 -30.3458 5.2797 1.0119 1.0044 0.9693 0.0016 0.0044 0.0277
 + - param set #5 has cost=-0.056298
 + -- Parameters = -10.6677 -14.3543 14.3666 -13.1288 -30.3537 4.8962 1.0005 1.0115 0.9659 0.0070 -0.0022 0.0181
 + - param set #6 has cost=-0.055324
 + -- Parameters = -10.4826 -13.7686 14.3793 -11.5312 -31.3338 4.7126 1.0204 0.9899 0.9789 -0.0027 0.0071 0.0014
 + - param set #7 has cost=-0.054738
 + -- Parameters = -8.6382 -26.6345 6.8490 -7.5243 -30.0597 -1.1115 0.9795 1.0504 0.9775 -0.0067 -0.0046 -0.0073
 + - param set #8 has cost=-0.051809
 + -- Parameters = -10.1974 -18.0868 -8.4964 -8.0411 -2.0001 5.4954 1.0177 0.9739 1.0133 -0.0121 0.0095 0.0079
 + - param set #9 has cost=-0.049704
 + -- Parameters = -6.5060 -29.2930 6.7231 -3.3799 -30.1594 5.0380 1.0043 1.0003 0.9994 0.0082 0.0095 0.0038
 + - param set #10 has cost=-0.048473
 + -- Parameters = -11.8833 -2.9487 11.6015 -13.8119 -20.0979 7.1505 1.0102 1.0347 0.9979 -0.0059 0.0088 -0.0032
 + - param set #11 has cost=-0.055142
 + -- Parameters = -9.9435 14.0375 2.6019 -17.1485 8.9936 9.8537 0.9932 1.0234 1.0304 0.0348 0.0140 0.0324
 + - param set #12 has cost=-0.033835
 + -- Parameters = -21.7452 -6.3968 12.3601 -42.6199 -24.5646 3.2467 0.9965 0.9879 1.0140 0.0119 -0.0050 -0.0024
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0524 
 + --- dist(#3,#1) = 0.0658 
 + --- dist(#4,#1) = 0.304 
 + --- dist(#5,#1) = 0.304 
 + --- dist(#6,#1) = 0.315 
 + --- dist(#7,#1) = 0.277 
 + --- dist(#8,#1) = 0.33 
 + --- dist(#9,#1) = 0.224 
 + --- dist(#10,#1) = 0.364 
 + --- dist(#11,#1) = 0.19 
 + --- dist(#12,#1) = 0.486 
 + - Total coarse refinement net CPU time = 0.0 s; 3011 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=67 usiz=170.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24794 total points stored in 264 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.453981 *
 + -- Parameters = -0.6718 -0.2000 0.6420 1.1033 -2.9897 -0.7855 1.0032 1.0011 1.0036 0.0007 0.0159 -0.0291
 + - cost(#2)=-0.450281  
 + -- Parameters = -0.4688 -0.5154 0.7224 1.0643 -2.3899 -0.2940 1.0038 1.0000 0.9993 -0.0031 0.0051 -0.0175
 + - cost(#3)=-0.449796  
 + -- Parameters = -0.6026 -0.5961 0.6687 1.1033 -2.1914 -0.5493 1.0007 0.9965 0.9978 0.0011 0.0113 -0.0145
 + - cost(#4)=-0.049621  
 + -- Parameters = -10.6677 -14.3543 14.3666 -13.1288 -30.3537 4.8962 1.0005 1.0115 0.9659 0.0070 -0.0022 0.0181
 + - cost(#5)=-0.050492  
 + -- Parameters = -10.6745 -13.8741 14.4175 -12.2701 -30.3458 5.2797 1.0119 1.0044 0.9693 0.0016 0.0044 0.0277
 + - cost(#6)=-0.050820  
 + -- Parameters = -10.4826 -13.7686 14.3793 -11.5312 -31.3338 4.7126 1.0204 0.9899 0.9789 -0.0027 0.0071 0.0014
 + - cost(#7)=-0.050535  
 + -- Parameters = -9.9435 14.0375 2.6019 -17.1485 8.9936 9.8537 0.9932 1.0234 1.0304 0.0348 0.0140 0.0324
 + - cost(#8)=-0.049521  
 + -- Parameters = -8.6382 -26.6345 6.8490 -7.5243 -30.0597 -1.1115 0.9795 1.0504 0.9775 -0.0067 -0.0046 -0.0073
 + - cost(#9)=-0.045729  
 + -- Parameters = -10.1974 -18.0868 -8.4964 -8.0411 -2.0001 5.4954 1.0177 0.9739 1.0133 -0.0121 0.0095 0.0079
 + - cost(#10)=-0.045144  
 + -- Parameters = -6.5060 -29.2930 6.7231 -3.3799 -30.1594 5.0380 1.0043 1.0003 0.9994 0.0082 0.0095 0.0038
 + - cost(#11)=-0.041851  
 + -- Parameters = -11.8833 -2.9487 11.6015 -13.8119 -20.0979 7.1505 1.0102 1.0347 0.9979 -0.0059 0.0088 -0.0032
 + - cost(#12)=-0.030660  
 + -- Parameters = -21.7452 -6.3968 12.3601 -42.6199 -24.5646 3.2467 0.9965 0.9879 1.0140 0.0119 -0.0050 -0.0024
 + - cost(#13)=-0.052436  
 + -- Parameters = -1.3432 2.4175 -3.6645 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.455677 *
 + -- Parameters = -0.5869 -0.1304 0.7227 1.1216 -3.1248 -0.5712 1.0044 1.0016 1.0024 0.0005 0.0128 -0.0296
 + - cost(#2)=-0.452636  
 + -- Parameters = -0.5476 -0.3849 0.7165 1.1066 -2.5154 -0.3568 1.0038 0.9997 1.0007 -0.0019 0.0057 -0.0182
 + - cost(#3)=-0.452961  
 + -- Parameters = -0.5663 -0.4300 0.6082 1.1342 -2.5409 -0.3737 1.0042 0.9973 1.0058 -0.0016 0.0071 -0.0198
 + - cost(#4)=-0.050158  
 + -- Parameters = -10.4264 -14.2571 14.3230 -13.0201 -30.8350 5.6650 0.9984 1.0087 0.9684 0.0010 -0.0013 0.0193
 + - cost(#5)=-0.050915  
 + -- Parameters = -10.5856 -13.7804 14.3924 -12.3412 -30.4184 5.0893 1.0110 1.0047 0.9681 0.0006 0.0089 0.0275
 + - cost(#6)=-0.051932  
 + -- Parameters = -10.3359 -13.9613 14.2043 -12.0507 -31.3242 4.4865 1.0151 0.9868 0.9810 -0.0072 0.0066 0.0021
 + - cost(#7)=-0.052582  
 + -- Parameters = -9.7027 13.5741 2.6951 -15.9200 8.4111 9.2190 0.9954 1.0169 1.0320 0.0344 0.0142 0.0355
 + - cost(#8)=-0.054159  
 + -- Parameters = -8.1778 -25.8359 6.4218 -6.8719 -29.1178 -1.9994 0.9546 1.0555 0.9308 -0.0164 -0.0074 0.0003
 + - cost(#9)=-0.048311  
 + -- Parameters = -9.2677 -17.6027 -8.0111 -7.2571 -2.1026 4.9857 1.0073 0.9707 1.0126 -0.0148 0.0099 0.0061
 + - cost(#10)=-0.045506  
 + -- Parameters = -6.3364 -29.2117 6.4519 -3.3405 -30.0168 4.8646 1.0015 1.0008 0.9996 0.0095 0.0110 0.0025
 + - cost(#11)=-0.045401  
 + -- Parameters = -11.6185 -2.7238 10.3122 -14.4834 -20.1216 6.4668 1.0126 1.0347 0.9996 -0.0076 0.0087 -0.0036
 + - cost(#12)=-0.032584  
 + -- Parameters = -21.2665 -5.9212 13.0036 -41.8418 -24.6411 2.5481 1.0014 0.9846 1.0014 0.0154 -0.0005 -0.0022
 + - cost(#13)=-0.445082  
 + -- Parameters = -0.4721 -0.8546 0.6433 1.2015 -1.5642 -0.2294 1.0051 0.9948 1.0009 0.0042 0.0025 -0.0013
 + - case #1 is now the best
 + - Initial  cost = -0.455677
 + - Initial fine Parameters = -0.5869 -0.1304 0.7227 1.1216 -3.1248 -0.5712 1.0044 1.0016 1.0024 0.0005 0.0128 -0.0296
 + - Finalish cost = -0.456028 ; 142 funcs
 + - Final    cost = -0.456416 ; 231 funcs
 + Final fine fit Parameters:
       x-shift=-0.5289   y-shift=-0.0730   z-shift= 0.7021
       z-angle= 1.1894   x-angle=-3.2923   y-angle=-0.4266
       x-scale= 1.0051   y-scale= 1.0014   z-scale= 1.0007
     y/x-shear= 0.0016 z/x-shear= 0.0086 z/y-shear=-0.0330
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.5289 -0.0730 0.7021 1.1894 -3.2923 -0.4266 1.0051 1.0014 1.0007 0.0016 0.0086 -0.0330
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0187 -0.9878 0.1224 239.4999 0.0041 0.1546 0.9951 85.9350 -1.0048 0.0213 -0.0075 196.8753
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.3 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2333.880100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 91.199 47.8897   ITER = 10/137
91.199

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 82ms]
lev=0 0..171 0..213 0..166: [first cost=-0.70876] ... done [cost:-0.70876==>-0.78751]
lev=1 patch=129x161x125 [clock= 12m 53s 797ms]........:[cost=-0.81195]:........ done [cost:-0.78751==>-0.81647 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 17m 53s 842ms]......................... done [cost:-0.81647==>-0.89405 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 21m 49s 452ms]................ done [cost:-0.89405==>-0.96619 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 24m 40s 181ms].......... done [cost:-0.96619==>-1.02251 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 26m 47s 194ms]....... done [cost:-1.02251==>-1.09574 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 29m 0s 635ms]........................ done [cost:-1.09574==>-1.14456 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 31m 19s 815ms]............................... done [cost:-1.14456==>-1.22673 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 33m 49s 488ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 6.8 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0498.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0498.r01.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb01.tb0498.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30297 voxels
 + 5018 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.255  pitch=-0.030  yaw=-0.132  dS=-0.050  dL=-0.201  dP=-0.255
++ Mean: roll=-0.131  pitch=+0.022  yaw=-0.046  dS=+0.114  dL=-0.091  dP=-0.100
++ Max : roll=+0.041  pitch=+0.102  yaw=+0.012  dS=+0.211  dL=+0.048  dP=+0.024
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.09(0.09) 0.16(0.09) 0.14(0.09) 0.10(0.05) 0.16(0.11) 0.12(0.10) 0.12(0.02) 0.10(0.05) 0.20(0.11) 0.14(0.08) 0.10(0.10) 0.11(0.09) 0.14(0.05) 0.13(0.04) 0.13(0.02) 0.13(0.02) 0.11(0.04) 0.12(0.06) 0.13(0.03) 0.11(0.05) 0.21(0.12) 0.16(0.12) 0.15(0.05) 0.16(0.08) 0.16(0.05) 0.12(0.06) 0.12(0.02) 0.14(0.03) 0.14(0.04) 0.14(0.03) 0.19(0.07) 0.15(0.06) 0.14(0.03) 0.19(0.12) 0.17(0.10) 0.20(0.07) 0.24(0.06) 0.23(0.03) 0.28(0.07) 0.23(0.05) 0.20(0.04) 0.21(0.05) 0.24(0.03) 0.22(0.04) 0.22(0.03) 0.28(0.06) 0.28(0.03) 0.29(0.03) 0.31(0.03) 0.31(0.03) 0.28(0.05) 0.30(0.03) 0.31(0.02) 0.31(0.02) 0.32(0.03) 0.32(0.02) 0.30(0.05) 0.29(0.06) 0.30(0.06) 0.28(0.04) 0.30(0.05) 0.28(0.03) 0.27(0.05) 0.29(0.04) 0.31(0.04) 0.30(0.03) 0.26(0.07) 0.25(0.04) 0.25(0.04) 0.27(0.05) 0.31(0.05) 0.31(0.02) 0.29(0.05) 0.31(0.05) 0.33(0.05) 0.32(0.05) 0.34(0.03) 0.34(0.03) 0.36(0.04) 0.37(0.03) 0.34(0.05) 0.37(0.04) 0.40(0.04) 0.42(0.05) 0.43(0.04) 0.41(0.06) 0.39(0.03) 0.36(0.03) 0.36(0.05) 0.40(0.05) 0.41(0.03) 0.44(0.05) 0.45(0.02) 0.43(0.05) 0.42(0.03) 0.41(0.04) 0.41(0.04) 0.46(0.07) 0.49(0.04) 0.48(0.07) 0.49(0.05) 0.53(0.04) 0.53(0.03) 0.54(0.03) 0.55(0.02) 0.57(0.04) 0.57(0.05) 0.52(0.06) 0.48(0.05) 0.56(0.12) 0.53(0.12) 0.50(0.03) 0.55(0.08) 0.58(0.06) 0.63(0.06) 0.63(0.03) 0.62(0.04) 0.63(0.03) 0.63(0.04) 0.62(0.02) 0.62(0.02) 0.64(0.02) 0.65(0.05) 0.62(0.06) 0.61(0.05) 0.59(0.04) 0.63(0.05) 0.61(0.03) 0.58(0.05) 0.61(0.05) 0.61(0.07) 0.65(0.07) 0.63(0.02) 0.59(0.05) 0.58(0.05) 0.62(0.05) 0.62(0.02) 0.62(0.03) 0.66(0.04) 0.64(0.05) 0.58(0.07) 0.60(0.10) 0.57(0.05) 0.60(0.05) 0.69(0.13) 0.65(0.13) 0.62(0.08) 0.64(0.08) 0.67(0.05)
++ Max displacement in automask = 0.69 (mm) at sub-brick 145
++ Max delta displ  in automask = 0.13 (mm) at sub-brick 145
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0498.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0498.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0498.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0498.r01.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./pb01.tb0498.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.4
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0498.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0498.r02.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb01.tb0498.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30603 voxels
 + 5133 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.187  pitch=+1.254  yaw=-0.251  dS=-1.084  dL=-0.429  dP=-1.043
++ Mean: roll=-0.008  pitch=+1.464  yaw=-0.118  dS=-0.928  dL=-0.314  dP=-0.671
++ Max : roll=+0.070  pitch=+1.576  yaw=+0.016  dS=-0.840  dL=-0.198  dP=-0.501
++ Max displacements (mm) for each sub-brick:
 3.11(0.00) 3.12(0.18) 3.13(0.08) 3.13(0.07) 3.12(0.06) 3.14(0.05) 3.12(0.04) 3.11(0.07) 3.10(0.06) 3.12(0.04) 3.14(0.06) 3.13(0.08) 3.11(0.06) 3.11(0.05) 3.10(0.03) 3.11(0.03) 3.11(0.03) 3.10(0.07) 3.12(0.08) 3.13(0.03) 3.14(0.02) 3.13(0.03) 3.14(0.05) 3.15(0.02) 3.14(0.05) 3.08(0.08) 3.12(0.05) 3.15(0.03) 3.15(0.05) 3.15(0.04) 3.15(0.06) 3.17(0.03) 3.16(0.04) 3.16(0.02) 3.18(0.02) 3.15(0.06) 3.13(0.03) 3.16(0.09) 3.17(0.06) 3.14(0.18) 3.15(0.12) 3.18(0.07) 3.19(0.07) 3.20(0.04) 3.19(0.05) 3.22(0.06) 3.25(0.04) 3.23(0.02) 3.24(0.04) 3.24(0.05) 3.22(0.07) 3.23(0.08) 3.23(0.05) 3.23(0.02) 3.23(0.02) 3.17(0.18) 3.15(0.16) 3.20(0.15) 3.19(0.14) 3.23(0.08) 3.22(0.04) 3.21(0.03) 3.22(0.06) 3.24(0.03) 3.26(0.05) 3.21(0.05) 3.21(0.06) 3.24(0.05) 3.25(0.07) 3.27(0.08) 3.29(0.07) 3.29(0.03) 3.27(0.04) 3.25(0.05) 3.24(0.04) 3.24(0.05) 3.22(0.03) 3.19(0.17) 3.24(0.13) 3.24(0.07) 3.24(0.08) 3.24(0.07) 3.24(0.03) 3.25(0.04) 3.26(0.04) 3.25(0.05) 3.24(0.02) 3.24(0.06) 3.25(0.08) 3.23(0.07) 3.11(0.12) 3.12(0.06) 3.16(0.06) 3.18(0.05) 3.18(0.06) 3.19(0.04) 3.21(0.04) 3.28(0.08) 3.19(0.10) 3.23(0.03) 3.24(0.04) 3.29(0.07) 3.24(0.07) 3.22(0.08) 3.23(0.06) 3.22(0.05) 3.30(0.10) 3.33(0.04) 3.27(0.11) 3.25(0.05) 3.26(0.09) 3.27(0.04) 3.25(0.04) 3.31(0.10) 3.32(0.04) 3.33(0.03) 3.34(0.04) 3.28(0.08) 3.31(0.04) 3.37(0.09) 3.35(0.03) 3.30(0.11) 3.38(0.10) 3.31(0.08) 3.36(0.10) 3.37(0.02) 3.39(0.04) 3.33(0.13) 3.32(0.03) 3.32(0.08) 3.33(0.05) 3.32(0.09) 3.32(0.02) 3.35(0.04) 3.35(0.03) 3.34(0.05) 3.33(0.06) 3.34(0.03) 3.39(0.10) 3.38(0.03) 3.39(0.16) 3.41(0.12) 3.40(0.11) 3.40(0.08) 3.35(0.28) 3.23(0.27) 3.24(0.16) 3.32(0.18) 3.39(0.08) 3.31(0.10)
++ Max displacement in automask = 3.41 (mm) at sub-brick 141
++ Max delta displ  in automask = 0.28 (mm) at sub-brick 144
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0498.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0498.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0498.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0498.r02.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./pb01.tb0498.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.5
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0498.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0498.r03.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb01.tb0498.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30535 voxels
 + 5128 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.831  pitch=+0.985  yaw=-0.617  dS=-1.980  dL=-1.064  dP=-1.388
++ Mean: roll=-0.718  pitch=+1.228  yaw=-0.538  dS=-1.861  dL=-0.961  dP=-1.219
++ Max : roll=-0.640  pitch=+1.334  yaw=-0.499  dS=-1.743  dL=-0.903  dP=-0.998
++ Max displacements (mm) for each sub-brick:
 4.33(0.00) 4.34(0.11) 4.36(0.11) 4.36(0.05) 4.36(0.03) 4.37(0.02) 4.38(0.05) 4.41(0.05) 4.38(0.07) 4.39(0.05) 4.41(0.03) 4.43(0.02) 4.43(0.04) 4.44(0.03) 4.42(0.05) 4.43(0.01) 4.42(0.03) 4.42(0.02) 4.43(0.02) 4.43(0.02) 4.40(0.04) 4.42(0.05) 4.43(0.05) 4.42(0.04) 4.42(0.03) 4.39(0.04) 4.40(0.03) 4.42(0.03) 4.41(0.03) 4.41(0.01) 4.41(0.03) 4.41(0.02) 4.39(0.03) 4.41(0.08) 4.43(0.04) 4.44(0.04) 4.45(0.08) 4.44(0.04) 4.43(0.04) 4.42(0.04) 4.43(0.03) 4.43(0.04) 4.42(0.05) 4.42(0.05) 4.42(0.03) 4.43(0.03) 4.44(0.03) 4.44(0.03) 4.42(0.02) 4.44(0.05) 4.46(0.03) 4.46(0.07) 4.47(0.03) 4.46(0.04) 4.46(0.04) 4.44(0.03) 4.45(0.09) 4.46(0.06) 4.48(0.15) 4.50(0.10) 4.48(0.08) 4.47(0.06) 4.48(0.04) 4.49(0.02) 4.49(0.05) 4.49(0.03) 4.49(0.05) 4.50(0.03) 4.53(0.04) 4.54(0.04) 4.55(0.05) 4.55(0.05) 4.52(0.07) 4.51(0.11) 4.51(0.10) 4.49(0.05) 4.46(0.16) 4.47(0.18) 4.19(0.40) 4.21(0.10) 4.23(0.07) 4.23(0.08) 4.25(0.09) 4.27(0.06) 4.30(0.07) 4.34(0.06) 4.39(0.06) 4.42(0.03) 4.41(0.05) 4.41(0.09) 4.43(0.05) 4.45(0.06) 4.45(0.04) 4.46(0.03) 4.45(0.08) 4.44(0.04) 4.46(0.03) 4.46(0.07) 4.46(0.02) 4.47(0.02) 4.49(0.04) 4.48(0.03) 4.48(0.04) 4.50(0.05) 4.53(0.04) 4.53(0.05) 4.52(0.04) 4.51(0.02) 4.51(0.02) 4.49(0.06) 4.51(0.05) 4.48(0.06) 4.48(0.07) 4.48(0.07) 4.51(0.06) 4.53(0.02) 4.51(0.11) 4.50(0.03) 4.50(0.05) 4.50(0.07) 4.52(0.02) 4.51(0.03) 4.49(0.05) 4.50(0.02) 4.50(0.04) 4.50(0.05) 4.49(0.03) 4.51(0.04) 4.54(0.04) 4.53(0.06) 4.53(0.05) 4.54(0.06) 4.54(0.07) 4.52(0.07) 4.53(0.03) 4.54(0.05) 4.56(0.03) 4.55(0.02) 4.56(0.04) 4.60(0.06) 4.61(0.03) 4.67(0.13) 4.69(0.05) 4.66(0.05) 4.67(0.04) 4.67(0.02) 4.65(0.06) 4.62(0.05) 4.65(0.05) 4.69(0.05)
++ Max displacement in automask = 4.69 (mm) at sub-brick 149
++ Max delta displ  in automask = 0.40 (mm) at sub-brick 78
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0498.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0498.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0498.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0498.r03.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./pb01.tb0498.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 14.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.2
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0498.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0498.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0498.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0498.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0498.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0498.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0498
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0498+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0498+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1365665 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=1
++ Zero-pad: zbot=2 ztop=2
++ Computing -autobox
++ 306342 voxels [66.5%] in weight mask
++ Number of points for matching = 143980
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.142611
   sp   = 0.34171
   mi   = -0.505863
   crM  = 0.0412502
   nmi  = 0.83971
   je   = 2.65008
   hel  = -0.101006
   crA  = 0.203441
   crU  = 0.215194
   lss  = 0.857389
   lpc  = 0.104093
   lpa  = 0.895907
   lpc+ = 0.244842
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.4
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0498+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0498+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 27.4 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0498.r01.blur pb02.tb0498.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0498.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0498.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0498.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0498.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0498.r02.blur pb02.tb0498.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0498.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0498.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0498.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0498.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0498.r03.blur pb02.tb0498.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0498.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0498.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0498.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0498.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0498.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0498.r01.blur+orig
++ Forming automask
 + Fixed clip level = 340.843018
 + Used gradual clip level = 290.345581 .. 387.116058
 + Number voxels above clip level = 52077
 + Clustering voxels ...
 + Largest cluster has 51685 voxels
 + Clustering voxels ...
 + Largest cluster has 51661 voxels
 + Filled    47 voxels in small holes; now have 51708 voxels
 + Clustering voxels ...
 + Largest cluster has 51708 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374567 voxels
 + Mask now has 51708 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366518 voxels
++ 59757 voxels in the mask [out of 426275: 14.02%]
++ first  14 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0498.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0498.r02.blur+orig
++ Forming automask
 + Fixed clip level = 341.580353
 + Used gradual clip level = 290.790527 .. 388.575256
 + Number voxels above clip level = 52274
 + Clustering voxels ...
 + Largest cluster has 51859 voxels
 + Clustering voxels ...
 + Largest cluster has 51834 voxels
 + Filled    38 voxels in small holes; now have 51872 voxels
 + Clustering voxels ...
 + Largest cluster has 51872 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374403 voxels
 + Mask now has 51872 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366356 voxels
++ 59919 voxels in the mask [out of 426275: 14.06%]
++ first  13 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0498.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0498.r03.blur+orig
++ Forming automask
 + Fixed clip level = 343.500793
 + Used gradual clip level = 290.345703 .. 390.757111
 + Number voxels above clip level = 52204
 + Clustering voxels ...
 + Largest cluster has 51800 voxels
 + Clustering voxels ...
 + Largest cluster has 51774 voxels
 + Filled    35 voxels in small holes; now have 51809 voxels
 + Clustering voxels ...
 + Largest cluster has 51809 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374466 voxels
 + Mask now has 51809 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366424 voxels
++ 59851 voxels in the mask [out of 426275: 14.04%]
++ first  13 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0498
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 60165 survived, 366110 were zero
++ writing result full_mask.tb0498...
3dresample -master full_mask.tb0498+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0498
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 53778 survived, 372497 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0498...
3dABoverlap -no_automask full_mask.tb0498+orig mask_anat.tb0498+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0498+orig.BRIK  B=./mask_anat.tb0498+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
60165        53778        62390        51553        8612         2225         14.3140      4.1374     0.8724     0.9779     0.8698
3ddot -dodice full_mask.tb0498+orig mask_anat.tb0498+orig
tee out.mask_ae_dice.txt
0.904891	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0498
total number of censored TRs (simple form) = 0
1deval -a motion_tb0498_censor.1D -b outcount_tb0498_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0498_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0498.r01.blur+orig.HEAD pb03.tb0498.r02.blur+orig.HEAD pb03.tb0498.r03.blur+orig.HEAD -censor censor_tb0498_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0498 -errts errts.tb0498 -bucket stats.tb0498
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0498.r01.blur+orig.HEAD pb03.tb0498.r02.blur+orig.HEAD pb03.tb0498.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 51792 voxels (out of 426275 = 12.1%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (no censoring)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0498.r01.blur+orig.HEAD pb03.tb0498.r02.blur+orig.HEAD pb03.tb0498.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0498_REML -Rvar stats.tb0498_REMLvar \
 -Rfitts fitts.tb0498_REML -Rerrts errts.tb0498_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (450x24):  4.04645  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (450x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (450x18):  3.28355  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (450x6):  2.31054  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (450x12):  1.01522  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.66545e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.37 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.352
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.366
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.380
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.393
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.408
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.422
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.436
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.450
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.464
++ Job #0: processing voxels 0 to 42626; elapsed time=7.474
++ voxel loop:0123456789.0123456789.0123456789.0123456789.01++ Job #1 finished; elapsed time=19.777
++ Job #5 finished; elapsed time=19.814
++ Job #9 finished; elapsed time=19.874
++ Job #4 finished; elapsed time=19.914
++ Job #3 finished; elapsed time=19.945
++ Job #6 finished; elapsed time=19.957
++ Job #8 finished; elapsed time=19.987
++ Job #2 finished; elapsed time=20.077
++ Job #7 finished; elapsed time=20.100
23456789.
++ Job #0 waiting for children to finish; elapsed time=23.985
++ Job #0 now finishing up; elapsed time=23.985
++ Smallest FDR q [0 Full_Fstat] = 1.78868e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 9.55945e-15
++ Smallest FDR q [3 uns1_Fstat] = 9.55873e-15
++ Smallest FDR q [5 uns2#0_Tstat] = 4.88272e-15
++ Smallest FDR q [6 uns2_Fstat] = 4.87994e-15
++ Smallest FDR q [8 uns3#0_Tstat] = 3.51414e-14
++ Smallest FDR q [9 uns3_Fstat] = 3.5137e-14
++ Smallest FDR q [11 str1#0_Tstat] = 1.51087e-14
++ Smallest FDR q [12 str1_Fstat] = 1.51087e-14
++ Smallest FDR q [14 str2#0_Tstat] = 4.42076e-15
++ Smallest FDR q [15 str2_Fstat] = 4.41984e-15
++ Smallest FDR q [17 str3#0_Tstat] = 3.84274e-14
++ Smallest FDR q [18 str3_Fstat] = 3.8423e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 2.06629e-15
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 2.06544e-15
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 2.44234e-15
++ Smallest FDR q [24 structured_GLT_Fstat] = 2.44155e-15
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 7.66092e-08
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 7.66009e-08
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.000648646
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.000648672
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 0.000131365
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 0.000131349
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.60669e-07
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.60696e-07
++ Wrote bucket dataset into ./stats.tb0498+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0498+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0498+orig.BRIK
++ Program finished; elapsed time=40.512
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.726       0.791  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.726       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.726       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.475       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.475       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0498.r01.blur+orig.HEAD pb03.tb0498.r02.blur+orig.HEAD pb03.tb0498.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0498_REML -Rvar stats.tb0498_REMLvar -Rfitts fitts.tb0498_REML -Rerrts errts.tb0498_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 51792 voxels (out of 426275 = 12.1%)
++ -----  matrix condition (450x24):  4.04645  ++ VERY GOOD ++
 + masked off 246490 voxels for being all zero; 179785 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 324 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=7.65
 + X matrix: 46.639% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=450 cols=24; 109*1 cases; total CPU=0.00 Elapsed=7.67
 +  average case bandwidth = 12.53
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=53.25
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=102.34
++ Output dataset ./stats.tb0498_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0498_REML+orig.BRIK
++ Output dataset ./errts.tb0498_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0498_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 1.46978e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 5.00273e-13
++ Smallest FDR q [3 uns1_Fstat] = 5.00273e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 1.38569e-13
++ Smallest FDR q [6 uns2_Fstat] = 1.38569e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 9.0135e-12
++ Smallest FDR q [9 uns3_Fstat] = 9.0135e-12
++ Smallest FDR q [11 str1#0_Tstat] = 6.80142e-12
++ Smallest FDR q [12 str1_Fstat] = 6.8014e-12
++ Smallest FDR q [14 str2#0_Tstat] = 1.67513e-13
++ Smallest FDR q [15 str2_Fstat] = 1.67513e-13
++ Smallest FDR q [17 str3#0_Tstat] = 8.58273e-11
++ Smallest FDR q [18 str3_Fstat] = 8.58273e-11
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.19691e-14
++ Smallest FDR q [21 unstructured_Fstat] = 1.19691e-14
++ Smallest FDR q [23 structured#0_Tstat] = 1.5088e-14
++ Smallest FDR q [24 structured_Fstat] = 1.5088e-14
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.130998 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.130998 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.839123 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.839124 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.682644 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.682644 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.999679 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.999679 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0498_REML+orig
++ Output dataset ./stats.tb0498_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=119.88
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0498 pb03.tb0498.r01.blur+orig.HEAD pb03.tb0498.r02.blur+orig.HEAD pb03.tb0498.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.0 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0498+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0498_REML+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0498+orig -expr c*a/b -prefix TSNR.tb0498
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0498_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0498+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 60165 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.16668
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0498.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0498+orig[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60165
[7m*+ WARNING:[0m removed 287 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.05 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0498+orig[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60165
[7m*+ WARNING:[0m removed 287 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.05 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0498+orig[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60165
[7m*+ WARNING:[0m removed 287 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.23 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 9.82051 9.30914 9.66521 9.59587
average errts FWHM blurs: 9.82051 9.30914 9.66521 9.59587
echo 9.82051 9.30914 9.66521 9.59587   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.481617 6.77117 13.4792 16.8369
average errts ACF blurs: 0.481617 6.77117 13.4792 16.8369
echo 0.481617 6.77117 13.4792 16.8369   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0498_REML+orig[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60165
[7m*+ WARNING:[0m removed 287 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 27.97 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0498_REML+orig[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60165
[7m*+ WARNING:[0m removed 287 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.96 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0498_REML+orig[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60165
[7m*+ WARNING:[0m removed 287 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.12 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 9.78924 9.27887 9.63275 9.56453
average err_reml FWHM blurs: 9.78924 9.27887 9.63275 9.56453
echo 9.78924 9.27887 9.63275 9.56453   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.479219 6.75057 13.432 16.7907
average err_reml ACF blurs: 0.479219 6.75057 13.432 16.7907
echo 0.479219 6.75057 13.432 16.7907   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0498.1D
3dClustSim -both -mask full_mask.tb0498+orig -acf 0.479219 6.75057 13.432 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 60165 voxels in mask (14.11% of total)
++ Kernel function radius = 43.78 mm
++ ACF(0.48,6.75,13.43) => FWHM=16.79 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 505.9 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0498+orig stats.tb0498_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0498+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0498_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0498 -dsets pb00.tb0498.r01.tcat+orig.HEAD pb00.tb0498.r02.tcat+orig.HEAD pb00.tb0498.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0498.r01.blur+orig.BRIK rm.pb03.tb0498.r01.blur+orig.HEAD rm.pb03.tb0498.r02.blur+orig.BRIK rm.pb03.tb0498.r02.blur+orig.HEAD rm.pb03.tb0498.r03.blur+orig.BRIK rm.pb03.tb0498.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0498.txt
./@ss_review_basic

subject ID                : tb0498
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0498+orig.HEAD
final stats dset          : stats.tb0498_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 0
average motion (per TR)   : 0.0386578
average censored motion   : 0.0386578
max motion displacement   : 3.06948
max censored displacement : 3.06948
outlier limit             : 0.1
average outlier frac (TR) : 0.00172796
num TRs above out limit   : 0

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 150 150 150
num TRs per run (censored): 0 0 0
fraction censored per run : 0 0 0
TRs total (uncensored)    : 450
TRs total                 : 450
degrees of freedom used   : 24
degrees of freedom left   : 426

TRs censored              : 0
censor fraction           : 0.000000
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 0 0 0 0 0 0
fraction TRs censored     : 0.000 0.000 0.000 0.000 0.000 0.000
ave mot per sresp (orig)  : 0.036085 0.048677 0.030822 0.031712 0.040177 0.036024
ave mot per sresp (cens)  : 0.036085 0.048677 0.030822 0.031712 0.040177 0.036024

TSNR average              : 321.231
global correlation (GCOR) : 0.16668
anat/EPI mask Dice coef   : 0.904891
maximum F-stat (masked)   : 39.5107
blur estimates (ACF)      : 0.479219 6.75057 13.432
blur estimates (FWHM)     : 9.78924 9.27887 9.63275


cd ..
echo execution finished: `date`
date
execution finished: Wed Aug  9 06:45:42 EDT 2017
