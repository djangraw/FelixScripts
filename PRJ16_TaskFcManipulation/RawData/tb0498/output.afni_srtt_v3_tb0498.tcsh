echo auto-generated by afni_proc.py, Tue Jan  2 15:41:00 2018
auto-generated by afni_proc.py, Tue Jan  2 15:41:00 2018
echo (version 6.02, December 12, 2017)
(version 6.02, December 12, 2017)
echo execution started: `date`
date
execution started: Tue Jan  2 15:41:00 EST 2018
afni -ver
Precompiled binary linux_openmp_64: Dec 22 2017 (Version AFNI_17.3.09)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   22 Dec 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0498
endif
set output_dir = tb0498.srtt_v3
if ( -d tb0498.srtt_v3 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0498.srtt_v3
mkdir tb0498.srtt_v3/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0498.srtt_v3/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0498.srtt_v3/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dTcat -prefix tb0498.srtt_v3/pb00.tb0498.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.2 s
3dTcat -prefix tb0498.srtt_v3/pb00.tb0498.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.4 s
3dTcat -prefix tb0498.srtt_v3/pb00.tb0498.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 2.1 s
set tr_counts = ( 150 150 150 )
cd tb0498.srtt_v3
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0498.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r01.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 28261 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0498.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r02.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 28379 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0498.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r03.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 28386 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.tb0498.r01.despike pb00.tb0498.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r01.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb0498.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #2
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 586ms

++ FINAL: 19353600 data points, 701987 edits [3.627%], 34305 big edits [0.177%]
++ Output dataset ./pb01.tb0498.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb0498.r02.despike pb00.tb0498.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r02.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb0498.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 621ms

++ FINAL: 19353600 data points, 719478 edits [3.718%], 40231 big edits [0.208%]
++ Output dataset ./pb01.tb0498.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb0498.r03.despike pb00.tb0498.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0498.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0498.r03.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb0498.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #1
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 589ms

++ FINAL: 19353600 data points, 730511 edits [3.775%], 42299 big edits [0.219%]
++ Output dataset ./pb01.tb0498.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.tb0498.r01.tshift -tpattern alt+z2 pb01.tb0498.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0498.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0498.r01.despike+orig.BRIK is 10.299996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb0498.r02.tshift -tpattern alt+z2 pb01.tb0498.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0498.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0498.r02.despike+orig.BRIK is 10.299996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb0498.r03.tshift -tpattern alt+z2 pb01.tb0498.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0498.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0498.r03.despike+orig.BRIK is 10.299996 degrees from plumb.
end
3dbucket -prefix vr_base pb02.tb0498.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 10.299996 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 350.925232
 + Used gradual clip level = 324.057068 .. 394.708466
 + Number voxels above clip level = 29490
 + Clustering voxels ...
 + Largest cluster has 28748 voxels
 + Clustering voxels ...
 + Largest cluster has 27946 voxels
 + Filled   289 voxels in small holes; now have 28235 voxels
 + Clustering voxels ...
 + Largest cluster has 28235 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 102827 voxels
 + Mask now has 28245 voxels
++ 28245 voxels in the mask [out of 131072: 21.55%]
++ first  13 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 867.005859 on /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/867.005859))'
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 10.299996 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1496902 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 28245 voxels [18.1%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 28245
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.866 29.581 19.461 (index)
 + source center of mass = 87.351 159.824 184.735 (index)
 + source-target CM = -1.342 2.415 -3.664 (xyz)
 + center of mass shifts = -1.342 2.415 -3.664
++ shift param auto-range: -70.9..68.2 -67.1..71.9 -51.2..43.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.341713 .. 8.658287
 + Range param#2 [y-shift] = -7.584831 .. 12.415169
 + Range param#3 [z-shift] = -13.663925 .. 6.336075
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.341713 .. 38.658287
 + Range param#2 [y-shift] = -37.584831 .. 42.415169
 + Range param#3 [z-shift] = -43.663925 .. 36.336075
 + 12 free parameters
++ Normalized convergence radius = 0.000457
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1496902 [out of 15629504] voxels
 + base mask has 38969 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=67 usiz=170.5
 + - copying weight image
 + - using 28245 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24600 total points stored in 231 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo-+.+.o-+*[#60=-0.0533834] *.-..++o+$.-.-+
 + - best 45 costs found:
    0 v=-0.053383: -14.68 -10.92   9.67 -15.00 -15.00 -15.00  [grid]
    1 v=-0.049971: -14.68 -24.25   9.67 -15.00 -30.00 -15.00  [grid]
    2 v=-0.049138: -15.37 -13.30  11.00 -24.25 -37.55   4.41  [rand]
    3 v=-0.045592: -14.68  15.75   9.67  15.00  15.00  30.00  [grid]
    4 v=-0.045280:  -5.42   8.64   4.13  -4.32 -22.85 -18.95  [rand]
    5 v=-0.044980: -11.16 -22.34   7.72  -3.10 -34.36   2.55  [rand]
    6 v=-0.042229: -11.16 -22.34   7.72  -3.10 -34.36  -2.55  [rand]
    7 v=-0.041787:  -1.34   2.42  -3.66   0.00   0.00   0.00  [grid]
    8 v=-0.041221: -12.94  -2.14   0.23 -24.53 -29.49 -26.10  [rand]
    9 v=-0.040198:  32.98  19.00 -12.27  16.34   8.64 -40.54  [rand]
   10 v=-0.039895: -14.68 -24.25   9.67 -15.00 -30.00  15.00  [grid]
   11 v=-0.039857: -14.68 -10.92   9.67 -15.00 -30.00  15.00  [grid]
   12 v=-0.039643: -18.20 -16.17  10.79 -19.57 -37.09  16.59  [rand]
   13 v=-0.039578: -14.68 -24.25   9.67 -30.00 -30.00  15.00  [grid]
   14 v=-0.038185: -12.94   6.97   0.23 -24.53  29.49 -26.10  [rand]
   15 v=-0.037672: -15.55  11.87   1.17 -15.99  13.53  29.93  [rand]
   16 v=-0.036934: -17.32 -17.08   2.06 -20.53   3.14 -10.08  [rand]
   17 v=-0.036694:  -5.42   8.64   4.13  -4.32  22.85 -18.95  [rand]
   18 v=-0.036358: -14.68 -10.92   9.67 -15.00 -15.00  15.00  [grid]
   19 v=-0.035476:   8.48  27.17 -15.05   3.10  34.36   2.55  [rand]
   20 v=-0.035468:  -9.98 -18.02  13.81 -25.20 -18.50 -13.54  [rand]
   21 v=-0.035026:  -5.42   8.64   4.13   4.32 -22.85 -18.95  [rand]
   22 v=-0.034426: -17.32 -17.08  -9.39 -20.53  -3.14  10.08  [rand]
   23 v=-0.034365: -14.68 -10.92   9.67 -15.00 -15.00 -30.00  [grid]
   24 v=-0.034098:   8.48  27.17 -15.05   3.10  34.36  -2.55  [rand]
   25 v=-0.033872: -11.16 -22.34   7.72   3.10 -34.36   2.55  [rand]
   26 v=-0.033779: -23.69 -13.97  12.17 -41.11 -22.86   3.97  [rand]
   27 v=-0.033433: -14.68 -24.25   9.67 -15.00 -15.00 -15.00  [grid]
   28 v=-0.032538: -15.37 -13.30  11.00 -24.25 -37.55  -4.41  [rand]
   29 v=-0.032485:  -7.33  -0.99  20.86  29.81   4.26  23.54  [rand]
   30 v=-0.032448:  14.64 -17.08  -9.39  20.53  -3.14 -10.08  [rand]
   31 v=-0.032025: -14.68 -24.25  23.00 -15.00 -30.00  30.00  [grid]
   32 v=-0.031994: -14.68 -10.92   9.67 -15.00 -15.00  30.00  [grid]
   33 v=-0.031646: -17.32 -17.08  -9.39 -20.53   3.14  10.08  [rand]
   34 v=-0.031424: -24.88  -6.13  12.30 -26.66 -31.62  32.06  [rand]
   35 v=-0.030893: -20.83  19.09  -1.06 -30.54  19.59  20.03  [rand]
   36 v=-0.029931: -14.68  15.75   9.67 -30.00  15.00  30.00  [grid]
   37 v=-0.029724: -14.68  15.75   9.67 -15.00  30.00 -15.00  [grid]
   38 v=-0.029660:  -7.33   5.82  20.86  29.81   4.26  23.54  [rand]
   39 v=-0.029549: -20.83 -14.26  -6.26 -30.54 -19.59 -20.03  [rand]
   40 v=-0.029533: -14.68  15.75   9.67 -30.00  15.00 -15.00  [grid]
   41 v=-0.029274: -14.68  15.75   9.67 -30.00  15.00  15.00  [grid]
   42 v=-0.029097: -26.31 -26.64  31.78  17.69 -14.58  34.92  [rand]
   43 v=-0.029019:  -7.33  -0.99  20.86  29.81  -4.26  23.54  [rand]
   44 v=-0.028930:  11.99  15.75   9.67  30.00  30.00  30.00  [grid]
*[#8004=-0.0537793] *[#8016=-0.0544972] *[#8048=-0.0554588] *[#8054=-0.0571407] *[#8060=-0.0612051] *[#8064=-0.0616661] *[#8066=-0.0621568] *[#8068=-0.0632766] *[#8069=-0.0635643] *[#8072=-0.0637091] *[#8074=-0.0643416] *[#8149=-0.0660447] *[#8155=-0.0670685] *[#8156=-0.0696546] *[#8157=-0.0706626] *[#8158=-0.0757528] *[#8163=-0.0761101] *[#8164=-0.0764769] *[#8190=-0.0794975] *[#8195=-0.0801873] *[#8196=-0.0822408] *[#8197=-0.0841935] *[#8198=-0.086045] *[#8200=-0.0868252] *[#8210=-0.241851] *[#8217=-0.246495] *[#8219=-0.247984] *[#8220=-0.250346] *[#8222=-0.269367] *[#8223=-0.313805] *[#8224=-0.38548] *[#8226=-0.403475] *[#8228=-0.416736] *[#8229=-0.42715] *[#8230=-0.434088] *[#8233=-0.435258] *[#8235=-0.445317] *[#8236=-0.454444] *[#8239=-0.460529] *[#8245=-0.461328]  + - costs of the above after a little optimization:
    0 v=-0.054497: -14.69 -10.93  13.62 -14.66 -15.27 -14.91  [grid]
    1 v=-0.052564: -14.50 -28.19  10.17 -15.26 -30.32 -14.61  [grid]
    2 v=-0.064342: -12.03 -14.12  16.66 -23.04 -35.67   3.28  [rand]
    3 v=-0.062098: -15.22  14.51   8.98  15.29  16.55  34.45  [grid]
    4 v=-0.054520:  -6.29   6.83   2.66  -5.47 -26.52 -18.53  [rand]
    5 v=-0.076477:  -7.69 -25.20  10.55  -6.02 -35.68   0.10  [rand]
    6 v=-0.086825:  -5.92 -31.59   6.87  -1.60 -30.57   2.54  [rand]
  * 7 v=-0.461328:  -0.51  -0.58   1.37   0.95  -2.11  -0.14  [grid]
    8 v=-0.053252: -13.38  -2.20   1.48 -23.54 -23.70 -25.88  [rand]
    9 v=-0.050240:  34.11  18.61 -13.85  14.10  13.81 -43.50  [rand]
   10 v=-0.082447:  -9.75 -26.83  11.10  -7.07 -32.01   4.64  [grid]
   11 v=-0.069856: -14.31 -11.71  15.96 -13.86 -32.67  13.09  [grid]
   12 v=-0.042205: -18.16 -16.46  10.29 -20.85 -36.75  15.56  [rand]
   13 v=-0.046693: -14.63 -19.32  10.22 -30.05 -30.22  14.16  [grid]
   14 v=-0.056826: -13.18  12.64   0.93 -24.18  29.19 -25.97  [rand]
   15 v=-0.043058: -15.27  11.36   1.63 -11.48  13.51  29.95  [rand]
   16 v=-0.056919: -16.24 -16.28   5.30 -18.45   3.97 -11.25  [rand]
   17 v=-0.045526:  -6.12   8.49   9.66  -3.02  22.35 -19.80  [rand]
   18 v=-0.072501: -13.63  -3.45  10.86 -13.64 -17.78  11.20  [grid]
   19 v=-0.051545:   8.87  20.95 -14.77   3.69  33.69   2.85  [rand]
   20 v=-0.049031: -15.86 -18.39  14.13 -25.73 -18.75 -13.28  [rand]
   21 v=-0.050265:  -6.83   9.11   2.19   1.14 -25.06 -15.07  [rand]
   22 v=-0.065465: -13.89 -14.73  -8.00 -13.62  -2.12   8.40  [rand]
   23 v=-0.093435:  -9.70  -9.62   9.94  -9.48 -11.21  -2.98  [grid]
   24 v=-0.058504:   2.45  23.31 -17.32   0.89  31.63  -3.30  [rand]
   25 v=-0.076760:  -6.86 -23.60   9.66  -5.16 -30.22  -0.15  [rand]
   26 v=-0.061861: -23.36  -7.65  12.75 -43.16 -29.45   5.00  [rand]
   27 v=-0.051314: -10.51 -24.16  10.03 -14.35 -15.23 -14.35  [grid]
   28 v=-0.082503: -11.01 -13.44  14.81 -12.09 -29.56   3.06  [rand]
   29 v=-0.049960: -11.93  -0.97  18.23  26.27   1.95  20.25  [rand]
   30 v=-0.034396:  14.42 -17.16  -9.44  20.79  -2.94  -9.94  [rand]
   31 v=-0.047918: -19.47 -25.71  20.22 -17.74 -31.99  29.69  [grid]
   32 v=-0.045827: -15.74  -7.71  13.68 -15.56 -19.55  29.62  [grid]
   33 v=-0.060587: -12.96 -15.93  -9.14 -17.50   1.87   8.92  [rand]
   34 v=-0.045561: -24.22  -5.88  15.55 -25.61 -30.73  31.35  [rand]
   35 v=-0.059793: -12.09  16.17   0.52 -28.43  20.95  21.93  [rand]
   36 v=-0.060978:  -9.47  14.11   6.49 -26.96  15.62  27.62  [grid]
   37 v=-0.044441: -10.48  11.56   9.39 -19.36  27.07 -14.90  [grid]
   38 v=-0.045915:  -8.05   0.85  16.23  27.25   4.98  22.53  [rand]
   39 v=-0.046407: -21.13 -18.09  -9.85 -28.15 -18.10 -24.41  [rand]
   40 v=-0.039096: -14.57  11.93  10.56 -29.82  15.09 -15.74  [grid]
   41 v=-0.063488: -12.42  16.45   1.24 -23.20  13.39  13.61  [grid]
   42 v=-0.036148: -27.37 -30.82  32.38  17.28 -14.56  34.29  [rand]
   43 v=-0.041184: -11.84  -3.58  19.69  30.86  -4.24  23.38  [rand]
   44 v=-0.064137:   3.07  13.17   4.41  24.99  26.68  28.60  [grid]
 + - save # 7 for twobest
 + - save #23 for twobest
 + - save # 6 for twobest
 + - save #28 for twobest
 + - save #10 for twobest
 + - save #25 for twobest
 + - save # 5 for twobest
 + - save #18 for twobest
 + - save #11 for twobest
 + - save #22 for twobest
 + - save # 2 for twobest
 + - save #44 for twobest
 + - save #41 for twobest
 + - save # 3 for twobest
 + - save #26 for twobest
 + - save #36 for twobest
 + - skip #33 for twobest: too close to set #22
 + - save #35 for twobest
 + - save #24 for twobest
 + - save #16 for twobest
 + - save #14 for twobest
 + - save # 4 for twobest
 + - save # 0 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=67 usiz=170.5
 + - retaining old weight image
 + - using 28245 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24594 total points stored in 248 'RHDD(13.7332)' bloks
*[#9557=-0.465002] *[#9581=-0.4684] *[#9582=-0.469367] *[#9584=-0.472002] *[#9585=-0.473789] *[#9586=-0.475343] *[#9587=-0.475589] *[#9590=-0.475688] *[#9591=-0.475749] *[#9600=-0.47841] *[#9602=-0.478446] *[#9605=-0.478544] *[#9607=-0.47855] *[#9609=-0.478806] *[#9610=-0.478827] *[#9611=-0.479308] *[#9612=-0.479567] *[#9615=-0.47997] *[#9627=-0.480048] *[#9629=-0.480082] *[#9630=-0.480115] *[#9634=-0.480478] *[#9635=-0.480582] *[#9638=-0.480974] *[#9647=-0.481069] *[#9650=-0.481221] 
 + - param set #1 has cost=-0.481221
 + -- Parameters = -0.4898 -0.4035 0.7571 1.0671 -1.9280 -0.0949 1.0002 1.0080 0.9973 0.0006 -0.0018 -0.0058
 + - param set #2 has cost=-0.374927
 + -- Parameters = -0.3249 -1.0477 2.1656 1.8684 -1.3249 -1.0532 0.9668 0.9883 0.9209 0.0243 0.0105 0.0189
 + - param set #3 has cost=-0.066179
 + -- Parameters = -6.1060 -30.8016 6.2224 -2.1424 -31.0285 5.2507 1.0010 1.0018 0.9989 0.0037 0.0031 0.0002
 + - param set #4 has cost=-0.073980
 + -- Parameters = -10.8591 -13.1930 13.9679 -12.7614 -30.7243 4.1553 1.0044 1.0003 0.9967 -0.0007 0.0011 0.0102
 + - param set #5 has cost=-0.071520
 + -- Parameters = -8.4664 -25.7544 8.1828 -7.8760 -30.8690 1.6157 1.0008 1.0644 0.9987 -0.0036 -0.0064 0.0027
 + - param set #6 has cost=-0.085771
 + -- Parameters = -6.0632 -18.8595 11.0658 -5.2224 -26.4429 -5.0372 1.0071 1.0085 0.9912 0.0019 0.0098 -0.0035
 + - param set #7 has cost=-0.082318
 + -- Parameters = -6.7464 -19.5941 12.6107 -7.2329 -31.8003 -2.3259 0.9972 0.9708 0.9483 -0.0080 -0.0028 -0.0240
 + - param set #8 has cost=-0.071223
 + -- Parameters = -11.5250 -3.9070 8.7986 -12.8224 -18.9105 5.2932 1.0018 1.0367 1.0048 -0.0061 0.0032 0.0013
 + - param set #9 has cost=-0.076377
 + -- Parameters = -11.7541 -14.1037 13.8169 -14.5229 -31.2000 3.2477 0.9866 1.0193 0.9887 -0.0105 0.0018 -0.0116
 + - param set #10 has cost=-0.063811
 + -- Parameters = -11.2772 -16.4081 -8.2980 -10.1216 -2.2080 7.1007 1.0080 0.9825 1.0115 -0.0022 -0.0056 -0.0039
 + - param set #11 has cost=-0.066921
 + -- Parameters = -13.2810 -15.2557 15.1215 -16.4545 -33.4831 3.8168 1.0020 1.0019 0.9927 0.0003 -0.0003 -0.0002
 + - param set #12 has cost=-0.476379
 + -- Parameters = -0.5227 -0.7954 0.6261 1.1094 -1.6044 -0.0747 0.9963 0.9998 0.9944 0.0004 -0.0035 -0.0038
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0225 
 + --- dist(#3,#1) = 0.208 
 + --- dist(#4,#1) = 0.272 
 + --- dist(#5,#1) = 0.332 
 + --- dist(#6,#1) = 0.325 
 + --- dist(#7,#1) = 0.32 
 + --- dist(#8,#1) = 0.322 
 + --- dist(#9,#1) = 0.189 
 + --- dist(#10,#1) = 0.351 
 + --- dist(#11,#1) = 0.38 
 + --- dist(#12,#1) = 0.2 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=67 usiz=170.5
 + - retaining old weight image
 + - using 28245 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24694 total points stored in 256 'RHDD(13.5933)' bloks
*[#10616=-0.484674] *[#10627=-0.484942] *[#10642=-0.485166] *[#10648=-0.486116] *[#10649=-0.486189] *[#10651=-0.486261] *[#10653=-0.486834] *[#10654=-0.486988] *[#10655=-0.487167] *[#10656=-0.487301] *[#10658=-0.487327] *[#10659=-0.487533] *[#10660=-0.487722] *[#10662=-0.487813] *[#10663=-0.488134] *[#10664=-0.488425] *[#10665=-0.488477] *[#10674=-0.489021] *[#10677=-0.489235] *[#10678=-0.489396] *[#10679=-0.489454] *[#10680=-0.489722] *[#10684=-0.490071] *[#10685=-0.490399] *[#10686=-0.490622] *[#10687=-0.490818] *[#10688=-0.490968] *[#10689=-0.491158] *[#10692=-0.491379] *[#10695=-0.491514] *[#10696=-0.491582] *[#10697=-0.491658] *[#10698=-0.491703] *[#10710=-0.491856] *[#10711=-0.491883] 
 + - param set #1 has cost=-0.491883
 + -- Parameters = -0.6015 -0.5303 0.6856 1.1264 -2.2256 -0.6244 1.0046 1.0012 0.9956 -0.0005 0.0126 -0.0142
 + - param set #2 has cost=-0.486731
 + -- Parameters = -0.4685 -0.8124 0.5939 1.1431 -1.6111 -0.2606 1.0033 0.9983 0.9938 0.0023 0.0031 -0.0052
 + - param set #3 has cost=-0.461517
 + -- Parameters = -0.5407 -1.0881 0.9357 1.3333 -0.6917 -0.7329 1.0008 1.0007 0.9778 0.0145 0.0146 0.0167
 + - param set #4 has cost=-0.079184
 + -- Parameters = -6.2481 -18.3503 10.8905 -4.9801 -27.1272 -3.7384 1.0302 1.0160 0.9360 0.0190 0.0137 -0.0106
 + - param set #5 has cost=-0.074871
 + -- Parameters = -6.9826 -19.2839 11.4352 -4.9526 -27.4433 -2.2194 1.0152 0.9933 0.9486 -0.0001 0.0047 -0.0219
 + - param set #6 has cost=-0.064608
 + -- Parameters = -11.2191 -13.5570 13.8999 -14.3941 -31.4803 3.2057 0.9992 1.0313 0.9685 -0.0141 0.0074 -0.0037
 + - param set #7 has cost=-0.063827
 + -- Parameters = -10.6030 -13.5491 14.4464 -12.5758 -30.5228 5.1421 1.0154 1.0014 0.9766 -0.0021 0.0010 0.0120
 + - param set #8 has cost=-0.059984
 + -- Parameters = -8.6248 -25.4719 8.2152 -7.0313 -31.0245 -0.2737 0.9983 1.0612 0.9917 -0.0053 -0.0084 0.0013
 + - param set #9 has cost=-0.069725
 + -- Parameters = -10.3565 -3.6566 7.8179 -12.2854 -17.0357 3.1642 1.0361 1.0437 0.9864 -0.0207 0.0199 -0.0044
 + - param set #10 has cost=-0.060246
 + -- Parameters = -12.0576 -14.6327 14.0076 -15.0968 -32.0533 4.7419 1.0200 1.0092 0.9742 -0.0062 -0.0161 0.0070
 + - param set #11 has cost=-0.056927
 + -- Parameters = -6.0168 -30.0959 6.3447 -2.1953 -30.5042 5.4218 1.0085 1.0058 0.9959 0.0056 0.0083 0.0125
 + - param set #12 has cost=-0.057646
 + -- Parameters = -10.9910 -16.8547 -8.3502 -9.5996 -2.3439 6.7344 1.0249 0.9816 1.0121 -0.0040 -0.0063 -0.0027
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0429 
 + --- dist(#3,#1) = 0.139 
 + --- dist(#4,#1) = 0.277 
 + --- dist(#5,#1) = 0.28 
 + --- dist(#6,#1) = 0.165 
 + --- dist(#7,#1) = 0.325 
 + --- dist(#8,#1) = 0.314 
 + --- dist(#9,#1) = 0.331 
 + --- dist(#10,#1) = 0.32 
 + --- dist(#11,#1) = 0.204 
 + --- dist(#12,#1) = 0.37 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=67 usiz=170.5
 + - retaining old weight image
 + - using 28245 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24752 total points stored in 262 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.469641
 + -- Parameters = -0.5801 -0.4541 0.7356 1.1182 -2.4340 -0.6171 1.0038 0.9993 0.9972 0.0018 0.0119 -0.0174
 + - param set #2 has cost=-0.467232
 + -- Parameters = -0.5258 -0.6652 0.6913 1.1468 -2.0854 -0.4944 1.0031 0.9964 0.9953 0.0011 0.0091 -0.0115
 + - param set #3 has cost=-0.459100
 + -- Parameters = -0.6141 -0.9754 0.7244 1.1075 -1.3320 -0.7705 1.0055 0.9948 0.9964 0.0008 0.0171 0.0034
 + - param set #4 has cost=-0.068602
 + -- Parameters = -6.6915 -18.2607 11.1735 -5.3496 -27.3140 -3.6718 1.0269 1.0163 0.9335 0.0159 0.0138 -0.0107
 + - param set #5 has cost=-0.070282
 + -- Parameters = -7.1792 -18.8990 10.6727 -4.0507 -27.7249 -1.8277 1.0287 1.0015 0.9239 0.0088 0.0143 -0.0302
 + - param set #6 has cost=-0.069391
 + -- Parameters = -10.5407 -4.4791 6.3372 -11.3344 -13.1972 2.3799 1.0317 1.0609 0.9998 -0.0213 0.0157 -0.0083
 + - param set #7 has cost=-0.057183
 + -- Parameters = -11.1756 -13.8312 14.0121 -13.9783 -31.4826 3.5686 0.9979 1.0284 0.9613 -0.0168 0.0062 -0.0043
 + - param set #8 has cost=-0.056661
 + -- Parameters = -10.8816 -13.7871 14.3509 -12.5649 -30.7152 5.4971 1.0125 1.0019 0.9680 -0.0018 -0.0005 0.0167
 + - param set #9 has cost=-0.053469
 + -- Parameters = -12.0832 -14.3039 14.0448 -15.3601 -32.1945 4.5848 1.0151 1.0221 0.9754 -0.0073 -0.0172 0.0059
 + - param set #10 has cost=-0.055706
 + -- Parameters = -8.5442 -25.4856 8.2425 -7.0988 -31.2515 -0.3111 1.0001 1.0643 0.9753 -0.0081 0.0050 0.0022
 + - param set #11 has cost=-0.049993
 + -- Parameters = -10.9796 -17.1708 -8.4988 -9.2146 -2.4700 6.2150 1.0240 0.9784 1.0138 -0.0065 0.0019 -0.0043
 + - param set #12 has cost=-0.048399
 + -- Parameters = -6.1407 -29.8663 6.2237 -2.3606 -30.5948 5.2678 1.0083 1.0137 0.9958 0.0055 0.0083 0.0126
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0268 
 + --- dist(#3,#1) = 0.0935 
 + --- dist(#4,#1) = 0.281 
 + --- dist(#5,#1) = 0.168 
 + --- dist(#6,#1) = 0.276 
 + --- dist(#7,#1) = 0.323 
 + --- dist(#8,#1) = 0.314 
 + --- dist(#9,#1) = 0.32 
 + --- dist(#10,#1) = 0.331 
 + --- dist(#11,#1) = 0.209 
 + --- dist(#12,#1) = 0.368 
 + - Total coarse refinement net CPU time = 0.0 s; 3160 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=67 usiz=170.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24792 total points stored in 264 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.451605 *
 + -- Parameters = -0.5801 -0.4541 0.7356 1.1182 -2.4340 -0.6171 1.0038 0.9993 0.9972 0.0018 0.0119 -0.0174
 + - cost(#2)=-0.448929  
 + -- Parameters = -0.5258 -0.6652 0.6913 1.1468 -2.0854 -0.4944 1.0031 0.9964 0.9953 0.0011 0.0091 -0.0115
 + - cost(#3)=-0.442227  
 + -- Parameters = -0.6141 -0.9754 0.7244 1.1075 -1.3320 -0.7705 1.0055 0.9948 0.9964 0.0008 0.0171 0.0034
 + - cost(#4)=-0.061362  
 + -- Parameters = -7.1792 -18.8990 10.6727 -4.0507 -27.7249 -1.8277 1.0287 1.0015 0.9239 0.0088 0.0143 -0.0302
 + - cost(#5)=-0.064511  
 + -- Parameters = -10.5407 -4.4791 6.3372 -11.3344 -13.1972 2.3799 1.0317 1.0609 0.9998 -0.0213 0.0157 -0.0083
 + - cost(#6)=-0.060461  
 + -- Parameters = -6.6915 -18.2607 11.1735 -5.3496 -27.3140 -3.6718 1.0269 1.0163 0.9335 0.0159 0.0138 -0.0107
 + - cost(#7)=-0.050612  
 + -- Parameters = -11.1756 -13.8312 14.0121 -13.9783 -31.4826 3.5686 0.9979 1.0284 0.9613 -0.0168 0.0062 -0.0043
 + - cost(#8)=-0.050917  
 + -- Parameters = -10.8816 -13.7871 14.3509 -12.5649 -30.7152 5.4971 1.0125 1.0019 0.9680 -0.0018 -0.0005 0.0167
 + - cost(#9)=-0.049411  
 + -- Parameters = -8.5442 -25.4856 8.2425 -7.0988 -31.2515 -0.3111 1.0001 1.0643 0.9753 -0.0081 0.0050 0.0022
 + - cost(#10)=-0.047631  
 + -- Parameters = -12.0832 -14.3039 14.0448 -15.3601 -32.1945 4.5848 1.0151 1.0221 0.9754 -0.0073 -0.0172 0.0059
 + - cost(#11)=-0.043997  
 + -- Parameters = -10.9796 -17.1708 -8.4988 -9.2146 -2.4700 6.2150 1.0240 0.9784 1.0138 -0.0065 0.0019 -0.0043
 + - cost(#12)=-0.044693  
 + -- Parameters = -6.1407 -29.8663 6.2237 -2.3606 -30.5948 5.2678 1.0083 1.0137 0.9958 0.0055 0.0083 0.0126
 + - cost(#13)=-0.052463  
 + -- Parameters = -1.3417 2.4152 -3.6639 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.453502 *
 + -- Parameters = -0.6086 -0.3165 0.7210 1.0991 -2.7093 -0.4927 1.0043 1.0004 1.0038 0.0020 0.0119 -0.0207
 + - cost(#2)=-0.452628  
 + -- Parameters = -0.5224 -0.3244 0.6525 1.2259 -2.5422 -0.5000 1.0046 1.0012 1.0037 0.0044 0.0113 -0.0177
 + - cost(#3)=-0.445987  
 + -- Parameters = -0.5894 -0.8328 0.6261 1.1663 -1.5854 -0.6039 1.0040 0.9949 1.0060 0.0013 0.0149 -0.0010
 + - cost(#4)=-0.062607  
 + -- Parameters = -7.4711 -18.7173 10.8043 -4.2634 -28.2189 -2.2526 1.0300 1.0055 0.9224 0.0111 0.0135 -0.0330
 + - cost(#5)=-0.326733  
 + -- Parameters = -1.1168 0.5985 1.2684 0.6705 -2.9133 -0.6667 1.0149 1.0789 0.9898 -0.0115 0.0096 0.0040
 + - cost(#6)=-0.062317  
 + -- Parameters = -6.6267 -17.8102 11.2553 -6.0705 -27.7560 -4.1363 1.0288 1.0244 0.9273 0.0146 0.0126 -0.0143
 + - cost(#7)=-0.051432  
 + -- Parameters = -10.9995 -13.7072 13.7743 -14.1613 -31.5593 3.4058 0.9986 1.0226 0.9621 -0.0147 0.0053 -0.0046
 + - cost(#8)=-0.052031  
 + -- Parameters = -10.5155 -13.7903 14.1467 -12.6313 -31.1903 4.8108 1.0144 1.0020 0.9668 -0.0049 0.0021 0.0165
 + - cost(#9)=-0.050563  
 + -- Parameters = -8.0897 -25.9329 7.6053 -6.2397 -31.9268 -0.6251 0.9997 1.0668 0.9756 -0.0135 0.0049 0.0020
 + - cost(#10)=-0.051340  
 + -- Parameters = -10.7746 -13.3605 13.8475 -14.1814 -31.0424 4.1415 0.9997 1.0118 0.9795 -0.0221 -0.0038 0.0015
 + - cost(#11)=-0.046049  
 + -- Parameters = -10.3979 -17.2552 -7.8948 -9.2609 -2.6408 5.4822 1.0089 0.9701 1.0350 -0.0156 0.0022 -0.0062
 + - cost(#12)=-0.044862  
 + -- Parameters = -6.0181 -29.8223 6.2475 -2.4236 -30.5802 5.3622 1.0080 1.0148 0.9940 0.0056 0.0079 0.0129
 + - cost(#13)=-0.444658  
 + -- Parameters = -0.4760 -0.8956 0.5634 1.1486 -1.5452 -0.1590 1.0008 0.9942 1.0078 0.0005 0.0014 -0.0013
 + - case #1 is now the best
 + - Initial  cost = -0.453502
 + - Initial fine Parameters = -0.6086 -0.3165 0.7210 1.0991 -2.7093 -0.4927 1.0043 1.0004 1.0038 0.0020 0.0119 -0.0207
 + - Finalish cost = -0.456362 ; 515 funcs
 + - Final    cost = -0.456412 ; 190 funcs
 + Final fine fit Parameters:
       x-shift=-0.5300   y-shift= 0.0023   z-shift= 0.7428
       z-angle= 1.1659   x-angle=-3.3749   y-angle=-0.3825
       x-scale= 1.0048   y-scale= 1.0026   z-scale= 1.0000
     y/x-shear= 0.0006 z/x-shear= 0.0071 z/y-shear=-0.0338
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.5300 0.0023 0.7428 1.1659 -3.3749 -0.3825 1.0048 1.0026 1.0000 0.0006 0.0071 -0.0338
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 31.9
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0194 -0.9890 0.1208 239.8708 0.0035 0.1543 0.9947 86.0889 -1.0046 0.0208 -0.0067 196.8360
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.2
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base MNI152_T1_2009c+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 25.8 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2333.880100 ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 140.951 55.1929   ITER = 12/137
140.951

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=0 xtop=0  ybot=1 ytop=2  zbot=15 ztop=0 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 193 x 232 x 208 volume ; autobbox = 19..173 21..211 17..179 [clock= 12s 439ms]
lev=0 0..192 0..231 0..199: [first cost=-0.81575] ... done [cost:-0.81575==>-0.88941]
lev=1 patch=145x175x157 [clock= 21m 5s 634ms]........:[cost=-0.90463]:........ done [cost:-0.88941==>-0.90706 ; 16 patches optimized, 0 skipped]
lev=2 patch=109x131x117 [clock= 41m 0s 467ms]..................... done [cost:-0.90706==>-0.97997 ; 21 patches optimized, 6 skipped]
lev=3 patch=81x99x89 [clock= 54m 32s 638ms]......... done [cost:-0.97997==>-1.05019 ; 41 patches optimized, 23 skipped]
lev=4 patch=61x73x67 [clock= 1h 7m 36s 24ms].......... done [cost:-1.05019==>-1.11507 ; 73 patches optimized, 52 skipped]
lev=5 patch=47x55x49 [clock= 1h 17m 15s 688ms].............. done [cost:-1.11507==>-1.18593 ; 193 patches optimized, 150 skipped]
lev=6 patch=35x41x37 [clock= 1h 27m 26s 735ms]..................... done [cost:-1.18593==>-1.25206 ; 451 patches optimized, 359 skipped]
lev=7 patch=25x25x25 [clock= 1h 37m 58s 544ms]............................................. done [cost:-1.25206==>-1.34651 ; 1528 patches optimized, 1384 skipped]
++ ========== total number of parameters 'optimized' = 56049
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 1h 49m 38s 174ms
#++ Applying warps to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0498/tb0498.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 21.9 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_T1_2009c+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
if ( ! -f Sag3DMPRAGEs002a1001_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.tb0498.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb0498.r01.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb02.tb0498.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30297 voxels
 + 5018 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.254  pitch=-0.029  yaw=-0.132  dS=-0.048  dL=-0.201  dP=-0.253
++ Mean: roll=-0.131  pitch=+0.022  yaw=-0.046  dS=+0.113  dL=-0.092  dP=-0.099
++ Max : roll=+0.040  pitch=+0.102  yaw=+0.013  dS=+0.211  dL=+0.046  dP=+0.024
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.09(0.09) 0.16(0.09) 0.14(0.08) 0.10(0.04) 0.15(0.11) 0.12(0.10) 0.12(0.02) 0.11(0.05) 0.20(0.11) 0.14(0.07) 0.10(0.10) 0.11(0.09) 0.14(0.05) 0.13(0.04) 0.13(0.02) 0.13(0.02) 0.11(0.04) 0.12(0.06) 0.13(0.03) 0.11(0.05) 0.21(0.12) 0.16(0.12) 0.15(0.05) 0.16(0.08) 0.16(0.05) 0.12(0.05) 0.12(0.02) 0.14(0.03) 0.14(0.04) 0.14(0.03) 0.19(0.07) 0.15(0.06) 0.14(0.03) 0.19(0.12) 0.17(0.10) 0.20(0.07) 0.24(0.06) 0.23(0.03) 0.28(0.07) 0.23(0.05) 0.20(0.04) 0.21(0.05) 0.23(0.03) 0.22(0.04) 0.22(0.03) 0.28(0.06) 0.28(0.03) 0.29(0.03) 0.31(0.03) 0.31(0.03) 0.28(0.05) 0.30(0.03) 0.31(0.02) 0.31(0.02) 0.32(0.03) 0.32(0.02) 0.30(0.05) 0.29(0.06) 0.30(0.06) 0.28(0.04) 0.29(0.05) 0.28(0.03) 0.27(0.05) 0.29(0.04) 0.31(0.04) 0.30(0.03) 0.26(0.07) 0.25(0.04) 0.26(0.04) 0.27(0.05) 0.31(0.05) 0.31(0.02) 0.29(0.05) 0.31(0.05) 0.33(0.05) 0.32(0.05) 0.34(0.03) 0.34(0.03) 0.36(0.04) 0.37(0.03) 0.34(0.05) 0.37(0.04) 0.40(0.04) 0.42(0.05) 0.43(0.04) 0.41(0.06) 0.39(0.03) 0.36(0.03) 0.36(0.05) 0.40(0.05) 0.41(0.03) 0.44(0.05) 0.45(0.03) 0.43(0.05) 0.42(0.03) 0.41(0.04) 0.40(0.04) 0.46(0.07) 0.49(0.04) 0.48(0.07) 0.49(0.05) 0.53(0.04) 0.53(0.03) 0.54(0.03) 0.55(0.02) 0.57(0.04) 0.57(0.04) 0.52(0.06) 0.48(0.05) 0.56(0.12) 0.53(0.11) 0.50(0.04) 0.55(0.08) 0.58(0.06) 0.63(0.06) 0.63(0.03) 0.62(0.04) 0.63(0.03) 0.63(0.04) 0.62(0.02) 0.62(0.02) 0.64(0.02) 0.65(0.05) 0.62(0.06) 0.61(0.05) 0.59(0.04) 0.63(0.05) 0.61(0.03) 0.58(0.05) 0.61(0.05) 0.61(0.07) 0.65(0.07) 0.63(0.02) 0.59(0.05) 0.58(0.05) 0.62(0.05) 0.62(0.02) 0.62(0.03) 0.66(0.04) 0.64(0.05) 0.59(0.07) 0.60(0.10) 0.57(0.06) 0.60(0.05) 0.69(0.13) 0.65(0.13) 0.62(0.08) 0.64(0.08) 0.67(0.05)
++ Max displacement in automask = 0.69 (mm) at sub-brick 145
++ Max delta displ  in automask = 0.13 (mm) at sub-brick 145
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.tb0498.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb0498.r01.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb0498.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb0498.r01.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'pb02.tb0498.r01.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 456.5 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.tb0498.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb0498.r02.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb02.tb0498.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30603 voxels
 + 5133 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.186  pitch=+1.255  yaw=-0.249  dS=-1.095  dL=-0.429  dP=-1.024
++ Mean: roll=-0.008  pitch=+1.464  yaw=-0.118  dS=-0.929  dL=-0.315  dP=-0.671
++ Max : roll=+0.069  pitch=+1.576  yaw=+0.015  dS=-0.841  dL=-0.199  dP=-0.501
++ Max displacements (mm) for each sub-brick:
 3.11(0.00) 3.12(0.18) 3.13(0.08) 3.12(0.07) 3.13(0.06) 3.14(0.05) 3.12(0.04) 3.11(0.07) 3.10(0.06) 3.12(0.04) 3.14(0.06) 3.13(0.08) 3.11(0.06) 3.11(0.05) 3.10(0.03) 3.11(0.03) 3.11(0.03) 3.10(0.07) 3.12(0.08) 3.13(0.03) 3.14(0.02) 3.13(0.03) 3.14(0.05) 3.15(0.02) 3.14(0.05) 3.08(0.08) 3.12(0.05) 3.15(0.03) 3.15(0.04) 3.15(0.04) 3.15(0.06) 3.17(0.03) 3.16(0.04) 3.16(0.02) 3.18(0.02) 3.15(0.06) 3.13(0.02) 3.16(0.09) 3.17(0.06) 3.14(0.17) 3.15(0.12) 3.18(0.07) 3.19(0.07) 3.20(0.04) 3.19(0.05) 3.22(0.06) 3.25(0.04) 3.23(0.02) 3.24(0.04) 3.24(0.05) 3.22(0.07) 3.23(0.08) 3.23(0.05) 3.23(0.02) 3.23(0.02) 3.18(0.18) 3.17(0.13) 3.20(0.14) 3.19(0.13) 3.23(0.08) 3.22(0.04) 3.21(0.03) 3.22(0.06) 3.24(0.02) 3.26(0.05) 3.21(0.05) 3.21(0.06) 3.24(0.05) 3.25(0.07) 3.27(0.08) 3.29(0.07) 3.29(0.03) 3.27(0.04) 3.25(0.05) 3.24(0.04) 3.24(0.05) 3.22(0.03) 3.19(0.16) 3.24(0.13) 3.24(0.07) 3.24(0.08) 3.24(0.07) 3.24(0.03) 3.25(0.04) 3.26(0.04) 3.25(0.05) 3.24(0.02) 3.24(0.06) 3.25(0.08) 3.23(0.07) 3.11(0.12) 3.12(0.06) 3.16(0.05) 3.18(0.05) 3.18(0.06) 3.19(0.04) 3.21(0.04) 3.28(0.08) 3.19(0.10) 3.23(0.03) 3.24(0.04) 3.29(0.07) 3.24(0.07) 3.22(0.08) 3.23(0.06) 3.22(0.05) 3.30(0.10) 3.33(0.04) 3.27(0.10) 3.25(0.05) 3.26(0.09) 3.27(0.04) 3.25(0.04) 3.31(0.10) 3.32(0.04) 3.33(0.03) 3.33(0.04) 3.29(0.08) 3.31(0.03) 3.37(0.09) 3.35(0.03) 3.30(0.11) 3.38(0.10) 3.31(0.08) 3.36(0.10) 3.37(0.02) 3.39(0.04) 3.33(0.13) 3.32(0.03) 3.32(0.08) 3.33(0.05) 3.32(0.09) 3.32(0.02) 3.35(0.04) 3.35(0.02) 3.34(0.05) 3.33(0.06) 3.34(0.03) 3.39(0.10) 3.38(0.03) 3.39(0.16) 3.41(0.12) 3.40(0.11) 3.40(0.08) 3.39(0.24) 3.24(0.26) 3.24(0.13) 3.32(0.17) 3.38(0.07) 3.37(0.05)
++ Max displacement in automask = 3.41 (mm) at sub-brick 141
++ Max delta displ  in automask = 0.26 (mm) at sub-brick 145
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.tb0498.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb0498.r02.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb0498.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb0498.r02.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'pb02.tb0498.r02.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 459.9 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.tb0498.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb0498.r03.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb02.tb0498.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30534 voxels
 + 5128 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.827  pitch=+0.998  yaw=-0.617  dS=-1.980  dL=-1.064  dP=-1.388
++ Mean: roll=-0.718  pitch=+1.228  yaw=-0.537  dS=-1.861  dL=-0.961  dP=-1.219
++ Max : roll=-0.640  pitch=+1.334  yaw=-0.499  dS=-1.748  dL=-0.904  dP=-1.019
++ Max displacements (mm) for each sub-brick:
 4.33(0.00) 4.34(0.11) 4.36(0.11) 4.36(0.05) 4.36(0.03) 4.37(0.02) 4.38(0.05) 4.41(0.05) 4.38(0.07) 4.39(0.05) 4.41(0.03) 4.43(0.02) 4.43(0.04) 4.44(0.03) 4.42(0.05) 4.43(0.01) 4.42(0.03) 4.42(0.02) 4.43(0.02) 4.43(0.02) 4.40(0.04) 4.42(0.05) 4.43(0.05) 4.43(0.04) 4.42(0.03) 4.39(0.04) 4.40(0.03) 4.42(0.03) 4.41(0.03) 4.41(0.01) 4.41(0.03) 4.41(0.02) 4.39(0.03) 4.42(0.08) 4.43(0.03) 4.44(0.04) 4.45(0.08) 4.44(0.03) 4.43(0.04) 4.42(0.04) 4.43(0.03) 4.43(0.04) 4.42(0.05) 4.42(0.05) 4.42(0.03) 4.43(0.03) 4.44(0.03) 4.44(0.03) 4.42(0.02) 4.44(0.05) 4.46(0.03) 4.46(0.07) 4.47(0.03) 4.46(0.04) 4.46(0.04) 4.44(0.03) 4.45(0.09) 4.46(0.06) 4.48(0.14) 4.50(0.10) 4.48(0.07) 4.47(0.06) 4.48(0.04) 4.49(0.02) 4.49(0.05) 4.49(0.03) 4.50(0.05) 4.50(0.03) 4.53(0.04) 4.54(0.04) 4.55(0.05) 4.55(0.05) 4.52(0.07) 4.51(0.11) 4.50(0.10) 4.49(0.04) 4.46(0.14) 4.46(0.17) 4.21(0.35) 4.22(0.08) 4.23(0.06) 4.23(0.08) 4.25(0.08) 4.27(0.05) 4.30(0.06) 4.34(0.06) 4.39(0.06) 4.42(0.03) 4.41(0.05) 4.41(0.09) 4.43(0.05) 4.45(0.06) 4.45(0.03) 4.46(0.03) 4.45(0.07) 4.44(0.04) 4.46(0.03) 4.46(0.07) 4.46(0.02) 4.47(0.02) 4.49(0.04) 4.48(0.03) 4.48(0.04) 4.50(0.05) 4.53(0.04) 4.53(0.05) 4.52(0.04) 4.51(0.02) 4.51(0.02) 4.49(0.06) 4.51(0.05) 4.48(0.06) 4.48(0.07) 4.48(0.07) 4.51(0.06) 4.53(0.02) 4.51(0.11) 4.50(0.03) 4.50(0.05) 4.50(0.07) 4.52(0.02) 4.51(0.03) 4.49(0.05) 4.50(0.02) 4.50(0.04) 4.50(0.05) 4.49(0.03) 4.51(0.04) 4.54(0.04) 4.53(0.06) 4.53(0.05) 4.54(0.06) 4.54(0.07) 4.52(0.07) 4.53(0.03) 4.55(0.05) 4.56(0.03) 4.55(0.02) 4.56(0.04) 4.60(0.06) 4.61(0.03) 4.67(0.13) 4.69(0.05) 4.66(0.05) 4.67(0.04) 4.67(0.02) 4.65(0.06) 4.62(0.05) 4.65(0.05) 4.69(0.05)
++ Max displacement in automask = 4.69 (mm) at sub-brick 149
++ Max delta displ  in automask = 0.35 (mm) at sub-brick 78
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.tb0498.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb0498.r03.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb0498.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb0498.r03.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'pb02.tb0498.r03.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 459.8 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb0498.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0498.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb0498.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0498.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb0498.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0498.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source vr_base+orig -nwarp anat.un.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 13.3 sec
3dcopy Sag3DMPRAGEs002a1001_ns+tlrc anat_final.tb0498
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.tb0498+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0498+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets
++ 1873752 voxels in source_automask+0
++ Zero-pad: xbot=3 xtop=3
++ Zero-pad: ybot=4 ytop=4
++ Computing -autobox
++ 345869 voxels [91.9%] in weight mask
++ Number of points for matching = 162558
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.148343
   sp   = 0.272853
   mi   = -0.563289
   crM  = 0.0433179
   nmi  = 0.852271
   je   = 3.24971
   hel  = -0.11569
   crA  = 0.208293
   crU  = 0.216548
   lss  = 0.851657
   lpc  = 0.0846207
   lpa  = 0.915379
   lpc+ = 0.221992
   ncd  = 0.909557
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.7
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0498+tlrc -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0498+tlrc'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 21.8 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb0498.r01.blur pb03.tb0498.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb0498.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb0498.r02.blur pb03.tb0498.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb0498.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb0498.r03.blur pb03.tb0498.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb0498.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb04.tb0498.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb0498.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 342.949982
 + Used gradual clip level = 314.064087 .. 386.970428
 + Number voxels above clip level = 72138
 + Clustering voxels ...
 + Largest cluster has 71415 voxels
 + Clustering voxels ...
 + Largest cluster has 71095 voxels
 + Filled   119 voxels in small holes; now have 71214 voxels
 + Clustering voxels ...
 + Largest cluster has 71214 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 240082 voxels
 + Mask now has 71214 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 229696 voxels
++ 81600 voxels in the mask [out of 311296: 26.21%]
++ first   5 x-planes are zero [from L]
++ last    4 x-planes are zero [from R]
++ first   6 y-planes are zero [from P]
++ last    2 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb04.tb0498.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb0498.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 343.835632
 + Used gradual clip level = 314.817078 .. 387.937531
 + Number voxels above clip level = 72400
 + Clustering voxels ...
 + Largest cluster has 71670 voxels
 + Clustering voxels ...
 + Largest cluster has 71319 voxels
 + Filled   131 voxels in small holes; now have 71450 voxels
 + Clustering voxels ...
 + Largest cluster has 71450 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239838 voxels
 + Mask now has 71458 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 229548 voxels
++ 81748 voxels in the mask [out of 311296: 26.26%]
++ first   5 x-planes are zero [from L]
++ last    4 x-planes are zero [from R]
++ first   6 y-planes are zero [from P]
++ last    2 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb04.tb0498.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb0498.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 345.610626
 + Used gradual clip level = 317.133209 .. 390.365967
 + Number voxels above clip level = 72309
 + Clustering voxels ...
 + Largest cluster has 71598 voxels
 + Clustering voxels ...
 + Largest cluster has 71254 voxels
 + Filled   110 voxels in small holes; now have 71364 voxels
 + Clustering voxels ...
 + Largest cluster has 71364 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239920 voxels
 + Mask now has 71376 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 229615 voxels
++ 81681 voxels in the mask [out of 311296: 26.24%]
++ first   5 x-planes are zero [from L]
++ last    4 x-planes are zero [from R]
++ first   6 y-planes are zero [from P]
++ last    2 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.tb0498
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 82334 survived, 228962 were zero
++ writing result full_mask.tb0498...
3dresample -master full_mask.tb0498+tlrc -input Sag3DMPRAGEs002a1001_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.tb0498
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 98911 survived, 212385 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0498...
3dABoverlap -no_automask full_mask.tb0498+tlrc mask_anat.tb0498+tlrc
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#A=./full_mask.tb0498+tlrc.BRIK  B=./mask_anat.tb0498+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
82334        98911        100215       81030        1304         17881         1.5838     18.0779     1.0599     0.9958     1.2707
3ddot -dodice full_mask.tb0498+tlrc mask_anat.tb0498+tlrc
tee out.mask_ae_dice.txt
0.894149	
3dresample -master full_mask.tb0498+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71790 survived, 239506 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb04.tb0498.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.tb0498.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb0498.r01.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb0498.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.tb0498.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.tb0498.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb0498.r02.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb0498.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.tb0498.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.tb0498.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb0498.r03.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb0498.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0498
total number of censored TRs (simple form) = 0
1deval -a motion_tb0498_censor.1D -b outcount_tb0498_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0498_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb05.tb0498.r01.scale+tlrc.HEAD pb05.tb0498.r02.scale+tlrc.HEAD pb05.tb0498.r03.scale+tlrc.HEAD -censor censor_tb0498_combined_2.1D -polort 3 -local_times -num_stimts 18 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll_01 -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch_01 -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw_01 -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS_01 -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL_01 -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP_01 -stim_file 13 motion_deriv.1D[0] -stim_base 13 -stim_label 13 roll_02 -stim_file 14 motion_deriv.1D[1] -stim_base 14 -stim_label 14 pitch_02 -stim_file 15 motion_deriv.1D[2] -stim_base 15 -stim_label 15 yaw_02 -stim_file 16 motion_deriv.1D[3] -stim_base 16 -stim_label 16 dS_02 -stim_file 17 motion_deriv.1D[4] -stim_base 17 -stim_label 17 dL_02 -stim_file 18 motion_deriv.1D[5] -stim_base 18 -stim_label 18 dP_02 -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +uns1 -str1 -glt_label 4 unstructured-structured BL1 -gltsym SYM: +uns2 -str2 -glt_label 5 unstructured-structured BL2 -gltsym SYM: +uns3 -str3 -glt_label 6 unstructured-structured BL3 -gltsym SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3 -glt_label 7 task -gltsym SYM: +uns1 +str1 -glt_label 8 task BL1 -gltsym SYM: +uns2 +str2 -glt_label 9 task BL2 -gltsym SYM: +uns3 +str3 -glt_label 10 task BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0498 -errts errts.tb0498 -bucket stats.tb0498
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 596,852 bytes (about 597 thousand [kilo])
++ loading dataset pb05.tb0498.r01.scale+tlrc.HEAD pb05.tb0498.r02.scale+tlrc.HEAD pb05.tb0498.r03.scale+tlrc.HEAD
++ current memory malloc-ated = 561,233,701 bytes (about 561 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 269017 voxels (out of 311296 = 86.4%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 -str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 -str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 +str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
++ Number of time points: 450 (no censoring)
 + Number of parameters:  30 [24 baseline ; 6 signal]
++ total shared memory needed = 1,181,679,616 bytes (about 1.2 billion [giga])
++ current memory malloc-ated = 561,588,601 bytes (about 562 million [mega])
++ mmap() memory allocated: 1,181,679,616 bytes (about 1.2 billion [giga])
++ Memory required for output bricks = 1,181,679,616 bytes (about 1.2 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.tb0498.r01.scale+tlrc.HEAD pb05.tb0498.r02.scale+tlrc.HEAD pb05.tb0498.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.tb0498_REML -Rvar stats.tb0498_REMLvar \
 -Rfitts fitts.tb0498_REML -Rerrts errts.tb0498_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (450x30):  4.26033  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (450x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (450x24):  3.41349  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (450x12):  2.43018  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (450x12):  1.01522  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.32579e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.58 s
++ Voxels in dataset: 311296
++ Voxels per job:    31129
++ Job #1: processing voxels 31129 to 62257; elapsed time=7.102
++ Job #2: processing voxels 62258 to 93386; elapsed time=7.128
++ Job #3: processing voxels 93387 to 124515; elapsed time=7.156
++ Job #4: processing voxels 124516 to 155644; elapsed time=7.184
++ Job #5: processing voxels 155645 to 186773; elapsed time=7.239
++ Job #6: processing voxels 186774 to 217902; elapsed time=7.280
++ Job #7: processing voxels 217903 to 249031; elapsed time=7.323
++ Job #8: processing voxels 249032 to 280160; elapsed time=7.373
++ Job #9: processing voxels 280161 to 311295; elapsed time=7.442
++ Job #0: processing voxels 0 to 31128; elapsed time=7.445
++ voxel loop:0123456789.0123456789.0123456789.0123456789.01234567++ Job #4 finished; elapsed time=80.249
++ Job #8 finished; elapsed time=80.522
++ Job #3 finished; elapsed time=80.585
++ Job #5 finished; elapsed time=80.627
8++ Job #1 finished; elapsed time=81.066
++ Job #9 finished; elapsed time=81.182
++ Job #6 finished; elapsed time=81.296
++ Job #2 finished; elapsed time=81.469
9.
++ Job #0 waiting for children to finish; elapsed time=81.518
++ Job #7 finished; elapsed time=81.673
++ Job #0 now finishing up; elapsed time=81.693
++ Smallest FDR q [0 Full_Fstat] = 1.40661e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 6.52866e-14
++ Smallest FDR q [3 uns1_Fstat] = 6.52875e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 6.23585e-14
++ Smallest FDR q [6 uns2_Fstat] = 6.236e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 2.19317e-13
++ Smallest FDR q [9 uns3_Fstat] = 2.19309e-13
++ Smallest FDR q [11 str1#0_Tstat] = 8.90171e-14
++ Smallest FDR q [12 str1_Fstat] = 8.90148e-14
++ Smallest FDR q [14 str2#0_Tstat] = 5.7277e-14
++ Smallest FDR q [15 str2_Fstat] = 5.72756e-14
++ Smallest FDR q [17 str3#0_Tstat] = 2.63428e-13
++ Smallest FDR q [18 str3_Fstat] = 2.63428e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.88938e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.88943e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 2.21586e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 2.21589e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 1.42333e-07
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 1.42333e-07
++ Smallest FDR q [29 unstructured-structured BL1_GLT#0_Tstat] = 8.76479e-09
++ Smallest FDR q [30 unstructured-structured BL1_GLT_Fstat] = 8.76553e-09
++ Smallest FDR q [32 unstructured-structured BL2_GLT#0_Tstat] = 9.39956e-09
++ Smallest FDR q [33 unstructured-structured BL2_GLT_Fstat] = 9.39942e-09
++ Smallest FDR q [35 unstructured-structured BL3_GLT#0_Tstat] = 4.98886e-09
++ Smallest FDR q [36 unstructured-structured BL3_GLT_Fstat] = 4.98905e-09
++ Smallest FDR q [38 task_GLT#0_Tstat] = 1.88764e-14
++ Smallest FDR q [39 task_GLT_Fstat] = 1.88777e-14
++ Smallest FDR q [41 task BL1_GLT#0_Tstat] = 6.8704e-14
++ Smallest FDR q [42 task BL1_GLT_Fstat] = 6.87053e-14
++ Smallest FDR q [44 task BL2_GLT#0_Tstat] = 5.39915e-14
++ Smallest FDR q [45 task BL2_GLT_Fstat] = 5.39962e-14
++ Smallest FDR q [47 task BL3_GLT#0_Tstat] = 2.05697e-13
++ Smallest FDR q [48 task BL3_GLT_Fstat] = 2.05701e-13
++ Wrote bucket dataset into ./stats.tb0498+tlrc.BRIK
 + created 33 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0498+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.tb0498+tlrc.BRIK
++ Program finished; elapsed time=167.242
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.726       0.791  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.726       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.726       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.475       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.475       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb05.tb0498.r01.scale+tlrc.HEAD pb05.tb0498.r02.scale+tlrc.HEAD pb05.tb0498.r03.scale+tlrc.HEAD -fout -tout -Rbuck stats.tb0498_REML -Rvar stats.tb0498_REMLvar -Rfitts fitts.tb0498_REML -Rerrts errts.tb0498_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 311296 voxels
++ FDR automask has 269017 voxels (out of 311296 = 86.4%)
++ -----  matrix condition (450x30):  4.26033  ++ VERY GOOD ++
 + masked off 72177 voxels for being all zero; 239119 left in mask
++ Converting input dataset to vector image
 +  dataset = 560 million [mega] bytes
 +  vectim  = 431 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=23.32
 + X matrix: 57.311% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=450 cols=30; 109*1 cases; total CPU=0.00 Elapsed=23.38
 +  average case bandwidth = 12.53
++ REML voxel loop: [6 threads]0123456789.0123456789.0123456789.012345678
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=205.03
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=303.65
++ Output dataset ./stats.tb0498_REMLvar+tlrc.BRIK
++ Output dataset ./fitts.tb0498_REML+tlrc.BRIK
++ Output dataset ./errts.tb0498_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.tb0498_REML+tlrc
++ Smallest FDR q [0 Full_Fstat] = 1.31405e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 1.4586e-12
++ Smallest FDR q [3 uns1_Fstat] = 1.4586e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 2.79996e-12
++ Smallest FDR q [6 uns2_Fstat] = 2.79996e-12
++ Smallest FDR q [8 uns3#0_Tstat] = 2.0879e-10
++ Smallest FDR q [9 uns3_Fstat] = 2.0879e-10
++ Smallest FDR q [11 str1#0_Tstat] = 3.50893e-12
++ Smallest FDR q [12 str1_Fstat] = 3.50893e-12
++ Smallest FDR q [14 str2#0_Tstat] = 2.77401e-12
++ Smallest FDR q [15 str2_Fstat] = 2.774e-12
++ Smallest FDR q [17 str3#0_Tstat] = 5.18046e-11
++ Smallest FDR q [18 str3_Fstat] = 5.18046e-11
++ Smallest FDR q [20 unstructured#0_Tstat] = 9.62138e-14
++ Smallest FDR q [21 unstructured_Fstat] = 9.62138e-14
++ Smallest FDR q [23 structured#0_Tstat] = 1.15732e-13
++ Smallest FDR q [24 structured_Fstat] = 1.15732e-13
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.107887 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.107887 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 unstructured-structured_BL1#0_Tstat] = 0.425882 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 unstructured-structured_BL1_Fstat] = 0.425882 ==> few true single voxel detections
++ Smallest FDR q [32 unstructured-structured_BL2#0_Tstat] = 0.0843492
++ Smallest FDR q [33 unstructured-structured_BL2_Fstat] = 0.0843492
[7m*+ WARNING:[0m Smallest FDR q [35 unstructured-structured_BL3#0_Tstat] = 0.356297 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 unstructured-structured_BL3_Fstat] = 0.356297 ==> few true single voxel detections
++ Smallest FDR q [38 task#0_Tstat] = 9.23113e-14
++ Smallest FDR q [39 task_Fstat] = 9.23113e-14
++ Smallest FDR q [41 task_BL1#0_Tstat] = 1.63381e-12
++ Smallest FDR q [42 task_BL1_Fstat] = 1.63381e-12
++ Smallest FDR q [44 task_BL2#0_Tstat] = 1.95154e-12
++ Smallest FDR q [45 task_BL2_Fstat] = 1.95154e-12
++ Smallest FDR q [47 task_BL3#0_Tstat] = 3.4339e-11
++ Smallest FDR q [48 task_BL3_Fstat] = 3.4339e-11
 + Added 33 FDR curves to dataset stats.tb0498_REML+tlrc
++ Output dataset ./stats.tb0498_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=387.40
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0498 pb05.tb0498.r01.scale+tlrc.HEAD pb05.tb0498.r02.scale+tlrc.HEAD pb05.tb0498.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 14.5 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0498+tlrc[0..449]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0498_REML+tlrc[0..449]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -c full_mask.tb0498+tlrc -expr c*a/b -prefix TSNR.tb0498
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.tb0498+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0498_REML+tlrc
++ 3dTnorm: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.tb0498+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
+++ 82334 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.0886874
3dcalc -a rm.errts.unit+tlrc -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+tlrc.BRIK
3dTstat -sum -prefix corr_brain rm.DP+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+tlrc.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0498.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0498+tlrc[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 82334
[7m*+ WARNING:[0m removed 375 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 24.20 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0498+tlrc[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 82334
[7m*+ WARNING:[0m removed 375 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 24.67 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0498+tlrc[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 82334
[7m*+ WARNING:[0m removed 375 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 24.78 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 0 0 0 0
average errts FWHM blurs: 0 0 0 0
echo 0 0 0 0   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.590678 4.65705 12.5888 12.2599
average errts ACF blurs: 0.590678 4.65705 12.5888 12.2599
echo 0.590678 4.65705 12.5888 12.2599   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0498_REML+tlrc[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 82334
[7m*+ WARNING:[0m removed 375 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 24.14 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0498_REML+tlrc[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 82334
[7m*+ WARNING:[0m removed 375 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 24.59 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0498+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0498_REML+tlrc[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 82334
[7m*+ WARNING:[0m removed 375 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 24.74 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 0 0 0 0
average err_reml FWHM blurs: 0 0 0 0
echo 0 0 0 0   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.599318 4.63013 12.8502 12.2175
average err_reml ACF blurs: 0.599318 4.63013 12.8502 12.2175
echo 0.599318 4.63013 12.8502 12.2175   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0498.1D
3dClustSim -both -mask full_mask.tb0498+tlrc -acf 0.599318 4.63013 12.8502 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 82334 voxels in mask (26.45% of total)
++ Kernel function radius = 38.52 mm
++ ACF(0.60,4.63,12.85) => FWHM=12.22 => 64x76x64 pads to 96x120x96
 + Kernel image dimensions 47 x 59 x 47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 1036.7 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0498+tlrc stats.tb0498_REML+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0498+tlrc
 + atrcopy
++ applying attributes
++ Processing AFNI dataset stats.tb0498_REML+tlrc
 + atrcopy
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0498 -dsets pb00.tb0498.r01.tcat+orig.HEAD pb00.tb0498.r02.tcat+orig.HEAD pb00.tb0498.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
Traceback (most recent call last):
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2698, in <module>
    sys.exit(main())
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2691, in main
    if me.write_scripts():
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2023, in write_scripts
    UTIL.write_text_to_file(scr_basic, self.text_basic, exe=1)
  File "/usr/local/apps/afni/current/linux_openmp_64/afni_util.py", line 75, in write_text_to_file
    fp.close()
IOError: [Errno 122] Disk quota exceeded
