echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb1313
endif
set output_dir = tb1313.srtt
if ( -d tb1313.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb1313.srtt
mkdir tb1313.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb1313.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb1313.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb1313.srtt/pb00.tb1313.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.5 s
3dTcat -prefix tb1313.srtt/pb00.tb1313.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.4 s
3dTcat -prefix tb1313.srtt/pb00.tb1313.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.0 s
set tr_counts = ( 150 150 150 )
cd tb1313.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb1313.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1313.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1313.r01.tcat+orig.BRIK is 15.300002 degrees from plumb.
++ 22963 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb1313.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1313.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1313.r02.tcat+orig.BRIK is 15.300002 degrees from plumb.
++ 23021 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb1313.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1313.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1313.r03.tcat+orig.BRIK is 15.300002 degrees from plumb.
++ 23092 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb1313.r01.tshift -tpattern alt+z2 pb00.tb1313.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1313.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1313.r01.tcat+orig.BRIK is 15.300002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb1313.r02.tshift -tpattern alt+z2 pb00.tb1313.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1313.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1313.r02.tcat+orig.BRIK is 15.300002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb1313.r03.tshift -tpattern alt+z2 pb00.tb1313.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1313.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1313.r03.tcat+orig.BRIK is 15.300002 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb1313.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 96, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 108, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 120, avoid_vent -1
Warning 3dSkullStrip: Stubborn intersection remaining at smoothing of 120. Ignoring it.#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 15.300002 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 412.057800
 + Used gradual clip level = 377.983185 .. 469.022400
 + Number voxels above clip level = 23580
 + Clustering voxels ...
 + Largest cluster has 23175 voxels
 + Clustering voxels ...
 + Largest cluster has 22747 voxels
 + Filled   223 voxels in small holes; now have 22970 voxels
 + Filled     4 voxels in large holes; now have 22974 voxels
 + Clustering voxels ...
 + Largest cluster has 22973 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 108099 voxels
 + Mask now has 22973 voxels
++ 22973 voxels in the mask [out of 131072: 17.53%]
++ first  14 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first   8 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1009.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1009.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 15.300002 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 15.300002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1271163 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 22973 voxels [14.4%] in weight mask
++ Number of points for matching = 22973
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.008 28.720 20.570 (index)
 + source center of mass = 88.819 164.812 179.059 (index)
 + source-target CM = 0.185 0.996 -4.857 (xyz)
 + center of mass shifts = 0.185 0.996 -4.857
++ shift param auto-range: -69.3..69.7 -68.5..70.5 -53.6..43.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.814735 .. 10.185265
 + Range param#2 [y-shift] = -9.003746 .. 10.996254
 + Range param#3 [z-shift] = -14.857445 .. 5.142555
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.814735 .. 40.185265
 + Range param#2 [y-shift] = -39.003746 .. 40.996254
 + Range param#3 [z-shift] = -44.857445 .. 35.142555
 + 12 free parameters
++ Normalized convergence radius = 0.000483
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1271163 [out of 17463600] voxels
 + base mask has 32007 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=74 usiz=187.5
 + - copying weight image
 + - using 22973 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 19719 total points stored in 186 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=0.0278038] **[#2=-0.0156431] *+o++o+--+.+*[#41=-0.0188352] *o...o+.oo*[#346=-0.0197996] *o+*[#427=-0.0199125] **[#514=-0.0275011] *+o+o+*[#770=-0.0293224] *o-+o*[#2524=-0.037067] *+o+o*[#3059=-0.040536] **[#3804=-0.0410307] *$*[#7636=-0.0480122] *.
 + - best 45 costs found:
    0 v=-0.048012: -34.67 -34.68   9.39  40.22 -24.26  41.52  [rand]
    1 v=-0.041031: -26.48 -25.67   8.48 -30.00 -30.00  30.00  [grid]
    2 v=-0.040536:  26.85 -25.67  21.81  30.00 -15.00 -30.00  [grid]
    3 v=-0.037067: -26.48 -25.67  21.81 -15.00 -15.00  30.00  [grid]
    4 v=-0.036248:  35.04 -34.68   9.39 -40.22 -24.26 -41.52  [rand]
    5 v=-0.033306: -26.48 -25.67  21.81  30.00 -15.00  30.00  [grid]
    6 v=-0.033074:  26.85 -25.67   8.48  30.00 -15.00 -30.00  [grid]
    7 v=-0.032957: -34.67 -34.68   9.39 -40.22 -24.26  41.52  [rand]
    8 v=-0.031379:  35.04 -34.68   9.39  40.22 -24.26 -41.52  [rand]
    9 v=-0.031003:  26.85 -25.67  21.81  30.00 -30.00 -30.00  [grid]
   10 v=-0.030406:  26.49 -24.96  12.93  15.82 -17.65 -37.25  [rand]
   11 v=-0.030130:  26.85 -12.34  21.81  30.00 -15.00 -30.00  [grid]
   12 v=-0.030109:  26.85 -25.67  21.81 -30.00 -15.00 -30.00  [grid]
   13 v=-0.029528: -31.65  12.79  -2.12 -23.31   3.26  40.47  [rand]
   14 v=-0.029322: -13.15  14.33  21.81  30.00  15.00  15.00  [grid]
   15 v=-0.028495:  34.51 -15.59   3.74  16.34  -8.64 -40.54  [rand]
   16 v=-0.028360: -26.48 -12.34   8.48 -30.00 -15.00  30.00  [grid]
   17 v=-0.028301: -26.12 -24.96  12.93 -15.82 -17.65  37.25  [rand]
   18 v=-0.028199: -26.48  14.33   8.48  15.00  15.00  30.00  [grid]
   19 v=-0.028178: -13.15 -25.67  21.81  30.00 -15.00  15.00  [grid]
   20 v=-0.027983: -34.14 -15.59   3.74 -16.34  -8.64  40.54  [rand]
   21 v=-0.027814:  13.52 -25.67  21.81  30.00 -15.00 -15.00  [grid]
   22 v=-0.027610: -22.28 -28.15  25.17  27.43 -11.56  19.13  [rand]
   23 v=-0.027501: -13.15  14.33   8.48  30.00  15.00  15.00  [grid]
   24 v=-0.027296: -13.15 -25.67  21.81 -30.00 -15.00  15.00  [grid]
   25 v=-0.027096: -13.15  27.66   8.48 -15.00  30.00  15.00  [grid]
   26 v=-0.027084: -15.96  10.46  19.49  20.99  15.73  16.09  [rand]
   27 v=-0.027058: -26.48  14.33  21.81  15.00  15.00  30.00  [grid]
   28 v=-0.027041:  10.51  29.81  10.15  30.67  17.79 -20.52  [rand]
   29 v=-0.027036: -13.15 -25.67  21.81 -15.00 -15.00  30.00  [grid]
   30 v=-0.026655: -22.28 -28.15  25.17 -27.43 -11.56  19.13  [rand]
   31 v=-0.026472:  13.52 -25.67   8.48  30.00 -15.00 -15.00  [grid]
   32 v=-0.026455: -26.48 -25.67   8.48  30.00 -15.00  30.00  [grid]
   33 v=-0.026447: -26.48 -25.67  21.81 -30.00 -15.00  30.00  [grid]
   34 v=-0.026347: -16.67 -17.59   9.60 -19.57 -37.09  16.59  [rand]
   35 v=-0.026079:  13.52 -12.34  21.81  30.00 -15.00 -30.00  [grid]
   36 v=-0.025924: -13.15  27.66   8.48 -30.00  30.00  15.00  [grid]
   37 v=-0.025870: -34.68 -29.56  10.91 -11.68 -29.04  39.38  [rand]
   38 v=-0.025790:   8.83  21.43  12.61  25.20  18.50 -13.54  [rand]
   39 v=-0.025626: -14.75  25.09  25.07 -19.13  33.53  22.48  [rand]
   40 v=-0.025371: -26.48 -25.67   8.48 -15.00 -15.00  30.00  [grid]
   41 v=-0.025179: -13.15  14.33   8.48  30.00  15.00  30.00  [grid]
   42 v=-0.025157:  -8.46  21.43  12.61  25.20  18.50  13.54  [rand]
   43 v=-0.024627: -15.11  21.88  25.53 -14.56  29.40  15.92  [rand]
   44 v=-0.024537: -26.48  14.33   8.48 -30.00  15.00  30.00  [grid]
*[#8004=-0.0492119] *[#8016=-0.0498165] *[#8080=-0.0518814] *[#8081=-0.0530537] *[#8082=-0.0537558] *[#8085=-0.0544013] *[#8087=-0.0545228] *[#8092=-0.0547716] *[#8094=-0.0550549] *[#8272=-0.0569321] *[#8275=-0.0592106] *[#8284=-0.0609745] *[#8287=-0.0610109] *[#8288=-0.0614346] *[#8290=-0.0629665]  + - costs of the above after a little optimization:
    0 v=-0.049816: -34.69 -34.58  13.19  40.33 -23.91  41.59  [rand]
    1 v=-0.048053: -26.77 -26.62   8.45 -28.10 -29.38  32.48  [grid]
    2 v=-0.055055:  25.43 -21.87  22.54  31.68 -18.77 -32.51  [grid]
    3 v=-0.039435: -26.63 -24.92  22.26 -14.81 -15.38  30.78  [grid]
    4 v=-0.037698:  34.92 -34.79   9.66 -39.64 -23.74 -41.46  [rand]
    5 v=-0.054588: -30.14 -25.28  20.83  30.86 -17.67  29.95  [grid]
    6 v=-0.044049:  26.50 -25.28  11.90  29.61 -15.50 -31.02  [grid]
    7 v=-0.047944: -31.26 -29.10  10.53 -38.78 -21.00  44.14  [rand]
  * 8 v=-0.062967:  34.14 -26.28   9.31  34.32 -26.11 -44.27  [rand]
    9 v=-0.051130:  26.22 -29.19  21.69  27.85 -23.39 -32.11  [grid]
   10 v=-0.049256:  21.96 -25.52  11.69  15.89 -17.06 -39.57  [rand]
   11 v=-0.054789:  25.11 -19.79  22.36  30.93 -17.19 -31.54  [grid]
   12 v=-0.043958:  25.00 -23.37  21.99 -31.99 -16.03 -27.47  [grid]
   13 v=-0.053705: -31.72  10.02  -2.00 -25.64   9.02  39.36  [rand]
   14 v=-0.033991: -12.95  10.55  21.05  29.89  15.30  16.03  [grid]
   15 v=-0.034949:  34.73 -16.48   4.54  25.57  -8.30 -40.22  [rand]
   16 v=-0.034760: -26.50 -12.02   6.53 -31.39 -14.90  30.27  [grid]
   17 v=-0.037242: -26.49 -24.35  13.23 -15.52 -16.83  41.79  [rand]
   18 v=-0.053142: -23.49  14.68   7.40  23.14  13.25  34.70  [grid]
   19 v=-0.041422: -17.35 -25.75  22.27  28.56 -17.16  15.12  [grid]
   20 v=-0.045028: -29.70 -16.37   9.55 -15.16 -10.74  43.25  [rand]
   21 v=-0.034723:  12.43 -21.33  21.20  30.40 -14.59 -14.39  [grid]
   22 v=-0.036634: -23.86 -27.78  26.70  25.57  -8.24  22.23  [rand]
   23 v=-0.036532: -14.58  16.94   6.97  29.01  14.69  14.51  [grid]
   24 v=-0.037124: -14.04 -24.60  25.09 -29.79 -15.71  14.51  [grid]
   25 v=-0.037046: -10.40  28.11   9.94 -20.35  31.09  14.43  [grid]
   26 v=-0.032167: -15.33  10.55  19.99  27.18  17.01  16.58  [rand]
   27 v=-0.036499: -29.69  13.41  21.55  15.18  15.30  30.46  [grid]
   28 v=-0.036956:   9.25  29.86   9.60  36.60  19.58 -19.58  [rand]
   29 v=-0.028702: -13.27 -25.28  21.83 -15.45 -15.21  30.21  [grid]
   30 v=-0.034834: -26.18 -27.88  23.61 -28.32 -11.35  19.43  [rand]
   31 v=-0.037539:  14.21 -25.08  13.10  30.43 -14.71 -14.80  [grid]
   32 v=-0.053185: -30.42 -29.48  16.81  28.63 -20.17  30.35  [grid]
   33 v=-0.047218: -28.58 -21.33  20.47 -30.87 -13.34  29.52  [grid]
   34 v=-0.033860: -16.41 -12.61  10.84 -18.23 -35.44  17.06  [rand]
   35 v=-0.047128:  18.21 -13.06  20.91  29.61 -14.35 -29.99  [grid]
   36 v=-0.032176: -12.17  27.26   9.55 -28.97  30.42  20.10  [grid]
   37 v=-0.041648: -34.56 -31.00  10.97 -10.89 -24.25  39.29  [rand]
   38 v=-0.034468:  10.18  21.51  11.10  24.71  23.34 -13.53  [rand]
   39 v=-0.037697: -15.02  20.31  24.82 -18.06  32.55  21.64  [rand]
   40 v=-0.040553: -30.53 -24.81   7.66 -16.03 -16.41  31.30  [grid]
   41 v=-0.038820: -18.45  14.53   8.76  30.05  14.81  32.79  [grid]
   42 v=-0.035519:  -9.25  21.38  12.43  30.20  18.60  13.07  [rand]
   43 v=-0.038611: -13.77  21.11  23.12  -8.00  30.87  16.12  [rand]
   44 v=-0.041919: -23.88  11.21   8.24 -36.88  13.01  30.26  [grid]
 + - save # 8 for twobest
 + - save # 2 for twobest
 + - skip #11 for twobest: too close to set # 2
 + - save # 5 for twobest
 + - save #13 for twobest
 + - save #32 for twobest
 + - save #18 for twobest
 + - save # 9 for twobest
 + - save # 0 for twobest
 + - save #10 for twobest
 + - save # 1 for twobest
 + - save # 7 for twobest
 + - save #33 for twobest
 + - save #35 for twobest
 + - save #20 for twobest
 + - save # 6 for twobest
 + - save #12 for twobest
 + - save #44 for twobest
 + - save #37 for twobest
 + - save #19 for twobest
 + - save #40 for twobest
 + - save # 3 for twobest
 + - save #41 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=74 usiz=187.5
 + - retaining old weight image
 + - using 22973 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 19703 total points stored in 198 'RHDD(13.7332)' bloks
 + - param set #1 has cost=-0.053872
 + -- Parameters = 34.3914 -27.5547 9.4477 34.0507 -20.8139 -42.1804 1.0014 1.0019 0.9994 0.0031 -0.0004 0.0021
 + - param set #2 has cost=-0.051065
 + -- Parameters = 25.9368 -22.2066 21.8042 30.9265 -18.5834 -31.7794 0.9999 1.0030 1.0202 0.0011 0.0023 0.0018
 + - param set #3 has cost=-0.043892
 + -- Parameters = -30.0899 -25.3160 21.0672 31.2232 -17.6661 30.1424 0.9999 1.0156 1.0000 0.0003 0.0001 0.0002
 + - param set #4 has cost=-0.045392
 + -- Parameters = -29.0892 8.8551 -0.9085 -27.1281 9.5656 38.5331 0.9963 1.0066 0.9919 0.0001 -0.0044 0.0014
 + - param set #5 has cost=-0.047428
 + -- Parameters = -30.7353 -30.3637 19.6725 27.3368 -19.3352 29.9341 1.0013 1.0000 1.0016 0.0005 0.0013 -0.0009
 + - param set #6 has cost=-0.040107
 + -- Parameters = -23.5449 14.7779 7.6104 22.9011 13.2985 34.7993 0.9995 0.9987 0.9997 -0.0000 0.0099 -0.0002
 + - param set #7 has cost=-0.051774
 + -- Parameters = 25.9885 -29.4097 21.5726 27.5376 -24.0387 -32.3039 1.0005 0.9995 1.0017 0.0012 0.0093 0.0008
 + - param set #8 has cost=-0.041676
 + -- Parameters = -35.3863 -33.9789 12.8071 39.1983 -24.0338 41.7860 0.9975 0.9978 0.9971 0.0098 0.0022 0.0008
 + - param set #9 has cost=-0.046479
 + -- Parameters = 25.7221 -24.1160 12.2008 15.7348 -18.6213 -44.2053 1.0068 0.9989 1.0021 -0.0021 0.0007 0.0001
 + - param set #10 has cost=-0.032063
 + -- Parameters = -26.5015 -27.8377 9.6694 -28.4423 -28.5311 32.6604 0.9998 1.0026 0.9994 -0.0007 0.0125 0.0012
 + - param set #11 has cost=-0.037674
 + -- Parameters = -31.0857 -28.8539 10.6683 -38.6885 -20.8125 43.6384 0.9996 0.9975 0.9988 0.0099 -0.0010 -0.0014
*[#10182=-0.181243] *[#10199=-0.203558] *[#10204=-0.216691] *[#10205=-0.228696] *[#10206=-0.233655] *[#10208=-0.234388] *[#10209=-0.236787] *[#10210=-0.238564] *[#10211=-0.239033] *[#10212=-0.239498] *[#10213=-0.2411] *[#10216=-0.242876] *[#10217=-0.244421] *[#10220=-0.24477] *[#10222=-0.245288] *[#10223=-0.245651] *[#10224=-0.246006] *[#10228=-0.246006] *[#10230=-0.246873] *[#10231=-0.247351] *[#10232=-0.2485] *[#10233=-0.249993] *[#10234=-0.2514] *[#10235=-0.252525] *[#10236=-0.252954] *[#10239=-0.255324] *[#10240=-0.25594] *[#10242=-0.256864] *[#10245=-0.25691] *[#10250=-0.257785] *[#10251=-0.258206] *[#10252=-0.259371] *[#10254=-0.259645] *[#10255=-0.259905] *[#10256=-0.260442] *[#10257=-0.260642] *[#10260=-0.261235] *[#10261=-0.261513] *[#10262=-0.261976] *[#10263=-0.26239] *[#10264=-0.262718] *[#10265=-0.262893] *[#10268=-0.263302] *[#10269=-0.263743] *[#10271=-0.264523] *[#10272=-0.264762] *[#10275=-0.266436] 
 + - param set #12 has cost=-0.266436
 + -- Parameters = -0.3077 0.0981 -0.5574 -0.1601 -0.2173 0.0853 0.9956 1.0255 0.9844 -0.0042 0.0036 0.0044
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.47 
 + --- dist(#3,#1) = 0.369 
 + --- dist(#4,#1) = 0.354 
 + --- dist(#5,#1) = 0.381 
 + --- dist(#6,#1) = 0.492 
 + --- dist(#7,#1) = 0.427 
 + --- dist(#8,#1) = 0.372 
 + --- dist(#9,#1) = 0.463 
 + --- dist(#10,#1) = 0.386 
 + --- dist(#11,#1) = 0.484 
 + --- dist(#12,#1) = 0.362 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=74 usiz=187.5
 + - retaining old weight image
 + - using 22973 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 20024 total points stored in 209 'RHDD(13.5933)' bloks
*[#10279=-0.268642] *[#10287=-0.270875] *[#10298=-0.272192] *[#10300=-0.27361] *[#10312=-0.277339] *[#10316=-0.278763] *[#10321=-0.279335] *[#10322=-0.279561] *[#10324=-0.27967] *[#10329=-0.280621] *[#10336=-0.280836] *[#10340=-0.28096] *[#10341=-0.281083] *[#10342=-0.281114] *[#10345=-0.281241] *[#10346=-0.28137] *[#10347=-0.281495] *[#10348=-0.281669] *[#10350=-0.281707] *[#10353=-0.282062] *[#10354=-0.282118] *[#10355=-0.282237] *[#10356=-0.282303] *[#10359=-0.282351] *[#10368=-0.282418] *[#10371=-0.282517] *[#10372=-0.282628] *[#10375=-0.282635] *[#10377=-0.282741] 
 + - param set #1 has cost=-0.282741
 + -- Parameters = -0.3771 0.6214 -0.6483 -0.1986 -0.7780 0.2052 0.9944 1.0445 0.9647 -0.0003 0.0050 0.0022
 + - param set #2 has cost=-0.044183
 + -- Parameters = 34.1618 -28.1404 10.1963 33.5849 -21.8159 -41.9737 1.0007 1.0048 1.0005 0.0039 0.0006 0.0119
 + - param set #3 has cost=-0.043733
 + -- Parameters = 26.4817 -30.0260 21.0777 27.9515 -24.3533 -33.2072 0.9904 0.9903 1.0084 0.0016 0.0104 0.0013
 + - param set #4 has cost=-0.039478
 + -- Parameters = 25.8917 -22.0039 21.8069 30.8000 -18.7497 -31.8812 0.9997 1.0020 1.0204 0.0010 0.0023 0.0014
 + - param set #5 has cost=-0.037043
 + -- Parameters = -31.1783 -30.3083 19.6783 27.1334 -19.4060 29.8856 1.0013 1.0000 0.9998 0.0002 0.0067 -0.0009
 + - param set #6 has cost=-0.037537
 + -- Parameters = 26.0887 -23.9812 12.4139 15.6080 -18.5744 -44.0177 1.0064 0.9978 1.0022 -0.0017 0.0081 0.0004
 + - param set #7 has cost=-0.040673
 + -- Parameters = -29.2999 7.3734 -2.3969 -30.4032 7.8038 36.8651 0.9691 0.9736 0.9677 0.0105 0.0299 0.0070
 + - param set #8 has cost=-0.035041
 + -- Parameters = -30.0128 -25.3960 21.2626 31.3911 -17.5600 30.3741 1.0007 1.0154 0.9975 0.0067 0.0009 0.0011
 + - param set #9 has cost=-0.033233
 + -- Parameters = -35.4308 -33.8048 12.9347 39.1130 -24.1155 41.8082 0.9973 0.9986 0.9978 0.0162 0.0021 0.0006
 + - param set #10 has cost=-0.035941
 + -- Parameters = -22.7306 14.7181 7.4730 22.7833 12.6614 34.0953 0.9998 0.9982 0.9975 -0.0020 0.0188 0.0008
 + - param set #11 has cost=-0.030257
 + -- Parameters = -31.1336 -28.8988 10.8220 -38.3676 -20.8757 43.1990 1.0000 0.9911 1.0108 0.0108 -0.0005 -0.0009
 + - param set #12 has cost=-0.028954
 + -- Parameters = -26.6974 -28.3994 12.0810 -28.4998 -29.8159 33.8551 0.9975 1.0032 0.9919 -0.0026 0.0105 0.0016
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.469 
 + --- dist(#3,#1) = 0.383 
 + --- dist(#4,#1) = 0.407 
 + --- dist(#5,#1) = 0.357 
 + --- dist(#6,#1) = 0.491 
 + --- dist(#7,#1) = 0.387 
 + --- dist(#8,#1) = 0.377 
 + --- dist(#9,#1) = 0.37 
 + --- dist(#10,#1) = 0.462 
 + --- dist(#11,#1) = 0.478 
 + --- dist(#12,#1) = 0.374 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=74 usiz=187.5
 + - retaining old weight image
 + - using 22973 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 20254 total points stored in 218 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.271348
 + -- Parameters = -0.3818 0.6090 -0.9295 -0.2232 -1.1175 0.0109 0.9984 1.0433 0.9568 0.0020 0.0038 -0.0087
 + - param set #2 has cost=-0.037022
 + -- Parameters = 34.0925 -28.5487 10.4419 33.6339 -21.8606 -41.5281 1.0015 0.9982 1.0047 0.0031 -0.0074 0.0199
 + - param set #3 has cost=-0.035816
 + -- Parameters = 26.6422 -29.9904 21.1081 27.8893 -24.1335 -33.3870 0.9900 0.9901 1.0085 0.0059 0.0101 0.0015
 + - param set #4 has cost=-0.032873
 + -- Parameters = -29.6778 6.6910 -2.8630 -31.5078 8.0185 37.5863 0.9673 0.9701 0.9553 0.0095 0.0345 0.0117
 + - param set #5 has cost=-0.031884
 + -- Parameters = 26.2697 -22.1637 22.1334 30.7543 -18.1362 -32.0631 1.0029 1.0031 1.0123 0.0074 0.0035 -0.0006
 + - param set #6 has cost=-0.032409
 + -- Parameters = 26.4746 -24.1774 11.9910 15.4347 -18.6261 -44.0956 1.0081 1.0106 1.0047 -0.0031 0.0074 0.0015
 + - param set #7 has cost=-0.028160
 + -- Parameters = -31.2699 -30.4088 19.1477 26.1938 -18.7931 30.6883 1.0051 1.0055 0.9927 0.0019 0.0058 -0.0011
 + - param set #8 has cost=-0.029876
 + -- Parameters = -22.6634 14.7171 7.3356 22.6246 12.2423 34.0238 0.9978 0.9945 1.0052 0.0001 0.0227 0.0014
 + - param set #9 has cost=-0.027010
 + -- Parameters = -30.0669 -25.4160 21.2377 31.4898 -17.3627 30.5238 0.9933 1.0146 0.9966 0.0077 0.0015 0.0024
 + - param set #10 has cost=-0.034366
 + -- Parameters = -34.9870 -30.4562 12.9211 34.2898 -22.9848 39.5227 0.9408 0.9935 0.9793 0.0132 0.0075 0.0043
 + - param set #11 has cost=-0.025776
 + -- Parameters = -31.4306 -28.7901 10.7265 -36.5003 -21.1683 43.0892 1.0004 0.9884 1.0095 0.0109 -0.0012 -0.0007
 + - param set #12 has cost=-0.025319
 + -- Parameters = -26.8275 -28.7322 12.4927 -28.3834 -29.8738 33.3575 0.9963 0.9953 0.9994 0.0044 0.0223 0.0256
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.462 
 + --- dist(#3,#1) = 0.382 
 + --- dist(#4,#1) = 0.439 
 + --- dist(#5,#1) = 0.418 
 + --- dist(#6,#1) = 0.49 
 + --- dist(#7,#1) = 0.356 
 + --- dist(#8,#1) = 0.378 
 + --- dist(#9,#1) = 0.388 
 + --- dist(#10,#1) = 0.371 
 + --- dist(#11,#1) = 0.479 
 + --- dist(#12,#1) = 0.371 
 + - Total coarse refinement net CPU time = 0.0 s; 2752 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=74 usiz=187.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 20238 total points stored in 218 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.264466 *
 + -- Parameters = -0.3818 0.6090 -0.9295 -0.2232 -1.1175 0.0109 0.9984 1.0433 0.9568 0.0020 0.0038 -0.0087
 + - cost(#2)=-0.031203  
 + -- Parameters = 34.0925 -28.5487 10.4419 33.6339 -21.8606 -41.5281 1.0015 0.9982 1.0047 0.0031 -0.0074 0.0199
 + - cost(#3)=-0.031808  
 + -- Parameters = 26.6422 -29.9904 21.1081 27.8893 -24.1335 -33.3870 0.9900 0.9901 1.0085 0.0059 0.0101 0.0015
 + - cost(#4)=-0.030213  
 + -- Parameters = -34.9870 -30.4562 12.9211 34.2898 -22.9848 39.5227 0.9408 0.9935 0.9793 0.0132 0.0075 0.0043
 + - cost(#5)=-0.028685  
 + -- Parameters = -29.6778 6.6910 -2.8630 -31.5078 8.0185 37.5863 0.9673 0.9701 0.9553 0.0095 0.0345 0.0117
 + - cost(#6)=-0.030376  
 + -- Parameters = 26.4746 -24.1774 11.9910 15.4347 -18.6261 -44.0956 1.0081 1.0106 1.0047 -0.0031 0.0074 0.0015
 + - cost(#7)=-0.026053  
 + -- Parameters = 26.2697 -22.1637 22.1334 30.7543 -18.1362 -32.0631 1.0029 1.0031 1.0123 0.0074 0.0035 -0.0006
 + - cost(#8)=-0.027099  
 + -- Parameters = -22.6634 14.7171 7.3356 22.6246 12.2423 34.0238 0.9978 0.9945 1.0052 0.0001 0.0227 0.0014
 + - cost(#9)=-0.024064  
 + -- Parameters = -31.2699 -30.4088 19.1477 26.1938 -18.7931 30.6883 1.0051 1.0055 0.9927 0.0019 0.0058 -0.0011
 + - cost(#10)=-0.024743  
 + -- Parameters = -30.0669 -25.4160 21.2377 31.4898 -17.3627 30.5238 0.9933 1.0146 0.9966 0.0077 0.0015 0.0024
 + - cost(#11)=-0.022588  
 + -- Parameters = -31.4306 -28.7901 10.7265 -36.5003 -21.1683 43.0892 1.0004 0.9884 1.0095 0.0109 -0.0012 -0.0007
 + - cost(#12)=-0.021316  
 + -- Parameters = -26.8275 -28.7322 12.4927 -28.3834 -29.8738 33.3575 0.9963 0.9953 0.9994 0.0044 0.0223 0.0256
 + - cost(#13)=-0.028869  
 + -- Parameters = 0.1853 0.9963 -4.8574 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.266856 *
 + -- Parameters = -0.4156 0.5267 -0.9747 -0.3018 -1.2077 0.1490 0.9959 1.0438 0.9613 -0.0027 0.0010 -0.0149
 + - cost(#2)=-0.032007  
 + -- Parameters = 34.1988 -28.7544 10.7303 33.4008 -22.0577 -41.4356 1.0028 0.9899 1.0046 0.0033 -0.0079 0.0193
 + - cost(#3)=-0.034518  
 + -- Parameters = 27.0191 -31.2050 19.3913 28.3802 -24.0153 -33.3079 0.9881 0.9900 1.0075 0.0056 0.0104 0.0002
 + - cost(#4)=-0.031432  
 + -- Parameters = -34.9059 -30.2201 12.8052 34.4935 -22.8903 39.8589 0.9459 0.9929 0.9737 0.0138 0.0121 0.0108
 + - cost(#5)=-0.030082  
 + -- Parameters = -29.6459 7.0694 -3.0651 -31.4226 8.0761 37.9640 0.9671 0.9691 0.9516 0.0099 0.0374 0.0052
 + - cost(#6)=-0.031312  
 + -- Parameters = 26.0470 -24.3428 12.0266 15.3902 -18.8452 -43.9211 1.0091 1.0067 1.0147 -0.0028 0.0055 0.0033
 + - cost(#7)=-0.026692  
 + -- Parameters = 26.3165 -22.1066 22.2940 30.8260 -17.9450 -31.7510 1.0059 1.0031 1.0149 0.0082 0.0013 0.0024
 + - cost(#8)=-0.028054  
 + -- Parameters = -22.7862 14.5187 7.2016 22.7045 12.2335 33.7196 0.9980 0.9955 1.0098 -0.0010 0.0241 0.0013
 + - cost(#9)=-0.025371  
 + -- Parameters = -31.4391 -30.4425 19.4179 26.4771 -18.5157 31.1859 1.0051 1.0155 0.9929 0.0010 0.0067 -0.0022
 + - cost(#10)=-0.025838  
 + -- Parameters = -30.2727 -25.7284 21.2364 31.6622 -17.2256 30.9149 0.9963 1.0111 0.9956 0.0073 0.0029 0.0066
 + - cost(#11)=-0.023103  
 + -- Parameters = -31.4159 -28.9247 10.8683 -36.4934 -21.2847 43.1161 1.0012 0.9866 1.0111 0.0119 -0.0012 0.0035
 + - cost(#12)=-0.021614  
 + -- Parameters = -26.9186 -28.8293 12.4862 -28.4611 -29.7578 33.3238 0.9977 0.9951 0.9984 0.0017 0.0222 0.0257
 + - cost(#13)=-0.250694  
 + -- Parameters = -0.4383 -0.0632 -1.0327 -0.3397 1.3861 -0.0457 0.9907 1.0170 0.9888 -0.0105 0.0071 0.0213
 + - case #1 is now the best
 + - Initial  cost = -0.266856
 + - Initial fine Parameters = -0.4156 0.5267 -0.9747 -0.3018 -1.2077 0.1490 0.9959 1.0438 0.9613 -0.0027 0.0010 -0.0149
 + - Finalish cost = -0.267359 ; 201 funcs
 + - Final    cost = -0.267397 ; 151 funcs
 + Final fine fit Parameters:
       x-shift=-0.4369   y-shift= 0.5439   z-shift=-0.9663
       z-angle=-0.3291   x-angle=-1.3545   y-angle= 0.1220
       x-scale= 0.9958   y-scale= 1.0450   z-scale= 0.9649
     y/x-shear=-0.0039 z/x-shear= 0.0014 z/y-shear=-0.0185
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.4369 0.5439 -0.9663 -0.3291 -1.3545 0.1220 0.9958 1.0450 0.9649 -0.0039 0.0014 -0.0185
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 20.0
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 15.300002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0030 -1.0086 0.2308 226.1279 0.0028 0.2724 0.9374 60.1274 -0.9958 -0.0058 0.0021 197.8830
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.4 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2994.070100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 81.9608 46.4718   ITER = 8/137
81.9608

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 829ms]
lev=0 0..171 0..213 0..166: [first cost=-0.66482] ... done [cost:-0.66482==>-0.73817]
lev=1 patch=129x161x125 [clock= 13m 37s 623ms]........:[cost=-0.77135]:........ done [cost:-0.73817==>-0.77565 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 21m 47s 665ms]......................... done [cost:-0.77565==>-0.84824 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 28m 17s 30ms].................. done [cost:-0.84824==>-0.90878 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 33m 3s 704ms]............. done [cost:-0.90878==>-0.95348 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 36m 55s 180ms]................ done [cost:-0.95348==>-1.03650 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 40m 34s 341ms]................. done [cost:-1.03650==>-1.08654 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 44m 1s 780ms].................................. done [cost:-1.08654==>-1.16663 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 47m 45s 368ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1313/tb1313.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 8.8 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb1313.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.300002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb1313.r01.tshift+orig.BRIK is 15.300002 degrees from plumb.
++ Reading input dataset ./pb01.tb1313.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 24871 voxels
 + 4252 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.477  pitch=-0.383  yaw=-0.475  dS=-0.192  dL=-0.214  dP=-0.137
++ Mean: roll=-0.248  pitch=-0.107  yaw=-0.169  dS=+0.215  dL=-0.058  dP=+0.048
++ Max : roll=+0.035  pitch=+0.296  yaw=+0.097  dS=+0.589  dL=+0.122  dP=+0.178
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.41(0.41) 0.31(0.15) 0.23(0.12) 0.24(0.05) 0.23(0.08) 0.27(0.06) 0.32(0.05) 0.30(0.06) 0.27(0.04) 0.22(0.05) 0.18(0.08) 0.14(0.10) 0.10(0.07) 0.18(0.11) 0.30(0.12) 0.31(0.05) 0.36(0.06) 0.40(0.06) 0.41(0.10) 0.44(0.04) 0.47(0.12) 0.53(0.10) 0.46(0.22) 0.62(0.27) 0.70(0.10) 0.67(0.06) 0.67(0.05) 0.67(0.05) 0.72(0.07) 0.74(0.02) 0.78(0.06) 0.81(0.04) 0.76(0.06) 0.76(0.04) 0.82(0.06) 0.83(0.04) 0.91(0.11) 0.92(0.02) 0.32(0.65) 0.27(0.20) 0.40(0.31) 0.53(0.15) 0.57(0.05) 0.55(0.09) 0.54(0.09) 0.38(0.48) 0.47(0.22) 0.38(0.46) 0.68(0.66) 0.46(0.26) 0.45(0.36) 0.50(0.15) 0.47(0.14) 0.52(0.06) 0.58(0.08) 0.60(0.07) 0.60(0.04) 0.63(0.12) 0.71(0.10) 0.76(0.09) 0.77(0.08) 0.81(0.08) 0.83(0.10) 0.84(0.06) 0.88(0.06) 0.91(0.04) 0.93(0.03) 0.93(0.05) 0.69(0.44) 0.68(0.32) 0.66(0.59) 0.67(0.05) 0.68(0.06) 0.70(0.04) 0.73(0.05) 0.75(0.06) 0.79(0.05) 0.83(0.06) 0.87(0.08) 0.78(0.14) 0.59(0.22) 0.68(0.19) 0.55(0.40) 0.49(0.22) 0.62(0.50) 0.69(0.15) 0.73(0.04) 0.81(0.10) 0.89(0.08) 0.89(0.18) 0.95(0.08) 0.93(0.06) 0.99(0.10) 1.01(0.07) 1.05(0.06) 1.07(0.07) 1.09(0.07) 1.07(0.04) 1.06(0.06) 1.14(0.09) 1.10(0.08) 1.07(0.13) 1.08(0.03) 1.10(0.08) 1.06(0.05) 1.10(0.18) 0.85(1.16) 0.84(0.15) 0.89(0.33) 0.71(0.36) 0.78(0.16) 0.87(0.20) 0.84(0.24) 0.86(0.08) 0.87(0.05) 0.80(0.06) 0.84(0.05) 0.88(0.05) 0.84(0.07) 0.84(0.04) 0.78(0.19) 0.84(0.14) 0.93(0.09) 0.94(0.26) 1.06(0.29) 1.01(0.31) 0.99(0.08) 0.99(0.08) 0.98(0.08) 1.08(0.16) 1.13(0.07) 1.14(0.04) 1.03(0.11) 1.10(0.08) 1.02(0.11) 1.08(0.63) 1.08(0.45) 1.06(0.20) 1.07(0.07) 1.08(0.09) 0.82(0.43) 0.76(0.33) 0.83(0.21) 0.83(0.30) 0.78(0.28) 0.81(0.07) 0.87(0.07) 0.98(0.23) 0.86(0.18)
++ Max displacement in automask = 1.14 (mm) at sub-brick 132
++ Max delta displ  in automask = 1.16 (mm) at sub-brick 107
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb1313.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb1313.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb1313.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb1313.r01.tshift+orig.BRIK is 15.300002 degrees from plumb.
++ Source dataset: ./pb01.tb1313.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.0
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.300002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb1313.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.300002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb1313.r02.tshift+orig.BRIK is 15.300002 degrees from plumb.
++ Reading input dataset ./pb01.tb1313.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 25020 voxels
 + 4309 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.877  pitch=+0.272  yaw=-1.248  dS=-2.097  dL=-0.467  dP=-0.461
++ Mean: roll=-0.649  pitch=+0.478  yaw=-0.659  dS=-0.316  dL=-0.265  dP=-0.306
++ Max : roll=-0.317  pitch=+3.879  yaw=-0.345  dS=+0.114  dL=-0.046  dP=+0.105
++ Max displacements (mm) for each sub-brick:
 1.32(0.00) 1.40(0.33) 1.35(0.07) 1.36(0.03) 1.37(0.03) 1.36(0.04) 1.35(0.13) 1.34(0.18) 1.30(0.09) 1.26(0.04) 1.27(0.05) 1.37(0.47) 1.24(0.31) 1.24(0.17) 1.26(0.03) 1.25(0.04) 1.24(0.03) 1.24(0.03) 1.23(0.04) 1.20(0.04) 1.19(0.03) 1.22(0.04) 1.25(0.08) 1.24(0.02) 1.25(0.03) 1.23(0.05) 1.23(0.03) 1.21(0.03) 1.20(0.02) 1.21(0.02) 1.22(0.02) 1.23(0.02) 1.24(0.09) 1.60(0.88) 1.64(0.09) 1.40(0.46) 1.35(0.10) 1.32(0.08) 1.32(0.04) 1.32(0.03) 1.35(0.06) 1.37(0.06) 1.40(0.07) 1.43(0.07) 1.49(0.07) 1.52(0.04) 1.49(0.03) 1.50(0.02) 1.50(0.01) 1.51(0.04) 1.50(0.01) 1.52(0.04) 1.51(0.01) 1.52(0.02) 1.52(0.04) 1.57(0.06) 1.55(0.04) 1.54(0.04) 1.60(0.32) 1.58(0.22) 1.57(0.05) 1.58(0.13) 1.59(0.15) 1.66(0.32) 1.80(0.44) 1.64(0.44) 1.63(0.10) 1.59(0.09) 1.62(0.09) 1.63(0.04) 1.65(0.04) 1.66(0.02) 1.67(0.04) 1.68(0.03) 1.69(0.04) 1.68(0.16) 1.55(0.22) 1.51(0.10) 1.59(0.20) 1.59(0.25) 1.63(0.23) 1.68(0.09) 1.71(0.08) 1.72(0.07) 1.74(0.06) 1.74(0.02) 1.75(0.06) 1.75(0.04) 1.76(0.04) 1.81(0.08) 1.80(0.04) 1.80(0.08) 1.80(0.07) 1.82(0.03) 1.83(0.04) 1.83(0.04) 1.87(0.06) 1.90(0.12) 1.87(0.04) 1.86(0.11) 1.88(0.05) 1.89(0.03) 1.83(0.08) 2.01(0.44) 2.12(0.17) 1.86(0.38) 1.89(0.10) 1.91(0.17) 1.93(0.04) 3.50(2.19) 6.03(2.89) 8.16(2.21) 5.18(3.39) 3.15(2.13) 2.69(0.62) 2.74(0.28) 2.74(0.06) 2.67(0.11) 2.72(0.15) 2.74(0.06) 2.79(0.11) 2.79(0.03) 2.75(0.10) 2.75(0.05) 2.71(0.06) 2.75(0.13) 2.74(0.07) 2.73(0.06) 2.80(0.09) 2.78(0.09) 2.81(0.10) 2.85(0.06) 2.86(0.05) 2.87(0.09) 2.80(0.08) 2.84(0.07) 2.80(0.18) 2.66(0.29) 2.67(0.14) 2.66(0.11) 2.67(0.07) 2.44(0.25) 2.34(0.16) 2.29(0.10) 2.38(0.32) 2.28(0.21) 2.21(0.09) 2.23(0.13) 2.15(0.17) 2.15(0.08)
++ Max displacement in automask = 8.16 (mm) at sub-brick 111
++ Max delta displ  in automask = 3.39 (mm) at sub-brick 112
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb1313.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb1313.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb1313.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb1313.r02.tshift+orig.BRIK is 15.300002 degrees from plumb.
++ Source dataset: ./pb01.tb1313.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.300002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb1313.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.300002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb1313.r03.tshift+orig.BRIK is 15.300002 degrees from plumb.
++ Reading input dataset ./pb01.tb1313.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 24978 voxels
 + 4301 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.488  pitch=+0.599  yaw=-0.528  dS=-2.109  dL=-0.490  dP=-0.738
++ Mean: roll=-0.275  pitch=+1.005  yaw=-0.349  dS=-0.550  dL=-0.337  dP=-0.545
++ Max : roll=+0.024  pitch=+1.798  yaw=-0.098  dS=-0.357  dL=+0.060  dP=-0.054
++ Max displacements (mm) for each sub-brick:
 2.97(0.00) 3.36(0.48) 3.23(0.18) 3.06(0.20) 2.99(0.08) 2.92(0.09) 2.96(0.06) 2.94(0.05) 2.88(0.09) 2.74(0.18) 2.63(0.11) 2.69(0.16) 2.99(0.34) 2.63(0.41) 2.52(0.11) 2.48(0.07) 2.44(0.06) 2.42(0.06) 2.44(0.06) 2.44(0.02) 2.41(0.03) 2.35(0.07) 2.32(0.04) 2.28(0.05) 2.30(0.08) 2.29(0.06) 2.68(0.41) 2.56(0.21) 2.42(0.15) 2.44(0.07) 2.38(0.11) 2.33(0.05) 2.35(0.08) 2.35(0.07) 2.32(0.12) 2.23(0.11) 2.24(0.05) 2.20(0.06) 2.17(0.05) 2.21(0.12) 2.20(0.04) 2.18(0.05) 2.16(0.08) 2.11(0.06) 2.08(0.05) 2.42(0.34) 2.39(0.08) 2.28(0.11) 2.27(0.06) 2.19(0.09) 2.19(0.03) 2.17(0.02) 2.18(0.04) 2.17(0.02) 2.16(0.04) 2.13(0.06) 2.14(0.04) 2.15(0.06) 2.14(0.03) 2.16(0.04) 2.19(0.05) 2.27(0.14) 2.18(0.13) 2.17(0.06) 2.19(0.05) 2.17(0.03) 2.17(0.02) 2.15(0.05) 2.12(0.07) 2.27(0.19) 2.18(0.14) 2.16(0.04) 2.26(0.10) 2.39(0.21) 2.14(0.31) 2.10(0.05) 2.08(0.03) 2.09(0.07) 2.12(0.08) 2.12(0.08) 2.11(0.06) 2.09(0.07) 2.05(0.55) 1.98(0.18) 2.04(0.18) 2.09(0.14) 2.09(0.04) 2.04(0.07) 2.06(0.09) 2.11(0.08) 2.12(0.08) 2.14(0.11) 2.14(0.04) 2.15(0.03) 2.13(0.06) 2.23(0.20) 2.46(0.30) 2.74(0.35) 2.23(0.58) 2.30(0.10) 2.21(0.10) 2.19(0.05) 2.22(0.06) 2.30(0.23) 2.21(0.12) 2.24(0.04) 2.26(0.10) 2.24(0.08) 2.17(0.10) 2.09(0.12) 2.09(0.12) 2.10(0.04) 2.08(0.05) 2.08(0.04) 2.10(0.02) 2.09(0.02) 2.06(0.05) 2.08(0.04) 2.10(0.04) 2.08(0.03) 2.08(0.03) 2.11(0.06) 2.47(0.45) 2.71(0.26) 2.32(0.44) 2.24(0.12) 2.23(0.11) 2.26(0.12) 2.36(0.11) 2.30(0.09) 2.31(0.07) 2.25(0.06) 2.22(0.10) 2.24(0.03) 2.24(0.03) 2.25(0.04) 2.27(0.04) 2.25(0.07) 2.25(0.06) 2.25(0.07) 2.12(0.19) 3.82(2.54) 3.65(0.78) 2.41(1.47) 2.32(0.43) 1.96(0.48) 2.02(0.39) 2.08(0.16) 1.95(0.14) 1.88(0.08)
++ Max displacement in automask = 3.82 (mm) at sub-brick 141
++ Max delta displ  in automask = 2.54 (mm) at sub-brick 141
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb1313.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb1313.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb1313.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb1313.r03.tshift+orig.BRIK is 15.300002 degrees from plumb.
++ Source dataset: ./pb01.tb1313.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.300002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb1313.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb1313.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb1313.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb1313.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb1313.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb1313.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.300002 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb1313
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb1313+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb1313+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1160047 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 268584 voxels [63.0%] in weight mask
++ Number of points for matching = 126234
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.115012
   sp   = 0.349545
   mi   = -0.486462
   crM  = 0.0349555
   nmi  = 0.833301
   je   = 2.43173
   hel  = -0.0982823
   crA  = 0.187267
   crU  = 0.197923
   lss  = 0.884988
   lpc  = 0.347404
   lpa  = 0.652596
   lpc+ = 0.481623
   ncd  = 0.999544
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.4
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb1313+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb1313+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 34.5 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb1313.r01.blur pb02.tb1313.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb1313.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb1313.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb1313.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb1313.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb1313.r02.blur pb02.tb1313.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb1313.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb1313.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb1313.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb1313.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb1313.r03.blur pb02.tb1313.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb1313.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb1313.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb1313.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb1313.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb1313.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb1313.r01.blur+orig
++ Forming automask
 + Fixed clip level = 398.983398
 + Used gradual clip level = 318.461731 .. 460.478271
 + Number voxels above clip level = 41673
 + Clustering voxels ...
 + Largest cluster has 41625 voxels
 + Clustering voxels ...
 + Largest cluster has 41605 voxels
 + Filled    30 voxels in small holes; now have 41635 voxels
 + Clustering voxels ...
 + Largest cluster has 41635 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 384640 voxels
 + Mask now has 41635 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 377931 voxels
++ 48344 voxels in the mask [out of 426275: 11.34%]
++ first  17 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  26 y-planes are zero [from I]
++ last   16 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb1313.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb1313.r02.blur+orig
++ Forming automask
 + Fixed clip level = 401.441650
 + Used gradual clip level = 319.917389 .. 463.019379
 + Number voxels above clip level = 41817
 + Clustering voxels ...
 + Largest cluster has 41765 voxels
 + Clustering voxels ...
 + Largest cluster has 41730 voxels
 + Filled    27 voxels in small holes; now have 41757 voxels
 + Clustering voxels ...
 + Largest cluster has 41757 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 384518 voxels
 + Mask now has 41757 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 377762 voxels
++ 48513 voxels in the mask [out of 426275: 11.38%]
++ first  17 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  26 y-planes are zero [from I]
++ last   16 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb1313.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb1313.r03.blur+orig
++ Forming automask
 + Fixed clip level = 402.034973
 + Used gradual clip level = 320.067566 .. 463.329742
 + Number voxels above clip level = 41868
 + Clustering voxels ...
 + Largest cluster has 41804 voxels
 + Clustering voxels ...
 + Largest cluster has 41758 voxels
 + Filled    30 voxels in small holes; now have 41788 voxels
 + Clustering voxels ...
 + Largest cluster has 41788 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 384487 voxels
 + Mask now has 41788 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 377734 voxels
++ 48541 voxels in the mask [out of 426275: 11.39%]
++ first  17 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  26 y-planes are zero [from I]
++ last   16 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb1313
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 48634 survived, 377641 were zero
++ writing result full_mask.tb1313...
3dresample -master full_mask.tb1313+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb1313
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 45508 survived, 380767 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb1313...
3dABoverlap -no_automask full_mask.tb1313+orig mask_anat.tb1313+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb1313+orig.BRIK  B=./mask_anat.tb1313+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
48634        45508        51738        42404        6230         3104         12.8100      6.8208     0.8458     0.9856     0.9326
3ddot -dodice full_mask.tb1313+orig mask_anat.tb1313+orig
tee out.mask_ae_dice.txt
0.900852	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb1313
total number of censored TRs (simple form) = 29
1deval -a motion_tb1313_censor.1D -b outcount_tb1313_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb1313_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb1313.r01.blur+orig.HEAD pb03.tb1313.r02.blur+orig.HEAD pb03.tb1313.r03.blur+orig.HEAD -censor censor_tb1313_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb1313 -errts errts.tb1313 -bucket stats.tb1313
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb1313.r01.blur+orig.HEAD pb03.tb1313.r02.blur+orig.HEAD pb03.tb1313.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 41732 voxels (out of 426275 = 9.8%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 419 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb1313.r01.blur+orig.HEAD pb03.tb1313.r02.blur+orig.HEAD pb03.tb1313.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb1313_REML -Rvar stats.tb1313_REMLvar \
 -Rfitts fitts.tb1313_REML -Rerrts errts.tb1313_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (419x24):  4.18542  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (419x6):  1.03695  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (419x18):  3.39125  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (419x6):  2.68833  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (419x12):  1.10385  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.62986e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.14 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.624
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.643
++ Job #3: processing voxels 127881 to 170507; elapsed time=5.662
++ Job #4: processing voxels 170508 to 213134; elapsed time=5.682
++ Job #5: processing voxels 213135 to 255761; elapsed time=5.702
++ Job #6: processing voxels 255762 to 298388; elapsed time=5.733
++ Job #7: processing voxels 298389 to 341015; elapsed time=5.761
++ Job #8: processing voxels 341016 to 383642; elapsed time=5.781
++ Job #0: processing voxels 0 to 42626; elapsed time=5.805
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=5.811
0123456789.0123456789.0123456789.0123++ Job #6 finished; elapsed time=31.801
45++ Job #5 finished; elapsed time=33.114
++ Job #1 finished; elapsed time=33.370
++ Job #8 finished; elapsed time=33.587
6++ Job #2 finished; elapsed time=33.740
++ Job #7 finished; elapsed time=33.975
789.0123++ Job #4 finished; elapsed time=36.497
++ Job #3 finished; elapsed time=36.499
456789.
++ Job #0 waiting for children to finish; elapsed time=37.689
++ Job #9 finished; elapsed time=37.692
++ Job #0 now finishing up; elapsed time=37.703
++ Smallest FDR q [0 Full_Fstat] = 2.85056e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 5.56325e-11
++ Smallest FDR q [3 uns1_Fstat] = 5.56275e-11
++ Smallest FDR q [5 uns2#0_Tstat] = 8.66715e-13
++ Smallest FDR q [6 uns2_Fstat] = 8.66715e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 3.86705e-13
++ Smallest FDR q [9 uns3_Fstat] = 3.86585e-13
++ Smallest FDR q [11 str1#0_Tstat] = 9.2157e-12
++ Smallest FDR q [12 str1_Fstat] = 9.2135e-12
++ Smallest FDR q [14 str2#0_Tstat] = 1.00183e-12
++ Smallest FDR q [15 str2_Fstat] = 1.00208e-12
++ Smallest FDR q [17 str3#0_Tstat] = 2.64765e-13
++ Smallest FDR q [18 str3_Fstat] = 2.64742e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 8.25783e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 8.25783e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 8.03922e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 8.04077e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 7.56311e-07
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 7.56364e-07
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.000136848
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.00013684
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 2.84785e-09
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 2.84785e-09
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 0.000528234
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 0.000528162
++ Wrote bucket dataset into ./stats.tb1313+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb1313+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb1313+orig.BRIK
++ Program finished; elapsed time=61.028
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.748       0.810  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.716       0.783  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.705       0.772  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.496       0.573  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.481       0.558  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.458       0.534  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb1313.r01.blur+orig.HEAD pb03.tb1313.r02.blur+orig.HEAD pb03.tb1313.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb1313_REML -Rvar stats.tb1313_REMLvar -Rfitts fitts.tb1313_REML -Rerrts errts.tb1313_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 41732 voxels (out of 426275 = 9.8%)
++ -----  matrix condition (419x24):  4.18542  ++ VERY GOOD ++
 + masked off 249480 voxels for being all zero; 176795 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 319 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=38.52
 + X matrix: 46.649% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=419 cols=24; 109*1 cases; total CPU=0.00 Elapsed=38.55
 +  average case bandwidth = 11.81
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=102.59
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=144.11
++ Output dataset ./stats.tb1313_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb1313_REML+orig.BRIK
++ Output dataset ./errts.tb1313_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb1313_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.5784e-11
++ Smallest FDR q [2 uns1#0_Tstat] = 0.000814343
++ Smallest FDR q [3 uns1_Fstat] = 0.000814343
++ Smallest FDR q [5 uns2#0_Tstat] = 1.87149e-06
++ Smallest FDR q [6 uns2_Fstat] = 1.87148e-06
++ Smallest FDR q [8 uns3#0_Tstat] = 6.49434e-11
++ Smallest FDR q [9 uns3_Fstat] = 6.49432e-11
++ Smallest FDR q [11 str1#0_Tstat] = 0.00190523
++ Smallest FDR q [12 str1_Fstat] = 0.00190523
++ Smallest FDR q [14 str2#0_Tstat] = 1.74003e-06
++ Smallest FDR q [15 str2_Fstat] = 1.74003e-06
++ Smallest FDR q [17 str3#0_Tstat] = 2.2778e-11
++ Smallest FDR q [18 str3_Fstat] = 2.2778e-11
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.5745e-11
++ Smallest FDR q [21 unstructured_Fstat] = 1.5745e-11
++ Smallest FDR q [23 structured#0_Tstat] = 1.5056e-10
++ Smallest FDR q [24 structured_Fstat] = 1.5056e-10
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.0578557
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.0578557
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.215504 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.215504 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.401006 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.401006 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.99947 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.99947 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb1313_REML+orig
++ Output dataset ./stats.tb1313_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=168.29
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb1313 pb03.tb1313.r01.blur+orig.HEAD pb03.tb1313.r02.blur+orig.HEAD pb03.tb1313.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 4.8 s
3dTstat -mean -prefix rm.signal.all all_runs.tb1313+orig[0..37,40..47,50..69,72..105,108..134,137..181,184..257,267..380,383..396,399..439,446..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb1313_REML+orig[0..37,40..47,50..69,72..105,108..134,137..181,184..257,267..380,383..396,399..439,446..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb1313+orig -expr c*a/b -prefix TSNR.tb1313
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb1313_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb1313+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
** Can't read ANY data from file 'rm.errts.unit+orig.HEAD'
*** Cannot open input dataset rm.errts.unit+orig!
