echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb7764
endif
set output_dir = tb7764.srtt
if ( -d tb7764.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb7764.srtt
mkdir tb7764.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb7764.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb7764.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb7764.srtt/pb00.tb7764.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.7 s
3dTcat -prefix tb7764.srtt/pb00.tb7764.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.4 s
3dTcat -prefix tb7764.srtt/pb00.tb7764.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.4 s
set tr_counts = ( 150 150 150 )
cd tb7764.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7764.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7764.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7764.r01.tcat+orig.BRIK is 15.200003 degrees from plumb.
++ 24675 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7764.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7764.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7764.r02.tcat+orig.BRIK is 15.200003 degrees from plumb.
++ 24739 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7764.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7764.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7764.r03.tcat+orig.BRIK is 15.200003 degrees from plumb.
++ 24950 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb7764.r01.tshift -tpattern alt+z2 pb00.tb7764.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7764.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7764.r01.tcat+orig.BRIK is 15.200003 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb7764.r02.tshift -tpattern alt+z2 pb00.tb7764.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7764.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7764.r02.tcat+orig.BRIK is 15.200003 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb7764.r03.tshift -tpattern alt+z2 pb00.tb7764.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7764.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7764.r03.tcat+orig.BRIK is 15.200003 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb7764.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 96, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 108, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 120, avoid_vent -1
Warning 3dSkullStrip: Stubborn intersection remaining at smoothing of 120. Ignoring it.#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 15.200003 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 413.566986
 + Used gradual clip level = 374.059998 .. 457.518311
 + Number voxels above clip level = 25471
 + Clustering voxels ...
 + Largest cluster has 24936 voxels
 + Clustering voxels ...
 + Largest cluster has 24427 voxels
 + Filled   252 voxels in small holes; now have 24679 voxels
 + Clustering voxels ...
 + Largest cluster has 24679 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 106393 voxels
 + Mask now has 24679 voxels
++ 24679 voxels in the mask [out of 131072: 18.83%]
++ first  13 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   8 y-planes are zero [from P]
++ last   11 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1027.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1027.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 15.200003 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 15.200003 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1355551 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 24679 voxels [15.1%] in weight mask
++ Number of points for matching = 24679
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.811 28.829 21.134 (index)
 + source center of mass = 85.243 172.928 171.477 (index)
 + source-target CM = -0.524 0.954 -6.055 (xyz)
 + center of mass shifts = -0.524 0.954 -6.055
++ shift param auto-range: -70.0..69.0 -68.6..70.5 -56.1..44.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.524353 .. 9.475647
 + Range param#2 [y-shift] = -9.045654 .. 10.954346
 + Range param#3 [z-shift] = -16.055008 .. 3.944992
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.524353 .. 39.475647
 + Range param#2 [y-shift] = -39.045654 .. 40.954346
 + Range param#3 [z-shift] = -46.055008 .. 33.944992
 + 12 free parameters
++ Normalized convergence radius = 0.000472
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1355551 [out of 17463600] voxels
 + base mask has 34386 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=76 usiz=190
 + - copying weight image
 + - using 24679 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 20879 total points stored in 195 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.0104392] **[#2=-0.023778] *++--*[#10=-0.0391755] *+-+*[#28=-0.0404209] *----+..++--.-+o-$-*[#5066=-0.0426346] **[#5276=-0.0435836] *.*[#6026=-0.0491523] *o
 + - best 45 costs found:
    0 v=-0.049152: -20.02  17.62  -3.45 -30.54  19.59  20.03  [rand]
    1 v=-0.048744: -20.02  17.62  -8.66 -30.54  19.59  20.03  [rand]
    2 v=-0.043584: -13.94 -21.73  25.28  -4.37 -20.12  15.12  [rand]
    3 v=-0.042635: -14.73  10.41  -1.22 -15.99  13.53  29.93  [rand]
    4 v=-0.040421: -13.86 -12.38   7.28 -15.00 -15.00  15.00  [grid]
    5 v=-0.040340: -27.19 -12.38   7.28 -15.00 -15.00  30.00  [grid]
    6 v=-0.039811: -32.36  12.75  -3.31 -23.31   3.26  40.47  [rand]
    7 v=-0.039176: -13.86  14.29   7.28 -15.00  15.00  15.00  [grid]
    8 v=-0.037854: -16.51 -18.54 -11.78 -20.53   3.14  10.08  [rand]
    9 v=-0.036634: -27.19 -12.38  20.61  30.00 -15.00  30.00  [grid]
   10 v=-0.034891: -13.86  14.29  20.61 -15.00  30.00  15.00  [grid]
   11 v=-0.034601: -35.39 -29.60   9.72 -11.68 -29.04  39.38  [rand]
   12 v=-0.033455:  -4.60  -5.27   1.74  -4.32 -22.85 -18.95  [rand]
   13 v=-0.033309: -13.86 -12.38  20.61 -15.00 -15.00  15.00  [grid]
   14 v=-0.033070: -17.38 -17.63   8.40 -19.57 -37.09  16.59  [rand]
   15 v=-0.032565: -32.36  12.75  -3.31 -23.31  -3.26  40.47  [rand]
   16 v=-0.032521: -27.19 -25.71  20.61 -30.00 -15.00  30.00  [grid]
   17 v=-0.032393: -13.86 -25.71  20.61  15.00 -30.00  30.00  [grid]
   18 v=-0.031493: -14.73  10.41  -1.22  15.99  13.53  29.93  [rand]
   19 v=-0.031099:   9.30  25.71 -17.44   3.10  34.36   2.55  [rand]
   20 v=-0.031047: -13.86 -25.71   7.28 -15.00 -30.00  15.00  [grid]
   21 v=-0.030960:  12.90 -21.73  25.28  -4.37 -20.12 -15.12  [rand]
   22 v=-0.030887: -13.86  14.29   7.28  30.00  15.00  15.00  [grid]
   23 v=-0.030683: -32.36  12.75  -8.80 -23.31   3.26  40.47  [rand]
   24 v=-0.030638:  -4.60   7.18   1.74  -4.32 -22.85 -18.95  [rand]
   25 v=-0.030565:  -4.60   7.18   1.74   4.32  22.85 -18.95  [rand]
   26 v=-0.029660:  12.81  14.29   7.28 -15.00  15.00 -30.00  [grid]
   27 v=-0.029573: -16.51 -18.54 -11.78 -20.53  -3.14  10.08  [rand]
   28 v=-0.029317: -32.36 -10.84  -3.31  23.31  -3.26  40.47  [rand]
   29 v=-0.029194: -27.19 -25.71  20.61  30.00 -15.00  30.00  [grid]
   30 v=-0.029052: -27.19 -25.71  20.61 -15.00 -30.00  15.00  [grid]
   31 v=-0.028906: -13.86 -12.38  20.61  30.00 -15.00  15.00  [grid]
   32 v=-0.028898: -27.19 -25.71  20.61  30.00 -30.00  30.00  [grid]
   33 v=-0.028808: -13.86  14.29  20.61 -30.00  30.00  15.00  [grid]
   34 v=-0.028790: -13.86 -12.38  20.61  15.00 -15.00  30.00  [grid]
   35 v=-0.028352:  14.77  21.84  24.34  14.56  29.40 -15.92  [rand]
   36 v=-0.028081:  31.68 -28.09  30.09  40.41 -19.09 -40.75  [rand]
   37 v=-0.027861:  34.34 -29.60   9.72  11.68 -29.04 -39.38  [rand]
   38 v=-0.027721:  -4.60   7.18   1.74  -4.32  22.85 -18.95  [rand]
   39 v=-0.027677: -27.19 -12.38   7.28 -30.00 -15.00  30.00  [grid]
   40 v=-0.027236:  26.14  14.29  20.61  30.00  30.00 -30.00  [grid]
   41 v=-0.027147:   3.55   7.18   1.74  -4.32 -22.85 -18.95  [rand]
   42 v=-0.027118: -15.46  25.04  23.87 -19.13  33.53  22.48  [rand]
   43 v=-0.026902: -13.94 -21.73  25.28   4.37 -20.12  15.12  [rand]
   44 v=-0.026809: -27.19 -12.38  20.61 -15.00 -15.00  15.00  [grid]
*[#8005=-0.0537166] *[#8010=-0.0608696] *[#8014=-0.061079] *[#8016=-0.0628043] *[#8017=-0.0685665] *[#8022=-0.0697856] *[#8025=-0.0701901] *[#8026=-0.0714165] *[#8027=-0.0715286] *[#8030=-0.0716658] *[#8031=-0.0727102] *[#8032=-0.073588] *[#8034=-0.0741146] *[#8039=-0.0748625] *[#8042=-0.0749818] *[#8044=-0.075106] *[#8102=-0.0830503] *[#8104=-0.0832927] *[#8107=-0.0844777] *[#8108=-0.0860951] *[#8110=-0.0881865] *[#8111=-0.0898467] *[#8112=-0.0906895] *[#8113=-0.0907299] *[#8115=-0.0908644] *[#8117=-0.0940488] *[#8118=-0.0942683] *[#8119=-0.0949655] *[#8120=-0.0969547] *[#8121=-0.0987771] *[#8122=-0.101596] *[#8123=-0.102212] *[#8130=-0.105792] *[#8132=-0.106768] *[#8133=-0.107377] *[#8137=-0.108379] *[#8138=-0.108809] *[#8141=-0.109606] *[#8144=-0.110293] *[#8150=-0.110582] *[#8151=-0.110585]  + - costs of the above after a little optimization:
    0 v=-0.075106: -18.74  14.95  -3.43 -25.42  14.53  18.46  [rand]
    1 v=-0.070267: -19.09  16.52  -5.07 -25.86  16.72  18.79  [rand]
  * 2 v=-0.110585:  -9.55 -17.20  13.88  -6.67 -21.95   4.52  [rand]
    3 v=-0.077250: -19.57  10.32   0.56 -17.81   7.70  23.41  [rand]
    4 v=-0.087062: -13.46  -9.40   8.43  -7.95 -14.03  11.96  [grid]
    5 v=-0.052628: -27.16 -12.77   8.18  -9.97 -15.39  30.78  [grid]
    6 v=-0.061383: -31.99   5.21  -3.57 -20.60   4.30  40.35  [rand]
    7 v=-0.107828:  -9.56   8.18   0.98 -13.65   5.55   8.78  [grid]
    8 v=-0.051019: -16.45 -16.20 -11.76 -20.53   2.11   9.63  [rand]
    9 v=-0.041244: -26.53 -15.14  19.39  28.04 -15.95  28.80  [grid]
   10 v=-0.043759:  -9.26  15.66  21.58 -14.16  29.59  13.25  [grid]
   11 v=-0.043974: -35.41 -30.37  12.07  -6.27 -28.61  37.65  [rand]
   12 v=-0.058739:  -2.68   0.15   5.81  -5.00 -21.36 -19.40  [rand]
   13 v=-0.084070: -16.10 -13.09  13.99  -8.93 -17.57   9.48  [grid]
   14 v=-0.056130: -15.15 -17.56  15.97 -19.98 -35.64   6.44  [rand]
   15 v=-0.065103: -31.41   6.60  -3.86 -26.64   4.76  32.99  [rand]
   16 v=-0.038633: -28.23 -25.39  18.99 -31.04 -15.97  29.66  [grid]
   17 v=-0.062534: -12.33 -27.04  16.56  10.02 -27.40  27.98  [grid]
   18 v=-0.044703: -18.74  10.41  -1.22  16.44  13.30  30.31  [rand]
   19 v=-0.038114:   9.59  26.70 -17.27   2.09  39.20   3.14  [rand]
   20 v=-0.110564:  -4.93 -29.00  13.24  -3.68 -31.02   3.20  [grid]
   21 v=-0.061503:  10.52 -22.62  23.33  -3.66 -26.94 -15.66  [rand]
   22 v=-0.053150: -18.95  12.63   3.01  24.09  13.61  26.49  [grid]
   23 v=-0.055742: -34.30   8.30  -7.73 -26.05   7.69  40.15  [rand]
   24 v=-0.053457:  -3.02   0.31   3.50  -3.51 -16.91 -16.97  [rand]
   25 v=-0.031903:  -4.99   7.57   1.99   4.40  23.57 -18.69  [rand]
   26 v=-0.035352:  12.60  14.77   4.75 -15.09  12.16 -30.21  [grid]
   27 v=-0.050904: -15.82 -16.98 -11.33 -19.97   0.70   9.75  [rand]
   28 v=-0.040839: -32.40 -11.33  -3.51  23.41  -2.95  44.94  [rand]
   29 v=-0.049546: -28.10 -22.35  20.63  32.03 -21.65  30.87  [grid]
   30 v=-0.086661: -15.95 -33.56  13.58  -7.67 -34.99  14.33  [grid]
   31 v=-0.035134: -15.13 -13.31  17.93  28.68 -16.30  14.54  [grid]
   32 v=-0.047153: -28.38 -25.78  20.06  30.80 -23.45  30.80  [grid]
   33 v=-0.038415: -15.27  14.77  20.17 -28.90  28.91  19.67  [grid]
   34 v=-0.082404: -12.78 -15.16  16.13   2.56 -21.24  22.22  [grid]
   35 v=-0.036814:  11.72  17.73  23.65  12.42  28.99 -14.69  [rand]
   36 v=-0.039245:  30.66 -28.38  27.24  41.82 -12.93 -39.81  [rand]
   37 v=-0.041890:  35.13 -31.16  13.88   6.64 -30.02 -41.77  [rand]
   38 v=-0.032752:  -3.71   7.04   1.63  -4.31  26.36 -17.86  [rand]
   39 v=-0.056840: -30.86  -9.91   3.13 -21.09 -10.69  33.59  [grid]
   40 v=-0.035614:  23.54  15.50  20.59  28.30  28.29 -30.06  [grid]
   41 v=-0.046967:   1.76   7.18   5.79  -7.15 -23.88 -20.08  [rand]
   42 v=-0.037652: -14.90  20.39  18.24 -22.05  35.17  23.16  [rand]
   43 v=-0.091029:  -8.25 -21.57  18.86   1.11 -27.86  13.51  [rand]
   44 v=-0.047397: -20.33 -13.27  20.52 -14.90 -14.50   9.47  [grid]
 + - save # 2 for twobest
 + - save #20 for twobest
 + - save # 7 for twobest
 + - save #43 for twobest
 + - save # 4 for twobest
 + - save #30 for twobest
 + - save #13 for twobest
 + - save #34 for twobest
 + - save # 3 for twobest
 + - save # 0 for twobest
 + - skip # 1 for twobest: too close to set # 0
 + - save #15 for twobest
 + - save #17 for twobest
 + - save #21 for twobest
 + - save # 6 for twobest
 + - save #12 for twobest
 + - save #39 for twobest
 + - save #14 for twobest
 + - save #23 for twobest
 + - skip #24 for twobest: too close to set #12
 + - save #22 for twobest
 + - save # 5 for twobest
 + - save # 8 for twobest
 + - skip #27 for twobest: too close to set # 8
 + - save #29 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=76 usiz=190
 + - retaining old weight image
 + - using 24679 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 21183 total points stored in 214 'RHDD(13.7332)' bloks
 + - param set #1 has cost=-0.089275
 + -- Parameters = -9.6618 -16.8394 14.1483 -6.5080 -22.3919 4.6641 1.0022 1.0006 0.9996 -0.0004 0.0003 0.0093
 + - param set #2 has cost=-0.079745
 + -- Parameters = -5.1013 -29.8966 12.5000 -4.1821 -31.2901 2.7781 1.0058 1.0186 1.0033 0.0046 0.0043 0.0017
*[#9938=-0.110808] *[#9939=-0.112173] *[#9940=-0.113328] *[#9942=-0.113483] *[#9943=-0.113762] *[#9946=-0.113817] *[#9949=-0.114602] *[#9950=-0.115608] *[#9955=-0.116118] *[#9956=-0.116724] *[#9959=-0.116905] *[#9960=-0.117672] *[#9961=-0.118249] *[#9962=-0.119451] *[#9963=-0.121628] *[#9964=-0.124763] *[#9967=-0.126023] *[#9968=-0.127948] *[#9970=-0.128295] *[#9971=-0.128466] *[#9972=-0.128896] *[#9973=-0.129296] *[#9974=-0.130124] *[#9975=-0.131033] *[#9976=-0.131871] *[#9977=-0.133149] *[#9978=-0.137131] *[#9979=-0.13924] *[#9980=-0.145746] *[#9982=-0.151054] *[#9983=-0.157832] *[#9984=-0.161062] *[#9985=-0.16548] *[#9986=-0.173149] *[#9987=-0.183723] *[#9988=-0.196357] 
 + - param set #3 has cost=-0.196357
 + -- Parameters = -1.0078 0.8587 1.8374 -1.4448 0.7615 2.3484 1.0070 0.9915 1.0290 0.0197 0.0316 0.0101
 + - param set #4 has cost=-0.071062
 + -- Parameters = -8.6939 -21.8448 15.7559 1.1023 -28.1008 13.7889 0.9971 0.9987 0.9979 0.0005 -0.0003 -0.0003
*[#10138=-0.220003] *[#10139=-0.231691] *[#10140=-0.26788] *[#10142=-0.295908] *[#10144=-0.303224] 
 + - param set #5 has cost=-0.303224
 + -- Parameters = -1.8837 -1.8896 2.1852 -3.4199 -4.0080 -4.0444 1.0432 1.0236 1.0068 -0.0035 0.0128 0.0165
 + - param set #6 has cost=-0.068734
 + -- Parameters = -12.9913 -33.3538 13.7998 -3.5203 -34.4735 13.6017 0.9901 1.0002 0.9925 -0.0064 -0.0082 -0.0059
 + - param set #7 has cost=-0.086486
 + -- Parameters = -12.1484 -14.7109 12.2931 -7.1370 -20.5325 6.9877 1.0014 0.9997 0.9972 -0.0072 0.0024 -0.0019
 + - param set #8 has cost=-0.058169
 + -- Parameters = -12.5640 -14.8450 15.9839 2.4231 -21.1872 21.8479 1.0201 1.0016 0.9956 -0.0010 0.0019 -0.0011
 + - param set #9 has cost=-0.054664
 + -- Parameters = -19.1867 9.6254 -0.0014 -17.4513 6.7165 22.6688 1.0013 1.0215 0.9960 0.0050 -0.0018 0.0093
 + - param set #10 has cost=-0.055774
 + -- Parameters = -17.8722 14.0894 -2.7912 -25.8143 13.6104 16.3845 0.9949 0.9975 0.9958 0.0074 0.0009 -0.0024
 + - param set #11 has cost=-0.040740
 + -- Parameters = -31.0053 7.6197 -3.8574 -26.7938 4.8335 33.4176 1.0018 1.0014 1.0013 0.0012 0.0121 0.0018
*[#10657=-0.312875] *[#10659=-0.347162] *[#10663=-0.35008] *[#10665=-0.371936] *[#10670=-0.454858] *[#10677=-0.462354] *[#10678=-0.495991] *[#10682=-0.503817] *[#10683=-0.546117] *[#10686=-0.55725] *[#10687=-0.557828] *[#10688=-0.570998] *[#10689=-0.577324] *[#10691=-0.578599] *[#10694=-0.580435] *[#10696=-0.584296] *[#10697=-0.58938] *[#10698=-0.590499] *[#10699=-0.591247] *[#10701=-0.591466] *[#10703=-0.595701] *[#10704=-0.596687] *[#10705=-0.597392] *[#10716=-0.598358] 
 + - param set #12 has cost=-0.598358
 + -- Parameters = 0.0113 -1.4964 0.6142 -0.9256 -3.1988 -0.2756 1.0029 1.0187 0.9906 -0.0043 -0.0016 0.0043
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.11 
 + --- dist(#3,#1) = 0.149 
 + --- dist(#4,#1) = 0.213 
 + --- dist(#5,#1) = 0.193 
 + --- dist(#6,#1) = 0.355 
 + --- dist(#7,#1) = 0.277 
 + --- dist(#8,#1) = 0.398 
 + --- dist(#9,#1) = 0.246 
 + --- dist(#10,#1) = 0.277 
 + --- dist(#11,#1) = 0.255 
 + --- dist(#12,#1) = 0.388 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=76 usiz=190
 + - retaining old weight image
 + - using 24679 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 21544 total points stored in 224 'RHDD(13.5933)' bloks
*[#10742=-0.601524] *[#10743=-0.601957] *[#10746=-0.601963] *[#10747=-0.602379] *[#10748=-0.603119] *[#10749=-0.60329] *[#10754=-0.603424] *[#10757=-0.604017] *[#10758=-0.605702] *[#10761=-0.607859] *[#10763=-0.608142] *[#10764=-0.608477] *[#10765=-0.60919] *[#10766=-0.609537] *[#10767=-0.610133] *[#10768=-0.610516] *[#10769=-0.610732] *[#10770=-0.61075] *[#10773=-0.611943] *[#10774=-0.612363] *[#10775=-0.613031] *[#10776=-0.613369] *[#10779=-0.613736] *[#10780=-0.614275] *[#10786=-0.614357] *[#10797=-0.614552] 
 + - param set #1 has cost=-0.614552
 + -- Parameters = -0.0221 -1.7605 0.5009 -0.8332 -3.1526 -0.0977 1.0026 1.0029 0.9950 -0.0025 -0.0031 0.0005
 + - param set #2 has cost=-0.599223
 + -- Parameters = -0.0125 -1.7648 0.6330 -0.9622 -2.4960 -0.6807 1.0053 1.0059 1.0106 -0.0064 0.0091 0.0136
 + - param set #3 has cost=-0.581370
 + -- Parameters = 0.2680 -1.8910 0.5496 -0.3166 -2.2626 -1.1526 1.0036 0.9930 1.0206 0.0219 0.0294 0.0118
 + - param set #4 has cost=-0.076678
 + -- Parameters = -9.6040 -16.7667 13.5654 -5.7644 -22.2961 4.8171 1.0128 0.9974 0.9841 -0.0036 0.0100 -0.0000
 + - param set #5 has cost=-0.077372
 + -- Parameters = -10.1180 -15.0662 11.9837 -5.2399 -20.7805 7.1247 0.9997 1.0086 0.9753 -0.0032 0.0030 0.0005
 + - param set #6 has cost=-0.075853
 + -- Parameters = -4.3726 -24.9178 11.4255 -6.3442 -29.2183 -2.5013 0.9990 1.0249 0.9928 0.0107 0.0143 0.0078
 + - param set #7 has cost=-0.064588
 + -- Parameters = -9.7768 -20.6015 12.7640 0.0684 -26.2346 13.7142 1.0008 1.0036 1.0024 -0.0001 -0.0005 -0.0025
 + - param set #8 has cost=-0.056307
 + -- Parameters = -12.9062 -33.1802 13.8564 -3.2740 -35.1422 12.8524 0.9901 0.9840 0.9822 -0.0052 -0.0166 0.0109
 + - param set #9 has cost=-0.045748
 + -- Parameters = -12.1578 -14.6801 15.6154 2.3455 -21.5819 21.7985 1.0218 1.0058 1.0079 0.0000 0.0025 -0.0003
 + - param set #10 has cost=-0.053501
 + -- Parameters = -16.7572 12.9086 -2.7647 -25.0905 10.9297 14.7248 0.9919 1.0011 0.9899 0.0131 -0.0035 0.0067
 + - param set #11 has cost=-0.049375
 + -- Parameters = -18.5694 8.0368 1.4363 -15.4832 3.8491 21.8080 0.9754 1.0387 0.9879 0.0093 -0.0005 0.0033
 + - param set #12 has cost=-0.029266
 + -- Parameters = -30.8621 7.4462 -3.8162 -26.9223 4.8506 33.2022 1.0030 1.0008 0.9998 0.0001 0.0178 0.0019
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0587 
 + --- dist(#3,#1) = 0.146 
 + --- dist(#4,#1) = 0.196 
 + --- dist(#5,#1) = 0.213 
 + --- dist(#6,#1) = 0.29 
 + --- dist(#7,#1) = 0.256 
 + --- dist(#8,#1) = 0.393 
 + --- dist(#9,#1) = 0.27 
 + --- dist(#10,#1) = 0.243 
 + --- dist(#11,#1) = 0.243 
 + --- dist(#12,#1) = 0.385 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=76 usiz=190
 + - retaining old weight image
 + - using 24679 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 21584 total points stored in 229 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.613917
 + -- Parameters = 0.0529 -1.8697 0.4606 -0.6286 -3.1873 0.0434 1.0020 0.9952 1.0054 0.0043 -0.0016 -0.0061
 + - param set #2 has cost=-0.607213
 + -- Parameters = -0.0216 -1.8170 0.5343 -0.6959 -2.6178 -0.0978 1.0043 0.9974 1.0039 0.0010 -0.0001 0.0070
 + - param set #3 has cost=-0.603118
 + -- Parameters = 0.0626 -1.8366 0.5425 -0.5118 -2.5465 -0.5840 1.0048 0.9964 1.0120 0.0113 0.0136 0.0078
 + - param set #4 has cost=-0.078046
 + -- Parameters = -9.6147 -15.3210 11.4618 -5.7958 -20.8549 6.4972 0.9777 1.0241 0.9646 -0.0113 0.0088 0.0072
 + - param set #5 has cost=-0.074443
 + -- Parameters = -8.8859 -16.3946 13.0292 -5.1660 -21.7067 5.2847 1.0013 1.0010 0.9814 -0.0078 0.0054 -0.0006
 + - param set #6 has cost=-0.074749
 + -- Parameters = -4.8246 -24.6674 10.2367 -7.2821 -27.9963 -3.2552 1.0059 1.0393 0.9785 0.0275 0.0021 0.0110
 + - param set #7 has cost=-0.063990
 + -- Parameters = -9.9708 -19.9486 12.3458 -0.6118 -25.8012 13.7619 0.9612 0.9970 0.9825 -0.0027 0.0032 -0.0181
 + - param set #8 has cost=-0.047723
 + -- Parameters = -12.8179 -33.2776 13.7434 -3.2943 -35.1807 12.7775 0.9898 0.9840 0.9834 -0.0050 -0.0118 0.0105
 + - param set #9 has cost=-0.050745
 + -- Parameters = -15.9945 12.6061 -2.2668 -24.1346 9.6753 14.9297 0.9769 0.9938 0.9627 0.0326 -0.0029 0.0213
 + - param set #10 has cost=-0.061365
 + -- Parameters = -17.3119 6.5912 2.5191 -10.6302 2.2753 16.9898 0.9618 1.0327 0.9845 0.0296 0.0453 0.0387
 + - param set #11 has cost=-0.049471
 + -- Parameters = -11.8399 -13.6865 14.7980 2.6203 -23.6936 19.3833 1.0199 1.0604 1.0110 0.0009 -0.0710 -0.0037
 + - param set #12 has cost=-0.024798
 + -- Parameters = -30.5866 8.9150 -3.4172 -27.2013 5.5588 32.9948 1.0024 1.0011 0.9988 0.0009 0.0173 0.0027
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0589 
 + --- dist(#3,#1) = 0.0682 
 + --- dist(#4,#1) = 0.196 
 + --- dist(#5,#1) = 0.285 
 + --- dist(#6,#1) = 0.206 
 + --- dist(#7,#1) = 0.251 
 + --- dist(#8,#1) = 0.217 
 + --- dist(#9,#1) = 0.261 
 + --- dist(#10,#1) = 0.313 
 + --- dist(#11,#1) = 0.393 
 + --- dist(#12,#1) = 0.383 
 + - Total coarse refinement net CPU time = 0.0 s; 3153 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=76 usiz=190
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 21629 total points stored in 231 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.578193 *
 + -- Parameters = 0.0529 -1.8697 0.4606 -0.6286 -3.1873 0.0434 1.0020 0.9952 1.0054 0.0043 -0.0016 -0.0061
 + - cost(#2)=-0.570895  
 + -- Parameters = -0.0216 -1.8170 0.5343 -0.6959 -2.6178 -0.0978 1.0043 0.9974 1.0039 0.0010 -0.0001 0.0070
 + - cost(#3)=-0.567947  
 + -- Parameters = 0.0626 -1.8366 0.5425 -0.5118 -2.5465 -0.5840 1.0048 0.9964 1.0120 0.0113 0.0136 0.0078
 + - cost(#4)=-0.068120  
 + -- Parameters = -9.6147 -15.3210 11.4618 -5.7958 -20.8549 6.4972 0.9777 1.0241 0.9646 -0.0113 0.0088 0.0072
 + - cost(#5)=-0.066904  
 + -- Parameters = -4.8246 -24.6674 10.2367 -7.2821 -27.9963 -3.2552 1.0059 1.0393 0.9785 0.0275 0.0021 0.0110
 + - cost(#6)=-0.063966  
 + -- Parameters = -8.8859 -16.3946 13.0292 -5.1660 -21.7067 5.2847 1.0013 1.0010 0.9814 -0.0078 0.0054 -0.0006
 + - cost(#7)=-0.054509  
 + -- Parameters = -9.9708 -19.9486 12.3458 -0.6118 -25.8012 13.7619 0.9612 0.9970 0.9825 -0.0027 0.0032 -0.0181
 + - cost(#8)=-0.050008  
 + -- Parameters = -17.3119 6.5912 2.5191 -10.6302 2.2753 16.9898 0.9618 1.0327 0.9845 0.0296 0.0453 0.0387
 + - cost(#9)=-0.044713  
 + -- Parameters = -15.9945 12.6061 -2.2668 -24.1346 9.6753 14.9297 0.9769 0.9938 0.9627 0.0326 -0.0029 0.0213
 + - cost(#10)=-0.043440  
 + -- Parameters = -11.8399 -13.6865 14.7980 2.6203 -23.6936 19.3833 1.0199 1.0604 1.0110 0.0009 -0.0710 -0.0037
 + - cost(#11)=-0.042800  
 + -- Parameters = -12.8179 -33.2776 13.7434 -3.2943 -35.1807 12.7775 0.9898 0.9840 0.9834 -0.0050 -0.0118 0.0105
 + - cost(#12)=-0.023873  
 + -- Parameters = -30.5866 8.9150 -3.4172 -27.2013 5.5588 32.9948 1.0024 1.0011 0.9988 0.0009 0.0173 0.0027
 + - cost(#13)=-0.029447  
 + -- Parameters = -0.5244 0.9543 -6.0550 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.580036 *
 + -- Parameters = 0.1115 -1.8256 0.4572 -0.4808 -3.2298 0.0926 1.0017 0.9944 1.0046 0.0079 -0.0016 -0.0075
 + - cost(#2)=-0.576239  
 + -- Parameters = 0.0970 -1.8105 0.4174 -0.5351 -2.7144 0.0067 1.0012 0.9957 1.0039 0.0058 -0.0003 0.0016
 + - cost(#3)=-0.577739  
 + -- Parameters = 0.1289 -1.8436 0.3451 -0.4097 -3.1743 -0.1059 1.0026 0.9955 0.9999 0.0125 0.0017 -0.0064
 + - cost(#4)=-0.078005  
 + -- Parameters = -9.0160 -14.6138 10.1850 -5.7356 -22.1670 5.3873 1.0030 1.0657 0.9002 -0.0075 0.0214 0.0061
 + - cost(#5)=-0.069591  
 + -- Parameters = -4.4585 -24.0210 9.9165 -6.8732 -27.8253 -3.3294 1.0071 1.0428 0.9571 0.0195 -0.0049 0.0192
 + - cost(#6)=-0.075620  
 + -- Parameters = -8.4645 -9.3745 7.7844 -6.1156 -21.3465 4.9586 0.9873 1.1249 0.8864 -0.0232 0.0405 -0.0127
 + - cost(#7)=-0.056759  
 + -- Parameters = -9.0582 -20.5324 12.2566 -1.1372 -25.9267 13.0109 0.9520 0.9948 0.9860 -0.0071 0.0121 -0.0101
 + - cost(#8)=-0.064910  
 + -- Parameters = -12.8614 3.5352 5.8520 -7.7231 0.4597 14.1187 0.9485 1.0276 1.0105 -0.0042 0.0456 0.0701
 + - cost(#9)=-0.049911  
 + -- Parameters = -15.0756 13.3033 -1.4636 -22.5054 10.3643 14.8036 0.9650 0.9895 0.9660 0.0376 -0.0055 0.0180
 + - cost(#10)=-0.045116  
 + -- Parameters = -11.9395 -12.9962 15.0097 2.3929 -23.7334 18.8400 1.0212 1.0685 1.0111 0.0035 -0.0724 0.0032
 + - cost(#11)=-0.043501  
 + -- Parameters = -12.4675 -33.8969 14.0727 -3.3048 -35.5293 12.6403 0.9885 0.9851 0.9855 -0.0065 -0.0107 0.0094
 + - cost(#12)=-0.026634  
 + -- Parameters = -29.6159 9.8748 -2.7189 -27.4749 5.3700 33.4481 0.9836 0.9951 0.9873 0.0014 0.0217 0.0060
 + - cost(#13)=-0.570728  
 + -- Parameters = 0.0683 -1.7602 0.4241 -0.6614 -2.9383 -0.1553 1.0030 1.0016 0.9963 0.0012 0.0028 0.0005
 + - case #1 is now the best
 + - Initial  cost = -0.580036
 + - Initial fine Parameters = 0.1115 -1.8256 0.4572 -0.4808 -3.2298 0.0926 1.0017 0.9944 1.0046 0.0079 -0.0016 -0.0075
 + - Finalish cost = -0.581054 ; 206 funcs
 + - Final    cost = -0.581392 ; 278 funcs
 + Final fine fit Parameters:
       x-shift= 0.1200   y-shift=-1.8098   z-shift= 0.4300
       z-angle=-0.4473   x-angle=-3.6091   y-angle= 0.0836
       x-scale= 1.0021   y-scale= 0.9936   z-scale= 1.0025
     y/x-shear= 0.0099 z/x-shear=-0.0012 z/y-shear=-0.0151
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.1200 -1.8098 0.4300 -0.4473 -3.6091 0.0836 1.0021 0.9936 1.0025 0.0099 -0.0012 -0.0151
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.5
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 15.200003 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0172 -0.9694 0.2022 227.8200 -0.0040 0.2135 0.9829 53.1547 -1.0021 -0.0079 0.0015 200.4118
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 17.0 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3786.360100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 72.5457 47.3958   ITER = 7/137
72.5457

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 6s 31ms]
lev=0 0..171 0..213 0..166: [first cost=-0.65833] ... done [cost:-0.65833==>-0.72300]
lev=1 patch=129x161x125 [clock= 13m 50s 106ms]........:[cost=-0.75857]:........ done [cost:-0.72300==>-0.76323 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 22m 34s 686ms]......................... done [cost:-0.76323==>-0.83780 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 29m 25s 916ms]..................... done [cost:-0.83780==>-0.89765 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 34m 23s 951ms]...... done [cost:-0.89765==>-0.93316 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 38m 10s 566ms].................. done [cost:-0.93316==>-1.02497 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 41m 56s 732ms]................................. done [cost:-1.02497==>-1.05448 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 45m 29s 77ms]................................... done [cost:-1.05448==>-1.15240 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 49m 14s 349ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7764/tb7764.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.7 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb7764.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.200003 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7764.r01.tshift+orig.BRIK is 15.200003 degrees from plumb.
++ Reading input dataset ./pb01.tb7764.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 26887 voxels
 + 4711 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.599  pitch=-0.378  yaw=-0.563  dS=-1.241  dL=-0.702  dP=-0.726
++ Mean: roll=-0.697  pitch=+0.423  yaw=-0.176  dS=-0.521  dL=-0.214  dP=-0.099
++ Max : roll=+0.000  pitch=+1.153  yaw=+0.296  dS=+0.207  dL=+0.187  dP=+0.348
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.57(0.57) 0.57(0.07) 0.65(0.18) 0.73(0.17) 0.72(0.21) 0.80(0.17) 0.75(0.08) 0.74(0.22) 0.70(0.24) 0.74(0.23) 0.79(0.28) 0.57(0.42) 0.69(0.25) 0.74(0.14) 0.72(0.14) 0.83(0.12) 1.00(0.24) 0.87(0.30) 1.03(0.30) 1.00(0.43) 0.70(0.46) 0.70(0.39) 0.70(0.16) 0.54(0.23) 0.50(0.11) 0.56(0.22) 0.58(0.04) 0.56(0.16) 0.62(0.15) 0.69(0.16) 0.81(0.25) 0.67(0.15) 0.57(0.18) 0.75(0.21) 1.74(1.43) 1.92(0.39) 1.79(0.33) 1.88(0.12) 2.10(0.40) 2.01(0.24) 1.86(0.21) 1.80(0.19) 1.85(0.15) 1.93(0.10) 1.95(0.06) 1.90(0.10) 1.87(0.07) 1.83(0.08) 1.90(0.18) 1.89(0.17) 1.84(0.07) 1.77(0.10) 1.75(0.08) 1.75(0.08) 1.75(0.04) 1.78(0.11) 1.63(0.25) 1.35(0.41) 1.81(0.59) 1.83(0.27) 1.76(0.21) 1.80(0.21) 1.77(0.05) 1.79(0.05) 1.81(0.07) 1.82(0.05) 1.85(0.06) 1.81(0.06) 1.86(0.06) 1.87(0.05) 1.86(0.08) 1.91(0.30) 2.22(0.78) 2.30(0.89) 2.57(0.33) 1.88(0.79) 1.77(0.33) 1.44(0.36) 1.16(0.49) 1.21(0.24) 1.09(0.35) 1.13(0.11) 1.29(0.16) 1.42(0.17) 1.48(0.09) 1.55(0.10) 1.55(0.06) 1.67(0.15) 1.83(0.18) 1.79(0.14) 1.96(0.29) 2.05(0.25) 2.04(0.06) 2.08(0.11) 2.11(0.10) 2.13(0.06) 2.05(0.19) 2.09(0.23) 2.25(0.27) 2.29(0.17) 2.29(0.20) 2.45(0.62) 2.51(0.41) 2.39(0.43) 2.23(0.22) 2.27(0.12) 2.36(0.11) 2.40(0.06) 2.46(0.06) 2.25(0.41) 2.05(0.28) 2.25(0.27) 2.35(0.13) 2.45(0.14) 2.47(0.04) 2.40(0.13) 3.32(0.94) 2.75(0.81) 2.29(0.51) 2.52(0.42) 2.82(0.50) 3.16(0.72) 3.21(0.59) 3.16(0.35) 3.01(0.20) 2.98(0.10) 2.99(0.15) 2.97(0.08) 2.88(0.36) 2.87(0.17) 2.95(0.28) 3.06(0.16) 3.18(0.15) 3.14(0.19) 2.97(0.38) 3.23(0.44) 3.17(0.22) 3.06(0.18) 3.00(0.13) 2.95(0.13) 3.07(0.41) 3.20(0.59) 3.30(0.32) 3.44(0.36) 3.35(0.21) 3.59(0.53) 3.74(0.60) 3.67(0.18) 3.63(0.21)
++ Max displacement in automask = 3.74 (mm) at sub-brick 147
++ Max delta displ  in automask = 1.43 (mm) at sub-brick 35
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb7764.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7764.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7764.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7764.r01.tshift+orig.BRIK is 15.200003 degrees from plumb.
++ Source dataset: ./pb01.tb7764.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.200003 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb7764.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.200003 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7764.r02.tshift+orig.BRIK is 15.200003 degrees from plumb.
++ Reading input dataset ./pb01.tb7764.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27181 voxels
 + 4852 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.508  pitch=+0.512  yaw=+0.065  dS=-1.259  dL=-1.228  dP=-0.995
++ Mean: roll=-0.973  pitch=+1.567  yaw=+0.642  dS=-0.671  dL=-0.714  dP=-0.488
++ Max : roll=-0.445  pitch=+2.904  yaw=+1.070  dS=-0.116  dL=-0.142  dP=-0.254
++ Max displacements (mm) for each sub-brick:
 2.24(0.00) 2.78(0.85) 2.58(0.28) 2.39(0.27) 2.29(0.21) 2.29(0.12) 2.31(0.15) 2.28(0.12) 2.30(0.03) 2.28(0.07) 2.52(0.24) 2.66(0.27) 2.57(0.20) 2.65(0.08) 2.68(0.23) 2.69(0.10) 2.71(0.21) 2.67(0.20) 2.58(0.25) 2.64(0.27) 2.78(0.26) 2.96(0.28) 2.95(0.11) 2.90(0.07) 2.90(0.12) 2.91(0.03) 2.89(0.05) 2.93(0.07) 2.97(0.10) 3.04(0.08) 3.06(0.04) 3.16(0.14) 3.25(0.09) 3.20(0.08) 3.20(0.09) 3.34(0.13) 3.31(0.11) 3.49(0.28) 3.53(0.10) 3.48(0.10) 3.48(0.08) 3.50(0.07) 3.53(0.10) 3.34(0.24) 2.81(0.66) 2.91(0.16) 3.04(0.15) 3.14(0.20) 3.23(0.25) 3.29(0.15) 3.33(0.11) 3.42(0.10) 3.49(0.14) 3.53(0.07) 3.62(0.10) 3.59(0.08) 3.69(0.12) 3.75(0.12) 3.77(0.04) 3.88(0.14) 3.91(0.07) 3.96(0.09) 3.95(0.06) 3.94(0.04) 3.96(0.08) 3.97(0.04) 3.99(0.06) 4.02(0.05) 4.06(0.05) 4.06(0.07) 4.01(0.10) 4.00(0.13) 4.00(0.05) 4.11(0.14) 4.43(0.41) 4.37(0.11) 4.40(0.15) 4.40(0.04) 4.47(0.11) 4.48(0.03) 4.43(0.06) 3.36(1.46) 3.43(0.38) 3.73(0.81) 3.72(0.12) 3.74(0.10) 3.81(0.12) 3.87(0.09) 3.88(0.04) 4.12(0.28) 4.26(0.18) 4.19(0.10) 4.16(0.08) 3.98(0.27) 4.32(1.76) 5.49(1.32) 6.19(0.87) 5.04(1.36) 5.21(0.22) 5.20(0.05) 5.12(0.09) 5.10(0.07) 5.09(0.07) 5.11(0.04) 5.04(0.07) 4.99(0.06) 4.97(0.07) 5.00(0.05) 4.92(0.10) 4.83(0.19) 4.91(0.09) 5.02(0.21) 5.04(0.10) 5.07(0.16) 4.98(0.13) 4.95(0.06) 4.91(0.07) 4.93(0.03) 4.93(0.11) 4.26(1.01) 4.34(0.94) 4.66(0.68) 4.68(0.43) 4.67(0.09) 4.68(0.10) 4.63(0.07) 4.57(0.10) 4.65(0.15) 4.82(0.27) 5.82(1.06) 5.82(0.41) 5.68(0.25) 5.64(0.09) 5.69(0.05) 5.66(0.05) 5.53(0.15) 5.58(0.06) 5.59(0.04) 5.54(0.07) 5.49(0.07) 5.58(0.15) 5.04(0.73) 3.96(1.21) 3.73(0.47) 4.04(1.03) 4.03(0.52) 4.47(0.77) 4.18(0.46) 4.02(0.39) 3.99(0.12)
++ Max displacement in automask = 6.19 (mm) at sub-brick 96
++ Max delta displ  in automask = 1.76 (mm) at sub-brick 94
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb7764.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7764.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7764.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7764.r02.tshift+orig.BRIK is 15.200003 degrees from plumb.
++ Source dataset: ./pb01.tb7764.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.3
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.200003 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb7764.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.200003 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7764.r03.tshift+orig.BRIK is 15.200003 degrees from plumb.
++ Reading input dataset ./pb01.tb7764.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27264 voxels
 + 4846 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.146  pitch=+2.572  yaw=+0.774  dS=-3.165  dL=-1.104  dP=-1.747
++ Mean: roll=-0.729  pitch=+3.586  yaw=+1.108  dS=-1.470  dL=-0.653  dP=-1.012
++ Max : roll=-0.008  pitch=+4.457  yaw=+1.499  dS=+0.397  dL=-0.056  dP=-0.342
++ Max displacements (mm) for each sub-brick:
 5.87(0.00) 5.50(0.59) 5.52(0.15) 5.45(0.15) 5.30(0.37) 5.47(0.50) 5.46(0.34) 5.47(0.06) 5.27(0.26) 5.46(0.30) 5.71(0.33) 5.67(0.05) 5.56(0.24) 5.62(0.10) 5.69(0.10) 5.66(0.06) 5.67(0.04) 5.66(0.06) 5.67(0.15) 5.70(0.06) 5.78(0.12) 5.83(0.07) 5.82(0.09) 5.81(0.04) 5.82(0.08) 5.85(0.30) 6.07(0.81) 6.76(1.01) 7.50(1.36) 7.30(0.37) 7.29(0.13) 7.26(0.05) 7.23(0.07) 7.18(0.10) 7.15(0.08) 7.23(0.10) 7.21(0.18) 7.15(0.25) 7.20(0.22) 7.24(0.11) 7.19(0.09) 6.98(0.24) 6.86(0.20) 6.84(0.06) 6.44(0.50) 6.74(0.32) 6.83(0.15) 6.76(0.08) 6.90(0.18) 7.11(0.24) 7.06(0.09) 6.75(0.89) 6.98(0.29) 7.09(0.26) 6.94(0.20) 7.06(0.24) 7.60(0.72) 7.55(0.12) 7.34(0.25) 7.26(0.22) 7.50(0.29) 7.54(0.18) 7.62(0.09) 7.77(0.18) 7.83(0.07) 7.82(0.02) 7.84(0.04) 7.89(0.06) 8.01(0.12) 8.10(0.11) 8.01(0.13) 8.05(0.09) 8.00(0.07) 8.18(0.19) 9.67(1.72) 10.14(0.50) 9.93(0.38) 9.58(0.45) 9.24(0.38) 8.92(0.35) 8.27(0.75) 8.18(0.12) 7.73(0.48) 7.98(0.30) 8.15(0.21) 8.15(0.03) 8.13(0.04) 8.12(0.04) 8.13(0.04) 7.99(0.15) 7.51(0.59) 7.79(0.33) 8.01(0.28) 8.10(0.10) 8.14(0.08) 8.14(0.02) 8.09(0.05) 8.14(0.06) 7.81(0.38) 7.72(0.17) 7.87(0.18) 7.93(0.23) 8.05(0.13) 8.14(0.09) 8.21(0.11) 8.15(0.21) 8.03(0.23) 8.03(0.10) 8.00(0.09) 7.97(0.09) 7.94(0.04) 7.99(0.08) 8.02(0.12) 7.99(0.10) 7.96(0.08) 7.89(0.12) 7.95(0.08) 7.55(0.42) 7.32(0.27) 7.63(0.65) 8.19(1.15) 8.30(0.50) 8.36(0.33) 8.55(0.21) 8.61(0.08) 8.55(0.06) 8.50(0.05) 8.53(0.08) 8.49(0.12) 7.80(0.77) 8.97(1.48) 9.42(0.49) 9.18(0.28) 9.00(0.21) 8.11(1.00) 8.03(0.25) 7.99(0.13) 7.96(0.06) 7.79(0.18) 7.64(0.24) 7.76(0.14) 7.68(0.11) 7.54(0.15) 7.14(0.56) 5.81(1.81) 5.66(0.27) 5.45(0.36) 5.00(0.65) 5.02(0.21) 5.14(0.19)
++ Max displacement in automask = 10.14 (mm) at sub-brick 75
++ Max delta displ  in automask = 1.81 (mm) at sub-brick 144
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb7764.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7764.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7764.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7764.r03.tshift+orig.BRIK is 15.200003 degrees from plumb.
++ Source dataset: ./pb01.tb7764.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 18.4
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.200003 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7764.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7764.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7764.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7764.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7764.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7764.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.200003 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.7
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb7764
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb7764+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb7764+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1237645 voxels in source_automask+0
++ Zero-pad: zbot=0 ztop=1
++ Computing -autobox
++ 270396 voxels [62.4%] in weight mask
++ Number of points for matching = 127086
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.122376
   sp   = 0.332924
   mi   = -0.537275
   crM  = 0.0279736
   nmi  = 0.824942
   je   = 2.53187
   hel  = -0.111256
   crA  = 0.167341
   crU  = 0.17275
   lss  = 0.877624
   lpc  = 0.208928
   lpa  = 0.791072
   lpc+ = 0.325462
   ncd  = 0.978281
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 5.1
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb7764+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb7764+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 44.4 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7764.r01.blur pb02.tb7764.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7764.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb7764.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7764.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7764.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7764.r02.blur pb02.tb7764.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7764.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb7764.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7764.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7764.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7764.r03.blur pb02.tb7764.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7764.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb7764.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7764.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7764.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb7764.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7764.r01.blur+orig
++ Forming automask
 + Fixed clip level = 406.609009
 + Used gradual clip level = 344.174744 .. 448.803223
 + Number voxels above clip level = 44283
 + Clustering voxels ...
 + Largest cluster has 44242 voxels
 + Clustering voxels ...
 + Largest cluster has 44193 voxels
 + Filled    33 voxels in small holes; now have 44226 voxels
 + Clustering voxels ...
 + Largest cluster has 44226 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 382049 voxels
 + Mask now has 44226 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 374766 voxels
++ 51509 voxels in the mask [out of 426275: 12.08%]
++ first  20 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  23 y-planes are zero [from I]
++ last   19 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb7764.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7764.r02.blur+orig
++ Forming automask
 + Fixed clip level = 405.946808
 + Used gradual clip level = 341.243683 .. 448.480011
 + Number voxels above clip level = 44543
 + Clustering voxels ...
 + Largest cluster has 44539 voxels
 + Clustering voxels ...
 + Largest cluster has 44402 voxels
 + Filled    34 voxels in small holes; now have 44436 voxels
 + Clustering voxels ...
 + Largest cluster has 44436 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 381839 voxels
 + Mask now has 44436 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 374581 voxels
++ 51694 voxels in the mask [out of 426275: 12.13%]
++ first  20 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  23 y-planes are zero [from I]
++ last   18 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb7764.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7764.r03.blur+orig
++ Forming automask
 + Fixed clip level = 405.194061
 + Used gradual clip level = 344.017578 .. 448.523102
 + Number voxels above clip level = 44919
 + Clustering voxels ...
 + Largest cluster has 44902 voxels
 + Clustering voxels ...
 + Largest cluster has 44740 voxels
 + Filled    30 voxels in small holes; now have 44770 voxels
 + Clustering voxels ...
 + Largest cluster has 44770 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 381505 voxels
 + Mask now has 44770 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 374164 voxels
++ 52111 voxels in the mask [out of 426275: 12.22%]
++ first  19 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  23 y-planes are zero [from I]
++ last   18 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb7764
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 52284 survived, 373991 were zero
++ writing result full_mask.tb7764...
3dresample -master full_mask.tb7764+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb7764
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 48757 survived, 377518 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb7764...
3dABoverlap -no_automask full_mask.tb7764+orig mask_anat.tb7764+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb7764+orig.BRIK  B=./mask_anat.tb7764+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
52284        48757        54355        46686        5598         2071         10.7069      4.2476     0.9237     0.9929     0.9189
3ddot -dodice full_mask.tb7764+orig mask_anat.tb7764+orig
tee out.mask_ae_dice.txt
0.9241	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb7764
total number of censored TRs (simple form) = 93
1deval -a motion_tb7764_censor.1D -b outcount_tb7764_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb7764_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb7764.r01.blur+orig.HEAD pb03.tb7764.r02.blur+orig.HEAD pb03.tb7764.r03.blur+orig.HEAD -censor censor_tb7764_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb7764 -errts errts.tb7764 -bucket stats.tb7764
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb7764.r01.blur+orig.HEAD pb03.tb7764.r02.blur+orig.HEAD pb03.tb7764.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 44503 voxels (out of 426275 = 10.4%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 354 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb7764.r01.blur+orig.HEAD pb03.tb7764.r02.blur+orig.HEAD pb03.tb7764.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb7764_REML -Rvar stats.tb7764_REMLvar \
 -Rfitts fitts.tb7764_REML -Rerrts errts.tb7764_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (354x24):  4.83818  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (354x6):  1.03834  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (354x18):  3.71642  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (354x6):  2.41335  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (354x12):  1.25152  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.80264e-15  ++ VERY GOOD ++
++ Matrix setup time = 0.96 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.438
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.454
++ Job #3: processing voxels 127881 to 170507; elapsed time=5.471
++ Job #4: processing voxels 170508 to 213134; elapsed time=5.489
++ Job #5: processing voxels 213135 to 255761; elapsed time=5.507
++ Job #6: processing voxels 255762 to 298388; elapsed time=5.526
++ Job #7: processing voxels 298389 to 341015; elapsed time=5.552
++ Job #8: processing voxels 341016 to 383642; elapsed time=5.572
++ Job #0: processing voxels 0 to 42626; elapsed time=5.591
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=5.593
0123456789.0123456789.0123++ Job #1 finished; elapsed time=21.573
45++ Job #5 finished; elapsed time=23.048
6789.01234++ Job #2 finished; elapsed time=28.898
56++ Job #8 finished; elapsed time=30.029
7++ Job #4 finished; elapsed time=30.178
++ Job #7 finished; elapsed time=30.212
89.01234++ Job #3 finished; elapsed time=32.629
5++ Job #6 finished; elapsed time=32.868
6789.++ Job #9 finished; elapsed time=33.957

++ Job #0 waiting for children to finish; elapsed time=33.958
++ Job #0 now finishing up; elapsed time=33.967
++ Smallest FDR q [0 Full_Fstat] = 2.03432e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 7.325e-14
++ Smallest FDR q [3 uns1_Fstat] = 7.325e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 3.19266e-09
++ Smallest FDR q [6 uns2_Fstat] = 3.19267e-09
++ Smallest FDR q [8 uns3#0_Tstat] = 1.05895e-12
++ Smallest FDR q [9 uns3_Fstat] = 1.05895e-12
++ Smallest FDR q [11 str1#0_Tstat] = 1.24736e-13
++ Smallest FDR q [12 str1_Fstat] = 1.24762e-13
++ Smallest FDR q [14 str2#0_Tstat] = 7.96019e-09
++ Smallest FDR q [15 str2_Fstat] = 7.9595e-09
++ Smallest FDR q [17 str3#0_Tstat] = 3.16922e-13
++ Smallest FDR q [18 str3_Fstat] = 3.16816e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 3.14513e-13
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 3.1456e-13
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.97547e-13
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.97562e-13
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 3.63422e-09
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 3.63393e-09
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.00118937
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.00118924
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 0.00345672
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 0.00345705
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 5.17246e-09
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 5.17138e-09
++ Wrote bucket dataset into ./stats.tb7764+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb7764+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb7764+orig.BRIK
++ Program finished; elapsed time=57.009
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.746       0.810  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.739       0.805  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.734       0.793  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.529       0.600  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.471       0.550  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.470       0.549  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.427      -0.419  (10 vs. 17)  Run#3Pol#2  vs.  str3#0
  medium:      -0.420      -0.394  ( 6 vs. 16)  Run#2Pol#2  vs.  str2#0
  medium:      -0.404      -0.368  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb7764.r01.blur+orig.HEAD pb03.tb7764.r02.blur+orig.HEAD pb03.tb7764.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb7764_REML -Rvar stats.tb7764_REMLvar -Rfitts fitts.tb7764_REML -Rerrts errts.tb7764_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 44503 voxels (out of 426275 = 10.4%)
++ -----  matrix condition (354x24):  4.83818  ++ VERY GOOD ++
 + masked off 254114 voxels for being all zero; 172161 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 311 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=24.28
 + X matrix: 46.763% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=354 cols=24; 109*1 cases; total CPU=0.00 Elapsed=24.30
 +  average case bandwidth = 10.55
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=77.55
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=114.96
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./stats.tb7764_REMLvar+orig.BRIK
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./fitts.tb7764_REML+orig.BRIK
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./errts.tb7764_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb7764_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 8.09985e-11
++ Smallest FDR q [2 uns1#0_Tstat] = 5.66236e-12
++ Smallest FDR q [3 uns1_Fstat] = 5.66234e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 0.00768628
++ Smallest FDR q [6 uns2_Fstat] = 0.00768627
++ Smallest FDR q [8 uns3#0_Tstat] = 0.00236549
++ Smallest FDR q [9 uns3_Fstat] = 0.00236549
++ Smallest FDR q [11 str1#0_Tstat] = 7.553e-10
++ Smallest FDR q [12 str1_Fstat] = 7.55303e-10
++ Smallest FDR q [14 str2#0_Tstat] = 0.014093
++ Smallest FDR q [15 str2_Fstat] = 0.014093
++ Smallest FDR q [17 str3#0_Tstat] = 0.00201905
++ Smallest FDR q [18 str3_Fstat] = 0.00201905
++ Smallest FDR q [20 unstructured#0_Tstat] = 3.60355e-05
++ Smallest FDR q [21 unstructured_Fstat] = 3.60354e-05
++ Smallest FDR q [23 structured#0_Tstat] = 4.15763e-08
++ Smallest FDR q [24 structured_Fstat] = 4.15763e-08
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.827717 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.827717 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999868 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999868 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999895 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999895 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.0877702
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.0877703
 + Added 25 FDR curves to dataset stats.tb7764_REML+orig
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./stats.tb7764_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=2984.15
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb7764 pb03.tb7764.r01.blur+orig.HEAD pb03.tb7764.r02.blur+orig.HEAD pb03.tb7764.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ elapsed time = 208.5 s
3dTstat -mean -prefix rm.signal.all all_runs.tb7764+orig[2..19,22..33,36..56,60..71,77..100,103..115,119,124..140,143,144,148,149,152..192,195..229,234..242,248..267,273..277,280..289,298,299,302,303,306..324,329..349,352..354,357..372,381..388,391..417,422..427,432,435..441]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox

*** failure while reading from brick file ./all_runs.tb7764+orig.BRIK
*** desired 301802700 bytes but only got 0
*** Unix error message: Success
   THD_load_datablock
  3dTstat main
** Command line was:
3dTstat -mean -prefix rm.signal.all 'all_runs.tb7764+orig[2..19,22..33,36..56,60..71,77..100,103..115,119,124..140,143,144,148,149,152..192,195..229,234..242,248..267,273..277,280..289,298,299,302,303,306..324,329..349,352..354,357..372,381..388,391..417,422..427,432,435..441]'
[7m** FATAL ERROR:[0m Unable to compute output dataset!
** Program compile date = Jul 20 2017
