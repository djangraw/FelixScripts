echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb8291
endif
set output_dir = tb8291.srtt
if ( -d tb8291.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb8291.srtt
mkdir tb8291.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb8291.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb8291.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb8291.srtt/pb00.tb8291.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.4 s
3dTcat -prefix tb8291.srtt/pb00.tb8291.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.1 s
3dTcat -prefix tb8291.srtt/pb00.tb8291.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.0 s
set tr_counts = ( 150 150 150 )
cd tb8291.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8291.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8291.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8291.r01.tcat+orig.BRIK is 12.200009 degrees from plumb.
++ 30680 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8291.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8291.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8291.r02.tcat+orig.BRIK is 12.200009 degrees from plumb.
++ 30693 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8291.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8291.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8291.r03.tcat+orig.BRIK is 12.200009 degrees from plumb.
++ 30734 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb8291.r01.tshift -tpattern alt+z2 pb00.tb8291.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8291.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8291.r01.tcat+orig.BRIK is 12.200009 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8291.r02.tshift -tpattern alt+z2 pb00.tb8291.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8291.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8291.r02.tcat+orig.BRIK is 12.200009 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8291.r03.tshift -tpattern alt+z2 pb00.tb8291.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8291.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8291.r03.tcat+orig.BRIK is 12.200009 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb8291.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.200009 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 414.493988
 + Used gradual clip level = 378.588989 .. 457.531189
 + Number voxels above clip level = 31947
 + Clustering voxels ...
 + Largest cluster has 31353 voxels
 + Clustering voxels ...
 + Largest cluster has 30254 voxels
 + Filled   395 voxels in small holes; now have 30649 voxels
 + Clustering voxels ...
 + Largest cluster has 30649 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 100415 voxels
 + Mask now has 30657 voxels
++ 30657 voxels in the mask [out of 131072: 23.39%]
++ first  13 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   3 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1004.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1004.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 12.200009 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.200009 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1752383 voxels in -source_automask+2
++ Zero-pad: ybot=1 ytop=0
++ Zero-pad: zbot=4 ztop=3
++ 30657 voxels [18.9%] in weight mask
++ Number of points for matching = 30657
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.602 29.147 19.410 (index)
 + source center of mass = 84.533 174.394 192.142 (index)
 + source-target CM = 0.576 0.959 -4.949 (xyz)
 + center of mass shifts = 0.576 0.959 -4.949
++ shift param auto-range: -68.9..70.1 -69.7..71.6 -53.7..43.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.424286 .. 10.575714
 + Range param#2 [y-shift] = -9.041451 .. 10.958549
 + Range param#3 [z-shift] = -14.948875 .. 5.051125
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.424286 .. 40.575714
 + Range param#2 [y-shift] = -39.041451 .. 40.958549
 + Range param#3 [z-shift] = -44.948875 .. 35.051125
 + 12 free parameters
++ Normalized convergence radius = 0.000449
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1752383 [out of 16372400] voxels
 + base mask has 42161 [out of 162240] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=81 usiz=182.5
 + - copying weight image
 + - using 30657 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 26255 total points stored in 244 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo-..*[#10=-0.0286923] *+-+*[#28=-0.0303333] *+.+---*[#284=-0.034787] *-o*[#1180=-0.0442996] *o---o-$----
 + - best 45 costs found:
    0 v=-0.044300: -12.76 -25.71   8.38 -15.00 -30.00  15.00  [grid]
    1 v=-0.038779: -26.09 -25.71   8.38 -30.00 -30.00  15.00  [grid]
    2 v=-0.038379: -12.76 -25.71   8.38 -15.00 -30.00 -15.00  [grid]
    3 v=-0.037956: -14.72 -19.93  25.44 -14.56 -29.40  15.92  [rand]
    4 v=-0.036421: -15.57  -8.51  19.40 -20.99 -15.73  16.09  [rand]
    5 v=-0.035839: -22.28  24.53   5.47   5.91  29.74  29.45  [rand]
    6 v=-0.035716: -15.41 -18.53 -10.67 -20.53   3.14  10.08  [rand]
    7 v=-0.035536: -12.76  14.29   8.38  15.00  30.00  30.00  [grid]
    8 v=-0.034787: -12.76 -12.37  21.72 -15.00 -15.00  15.00  [grid]
    9 v=-0.034475: -12.76 -12.37  21.72 -15.00 -30.00 -15.00  [grid]
   10 v=-0.034296:  -8.07 -19.47  12.52 -25.20 -18.50 -13.54  [rand]
   11 v=-0.034003: -15.41 -18.53 -10.67 -20.53  -3.14  10.08  [rand]
   12 v=-0.033439: -12.76  14.29  21.72 -15.00 -30.00 -15.00  [grid]
   13 v=-0.033410:  34.90 -15.63   3.65  16.34   8.64 -40.54  [rand]
   14 v=-0.033400:   6.56  -2.45  19.58  29.81  -4.26 -23.54  [rand]
   15 v=-0.032958: -12.76 -12.37  21.72 -15.00 -30.00  15.00  [grid]
   16 v=-0.032519: -26.09  27.63   8.38  15.00  15.00  30.00  [grid]
   17 v=-0.031720: -12.76 -12.37  21.72 -15.00 -15.00 -15.00  [grid]
   18 v=-0.031018: -18.92  17.63  -2.35 -30.54  19.59  20.03  [rand]
   19 v=-0.030958: -12.76  14.29   8.38 -30.00  15.00  30.00  [grid]
   20 v=-0.030553: -12.76  14.29   8.38  15.00  15.00  30.00  [grid]
   21 v=-0.030440: -31.91  15.65   6.86  11.16   9.40  34.39  [rand]
   22 v=-0.030333: -12.76 -12.37   8.38 -15.00 -15.00  15.00  [grid]
   23 v=-0.030231: -31.91 -13.73   6.86  11.16  -9.40  34.39  [rand]
   24 v=-0.030166: -12.76 -12.37   8.38 -15.00  15.00 -30.00  [grid]
   25 v=-0.029526: -12.76 -25.71  21.72 -15.00 -30.00  15.00  [grid]
   26 v=-0.029471: -33.75 -15.63   3.65  16.34  -8.64  40.54  [rand]
   27 v=-0.029460: -15.57  10.42  19.40  20.99  15.73  16.09  [rand]
   28 v=-0.029117: -26.09 -25.71  21.72 -15.00 -30.00  30.00  [grid]
   29 v=-0.028866:  32.42 -10.84  -2.21  23.31  -3.26 -40.47  [rand]
   30 v=-0.028692: -12.76  14.29   8.38 -15.00  15.00  15.00  [grid]
   31 v=-0.028503: -12.76 -12.37  21.72 -30.00 -30.00 -15.00  [grid]
   32 v=-0.028285: -13.45 -14.76   9.72 -24.25 -37.55   4.41  [rand]
   33 v=-0.028248:  -6.48 -18.86  30.80 -25.15 -27.05 -27.90  [rand]
   34 v=-0.028044: -26.09  14.29   8.38  15.00  15.00  30.00  [grid]
   35 v=-0.028008: -12.76 -12.37  21.72 -15.00 -30.00  30.00  [grid]
   36 v=-0.027982: -12.76  14.29  21.72  15.00  15.00  30.00  [grid]
   37 v=-0.027888: -22.28  24.53   5.47  -5.91  29.74  29.45  [rand]
   38 v=-0.027748: -12.76 -25.71  21.72 -30.00 -30.00 -15.00  [grid]
   39 v=-0.027671: -14.36 -23.13  24.97 -19.13 -33.53  22.48  [rand]
   40 v=-0.027621: -31.91  15.65   6.86 -11.16   9.40  34.39  [rand]
   41 v=-0.027544: -11.02   5.52  -1.05 -24.53  29.49  26.10  [rand]
   42 v=-0.027403: -31.63 -28.09  31.19  40.41  19.09  40.75  [rand]
   43 v=-0.027341: -23.77  30.65   8.08 -28.68  38.91 -32.36  [rand]
   44 v=-0.027272: -31.91  15.65   6.86  11.16  -9.40  34.39  [rand]
*[#8004=-0.0458424] *[#8005=-0.0479364] *[#8011=-0.0488124] *[#8014=-0.0517746] *[#8015=-0.0539771] *[#8016=-0.054834] *[#8019=-0.0561783] *[#8020=-0.0562381] *[#8021=-0.0577773] *[#8022=-0.0578265] *[#8026=-0.0580836] *[#8027=-0.0587165] *[#8030=-0.0588866] *[#8033=-0.0592627] *[#8267=-0.0601272] *[#8273=-0.0610456] *[#8274=-0.0616166] *[#8277=-0.0621057] *[#8280=-0.0622615] *[#8281=-0.0631648] *[#8284=-0.0633925] *[#8290=-0.0635255] *[#8291=-0.0637324] *[#8625=-0.0669496] *[#8629=-0.06707] *[#8630=-0.0673928]  + - costs of the above after a little optimization:
    0 v=-0.059263: -10.53 -25.95  11.58  -6.98 -30.54  15.96  [grid]
    1 v=-0.044606: -23.67 -25.41   9.01 -29.24 -31.20  14.10  [grid]
    2 v=-0.051990: -12.06 -27.47  12.69 -18.07 -32.71 -12.79  [grid]
    3 v=-0.058827: -12.61 -18.41  27.12  -3.92 -27.50  16.83  [rand]
    4 v=-0.049332: -15.63  -4.89  19.39 -26.20 -13.94  18.24  [rand]
    5 v=-0.043118: -19.16  24.85   3.50   3.35  28.00  28.50  [rand]
    6 v=-0.049495: -13.97 -16.00 -13.79 -19.01   4.16  10.26  [rand]
    7 v=-0.036788: -12.34  14.28   8.41  15.03  29.93  30.43  [grid]
    8 v=-0.063732:  -7.73 -14.03  23.09  -3.76 -22.88   9.80  [grid]
    9 v=-0.060375: -11.39  -9.53  21.09 -11.62 -29.03  -5.69  [grid]
   10 v=-0.042723:  -7.48 -19.20  12.26 -20.80 -18.17 -13.49  [rand]
   11 v=-0.047822: -14.87 -17.28 -10.96 -21.21   1.23   9.38  [rand]
   12 v=-0.038046: -13.08  14.69  21.31 -11.39 -30.34 -14.94  [grid]
   13 v=-0.046022:  35.33  -9.22   3.42  14.86   5.66 -42.08  [rand]
   14 v=-0.044076:   7.68  -3.55  17.77  32.88  -7.96 -25.79  [rand]
   15 v=-0.048579: -12.98 -17.05  22.01 -14.52 -29.95  14.95  [grid]
   16 v=-0.033794: -26.17  27.42   8.38  14.64  15.08  30.23  [grid]
   17 v=-0.051886:  -7.74 -12.02  22.76 -13.92 -14.54 -16.11  [grid]
   18 v=-0.038124: -18.46  17.23  -2.40 -29.66  20.35  24.36  [rand]
  *19 v=-0.067393: -14.56   7.60   4.51 -27.84   6.95  27.28  [grid]
   20 v=-0.045765: -15.54  14.68  13.13  13.10  16.93  31.18  [grid]
   21 v=-0.044240: -31.63  14.54  11.81   7.61   7.61  32.99  [rand]
   22 v=-0.055679: -11.57 -13.19   6.31 -14.03 -15.31   6.32  [grid]
   23 v=-0.041877: -32.23 -13.49   7.15  10.96  -4.23  34.55  [rand]
   24 v=-0.033134: -12.19 -11.94   9.50 -15.10  15.10 -30.11  [grid]
   25 v=-0.051487: -13.92 -23.97  22.65 -11.77 -35.68  15.53  [grid]
   26 v=-0.042377: -32.19 -12.02   2.25  13.50  -8.47  38.85  [rand]
   27 v=-0.039946: -15.55  16.02  20.11  18.70  16.70  20.06  [rand]
   28 v=-0.057028: -20.28 -25.75  20.17 -15.85 -37.69  29.23  [grid]
   29 v=-0.037568:  33.10 -11.50  -1.79  22.22  -7.32 -39.21  [rand]
   30 v=-0.042622: -10.82  13.12   6.21 -14.95  12.97  21.68  [grid]
   31 v=-0.047566: -10.02 -19.84  23.52 -26.05 -28.79 -13.36  [grid]
   32 v=-0.044258: -14.59 -17.14  14.69 -25.28 -29.61   2.25  [rand]
   33 v=-0.036679:  -6.49 -18.80  29.73 -23.97 -25.60 -22.99  [rand]
   34 v=-0.038841: -23.51  16.50  11.25  13.55  16.11  32.20  [grid]
   35 v=-0.035023: -12.71 -12.03  21.89 -15.00 -25.47  29.89  [grid]
   36 v=-0.043348: -11.11  13.83  14.35  19.99  17.86  27.32  [grid]
   37 v=-0.043015: -23.63  19.11   0.74  -2.25  28.39  29.70  [rand]
   38 v=-0.040599: -11.28 -21.32  21.77 -30.00 -30.05 -14.57  [grid]
   39 v=-0.044629: -18.58 -23.28  24.02 -18.62 -32.99  22.61  [rand]
   40 v=-0.049555: -34.46  13.28   6.93  -3.39  12.54  37.57  [rand]
   41 v=-0.041781:  -6.86   6.82  -0.74 -25.05  28.37  25.26  [rand]
   42 v=-0.036633: -31.21 -33.43  28.98  44.08  16.71  37.95  [rand]
   43 v=-0.034383: -22.96  30.01   7.33 -23.76  38.67 -33.72  [rand]
   44 v=-0.047379: -33.59  10.05   8.69   6.33  -3.59  42.46  [rand]
 + - save #19 for twobest
 + - save # 8 for twobest
 + - save # 9 for twobest
 + - save # 0 for twobest
 + - save # 3 for twobest
 + - save #28 for twobest
 + - save #22 for twobest
 + - save # 2 for twobest
 + - save #17 for twobest
 + - save #25 for twobest
 + - save #40 for twobest
 + - save # 6 for twobest
 + - save # 4 for twobest
 + - save #15 for twobest
 + - skip #11 for twobest: too close to set # 6
 + - save #31 for twobest
 + - save #44 for twobest
 + - save #13 for twobest
 + - save #20 for twobest
 + - save #39 for twobest
 + - save # 1 for twobest
 + - save #32 for twobest
 + - save #21 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=81 usiz=182.5
 + - retaining old weight image
 + - using 30657 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26618 total points stored in 267 'RHDD(13.7332)' bloks
 + - param set #1 has cost=-0.046396
 + -- Parameters = -14.7153 7.5234 4.6438 -27.9923 7.3041 26.9426 1.0003 1.0000 0.9995 0.0001 0.0003 0.0001
 + - param set #2 has cost=-0.050640
 + -- Parameters = -7.5300 -12.4718 22.4716 -5.4352 -25.5556 4.7541 1.0166 1.0182 1.0177 -0.0074 0.0095 0.0029
 + - param set #3 has cost=-0.057106
 + -- Parameters = -8.4541 -9.8926 19.8567 -7.9126 -27.5747 1.1829 1.0069 1.0069 0.9910 0.0015 0.0068 -0.0005
 + - param set #4 has cost=-0.043180
 + -- Parameters = -9.7060 -26.0063 11.7862 -6.1360 -30.7744 15.9773 0.9997 1.0004 1.0016 0.0006 0.0102 0.0002
 + - param set #5 has cost=-0.040244
 + -- Parameters = -12.6979 -18.7492 27.1930 -3.9746 -27.7186 16.7752 0.9997 0.9999 0.9998 0.0004 0.0105 -0.0004
 + - param set #6 has cost=-0.039798
 + -- Parameters = -21.4875 -26.4685 21.6325 -15.2968 -39.1975 30.9815 0.9983 1.0034 1.0128 0.0024 0.0089 0.0027
 + - param set #7 has cost=-0.047779
 + -- Parameters = -10.5325 -13.3636 6.0274 -14.2608 -14.9182 1.2690 1.0024 1.0397 0.9893 -0.0002 0.0008 -0.0001
 + - param set #8 has cost=-0.042898
 + -- Parameters = -11.7461 -23.5703 13.0194 -16.7104 -33.4244 -10.7961 0.9988 1.0021 1.0016 0.0014 0.0005 0.0004
 + - param set #9 has cost=-0.042108
 + -- Parameters = -6.8666 -11.5232 20.1091 -13.8925 -15.3156 -16.3898 1.0136 1.0009 0.9921 -0.0022 -0.0031 0.0070
 + - param set #10 has cost=-0.036593
 + -- Parameters = -13.7707 -23.4817 22.7385 -9.3768 -38.6636 14.5394 1.0055 1.0031 1.0048 0.0048 0.0037 -0.0074
 + - param set #11 has cost=-0.038789
 + -- Parameters = -34.1182 13.4026 6.7491 -3.3166 13.2192 37.2732 1.0006 0.9999 0.9991 0.0001 0.0103 -0.0001
*[#10345=-0.148358] *[#10361=-0.149098] *[#10362=-0.183859] *[#10364=-0.183939] *[#10366=-0.184087] *[#10367=-0.210112] *[#10368=-0.250195] *[#10370=-0.257791] *[#10375=-0.259136] *[#10377=-0.271982] *[#10378=-0.288516] *[#10379=-0.294816] *[#10380=-0.295663] *[#10381=-0.29687] *[#10388=-0.297701] *[#10389=-0.297971] *[#10390=-0.300921] *[#10393=-0.302323] *[#10394=-0.302748] *[#10397=-0.303633] *[#10400=-0.304527] *[#10403=-0.305115] *[#10404=-0.305201] *[#10407=-0.305474] *[#10408=-0.305714] *[#10417=-0.306263] *[#10418=-0.306671] *[#10419=-0.306843] *[#10422=-0.306938] *[#10426=-0.306956] *[#10428=-0.307164] *[#10430=-0.307165] *[#10432=-0.307252] *[#10433=-0.307502] *[#10434=-0.307753] *[#10437=-0.308288] *[#10440=-0.308399] 
 + - param set #12 has cost=-0.308399
 + -- Parameters = 0.3359 -1.3269 -0.5771 -0.7452 -0.5151 -0.0778 0.9939 1.0077 0.9937 -0.0035 -0.0039 0.0026
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.301 
 + --- dist(#3,#1) = 0.288 
 + --- dist(#4,#1) = 0.16 
 + --- dist(#5,#1) = 0.303 
 + --- dist(#6,#1) = 0.336 
 + --- dist(#7,#1) = 0.366 
 + --- dist(#8,#1) = 0.259 
 + --- dist(#9,#1) = 0.347 
 + --- dist(#10,#1) = 0.43 
 + --- dist(#11,#1) = 0.431 
 + --- dist(#12,#1) = 0.424 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=81 usiz=182.5
 + - retaining old weight image
 + - using 30657 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26728 total points stored in 275 'RHDD(13.5933)' bloks
*[#10442=-0.320475] *[#10450=-0.321131] *[#10464=-0.321929] *[#10465=-0.323262] *[#10466=-0.324047] *[#10469=-0.324146] *[#10472=-0.324179] *[#10475=-0.32439] *[#10476=-0.324574] *[#10477=-0.324837] *[#10478=-0.324955] *[#10484=-0.324971] *[#10495=-0.325061] *[#10496=-0.325221] *[#10497=-0.325289] *[#10500=-0.325359] *[#10511=-0.325481] *[#10514=-0.325492] *[#10516=-0.325577] *[#10517=-0.325691] 
 + - param set #1 has cost=-0.325691
 + -- Parameters = 0.4073 -1.2184 -0.2648 -0.7139 -0.6085 -0.0138 1.0000 1.0145 0.9886 -0.0015 -0.0051 0.0015
 + - param set #2 has cost=-0.052300
 + -- Parameters = -7.6241 -9.1381 19.3848 -7.0707 -26.8571 1.9709 1.0154 1.0104 0.9932 -0.0056 0.0180 0.0045
 + - param set #3 has cost=-0.045287
 + -- Parameters = -7.6035 -12.4616 22.4496 -5.0804 -25.4352 4.7047 1.0274 1.0177 1.0186 -0.0072 0.0094 0.0033
 + - param set #4 has cost=-0.044291
 + -- Parameters = -10.4829 -13.4074 5.5919 -14.1376 -14.7268 0.8279 1.0039 1.0387 0.9890 -0.0020 0.0071 -0.0019
 + - param set #5 has cost=-0.038723
 + -- Parameters = -13.6400 6.3771 5.6006 -28.7688 9.1023 28.8064 1.0042 0.9841 0.9986 -0.0027 0.0139 -0.0051
 + - param set #6 has cost=-0.032694
 + -- Parameters = -9.6865 -26.1046 12.0617 -5.9228 -30.7668 16.0648 0.9984 0.9995 1.0009 -0.0002 0.0167 0.0010
 + - param set #7 has cost=-0.041113
 + -- Parameters = -11.6682 -25.2264 12.4001 -16.8830 -36.0990 -10.2047 0.9969 1.0022 0.9299 -0.0075 -0.0029 0.0020
 + - param set #8 has cost=-0.035654
 + -- Parameters = -6.6826 -10.9990 20.0564 -17.2856 -15.7826 -16.6217 1.0172 1.0049 0.9903 -0.0036 -0.0022 0.0052
 + - param set #9 has cost=-0.034275
 + -- Parameters = -13.2268 -19.6799 27.8713 -3.6343 -27.4178 17.8591 1.0021 1.0004 0.9965 -0.0027 0.0095 -0.0005
 + - param set #10 has cost=-0.032598
 + -- Parameters = -20.8834 -27.4048 21.1900 -16.0032 -38.1246 30.3102 1.0016 1.0091 0.9955 0.0087 0.0031 0.0034
 + - param set #11 has cost=-0.029111
 + -- Parameters = -34.1086 13.5813 6.8287 -3.2812 13.0710 37.1671 1.0005 0.9998 0.9990 0.0001 0.0173 -0.0002
 + - param set #12 has cost=-0.036347
 + -- Parameters = -12.9160 -23.8532 23.5996 -5.5935 -38.3707 15.2975 0.9969 1.0008 0.9913 0.0016 0.0048 -0.0116
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.292 
 + --- dist(#3,#1) = 0.284 
 + --- dist(#4,#1) = 0.157 
 + --- dist(#5,#1) = 0.394 
 + --- dist(#6,#1) = 0.32 
 + --- dist(#7,#1) = 0.42 
 + --- dist(#8,#1) = 0.254 
 + --- dist(#9,#1) = 0.352 
 + --- dist(#10,#1) = 0.335 
 + --- dist(#11,#1) = 0.417 
 + --- dist(#12,#1) = 0.431 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=81 usiz=182.5
 + - retaining old weight image
 + - using 30657 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26933 total points stored in 284 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.323209
 + -- Parameters = 0.5128 -0.9965 -0.3390 -0.5310 -0.6351 0.0130 1.0023 1.0197 0.9995 0.0042 -0.0054 0.0013
 + - param set #2 has cost=-0.052803
 + -- Parameters = -6.6924 -8.4465 19.3394 -6.2697 -26.4984 4.0893 1.0154 1.0185 0.9846 -0.0088 0.0116 0.0051
 + - param set #3 has cost=-0.051018
 + -- Parameters = -5.8616 -7.2848 17.8704 -6.0656 -24.1641 2.9861 1.0246 1.0063 1.0143 -0.0096 0.0097 0.0006
 + - param set #4 has cost=-0.045971
 + -- Parameters = -9.6516 -13.0358 4.8566 -12.3529 -17.2731 1.0800 1.0114 1.0383 0.9909 0.0002 0.0095 -0.0007
 + - param set #5 has cost=-0.037800
 + -- Parameters = -11.5991 -24.8221 12.5389 -16.5713 -36.1689 -9.7813 0.9852 1.0081 0.9312 -0.0065 -0.0042 0.0040
 + - param set #6 has cost=-0.034258
 + -- Parameters = -13.8016 6.6541 6.1294 -28.7331 8.1948 28.7005 1.0043 0.9827 0.9932 -0.0036 0.0224 -0.0074
 + - param set #7 has cost=-0.031722
 + -- Parameters = -13.1646 -23.1637 24.0997 -5.1555 -38.7800 15.1351 0.9897 1.0003 0.9925 -0.0014 0.0043 -0.0049
 + - param set #8 has cost=-0.034338
 + -- Parameters = -7.2119 -9.4678 20.1348 -17.8999 -15.6286 -16.6960 1.0177 1.0065 0.9899 -0.0041 -0.0029 0.0043
 + - param set #9 has cost=-0.029194
 + -- Parameters = -13.5519 -19.5057 28.6611 -3.3551 -27.9249 18.5267 1.0065 0.9927 0.9992 -0.0018 0.0094 0.0007
 + - param set #10 has cost=-0.030008
 + -- Parameters = -10.1456 -25.9602 11.9573 -5.7249 -30.7084 16.0217 0.9980 0.9986 1.0002 -0.0004 0.0168 -0.0004
 + - param set #11 has cost=-0.028570
 + -- Parameters = -20.8330 -27.3276 21.1501 -15.9977 -38.0525 30.4339 1.0002 1.0089 0.9937 0.0086 0.0029 0.0035
 + - param set #12 has cost=-0.025682
 + -- Parameters = -34.0361 13.6639 7.0668 -3.6247 12.7874 37.5439 0.9989 0.9886 0.9982 0.0001 0.0173 -0.0007
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.287 
 + --- dist(#3,#1) = 0.261 
 + --- dist(#4,#1) = 0.185 
 + --- dist(#5,#1) = 0.395 
 + --- dist(#6,#1) = 0.256 
 + --- dist(#7,#1) = 0.319 
 + --- dist(#8,#1) = 0.424 
 + --- dist(#9,#1) = 0.334 
 + --- dist(#10,#1) = 0.363 
 + --- dist(#11,#1) = 0.416 
 + --- dist(#12,#1) = 0.432 
 + - Total coarse refinement net CPU time = 0.0 s; 3099 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=81 usiz=182.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 26700 total points stored in 281 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.318931 *
 + -- Parameters = 0.5128 -0.9965 -0.3390 -0.5310 -0.6351 0.0130 1.0023 1.0197 0.9995 0.0042 -0.0054 0.0013
 + - cost(#2)=-0.050501  
 + -- Parameters = -6.6924 -8.4465 19.3394 -6.2697 -26.4984 4.0893 1.0154 1.0185 0.9846 -0.0088 0.0116 0.0051
 + - cost(#3)=-0.048615  
 + -- Parameters = -5.8616 -7.2848 17.8704 -6.0656 -24.1641 2.9861 1.0246 1.0063 1.0143 -0.0096 0.0097 0.0006
 + - cost(#4)=-0.043604  
 + -- Parameters = -9.6516 -13.0358 4.8566 -12.3529 -17.2731 1.0800 1.0114 1.0383 0.9909 0.0002 0.0095 -0.0007
 + - cost(#5)=-0.036321  
 + -- Parameters = -11.5991 -24.8221 12.5389 -16.5713 -36.1689 -9.7813 0.9852 1.0081 0.9312 -0.0065 -0.0042 0.0040
 + - cost(#6)=-0.030858  
 + -- Parameters = -7.2119 -9.4678 20.1348 -17.8999 -15.6286 -16.6960 1.0177 1.0065 0.9899 -0.0041 -0.0029 0.0043
 + - cost(#7)=-0.030768  
 + -- Parameters = -13.8016 6.6541 6.1294 -28.7331 8.1948 28.7005 1.0043 0.9827 0.9932 -0.0036 0.0224 -0.0074
 + - cost(#8)=-0.029039  
 + -- Parameters = -13.1646 -23.1637 24.0997 -5.1555 -38.7800 15.1351 0.9897 1.0003 0.9925 -0.0014 0.0043 -0.0049
 + - cost(#9)=-0.030436  
 + -- Parameters = -10.1456 -25.9602 11.9573 -5.7249 -30.7084 16.0217 0.9980 0.9986 1.0002 -0.0004 0.0168 -0.0004
 + - cost(#10)=-0.025920  
 + -- Parameters = -13.5519 -19.5057 28.6611 -3.3551 -27.9249 18.5267 1.0065 0.9927 0.9992 -0.0018 0.0094 0.0007
 + - cost(#11)=-0.027594  
 + -- Parameters = -20.8330 -27.3276 21.1501 -15.9977 -38.0525 30.4339 1.0002 1.0089 0.9937 0.0086 0.0029 0.0035
 + - cost(#12)=-0.024521  
 + -- Parameters = -34.0361 13.6639 7.0668 -3.6247 12.7874 37.5439 0.9989 0.9886 0.9982 0.0001 0.0173 -0.0007
 + - cost(#13)=-0.034369  
 + -- Parameters = 0.5757 0.9585 -4.9489 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.320876 *
 + -- Parameters = 0.5778 -0.7013 -0.2107 -0.4307 -1.1680 0.0768 1.0014 1.0207 0.9964 0.0068 -0.0086 -0.0069
 + - cost(#2)=-0.052817  
 + -- Parameters = -6.4851 -8.3937 18.9080 -6.1212 -26.3279 4.2711 1.0295 1.0218 0.9800 -0.0085 0.0108 0.0124
 + - cost(#3)=-0.053627  
 + -- Parameters = -5.9435 -6.5417 17.3895 -5.8015 -22.9774 2.8083 1.0310 1.0321 0.9833 -0.0108 0.0070 0.0024
 + - cost(#4)=-0.046282  
 + -- Parameters = -9.0343 -13.0981 4.6715 -11.5387 -17.0932 1.8437 1.0127 1.0293 0.9922 0.0005 0.0096 -0.0031
 + - cost(#5)=-0.037294  
 + -- Parameters = -11.7479 -24.6983 12.7001 -16.5539 -36.2875 -9.7406 0.9701 1.0087 0.9282 -0.0076 -0.0041 0.0026
 + - cost(#6)=-0.032474  
 + -- Parameters = -7.3167 -9.8323 19.1196 -18.2577 -15.4662 -16.9883 1.0245 1.0061 0.9876 -0.0037 -0.0041 0.0053
 + - cost(#7)=-0.031512  
 + -- Parameters = -13.6801 6.4913 6.1016 -28.6963 8.4472 28.7036 1.0036 0.9800 0.9872 -0.0046 0.0253 -0.0097
 + - cost(#8)=-0.030947  
 + -- Parameters = -12.4897 -23.1447 23.9772 -4.5640 -38.5831 17.1424 0.9884 1.0000 0.9937 -0.0017 0.0053 -0.0049
 + - cost(#9)=-0.031273  
 + -- Parameters = -10.1396 -26.0221 11.7221 -5.6741 -30.3374 15.8954 0.9954 0.9979 1.0016 -0.0048 0.0191 0.0005
 + - cost(#10)=-0.026864  
 + -- Parameters = -13.2648 -19.6928 28.6642 -3.1163 -28.0610 18.7633 1.0071 0.9866 1.0001 -0.0018 0.0093 -0.0001
 + - cost(#11)=-0.028252  
 + -- Parameters = -21.1265 -27.7125 21.0619 -16.3606 -38.0628 30.2913 1.0001 1.0084 0.9950 0.0090 0.0031 0.0058
 + - cost(#12)=-0.025548  
 + -- Parameters = -33.9858 13.7030 6.8863 -3.1558 12.6083 37.6994 1.0059 0.9886 1.0006 0.0011 0.0169 -0.0014
 + - cost(#13)=-0.314753  
 + -- Parameters = 0.4374 -1.3434 -0.0882 -0.6115 -0.5570 0.0255 0.9940 1.0117 0.9891 -0.0041 -0.0085 0.0040
 + - case #1 is now the best
 + - Initial  cost = -0.320876
 + - Initial fine Parameters = 0.5778 -0.7013 -0.2107 -0.4307 -1.1680 0.0768 1.0014 1.0207 0.9964 0.0068 -0.0086 -0.0069
 + - Finalish cost = -0.321390 ; 283 funcs
 + - Final    cost = -0.321589 ; 317 funcs
 + Final fine fit Parameters:
       x-shift= 0.5190   y-shift=-0.2998   z-shift=-0.2530
       z-angle=-0.3749   x-angle=-1.6976   y-angle=-0.0836
       x-scale= 1.0031   y-scale= 1.0231   z-scale= 0.9973
     y/x-shear= 0.0090 z/x-shear=-0.0057 z/y-shear=-0.0172
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.5190 -0.2998 -0.2530 -0.3749 -1.6976 -0.0836 1.0031 1.0231 0.9973 0.0090 -0.0057 -0.0172
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.200009 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0139 -1.0021 0.1812 241.9174 -0.0102 0.2043 0.9812 85.9216 -1.0031 -0.0065 -0.0015 201.2907
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 19.6 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2614.070100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 92.472 47.3291   ITER = 5/137
92.472

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 867ms]
lev=0 0..171 0..213 0..166: [first cost=-0.69100] ... done [cost:-0.69100==>-0.75236]
lev=1 patch=129x161x125 [clock= 14m 14s 514ms]........:[cost=-0.78348]:........ done [cost:-0.75236==>-0.78765 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 22m 44s 489ms]......................... done [cost:-0.78765==>-0.85894 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 29m 26s 725ms].................... done [cost:-0.85894==>-0.91886 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 34m 26s 59ms]............. done [cost:-0.91886==>-0.97895 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 38m 19s 12ms].............. done [cost:-0.97895==>-1.03602 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 42m 0s 492ms]............... done [cost:-1.03602==>-1.07990 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 45m 35s 360ms]...................... done [cost:-1.07990==>-1.17467 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 49m 21s 245ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8291/tb8291.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.7 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb8291.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.200009 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8291.r01.tshift+orig.BRIK is 12.200009 degrees from plumb.
++ Reading input dataset ./pb01.tb8291.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 33462 voxels
 + 5597 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.218  pitch=-0.317  yaw=-0.045  dS=-0.282  dL=-0.032  dP=-0.230
++ Mean: roll=-0.049  pitch=-0.067  yaw=+0.117  dS=-0.059  dL=+0.119  dP=-0.017
++ Max : roll=+0.123  pitch=+0.183  yaw=+0.277  dS=+0.203  dL=+0.288  dP=+0.092
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.10(0.10) 0.10(0.03) 0.10(0.10) 0.11(0.11) 0.13(0.15) 0.14(0.06) 0.25(0.16) 0.43(0.18) 0.35(0.09) 0.27(0.08) 0.22(0.06) 0.20(0.04) 0.21(0.03) 0.19(0.04) 0.16(0.06) 0.16(0.03) 0.15(0.14) 0.14(0.03) 0.14(0.07) 0.15(0.06) 0.11(0.05) 0.11(0.01) 0.13(0.04) 0.10(0.09) 0.13(0.08) 0.15(0.04) 0.18(0.04) 0.16(0.02) 0.14(0.04) 0.16(0.03) 0.18(0.05) 0.24(0.09) 0.23(0.06) 0.22(0.04) 0.41(0.26) 0.27(0.18) 0.20(0.15) 0.25(0.06) 0.23(0.10) 0.23(0.06) 0.27(0.12) 0.29(0.05) 0.27(0.09) 0.23(0.05) 0.25(0.06) 0.25(0.05) 0.26(0.05) 0.33(0.11) 0.27(0.17) 0.27(0.10) 0.28(0.05) 0.29(0.05) 0.30(0.07) 0.29(0.04) 0.30(0.07) 0.29(0.07) 0.29(0.06) 0.25(0.09) 0.26(0.06) 0.25(0.02) 0.25(0.14) 0.31(0.09) 0.29(0.07) 0.32(0.04) 0.28(0.05) 0.26(0.05) 0.30(0.09) 0.35(0.09) 0.25(0.11) 0.27(0.06) 0.29(0.05) 0.35(0.07) 0.36(0.04) 0.34(0.07) 0.32(0.06) 0.35(0.09) 0.30(0.07) 0.30(0.05) 0.30(0.04) 0.28(0.19) 0.34(0.15) 0.34(0.15) 0.33(0.11) 0.35(0.05) 0.29(0.13) 0.28(0.09) 0.30(0.07) 0.29(0.08) 0.35(0.13) 0.32(0.05) 0.32(0.23) 0.50(0.26) 0.40(0.28) 0.21(0.38) 0.45(0.36) 0.47(0.20) 0.44(0.17) 0.47(0.05) 0.48(0.06) 0.47(0.05) 0.51(0.09) 0.50(0.07) 0.51(0.06) 0.51(0.04) 0.52(0.06) 0.51(0.08) 0.51(0.03) 0.52(0.05) 0.48(0.25) 0.51(0.15) 0.46(0.16) 0.50(0.06) 0.49(0.03) 0.46(0.07) 0.50(0.05) 0.51(0.05) 0.49(0.05) 0.50(0.09) 0.52(0.06) 0.53(0.07) 0.52(0.05) 0.55(0.06) 0.56(0.05) 0.59(0.08) 0.61(0.05) 0.62(0.06) 0.60(0.13) 0.63(0.07) 0.62(0.05) 0.62(0.04) 0.65(0.06) 0.65(0.03) 0.66(0.04) 0.68(0.03) 0.69(0.05) 0.70(0.07) 0.71(0.04) 0.71(0.07) 0.74(0.11) 0.77(0.13) 0.71(0.17) 0.68(0.12) 0.70(0.08) 0.73(0.16) 0.80(0.08) 0.78(0.05) 0.79(0.10) 0.81(0.09) 0.81(0.32)
++ Max displacement in automask = 0.81 (mm) at sub-brick 149
++ Max delta displ  in automask = 0.38 (mm) at sub-brick 94
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb8291.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8291.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8291.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8291.r01.tshift+orig.BRIK is 12.200009 degrees from plumb.
++ Source dataset: ./pb01.tb8291.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.200009 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb8291.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.200009 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8291.r02.tshift+orig.BRIK is 12.200009 degrees from plumb.
++ Reading input dataset ./pb01.tb8291.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 33565 voxels
 + 5616 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.212  pitch=-1.124  yaw=+0.240  dS=-0.238  dL=-0.268  dP=+0.055
++ Mean: roll=+0.017  pitch=-0.932  yaw=+0.433  dS=+0.209  dL=+0.021  dP=+0.125
++ Max : roll=+0.174  pitch=-0.690  yaw=+0.521  dS=+0.600  dL=+0.185  dP=+0.252
++ Max displacements (mm) for each sub-brick:
 2.61(0.00) 2.38(0.28) 2.25(0.19) 2.64(0.48) 2.58(0.08) 2.59(0.05) 2.61(0.13) 2.61(0.03) 2.28(0.36) 2.13(0.19) 2.25(0.18) 2.36(0.12) 2.40(0.05) 2.43(0.04) 2.41(0.06) 2.43(0.07) 2.46(0.08) 2.49(0.05) 2.54(0.07) 2.59(0.06) 2.54(0.08) 2.53(0.04) 2.55(0.04) 2.55(0.04) 2.55(0.03) 2.58(0.03) 2.55(0.04) 2.47(0.08) 2.50(0.04) 2.48(0.08) 2.45(0.07) 2.58(0.18) 2.54(0.13) 2.47(0.08) 2.46(0.06) 2.46(0.03) 2.41(0.07) 2.38(0.05) 2.46(0.09) 2.42(0.07) 2.43(0.09) 2.40(0.04) 2.35(0.05) 2.36(0.03) 2.38(0.04) 2.35(0.06) 2.36(0.03) 2.30(0.07) 2.26(0.05) 2.39(0.14) 2.44(0.08) 2.45(0.20) 2.47(0.20) 2.31(0.21) 2.12(0.32) 2.27(0.21) 2.27(0.02) 2.30(0.14) 2.19(0.13) 2.17(0.04) 2.28(0.13) 2.26(0.06) 2.16(0.12) 2.16(0.05) 1.91(0.29) 1.89(0.08) 1.89(0.04) 1.84(0.07) 1.87(0.04) 1.87(0.02) 1.84(0.12) 1.90(0.08) 1.87(0.05) 1.91(0.04) 1.85(0.06) 1.79(0.07) 1.81(0.06) 1.79(0.07) 1.75(0.05) 1.80(0.06) 1.83(0.05) 1.77(0.07) 1.80(0.04) 1.77(0.05) 1.73(0.05) 1.82(0.10) 1.82(0.02) 1.84(0.04) 1.81(0.05) 1.74(0.07) 1.76(0.04) 1.79(0.08) 1.71(0.10) 1.74(0.06) 1.65(0.10) 1.74(0.10) 1.70(0.05) 1.73(0.04) 1.78(0.05) 1.70(0.08) 1.66(0.05) 1.69(0.05) 1.72(0.05) 1.71(0.04) 1.71(0.03) 1.62(0.09) 1.63(0.03) 1.72(0.09) 1.68(0.05) 1.68(0.05) 1.69(0.05) 1.94(0.27) 1.77(0.18) 1.82(0.05) 1.74(0.10) 1.74(0.05) 1.73(0.03) 1.74(0.05) 1.75(0.05) 1.69(0.07) 1.67(0.08) 1.63(0.09) 1.66(0.06) 1.67(0.02) 1.65(0.05) 1.67(0.02) 1.70(0.04) 1.58(0.12) 1.58(0.04) 1.54(0.06) 1.58(0.06) 1.60(0.06) 1.57(0.06) 1.61(0.06) 1.59(0.02) 1.54(0.06) 1.59(0.07) 1.51(0.10) 1.49(0.04) 1.61(0.14) 1.56(0.09) 1.41(0.17) 1.41(0.16) 1.41(0.05) 1.46(0.05) 1.43(0.15) 1.48(0.10) 1.53(0.18) 1.64(0.15) 1.62(0.13)
++ Max displacement in automask = 2.64 (mm) at sub-brick 3
++ Max delta displ  in automask = 0.48 (mm) at sub-brick 3
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb8291.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8291.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8291.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8291.r02.tshift+orig.BRIK is 12.200009 degrees from plumb.
++ Source dataset: ./pb01.tb8291.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.200009 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb8291.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.200009 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8291.r03.tshift+orig.BRIK is 12.200009 degrees from plumb.
++ Reading input dataset ./pb01.tb8291.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 33624 voxels
 + 5653 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.229  pitch=-0.756  yaw=+0.421  dS=-1.135  dL=+1.120  dP=-0.395
++ Mean: roll=+0.312  pitch=-0.349  yaw=+0.688  dS=-0.937  dL=+1.181  dP=-0.177
++ Max : roll=+0.409  pitch=-0.061  yaw=+1.060  dS=-0.720  dL=+1.306  dP=+0.068
++ Max displacements (mm) for each sub-brick:
 2.13(0.00) 2.21(0.14) 2.16(0.07) 2.20(0.08) 2.09(0.21) 1.98(0.18) 2.08(0.17) 2.12(0.15) 2.09(0.06) 2.09(0.07) 2.11(0.06) 2.12(0.09) 2.14(0.06) 2.13(0.05) 2.12(0.04) 2.10(0.09) 2.14(0.07) 2.15(0.05) 2.14(0.05) 2.15(0.05) 2.16(0.05) 2.19(0.12) 2.13(0.12) 2.03(0.11) 2.07(0.10) 2.12(0.05) 2.11(0.08) 2.10(0.03) 2.11(0.04) 2.11(0.03) 2.12(0.05) 2.12(0.05) 2.12(0.04) 2.16(0.13) 2.17(0.07) 2.15(0.11) 2.19(0.12) 2.17(0.10) 2.18(0.06) 2.20(0.06) 2.19(0.04) 2.19(0.13) 2.18(0.06) 2.16(0.09) 2.24(0.16) 2.32(0.09) 2.20(0.31) 2.20(0.04) 2.19(0.05) 2.20(0.04) 2.23(0.06) 2.21(0.06) 2.25(0.07) 2.23(0.06) 2.23(0.04) 2.21(0.07) 2.18(0.05) 2.19(0.05) 2.22(0.05) 2.23(0.11) 2.23(0.07) 2.24(0.04) 2.21(0.04) 2.21(0.06) 2.15(0.11) 2.19(0.08) 2.21(0.09) 2.20(0.11) 2.25(0.13) 2.26(0.08) 2.26(0.10) 2.28(0.05) 2.29(0.04) 2.27(0.11) 2.24(0.14) 2.26(0.12) 2.25(0.08) 2.29(0.10) 2.27(0.05) 2.27(0.05) 2.31(0.08) 2.29(0.06) 2.33(0.12) 2.32(0.03) 2.30(0.08) 2.37(0.13) 2.35(0.08) 2.37(0.08) 2.41(0.06) 2.40(0.15) 2.44(0.10) 2.46(0.04) 2.49(0.09) 2.47(0.07) 2.43(0.08) 2.49(0.09) 2.51(0.04) 2.50(0.05) 2.50(0.03) 2.50(0.05) 2.51(0.04) 2.50(0.04) 2.54(0.10) 2.54(0.05) 2.49(0.10) 2.51(0.04) 2.51(0.03) 2.54(0.09) 2.53(0.13) 2.55(0.08) 2.52(0.09) 2.48(0.10) 2.51(0.11) 2.52(0.04) 2.52(0.06) 2.50(0.08) 2.53(0.07) 2.54(0.03) 2.60(0.07) 2.62(0.08) 2.51(0.32) 2.61(0.18) 2.63(0.34) 2.68(0.14) 2.67(0.11) 2.62(0.07) 2.56(0.17) 2.60(0.07) 2.62(0.23) 2.65(0.06) 2.67(0.05) 2.65(0.07) 2.66(0.06) 2.63(0.08) 2.62(0.14) 2.57(0.13) 2.59(0.05) 2.66(0.13) 2.70(0.12) 2.76(0.12) 2.73(0.07) 2.79(0.11) 2.81(0.05) 2.85(0.11) 2.88(0.09) 2.91(0.19) 2.88(0.13) 2.91(0.04) 2.95(0.07) 2.93(0.28)
++ Max displacement in automask = 2.95 (mm) at sub-brick 148
++ Max delta displ  in automask = 0.34 (mm) at sub-brick 122
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb8291.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8291.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8291.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8291.r03.tshift+orig.BRIK is 12.200009 degrees from plumb.
++ Source dataset: ./pb01.tb8291.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.9
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.200009 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8291.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8291.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8291.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8291.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8291.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8291.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.200009 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb8291
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb8291+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb8291+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1609458 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=4
++ Zero-pad: zbot=0 ztop=2
++ Computing -autobox
++ 296298 voxels [64.2%] in weight mask
++ Number of points for matching = 139260
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.13457
   sp   = 0.302245
   mi   = -0.549746
   crM  = 0.0414853
   nmi  = 0.846995
   je   = 3.04323
   hel  = -0.112613
   crA  = 0.20376
   crU  = 0.209475
   lss  = 0.86543
   lpc  = 0.175979
   lpa  = 0.824021
   lpc+ = 0.314003
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.6
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb8291+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb8291+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 43.1 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8291.r01.blur pb02.tb8291.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8291.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb8291.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8291.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8291.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8291.r02.blur pb02.tb8291.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8291.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb8291.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8291.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8291.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8291.r03.blur pb02.tb8291.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8291.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb8291.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8291.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8291.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb8291.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8291.r01.blur+orig
++ Forming automask
 + Fixed clip level = 405.447540
 + Used gradual clip level = 336.947144 .. 453.031494
 + Number voxels above clip level = 57052
 + Clustering voxels ...
 + Largest cluster has 56737 voxels
 + Clustering voxels ...
 + Largest cluster has 56656 voxels
 + Filled    48 voxels in small holes; now have 56704 voxels
 + Clustering voxels ...
 + Largest cluster has 56702 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 369573 voxels
 + Mask now has 56702 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 360383 voxels
++ 65892 voxels in the mask [out of 426275: 15.46%]
++ first  18 x-planes are zero [from A]
++ last    3 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last    8 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb8291.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8291.r02.blur+orig
++ Forming automask
 + Fixed clip level = 405.316742
 + Used gradual clip level = 335.025970 .. 453.383514
 + Number voxels above clip level = 57211
 + Clustering voxels ...
 + Largest cluster has 56885 voxels
 + Clustering voxels ...
 + Largest cluster has 56800 voxels
 + Filled    53 voxels in small holes; now have 56853 voxels
 + Clustering voxels ...
 + Largest cluster has 56848 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 369427 voxels
 + Mask now has 56848 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 360256 voxels
++ 66019 voxels in the mask [out of 426275: 15.49%]
++ first  18 x-planes are zero [from A]
++ last    3 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last    8 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb8291.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8291.r03.blur+orig
++ Forming automask
 + Fixed clip level = 405.170990
 + Used gradual clip level = 336.929901 .. 454.895996
 + Number voxels above clip level = 57075
 + Clustering voxels ...
 + Largest cluster has 56736 voxels
 + Clustering voxels ...
 + Largest cluster has 56652 voxels
 + Filled    50 voxels in small holes; now have 56702 voxels
 + Clustering voxels ...
 + Largest cluster has 56699 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 369576 voxels
 + Mask now has 56699 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 360468 voxels
++ 65807 voxels in the mask [out of 426275: 15.44%]
++ first  18 x-planes are zero [from A]
++ last    3 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last    8 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb8291
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 66255 survived, 360020 were zero
++ writing result full_mask.tb8291...
3dresample -master full_mask.tb8291+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb8291
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 63967 survived, 362308 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb8291...
3dABoverlap -no_automask full_mask.tb8291+orig mask_anat.tb8291+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb8291+orig.BRIK  B=./mask_anat.tb8291+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
66255        63967        70138        60084        6171         3883          9.3140      6.0703     0.9156     1.0338     0.9126
3ddot -dodice full_mask.tb8291+orig mask_anat.tb8291+orig
tee out.mask_ae_dice.txt
0.922793	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb8291
total number of censored TRs (simple form) = 0
1deval -a motion_tb8291_censor.1D -b outcount_tb8291_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb8291_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb8291.r01.blur+orig.HEAD pb03.tb8291.r02.blur+orig.HEAD pb03.tb8291.r03.blur+orig.HEAD -censor censor_tb8291_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb8291 -errts errts.tb8291 -bucket stats.tb8291
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb8291.r01.blur+orig.HEAD pb03.tb8291.r02.blur+orig.HEAD pb03.tb8291.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 56729 voxels (out of 426275 = 13.3%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (no censoring)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb8291.r01.blur+orig.HEAD pb03.tb8291.r02.blur+orig.HEAD pb03.tb8291.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb8291_REML -Rvar stats.tb8291_REMLvar \
 -Rfitts fitts.tb8291_REML -Rerrts errts.tb8291_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (450x24):  4.08801  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (450x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (450x18):  4.00478  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (450x6):  2.39669  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (450x12):  1.01522  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.64886e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.26 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=6.091
++ Job #2: processing voxels 85254 to 127880; elapsed time=6.108
++ Job #3: processing voxels 127881 to 170507; elapsed time=6.124
++ Job #4: processing voxels 170508 to 213134; elapsed time=6.141
++ Job #5: processing voxels 213135 to 255761; elapsed time=6.159
++ Job #6: processing voxels 255762 to 298388; elapsed time=6.177
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.203
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.223
++ Job #0: processing voxels 0 to 42626; elapsed time=6.241
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=6.243
0123456789.0123456789.0123456789.0123++ Job #8 finished; elapsed time=33.226
45++ Job #7 finished; elapsed time=35.258
++ Job #1 finished; elapsed time=35.368
6++ Job #5 finished; elapsed time=35.637
++ Job #2 finished; elapsed time=35.709
7++ Job #4 finished; elapsed time=36.004
89.0123456789.
++ Job #0 waiting for children to finish; elapsed time=38.638
++ Job #6 finished; elapsed time=39.161
++ Job #3 finished; elapsed time=39.425
++ Job #9 finished; elapsed time=39.912
++ Job #0 now finishing up; elapsed time=39.921
++ Smallest FDR q [0 Full_Fstat] = 7.76465e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 8.69766e-12
++ Smallest FDR q [3 uns1_Fstat] = 8.6985e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 4.67868e-13
++ Smallest FDR q [6 uns2_Fstat] = 4.67836e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 2.21141e-13
++ Smallest FDR q [9 uns3_Fstat] = 2.21141e-13
++ Smallest FDR q [11 str1#0_Tstat] = 8.60989e-14
++ Smallest FDR q [12 str1_Fstat] = 8.60908e-14
++ Smallest FDR q [14 str2#0_Tstat] = 1.64623e-12
++ Smallest FDR q [15 str2_Fstat] = 1.64612e-12
++ Smallest FDR q [17 str3#0_Tstat] = 1.70926e-13
++ Smallest FDR q [18 str3_Fstat] = 1.70923e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.95848e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.95815e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.57415e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.57358e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 6.2115e-13
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 6.2115e-13
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 1.05661e-13
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 1.05675e-13
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 6.9602e-06
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 6.96027e-06
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 2.6755e-12
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 2.6755e-12
++ Wrote bucket dataset into ./stats.tb8291+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb8291+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb8291+orig.BRIK
++ Program finished; elapsed time=64.574
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.726       0.791  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.726       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.726       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.475       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.475       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb8291.r01.blur+orig.HEAD pb03.tb8291.r02.blur+orig.HEAD pb03.tb8291.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb8291_REML -Rvar stats.tb8291_REMLvar -Rfitts fitts.tb8291_REML -Rerrts errts.tb8291_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 56729 voxels (out of 426275 = 13.3%)
++ -----  matrix condition (450x24):  4.08801  ++ VERY GOOD ++
 + masked off 244677 voxels for being all zero; 181598 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 328 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=15.71
 + X matrix: 46.639% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=450 cols=24; 109*1 cases; total CPU=0.00 Elapsed=15.74
 +  average case bandwidth = 12.53
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=85.88
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=131.87
++ Output dataset ./stats.tb8291_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb8291_REML+orig.BRIK
++ Output dataset ./errts.tb8291_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb8291_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 3.72181e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 1.82687e-05
++ Smallest FDR q [3 uns1_Fstat] = 1.82687e-05
++ Smallest FDR q [5 uns2#0_Tstat] = 9.19071e-08
++ Smallest FDR q [6 uns2_Fstat] = 9.19071e-08
++ Smallest FDR q [8 uns3#0_Tstat] = 2.28291e-07
++ Smallest FDR q [9 uns3_Fstat] = 2.28291e-07
++ Smallest FDR q [11 str1#0_Tstat] = 4.9226e-08
++ Smallest FDR q [12 str1_Fstat] = 4.9226e-08
++ Smallest FDR q [14 str2#0_Tstat] = 1.14177e-05
++ Smallest FDR q [15 str2_Fstat] = 1.14177e-05
++ Smallest FDR q [17 str3#0_Tstat] = 1.38737e-06
++ Smallest FDR q [18 str3_Fstat] = 1.38737e-06
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.32691e-12
++ Smallest FDR q [21 unstructured_Fstat] = 1.32692e-12
++ Smallest FDR q [23 structured#0_Tstat] = 1.88761e-12
++ Smallest FDR q [24 structured_Fstat] = 1.88761e-12
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.00150288
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.00150288
++ Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.000450867
++ Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.000450868
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999754 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999754 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 3.10195e-05
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 3.10195e-05
 + Added 25 FDR curves to dataset stats.tb8291_REML+orig
++ Output dataset ./stats.tb8291_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=157.05
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb8291 pb03.tb8291.r01.blur+orig.HEAD pb03.tb8291.r02.blur+orig.HEAD pb03.tb8291.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 27.7 s
3dTstat -mean -prefix rm.signal.all all_runs.tb8291+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb8291_REML+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb8291+orig -expr c*a/b -prefix TSNR.tb8291
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb8291_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb8291+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 66255 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.167292
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
** Can't read ANY data from file 'rm.DP+orig.HEAD'
[7m** FATAL ERROR:[0m Can't open dataset rm.DP+orig
** Program compile date = Jul 20 2017
