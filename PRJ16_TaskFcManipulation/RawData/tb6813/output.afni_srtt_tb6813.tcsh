echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb6813
endif
set output_dir = tb6813.srtt
if ( -d tb6813.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb6813.srtt
mkdir tb6813.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb6813.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb6813.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb6813.srtt/pb00.tb6813.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.6 s
3dTcat -prefix tb6813.srtt/pb00.tb6813.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.5 s
3dTcat -prefix tb6813.srtt/pb00.tb6813.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.0 s
set tr_counts = ( 150 150 150 )
cd tb6813.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6813.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6813.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6813.r01.tcat+orig.BRIK is 24.100002 degrees from plumb.
++ 29623 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6813.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6813.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6813.r02.tcat+orig.BRIK is 24.100002 degrees from plumb.
++ 29660 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6813.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6813.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6813.r03.tcat+orig.BRIK is 24.100002 degrees from plumb.
++ 29636 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb6813.r01.tshift -tpattern alt+z2 pb00.tb6813.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6813.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6813.r01.tcat+orig.BRIK is 24.100002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6813.r02.tshift -tpattern alt+z2 pb00.tb6813.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6813.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6813.r02.tcat+orig.BRIK is 24.100002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6813.r03.tshift -tpattern alt+z2 pb00.tb6813.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6813.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6813.r03.tcat+orig.BRIK is 24.100002 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb6813.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 24.100002 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 404.096008
 + Used gradual clip level = 359.567993 .. 449.620605
 + Number voxels above clip level = 30629
 + Clustering voxels ...
 + Largest cluster has 29850 voxels
 + Clustering voxels ...
 + Largest cluster has 29288 voxels
 + Filled   353 voxels in small holes; now have 29641 voxels
 + Filled     5 voxels in large holes; now have 29646 voxels
 + Clustering voxels ...
 + Largest cluster has 29646 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 101424 voxels
 + Mask now has 29648 voxels
++ 29648 voxels in the mask [out of 131072: 22.62%]
++ first  14 x-planes are zero [from R]
++ last    9 x-planes are zero [from L]
++ first   7 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1004.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1004.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 24.100002 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 24.100002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1549752 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 29648 voxels [18.1%] in weight mask
++ Number of points for matching = 29648
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 34.113 29.933 21.022 (index)
 + source center of mass = 88.060 180.159 188.796 (index)
 + source-target CM = -1.245 2.386 -5.877 (xyz)
 + center of mass shifts = -1.245 2.386 -5.877
++ shift param auto-range: -70.8..68.3 -67.1..71.9 -56.0..44.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.245132 .. 8.754868
 + Range param#2 [y-shift] = -7.613762 .. 12.386238
 + Range param#3 [z-shift] = -15.877037 .. 4.122963
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.245132 .. 38.754868
 + Range param#2 [y-shift] = -37.613762 .. 42.386238
 + Range param#3 [z-shift] = -45.877037 .. 34.122963
 + 12 free parameters
++ Normalized convergence radius = 0.000451
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1549752 [out of 20226096] voxels
 + base mask has 40830 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=69 usiz=191.5
 + - copying weight image
 + - using 29648 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 25717 total points stored in 243 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.0161535] *+--.o++o++o*[#48=-0.0168414] *-.*[#78=-0.0217739] **[#92=-0.0501699] *o.--o-.ooo-$-
 + - best 45 costs found:
    0 v=-0.050170: -27.91 -10.95   7.46 -15.00 -15.00  15.00  [grid]
    1 v=-0.046885: -14.58  29.05 -32.54 -15.00  30.00  15.00  [grid]
    2 v=-0.044416: -14.58  15.72 -32.54 -15.00  30.00  15.00  [grid]
    3 v=-0.042207: -16.18  26.48 -35.80 -19.13  33.53  22.48  [rand]
    4 v=-0.039114: -27.91 -24.28  20.79 -15.00 -30.00  15.00  [grid]
    5 v=-0.038281:  12.09 -10.95  20.79  15.00 -15.00  15.00  [grid]
    6 v=-0.034004: -22.22 -26.00  26.37  -3.65 -28.33  14.78  [rand]
    7 v=-0.033943:  12.17 -20.30  25.46  -4.37 -20.12 -15.12  [rand]
    8 v=-0.033931: -17.23 -17.11 -11.60 -20.53   3.14  10.08  [rand]
    9 v=-0.033774:  12.09  29.05 -19.21  30.00  30.00  30.00  [grid]
   10 v=-0.031715: -16.54  23.27 -36.27 -14.56  29.40  15.92  [rand]
   11 v=-0.029556: -27.91 -24.28   7.46 -15.00 -15.00  15.00  [grid]
   12 v=-0.027876:  14.90  -7.08  18.47  20.99 -15.73  16.09  [rand]
   13 v=-0.027363:  35.40  19.61 -28.13  -5.26  41.39 -40.03  [rand]
   14 v=-0.027305: -36.44 -32.30  15.70  18.41 -40.28   7.49  [rand]
   15 v=-0.026767:  12.09  29.05  20.79  30.00 -30.00  15.00  [grid]
   16 v=-0.025903:  23.10  32.08   7.15 -28.68  38.91 -32.36  [rand]
   17 v=-0.025872:  19.73 -26.00  26.37   3.65 -28.33 -14.78  [rand]
   18 v=-0.025798:  25.42 -10.95   7.46  30.00 -30.00 -15.00  [grid]
   19 v=-0.025761: -35.88  24.63   8.42  17.65 -21.98  -4.20  [rand]
   20 v=-0.025619:  12.09 -24.28  20.79 -15.00 -15.00 -30.00  [grid]
   21 v=-0.025070:  25.42  29.05  20.79 -30.00  30.00 -30.00  [grid]
   22 v=-0.024512: -28.23  31.20   3.19 -18.79   2.63   4.42  [rand]
   23 v=-0.024456: -27.91 -24.28  20.79  30.00 -30.00  15.00  [grid]
   24 v=-0.024257:  25.42  15.72  20.79 -30.00  30.00 -30.00  [grid]
   25 v=-0.024070:  25.42 -10.95   7.46  15.00 -15.00 -15.00  [grid]
   26 v=-0.024068: -14.58 -10.95  20.79 -30.00 -30.00 -15.00  [grid]
   27 v=-0.023654: -14.58  29.05 -32.54 -15.00  15.00  30.00  [grid]
   28 v=-0.023604:  25.74  31.20   3.19  18.79   2.63  -4.42  [rand]
   29 v=-0.023573:  12.09  15.72 -32.54  15.00  30.00 -15.00  [grid]
   30 v=-0.023313: -14.58 -10.95 -32.54 -15.00  15.00  15.00  [grid]
   31 v=-0.023279:  12.09 -24.28  20.79  30.00 -30.00  15.00  [grid]
   32 v=-0.023269: -14.58 -24.28   7.46 -15.00 -30.00 -15.00  [grid]
   33 v=-0.023117: -15.27 -13.33   8.79 -24.25 -37.55   4.41  [rand]
   34 v=-0.023024: -18.10 -16.20   8.58 -19.57 -37.09  16.59  [rand]
   35 v=-0.022925: -14.58  29.05 -32.54 -15.00  30.00  30.00  [grid]
   36 v=-0.022817: -23.57 -27.25   1.12   8.73 -38.75  33.73  [rand]
   37 v=-0.022618: -27.91  15.72 -32.54 -30.00  30.00  30.00  [grid]
   38 v=-0.022570:  23.72 -26.67  29.57 -17.69 -14.58 -34.92  [rand]
   39 v=-0.022549:  12.09  15.72  20.79  15.00 -15.00  15.00  [grid]
   40 v=-0.022497: -28.23  31.20   3.19 -18.79   2.63  -4.42  [rand]
   41 v=-0.022397:  -5.32   8.61   1.92  -4.32  22.85 -18.95  [rand]
   42 v=-0.022338:   4.57 -11.80  23.76 -38.21  15.41 -13.51  [rand]
   43 v=-0.021853: -18.10 -16.20 -20.33 -19.57  37.09  16.59  [rand]
   44 v=-0.021774: -27.91  15.72 -19.21 -15.00  15.00  15.00  [grid]
*[#8002=-0.0524556] *[#8009=-0.0543265] *[#8010=-0.0547133] *[#8017=-0.0592631] *[#8020=-0.061513] *[#8023=-0.061914] *[#8029=-0.0624688] *[#8359=-0.0719299] *[#8362=-0.0731158] *[#8363=-0.0746292] *[#8364=-0.074705] *[#8366=-0.0776495] *[#8367=-0.0799338] *[#8368=-0.0827707] *[#8371=-0.0828458] *[#8373=-0.0835074] *[#8374=-0.0845865] *[#8375=-0.0846981] *[#8376=-0.0870533] *[#8377=-0.0880305] *[#8380=-0.0902509] *[#8381=-0.091089] *[#8388=-0.0929262]  + - costs of the above after a little optimization:
    0 v=-0.062469: -25.97 -14.51   6.00 -17.60 -14.64  13.35  [grid]
    1 v=-0.056022: -13.00  27.58 -31.86 -13.78  30.11  15.19  [grid]
    2 v=-0.048691: -14.50  19.71 -33.09 -14.94  30.05  15.11  [grid]
    3 v=-0.049680: -15.24  27.91 -35.31 -19.49  32.88  22.24  [rand]
    4 v=-0.046897: -27.23 -22.05  19.26 -15.01 -30.13  14.67  [grid]
    5 v=-0.048914:  11.30  -7.24  20.07  13.45 -17.06  10.71  [grid]
    6 v=-0.047448: -21.32 -30.37  26.81  -3.47 -27.92  14.17  [rand]
    7 v=-0.043693:   9.58 -22.21  24.96  -6.12 -19.58 -15.99  [rand]
    8 v=-0.059427: -22.05 -17.15 -12.25 -17.81   3.35   6.73  [rand]
    9 v=-0.043231:  11.76  28.82 -19.23  30.30  34.30  29.75  [grid]
   10 v=-0.060198: -10.24  23.81 -34.84 -12.47  31.34  15.51  [rand]
  *11 v=-0.092926: -21.86 -17.40   5.61  -9.45 -14.32  12.68  [grid]
   12 v=-0.052625:  13.82 -12.91  19.83  19.64 -18.79  12.82  [rand]
   13 v=-0.036774:  37.18  20.03 -30.11  -4.37  43.67 -44.59  [rand]
   14 v=-0.042391: -38.25 -37.20  20.22  16.66 -39.01  11.69  [rand]
   15 v=-0.029767:  16.15  29.20  20.87  30.67 -29.75  15.32  [grid]
   16 v=-0.035528:  20.55  37.97   8.07 -28.72  38.98 -31.65  [rand]
   17 v=-0.038976:  16.13 -26.86  25.33   2.66 -28.51 -14.14  [rand]
   18 v=-0.027251:  25.05 -11.13   7.80  29.82 -29.82 -15.38  [grid]
   19 v=-0.034347: -37.07  23.93   5.84  16.83 -21.81  -4.16  [rand]
   20 v=-0.044483:  10.46 -20.75  20.36 -13.51 -14.58 -23.60  [grid]
   21 v=-0.032992:  22.73  28.70  19.91 -30.69  29.62 -31.21  [grid]
   22 v=-0.026718: -27.79  31.58   2.64 -18.04   2.58   4.06  [rand]
   23 v=-0.031491: -29.45 -23.79  19.69  28.52 -33.00  11.89  [grid]
   24 v=-0.032960:  24.37  15.73  21.13 -32.80  25.33 -30.70  [grid]
   25 v=-0.040078:  27.84 -10.86  11.37  14.54 -14.80 -14.72  [grid]
   26 v=-0.030527: -13.31 -11.43  19.54 -25.94 -30.82 -13.43  [grid]
   27 v=-0.039331: -14.47  32.25 -32.55 -14.46  13.54  29.15  [grid]
   28 v=-0.036461:  22.20  26.64   3.87  18.77   1.87  -3.42  [rand]
   29 v=-0.031457:  15.13  17.08 -32.86  14.17  29.41 -13.42  [grid]
   30 v=-0.039131: -18.79 -10.54 -32.55 -15.23  14.42  14.87  [grid]
   31 v=-0.032903:  13.66 -20.25  21.28  26.95 -31.11  13.61  [grid]
   32 v=-0.025073: -11.39 -24.64   4.66 -18.10 -29.63 -15.68  [grid]
   33 v=-0.035906: -13.95 -13.46  10.88 -24.98 -32.84   0.36  [rand]
   34 v=-0.036245: -17.39 -17.02  10.32 -15.02 -37.62  17.14  [rand]
   35 v=-0.036412: -16.47  26.09 -29.74 -18.01  35.49  30.92  [grid]
   36 v=-0.036837: -27.35 -24.92  -0.50   8.64 -38.59  33.82  [rand]
   37 v=-0.044106: -29.67  14.81 -33.92 -28.91  29.97  22.02  [grid]
   38 v=-0.038569:  23.35 -26.76  30.64 -14.70 -20.47 -37.01  [rand]
   39 v=-0.028442:  10.37  14.15  20.54  14.84 -14.32  16.33  [grid]
   40 v=-0.033016: -24.84  31.11   1.39 -17.78   3.50  -4.46  [rand]
   41 v=-0.026933:  -4.69   8.72  -0.05  -4.57  24.58 -19.06  [rand]
   42 v=-0.037329:   5.04  -6.94  24.75 -44.61  17.65 -12.99  [rand]
   43 v=-0.025699: -20.34 -15.34 -20.91 -20.17  36.95  16.33  [rand]
   44 v=-0.054937: -25.71  17.07 -14.27 -16.93  14.00  19.44  [grid]
 + - save #11 for twobest
 + - save # 0 for twobest
 + - save #10 for twobest
 + - save # 8 for twobest
 + - skip # 1 for twobest: too close to set #10
 + - save #44 for twobest
 + - save #12 for twobest
 + - save # 3 for twobest
 + - save # 5 for twobest
 + - save # 2 for twobest
 + - save # 6 for twobest
 + - save # 4 for twobest
 + - save #20 for twobest
 + - save #37 for twobest
 + - save # 7 for twobest
 + - save # 9 for twobest
 + - save #14 for twobest
 + - save #25 for twobest
 + - save #27 for twobest
 + - save #30 for twobest
 + - save #17 for twobest
 + - save #38 for twobest
 + - save #42 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=69 usiz=191.5
 + - retaining old weight image
 + - using 29648 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26061 total points stored in 266 'RHDD(13.7332)' bloks
*[#9533=-0.0949069] *[#9534=-0.0949592] *[#9535=-0.0958844] *[#9536=-0.096693] *[#9537=-0.100078] *[#9542=-0.103153] *[#9544=-0.103612] *[#9545=-0.103872] *[#9547=-0.105797] *[#9549=-0.105954] *[#9550=-0.106597] *[#9551=-0.107358] *[#9552=-0.107926] *[#9553=-0.108687] *[#9554=-0.109482] *[#9555=-0.110197] *[#9556=-0.110673] *[#9559=-0.111479] *[#9560=-0.112636] *[#9563=-0.113426] *[#9564=-0.113628] *[#9565=-0.114542] *[#9566=-0.115365] *[#9568=-0.115715] *[#9571=-0.116579] *[#9572=-0.117141] *[#9574=-0.117947] *[#9575=-0.118345] *[#9578=-0.119127] *[#9579=-0.120879] *[#9582=-0.120922] *[#9584=-0.121584] *[#9585=-0.121855] *[#9586=-0.121865] *[#9587=-0.12259] *[#9588=-0.122614] *[#9592=-0.122814] *[#9597=-0.12367] *[#9600=-0.124115] 
 + - param set #1 has cost=-0.124115
 + -- Parameters = -14.3893 -13.7731 6.0644 -5.0741 -12.6813 9.1835 1.0239 1.0205 0.9749 0.0061 -0.0039 0.0060
 + - param set #2 has cost=-0.050612
 + -- Parameters = -26.3197 -14.2381 5.9062 -17.6936 -14.2752 13.1816 0.9996 0.9996 0.9999 0.0004 0.0089 -0.0002
 + - param set #3 has cost=-0.055138
 + -- Parameters = -9.7735 23.2196 -34.5708 -11.4829 30.6840 14.5426 1.0077 1.0222 1.0056 -0.0080 0.0018 0.0009
 + - param set #4 has cost=-0.065015
 + -- Parameters = -21.5303 -15.7164 -10.4687 -16.9078 1.7881 7.4314 0.9995 0.9983 0.9892 -0.0021 -0.0009 0.0070
 + - param set #5 has cost=-0.049737
 + -- Parameters = -26.6767 16.5678 -14.2453 -20.0845 14.2130 18.5256 0.9941 0.9884 1.0062 0.0038 0.0075 -0.0002
 + - param set #6 has cost=-0.033352
 + -- Parameters = 13.9609 -12.7514 20.5459 20.1407 -19.1325 13.2919 1.0003 0.9987 1.0018 -0.0005 0.0012 0.0085
 + - param set #7 has cost=-0.046607
 + -- Parameters = -15.6921 27.8869 -35.6741 -19.4797 33.1653 22.1296 1.0178 1.0018 1.0008 0.0003 -0.0005 0.0002
 + - param set #8 has cost=-0.043857
 + -- Parameters = 8.8336 -6.9552 20.7153 11.3724 -15.7206 12.7142 1.0263 1.0050 1.0066 0.0045 -0.0006 0.0004
 + - param set #9 has cost=-0.051225
 + -- Parameters = -13.8206 17.0632 -33.2099 -14.4366 28.9764 14.8734 1.0032 0.9975 0.9987 0.0019 0.0012 -0.0017
 + - param set #10 has cost=-0.047729
 + -- Parameters = -20.1760 -30.5771 26.6119 -2.5012 -28.2670 14.4681 1.0005 0.9969 0.9978 -0.0008 0.0118 -0.0018
 + - param set #11 has cost=-0.044955
 + -- Parameters = -27.0907 -22.7941 15.7046 -15.1150 -30.1101 15.9189 1.0010 1.0002 1.0010 -0.0004 0.0011 -0.0005
*[#10423=-0.175537] *[#10437=-0.225277] *[#10440=-0.254318] *[#10441=-0.306139] *[#10449=-0.326583] *[#10455=-0.333514] *[#10459=-0.3679] *[#10462=-0.372886] *[#10464=-0.375907] *[#10465=-0.392477] *[#10467=-0.398818] *[#10468=-0.412151] *[#10469=-0.414895] *[#10470=-0.420587] *[#10471=-0.427305] *[#10472=-0.433594] *[#10473=-0.437461] *[#10474=-0.447309] *[#10475=-0.460261] *[#10476=-0.472135] *[#10477=-0.485474] *[#10479=-0.48817] *[#10484=-0.492938] *[#10485=-0.49827] *[#10486=-0.502076] *[#10488=-0.503289] *[#10489=-0.504748] *[#10490=-0.506017] *[#10493=-0.507637] *[#10497=-0.513065] *[#10498=-0.514133] *[#10500=-0.522214] *[#10501=-0.532513] *[#10504=-0.538261] *[#10511=-0.540361] *[#10512=-0.541107] *[#10513=-0.544027] *[#10514=-0.546113] *[#10517=-0.546723] *[#10518=-0.548178] 
 + - param set #12 has cost=-0.548178
 + -- Parameters = -0.4931 0.5035 -0.4304 -0.3536 -0.1708 0.4147 1.0087 1.0268 1.0133 -0.0030 0.0045 0.0042
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.178 
 + --- dist(#3,#1) = 0.263 
 + --- dist(#4,#1) = 0.427 
 + --- dist(#5,#1) = 0.41 
 + --- dist(#6,#1) = 0.323 
 + --- dist(#7,#1) = 0.327 
 + --- dist(#8,#1) = 0.389 
 + --- dist(#9,#1) = 0.441 
 + --- dist(#10,#1) = 0.333 
 + --- dist(#11,#1) = 0.264 
 + --- dist(#12,#1) = 0.262 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=69 usiz=191.5
 + - retaining old weight image
 + - using 29648 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26070 total points stored in 271 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.537999
 + -- Parameters = -0.2995 0.7242 -0.9005 -0.2569 0.0453 0.0685 1.0044 1.0271 1.0030 -0.0047 0.0001 0.0026
 + - param set #2 has cost=-0.152528
 + -- Parameters = -0.5251 -3.4837 2.8076 -0.0818 -10.8041 0.8704 1.0741 1.0809 0.9733 -0.0094 -0.0893 -0.1060
 + - param set #3 has cost=-0.065235
 + -- Parameters = -19.3382 -16.1799 -7.3201 -14.8772 0.8235 5.2715 0.9968 0.9631 0.9939 -0.0054 -0.0018 0.0108
 + - param set #4 has cost=-0.044389
 + -- Parameters = -9.6019 23.6535 -33.9490 -10.9859 30.3783 13.4795 1.0056 1.0282 1.0073 -0.0100 -0.0014 0.0042
 + - param set #5 has cost=-0.051022
 + -- Parameters = -13.9417 17.7998 -32.9535 -13.0475 29.4006 10.9666 1.0185 0.9486 0.9686 -0.0541 0.0165 -0.0165
 + - param set #6 has cost=-0.049701
 + -- Parameters = -26.8872 -17.9401 4.8456 -16.4402 -13.4292 13.3468 0.9761 0.9657 1.0352 0.0055 0.0252 -0.0116
 + - param set #7 has cost=-0.039377
 + -- Parameters = -26.7566 16.4479 -14.1547 -20.0080 14.2326 18.5515 0.9941 0.9880 1.0072 0.0107 0.0073 -0.0004
 + - param set #8 has cost=-0.039116
 + -- Parameters = -20.1318 -30.6676 26.7146 -2.5855 -28.3024 14.4089 0.9994 0.9970 0.9982 -0.0009 0.0117 -0.0016
 + - param set #9 has cost=-0.037676
 + -- Parameters = -15.2818 27.8416 -35.7431 -19.4248 33.1797 21.8139 1.0195 1.0012 1.0008 0.0025 -0.0016 0.0085
 + - param set #10 has cost=-0.034781
 + -- Parameters = -27.2548 -22.8451 15.7696 -15.1517 -30.0619 15.9015 1.0020 1.0005 0.9999 -0.0004 0.0015 -0.0002
 + - param set #11 has cost=-0.035642
 + -- Parameters = 7.7626 -7.1425 19.9746 11.1379 -16.2565 13.2634 1.0377 0.9834 0.9930 0.0024 -0.0098 0.0154
 + - param set #12 has cost=-0.025938
 + -- Parameters = 13.8355 -12.3176 21.8741 20.2923 -20.3211 12.8925 0.9968 1.0020 0.9858 -0.0183 -0.0112 0.0101
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.489 
 + --- dist(#3,#1) = 0.238 
 + --- dist(#4,#1) = 0.401 
 + --- dist(#5,#1) = 0.332 
 + --- dist(#6,#1) = 0.413 
 + --- dist(#7,#1) = 0.331 
 + --- dist(#8,#1) = 0.392 
 + --- dist(#9,#1) = 0.436 
 + --- dist(#10,#1) = 0.261 
 + --- dist(#11,#1) = 0.337 
 + --- dist(#12,#1) = 0.285 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=69 usiz=191.5
 + - retaining old weight image
 + - using 29648 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26207 total points stored in 279 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.532210
 + -- Parameters = -0.0468 0.4395 -0.9297 -0.1144 -0.2163 0.0762 1.0050 1.0256 0.9966 -0.0018 -0.0001 0.0000
 + - param set #2 has cost=-0.253947
 + -- Parameters = -0.5479 1.6899 -0.5910 1.1542 -7.5405 4.1362 1.0323 1.0963 0.9496 -0.0039 -0.1008 -0.1089
 + - param set #3 has cost=-0.094641
 + -- Parameters = -11.7112 -10.8863 -5.4955 -6.0850 1.5462 0.2040 1.0618 0.9035 0.9604 0.0040 0.0118 -0.0181
 + - param set #4 has cost=-0.046194
 + -- Parameters = -13.9521 17.8012 -32.9745 -12.8418 29.3681 11.1686 1.0267 0.9485 0.9697 -0.0541 0.0162 -0.0166
 + - param set #5 has cost=-0.042112
 + -- Parameters = -26.8240 -18.0508 4.8886 -16.5168 -13.7193 13.5525 0.9868 0.9640 1.0342 0.0037 0.0258 -0.0116
 + - param set #6 has cost=-0.042491
 + -- Parameters = -9.5508 23.9044 -34.0239 -11.0703 30.5226 13.3270 1.0067 1.0291 1.0050 -0.0087 0.0029 0.0046
 + - param set #7 has cost=-0.034683
 + -- Parameters = -26.9555 16.5647 -14.0889 -19.3396 14.4975 17.8935 0.9937 0.9824 1.0055 0.0114 0.0074 0.0001
 + - param set #8 has cost=-0.034656
 + -- Parameters = -20.1211 -30.7159 26.7120 -2.5626 -28.2103 14.3162 0.9951 0.9961 0.9981 0.0013 0.0123 -0.0039
 + - param set #9 has cost=-0.033213
 + -- Parameters = -15.2866 27.4620 -35.5688 -19.4494 32.7268 22.1149 1.0234 1.0014 1.0009 0.0026 -0.0033 0.0113
 + - param set #10 has cost=-0.029846
 + -- Parameters = 7.3470 -7.3282 20.1127 11.0091 -16.2973 13.3715 1.0393 0.9842 0.9940 0.0029 -0.0098 0.0160
 + - param set #11 has cost=-0.030836
 + -- Parameters = -27.4308 -22.7979 15.7447 -15.1693 -30.0637 15.9569 1.0102 1.0005 1.0000 -0.0012 0.0014 -0.0001
 + - param set #12 has cost=-0.023529
 + -- Parameters = 13.9878 -12.2781 22.3119 20.4762 -20.5683 12.6855 0.9953 1.0007 0.9874 -0.0200 -0.0121 0.0091
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.49 
 + --- dist(#3,#1) = 0.333 
 + --- dist(#4,#1) = 0.401 
 + --- dist(#5,#1) = 0.414 
 + --- dist(#6,#1) = 0.335 
 + --- dist(#7,#1) = 0.336 
 + --- dist(#8,#1) = 0.389 
 + --- dist(#9,#1) = 0.433 
 + --- dist(#10,#1) = 0.342 
 + --- dist(#11,#1) = 0.263 
 + --- dist(#12,#1) = 0.291 
 + - Total coarse refinement net CPU time = 0.0 s; 3165 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=69 usiz=191.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 26182 total points stored in 281 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.506639 *
 + -- Parameters = -0.0468 0.4395 -0.9297 -0.1144 -0.2163 0.0762 1.0050 1.0256 0.9966 -0.0018 -0.0001 0.0000
 + - cost(#2)=-0.236106  
 + -- Parameters = -0.5479 1.6899 -0.5910 1.1542 -7.5405 4.1362 1.0323 1.0963 0.9496 -0.0039 -0.1008 -0.1089
 + - cost(#3)=-0.085908  
 + -- Parameters = -11.7112 -10.8863 -5.4955 -6.0850 1.5462 0.2040 1.0618 0.9035 0.9604 0.0040 0.0118 -0.0181
 + - cost(#4)=-0.041400  
 + -- Parameters = -13.9521 17.8012 -32.9745 -12.8418 29.3681 11.1686 1.0267 0.9485 0.9697 -0.0541 0.0162 -0.0166
 + - cost(#5)=-0.037763  
 + -- Parameters = -9.5508 23.9044 -34.0239 -11.0703 30.5226 13.3270 1.0067 1.0291 1.0050 -0.0087 0.0029 0.0046
 + - cost(#6)=-0.037929  
 + -- Parameters = -26.8240 -18.0508 4.8886 -16.5168 -13.7193 13.5525 0.9868 0.9640 1.0342 0.0037 0.0258 -0.0116
 + - cost(#7)=-0.028920  
 + -- Parameters = -26.9555 16.5647 -14.0889 -19.3396 14.4975 17.8935 0.9937 0.9824 1.0055 0.0114 0.0074 0.0001
 + - cost(#8)=-0.033741  
 + -- Parameters = -20.1211 -30.7159 26.7120 -2.5626 -28.2103 14.3162 0.9951 0.9961 0.9981 0.0013 0.0123 -0.0039
 + - cost(#9)=-0.029939  
 + -- Parameters = -15.2866 27.4620 -35.5688 -19.4494 32.7268 22.1149 1.0234 1.0014 1.0009 0.0026 -0.0033 0.0113
 + - cost(#10)=-0.027147  
 + -- Parameters = -27.4308 -22.7979 15.7447 -15.1693 -30.0637 15.9569 1.0102 1.0005 1.0000 -0.0012 0.0014 -0.0001
 + - cost(#11)=-0.027359  
 + -- Parameters = 7.3470 -7.3282 20.1127 11.0091 -16.2973 13.3715 1.0393 0.9842 0.9940 0.0029 -0.0098 0.0160
 + - cost(#12)=-0.022544  
 + -- Parameters = 13.9878 -12.2781 22.3119 20.4762 -20.5683 12.6855 0.9953 1.0007 0.9874 -0.0200 -0.0121 0.0091
 + - cost(#13)=-0.022667  
 + -- Parameters = -1.2451 2.3862 -5.8770 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.507516 *
 + -- Parameters = -0.0462 0.4895 -0.9454 -0.0904 -0.1220 0.1118 1.0049 1.0256 0.9970 -0.0016 -0.0010 -0.0002
 + - cost(#2)=-0.334335  
 + -- Parameters = -1.0690 -0.0467 -1.8703 0.0428 -5.7116 2.3007 1.0246 1.0362 0.9346 -0.0021 -0.0590 -0.1019
 + - cost(#3)=-0.300073  
 + -- Parameters = -1.7974 -3.3958 -1.1142 -1.4234 -0.8462 0.4686 1.0113 0.9645 1.0001 -0.0059 0.0130 -0.0223
 + - cost(#4)=-0.042562  
 + -- Parameters = -14.2137 17.9584 -33.2563 -12.9529 29.3704 9.7940 1.0277 0.9456 0.9686 -0.0528 0.0174 -0.0192
 + - cost(#5)=-0.038874  
 + -- Parameters = -9.4856 23.6620 -34.0181 -11.3466 30.4478 13.4548 1.0084 1.0272 1.0021 -0.0090 0.0031 0.0101
 + - cost(#6)=-0.039423  
 + -- Parameters = -26.3296 -16.8653 4.6798 -16.1098 -13.4172 13.7433 0.9868 0.9626 1.0374 -0.0005 0.0243 -0.0185
 + - cost(#7)=-0.030350  
 + -- Parameters = -26.4545 17.1983 -13.9343 -18.6339 14.7351 17.5495 0.9878 0.9862 0.9969 0.0126 0.0046 0.0003
 + - cost(#8)=-0.033895  
 + -- Parameters = -20.1427 -30.7690 26.7132 -2.5553 -28.1358 14.3045 0.9954 0.9955 0.9981 0.0017 0.0125 -0.0036
 + - cost(#9)=-0.031218  
 + -- Parameters = -15.2882 27.3084 -35.3579 -19.3072 32.8717 22.4074 1.0263 0.9884 0.9962 0.0120 -0.0069 0.0185
 + - cost(#10)=-0.027623  
 + -- Parameters = -27.5937 -22.9163 15.7472 -15.1861 -29.9998 15.9675 1.0141 1.0025 0.9983 -0.0008 0.0047 -0.0023
 + - cost(#11)=-0.027565  
 + -- Parameters = 7.3169 -7.2784 20.1189 11.0457 -16.2112 13.4525 1.0408 0.9833 0.9931 0.0036 -0.0108 0.0159
 + - cost(#12)=-0.023304  
 + -- Parameters = 14.3279 -12.5853 22.4468 20.4308 -20.7241 12.4800 0.9910 0.9994 0.9943 -0.0207 -0.0115 0.0100
 + - cost(#13)=-0.505875  
 + -- Parameters = -0.0548 0.4833 -1.0634 -0.0679 0.0586 0.4203 1.0062 1.0247 0.9977 -0.0024 -0.0074 0.0004
 + - case #1 is now the best
 + - Initial  cost = -0.507516
 + - Initial fine Parameters = -0.0462 0.4895 -0.9454 -0.0904 -0.1220 0.1118 1.0049 1.0256 0.9970 -0.0016 -0.0010 -0.0002
 + - Finalish cost = -0.507637 ; 132 funcs
 + - Final    cost = -0.507696 ; 213 funcs
 + Final fine fit Parameters:
       x-shift=-0.0571   y-shift= 0.4445   z-shift=-0.9821
       z-angle=-0.1107   x-angle=-0.0697   y-angle= 0.1111
       x-scale= 1.0045   y-scale= 1.0244   z-scale= 0.9972
     y/x-shear=-0.0018 z/x-shear=-0.0002 z/y-shear= 0.0002
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.0571 0.4445 -0.9821 -0.1107 -0.0697 0.1111 1.0045 1.0244 0.9972 -0.0018 -0.0002 0.0002
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 23.1
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 24.100002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0009 -0.9356 0.4060 214.3301 0.0015 0.4170 0.9108 39.6691 -1.0045 -0.0019 0.0019 204.6836
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 18.1 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2616.630100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 75.3193 47.3508   ITER = 30/137
75.3193

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 6s 85ms]
lev=0 0..171 0..213 0..166: [first cost=-0.72787] ... done [cost:-0.72787==>-0.79379]
lev=1 patch=129x161x125 [clock= 15m 14s 224ms]........:[cost=-0.81792]:........ done [cost:-0.79379==>-0.82142 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 22m 35s 472ms]......................... done [cost:-0.82142==>-0.87959 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 28m 49s 527ms]................... done [cost:-0.87959==>-0.94182 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 33m 50s 135ms]............ done [cost:-0.94182==>-0.98515 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 37m 19s 258ms]................ done [cost:-0.98515==>-1.05400 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 40m 52s 522ms]....................... done [cost:-1.05400==>-1.11321 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 44m 22s 517ms].................................. done [cost:-1.11321==>-1.19348 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 48m 5s 609ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6813/tb6813.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.8 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb6813.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 24.100002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6813.r01.tshift+orig.BRIK is 24.100002 degrees from plumb.
++ Reading input dataset ./pb01.tb6813.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31595 voxels
 + 5071 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.043  pitch=-0.145  yaw=-0.136  dS=-0.158  dL=-0.010  dP=-0.097
++ Mean: roll=-0.001  pitch=-0.062  yaw=-0.057  dS=-0.037  dL=+0.034  dP=-0.032
++ Max : roll=+0.026  pitch=+0.042  yaw=+0.020  dS=+0.100  dL=+0.075  dP=+0.061
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.12(0.12) 0.08(0.04) 0.12(0.14) 0.12(0.09) 0.14(0.06) 0.12(0.06) 0.16(0.05) 0.13(0.04) 0.17(0.05) 0.14(0.04) 0.10(0.06) 0.06(0.04) 0.05(0.03) 0.08(0.06) 0.08(0.05) 0.10(0.03) 0.15(0.06) 0.15(0.03) 0.16(0.02) 0.17(0.03) 0.15(0.02) 0.15(0.06) 0.14(0.04) 0.15(0.03) 0.18(0.05) 0.14(0.05) 0.14(0.04) 0.12(0.02) 0.11(0.05) 0.11(0.03) 0.15(0.06) 0.18(0.05) 0.21(0.04) 0.17(0.05) 0.16(0.03) 0.18(0.05) 0.16(0.03) 0.16(0.03) 0.14(0.06) 0.14(0.05) 0.16(0.02) 0.13(0.04) 0.14(0.02) 0.14(0.04) 0.11(0.03) 0.11(0.02) 0.10(0.03) 0.12(0.03) 0.11(0.05) 0.11(0.04) 0.11(0.04) 0.10(0.02) 0.11(0.01) 0.11(0.02) 0.12(0.03) 0.11(0.04) 0.10(0.05) 0.12(0.05) 0.12(0.04) 0.12(0.03) 0.12(0.03) 0.14(0.06) 0.29(0.19) 0.21(0.10) 0.19(0.06) 0.21(0.06) 0.21(0.06) 0.23(0.02) 0.20(0.06) 0.20(0.04) 0.25(0.07) 0.18(0.08) 0.20(0.05) 0.21(0.03) 0.24(0.03) 0.26(0.14) 0.21(0.06) 0.23(0.04) 0.21(0.05) 0.24(0.05) 0.25(0.03) 0.21(0.08) 0.21(0.02) 0.23(0.02) 0.25(0.04) 0.24(0.02) 0.25(0.02) 0.26(0.02) 0.23(0.05) 0.24(0.03) 0.24(0.03) 0.24(0.02) 0.22(0.03) 0.22(0.04) 0.23(0.05) 0.21(0.06) 0.25(0.06) 0.24(0.01) 0.21(0.06) 0.22(0.03) 0.20(0.04) 0.21(0.02) 0.20(0.04) 0.19(0.04) 0.22(0.04) 0.19(0.03) 0.21(0.03) 0.20(0.03) 0.21(0.03) 0.24(0.04) 0.22(0.03) 0.22(0.03) 0.24(0.04) 0.25(0.05) 0.27(0.03) 0.22(0.06) 0.24(0.03) 0.24(0.03) 0.22(0.07) 0.21(0.05) 0.25(0.05) 0.26(0.03) 0.27(0.03) 0.25(0.04) 0.27(0.05) 0.28(0.10) 0.29(0.06) 0.29(0.08) 0.30(0.02) 0.29(0.04) 0.29(0.01) 0.31(0.02) 0.31(0.03) 0.27(0.06) 0.29(0.03) 0.29(0.05) 0.28(0.06) 0.27(0.02) 0.27(0.03) 0.30(0.04) 0.25(0.08) 0.28(0.11) 0.27(0.06) 0.32(0.05) 0.31(0.15) 0.33(0.09) 0.37(0.08) 0.36(0.07) 0.37(0.07)
++ Max displacement in automask = 0.37 (mm) at sub-brick 147
++ Max delta displ  in automask = 0.19 (mm) at sub-brick 63
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb6813.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6813.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6813.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6813.r01.tshift+orig.BRIK is 24.100002 degrees from plumb.
++ Source dataset: ./pb01.tb6813.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 24.100002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb6813.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 24.100002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6813.r02.tshift+orig.BRIK is 24.100002 degrees from plumb.
++ Reading input dataset ./pb01.tb6813.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31678 voxels
 + 5084 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.018  pitch=-0.561  yaw=-0.135  dS=-0.482  dL=-0.104  dP=-0.075
++ Mean: roll=+0.037  pitch=-0.115  yaw=-0.045  dS=-0.315  dL=-0.001  dP=+0.024
++ Max : roll=+0.110  pitch=+0.076  yaw=+0.062  dS=+0.051  dL=+0.060  dP=+0.095
++ Max displacements (mm) for each sub-brick:
 0.75(0.00) 0.79(0.27) 0.96(0.20) 0.74(0.28) 0.71(0.08) 0.70(0.06) 0.72(0.03) 0.65(0.09) 0.64(0.08) 0.61(0.07) 0.72(0.14) 0.80(0.09) 0.72(0.13) 0.70(0.07) 0.67(0.07) 0.67(0.07) 0.67(0.04) 0.67(0.08) 0.60(0.09) 0.64(0.08) 0.62(0.08) 0.67(0.07) 0.67(0.04) 0.66(0.12) 0.63(0.09) 0.61(0.07) 0.59(0.04) 0.58(0.04) 0.59(0.03) 0.59(0.02) 0.61(0.05) 0.63(0.03) 0.62(0.07) 0.66(0.04) 0.63(0.09) 0.67(0.06) 0.63(0.05) 0.65(0.03) 0.60(0.06) 0.58(0.08) 0.60(0.16) 0.66(0.15) 0.60(0.17) 0.61(0.07) 0.59(0.06) 0.57(0.06) 0.56(0.03) 0.54(0.02) 0.56(0.04) 0.58(0.02) 0.59(0.03) 0.58(0.03) 0.53(0.06) 0.49(0.10) 0.51(0.06) 0.54(0.05) 0.54(0.06) 0.36(0.18) 0.39(0.06) 0.47(0.09) 0.51(0.04) 0.49(0.03) 0.50(0.03) 0.49(0.03) 0.46(0.06) 0.43(0.09) 0.47(0.04) 0.45(0.03) 0.41(0.13) 0.44(0.06) 0.46(0.07) 0.46(0.05) 0.48(0.06) 0.46(0.07) 0.46(0.03) 0.42(0.09) 0.39(0.05) 0.44(0.09) 0.48(0.07) 0.50(0.03) 0.49(0.04) 0.49(0.07) 0.46(0.11) 0.41(0.12) 0.44(0.10) 0.46(0.06) 0.49(0.06) 0.53(0.06) 0.50(0.14) 0.47(0.08) 0.44(0.07) 0.43(0.11) 0.40(0.05) 0.44(0.07) 0.46(0.09) 0.48(0.05) 0.50(0.04) 0.51(0.06) 0.52(0.03) 0.55(0.05) 0.55(0.07) 0.56(0.03) 0.59(0.05) 0.60(0.04) 0.58(0.04) 0.58(0.04) 0.57(0.02) 0.53(0.06) 0.55(0.06) 0.54(0.04) 0.55(0.05) 0.52(0.05) 0.54(0.07) 0.57(0.03) 0.55(0.04) 0.56(0.05) 0.54(0.05) 0.54(0.13) 0.53(0.06) 0.55(0.13) 0.59(0.03) 0.57(0.05) 0.54(0.06) 0.54(0.05) 0.53(0.06) 0.52(0.06) 0.51(0.03) 0.48(0.10) 0.53(0.06) 0.59(0.06) 0.59(0.03) 0.58(0.04) 0.59(0.06) 0.58(0.07) 0.51(0.10) 0.47(0.13) 0.57(0.10) 0.57(0.03) 0.57(0.03) 0.56(0.03) 0.60(0.04) 0.54(0.08) 0.45(0.41) 0.54(0.22) 0.52(0.13) 0.62(0.13) 0.63(0.03) 0.58(0.06) 0.54(0.07) 0.55(0.06)
++ Max displacement in automask = 0.96 (mm) at sub-brick 2
++ Max delta displ  in automask = 0.41 (mm) at sub-brick 142
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb6813.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6813.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6813.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6813.r02.tshift+orig.BRIK is 24.100002 degrees from plumb.
++ Source dataset: ./pb01.tb6813.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 24.100002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb6813.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 24.100002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6813.r03.tshift+orig.BRIK is 24.100002 degrees from plumb.
++ Reading input dataset ./pb01.tb6813.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31690 voxels
 + 5095 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.141  pitch=-0.513  yaw=+0.164  dS=-0.461  dL=+0.022  dP=-0.039
++ Mean: roll=+0.199  pitch=-0.336  yaw=+0.233  dS=-0.243  dL=+0.073  dP=+0.090
++ Max : roll=+0.313  pitch=-0.189  yaw=+0.364  dS=-0.004  dL=+0.142  dP=+0.202
++ Max displacements (mm) for each sub-brick:
 1.01(0.00) 1.10(0.10) 0.94(0.20) 0.96(0.12) 0.94(0.04) 0.94(0.15) 1.02(0.12) 1.10(0.34) 1.00(0.38) 1.05(0.15) 1.05(0.10) 1.05(0.09) 1.00(0.09) 0.98(0.13) 0.98(0.04) 1.00(0.03) 0.96(0.07) 0.97(0.03) 0.95(0.02) 0.96(0.02) 0.95(0.02) 0.93(0.03) 0.94(0.02) 0.92(0.03) 0.92(0.07) 0.91(0.04) 0.91(0.02) 0.92(0.04) 0.92(0.03) 0.90(0.02) 0.89(0.04) 0.89(0.04) 0.91(0.06) 0.92(0.04) 0.89(0.04) 0.90(0.05) 0.87(0.08) 0.86(0.05) 0.81(0.05) 0.89(0.08) 0.92(0.04) 0.88(0.05) 0.85(0.04) 0.84(0.07) 0.82(0.02) 0.85(0.03) 0.82(0.06) 0.81(0.07) 0.87(0.09) 0.93(0.08) 0.91(0.04) 0.91(0.13) 0.87(0.11) 0.92(0.13) 0.91(0.04) 0.91(0.02) 0.89(0.08) 0.90(0.03) 0.91(0.07) 0.87(0.04) 0.91(0.04) 0.92(0.04) 0.95(0.05) 0.89(0.06) 0.84(0.07) 0.90(0.06) 0.87(0.06) 0.88(0.06) 0.90(0.04) 0.87(0.05) 0.87(0.03) 0.90(0.09) 0.88(0.05) 0.90(0.04) 0.92(0.03) 0.94(0.03) 0.94(0.07) 0.95(0.04) 0.97(0.07) 0.96(0.02) 0.96(0.03) 0.95(0.04) 0.95(0.02) 0.95(0.02) 0.95(0.03) 0.94(0.02) 0.94(0.02) 0.95(0.02) 0.94(0.02) 0.93(0.05) 0.93(0.02) 0.90(0.03) 0.93(0.04) 0.91(0.02) 0.96(0.08) 0.96(0.06) 0.94(0.05) 0.94(0.03) 0.97(0.03) 0.95(0.05) 0.98(0.04) 0.98(0.02) 0.98(0.05) 0.99(0.02) 0.99(0.02) 1.00(0.03) 0.99(0.02) 0.96(0.04) 0.97(0.04) 0.92(0.06) 0.93(0.07) 0.91(0.04) 0.95(0.04) 1.00(0.08) 0.97(0.04) 0.97(0.03) 0.94(0.05) 0.97(0.04) 0.98(0.03) 0.99(0.05) 1.01(0.02) 1.01(0.08) 1.03(0.04) 1.02(0.03) 1.00(0.09) 1.02(0.03) 0.98(0.05) 0.99(0.04) 0.98(0.02) 0.97(0.03) 0.99(0.04) 0.99(0.02) 0.98(0.03) 0.95(0.06) 0.93(0.07) 0.94(0.03) 0.95(0.05) 0.95(0.04) 0.96(0.02) 0.98(0.03) 0.94(0.08) 0.92(0.11) 0.92(0.06) 0.89(0.04) 0.96(0.08) 0.92(0.17) 0.91(0.08) 0.99(0.09) 0.95(0.11) 0.99(0.08)
++ Max displacement in automask = 1.10 (mm) at sub-brick 7
++ Max delta displ  in automask = 0.38 (mm) at sub-brick 8
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb6813.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6813.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6813.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6813.r03.tshift+orig.BRIK is 24.100002 degrees from plumb.
++ Source dataset: ./pb01.tb6813.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.3
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 24.100002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.0
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6813.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6813.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6813.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6813.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6813.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6813.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 24.100002 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.9
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb6813
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb6813+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb6813+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1415710 voxels in source_automask+0
++ Zero-pad: zbot=2 ztop=1
++ Computing -autobox
++ 322320 voxels [72.0%] in weight mask
++ Number of points for matching = 151490
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.160154
   sp   = 0.337943
   mi   = -0.493491
   crM  = 0.0468141
   nmi  = 0.843663
   je   = 2.66311
   hel  = -0.0974997
   crA  = 0.216425
   crU  = 0.221494
   lss  = 0.839846
   lpc  = 0.0414199
   lpa  = 0.95858
   lpc+ = 0.193765
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.3
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb6813+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb6813+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 41.4 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6813.r01.blur pb02.tb6813.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6813.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb6813.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6813.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6813.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6813.r02.blur pb02.tb6813.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6813.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb6813.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6813.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6813.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6813.r03.blur pb02.tb6813.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6813.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb6813.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6813.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6813.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb6813.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6813.r01.blur+orig
++ Forming automask
 + Fixed clip level = 396.947632
 + Used gradual clip level = 317.982178 .. 438.946136
 + Number voxels above clip level = 55436
 + Clustering voxels ...
 + Largest cluster has 54790 voxels
 + Clustering voxels ...
 + Largest cluster has 54758 voxels
 + Filled    42 voxels in small holes; now have 54800 voxels
 + Clustering voxels ...
 + Largest cluster has 54800 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 371475 voxels
 + Mask now has 54800 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 362737 voxels
++ 63538 voxels in the mask [out of 426275: 14.91%]
++ first  17 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  21 y-planes are zero [from I]
++ last   15 y-planes are zero [from S]
++ first   4 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb6813.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6813.r02.blur+orig
++ Forming automask
 + Fixed clip level = 396.954620
 + Used gradual clip level = 318.067688 .. 439.542419
 + Number voxels above clip level = 55535
 + Clustering voxels ...
 + Largest cluster has 54835 voxels
 + Clustering voxels ...
 + Largest cluster has 54802 voxels
 + Filled    38 voxels in small holes; now have 54840 voxels
 + Clustering voxels ...
 + Largest cluster has 54840 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 371435 voxels
 + Mask now has 54840 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 362681 voxels
++ 63594 voxels in the mask [out of 426275: 14.92%]
++ first  17 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  21 y-planes are zero [from I]
++ last   15 y-planes are zero [from S]
++ first   4 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb6813.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6813.r03.blur+orig
++ Forming automask
 + Fixed clip level = 396.425751
 + Used gradual clip level = 318.118011 .. 439.259430
 + Number voxels above clip level = 55586
 + Clustering voxels ...
 + Largest cluster has 54952 voxels
 + Clustering voxels ...
 + Largest cluster has 54874 voxels
 + Filled    36 voxels in small holes; now have 54910 voxels
 + Clustering voxels ...
 + Largest cluster has 54910 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 371365 voxels
 + Mask now has 54910 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 362581 voxels
++ 63694 voxels in the mask [out of 426275: 14.94%]
++ first  17 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  21 y-planes are zero [from I]
++ last   15 y-planes are zero [from S]
++ first   4 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb6813
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 63811 survived, 362464 were zero
++ writing result full_mask.tb6813...
3dresample -master full_mask.tb6813+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb6813
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 55969 survived, 370306 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb6813...
3dABoverlap -no_automask full_mask.tb6813+orig mask_anat.tb6813+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb6813+orig.BRIK  B=./mask_anat.tb6813+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
63811        55969        65925        53855        9956         2114         15.6023      3.7771     0.9041     0.9176     0.9014
3ddot -dodice full_mask.tb6813+orig mask_anat.tb6813+orig
tee out.mask_ae_dice.txt
0.899232	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb6813
total number of censored TRs (simple form) = 0
1deval -a motion_tb6813_censor.1D -b outcount_tb6813_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb6813_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb6813.r01.blur+orig.HEAD pb03.tb6813.r02.blur+orig.HEAD pb03.tb6813.r03.blur+orig.HEAD -censor censor_tb6813_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb6813 -errts errts.tb6813 -bucket stats.tb6813
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb6813.r01.blur+orig.HEAD pb03.tb6813.r02.blur+orig.HEAD pb03.tb6813.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 54859 voxels (out of 426275 = 12.9%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (no censoring)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb6813.r01.blur+orig.HEAD pb03.tb6813.r02.blur+orig.HEAD pb03.tb6813.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb6813_REML -Rvar stats.tb6813_REMLvar \
 -Rfitts fitts.tb6813_REML -Rerrts errts.tb6813_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (450x24):  3.96093  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (450x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (450x18):  3.39747  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (450x6):  2.96741  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (450x12):  1.01522  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.91229e-15  ++ VERY GOOD ++
++ Matrix setup time = 2.77 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=32.141
++ Job #2: processing voxels 85254 to 127880; elapsed time=32.157
++ Job #3: processing voxels 127881 to 170507; elapsed time=32.174
++ Job #4: processing voxels 170508 to 213134; elapsed time=32.192
++ Job #5: processing voxels 213135 to 255761; elapsed time=32.210
++ Job #6: processing voxels 255762 to 298388; elapsed time=32.229
++ Job #7: processing voxels 298389 to 341015; elapsed time=32.261
++ Job #8: processing voxels 341016 to 383642; elapsed time=32.280
++ Job #9: processing voxels 383643 to 426274; elapsed time=32.290
++ Job #0: processing voxels 0 to 42626; elapsed time=32.293
++ voxel loop:0123456789.0123456789.0123456789.01234++ Job #4 finished; elapsed time=60.526
5++ Job #2 finished; elapsed time=61.488
6++ Job #5 finished; elapsed time=61.678
++ Job #1 finished; elapsed time=61.805
++ Job #8 finished; elapsed time=61.905
++ Job #7 finished; elapsed time=61.931
789.012345++ Job #3 finished; elapsed time=65.560
++ Job #6 finished; elapsed time=65.662
6789.
++ Job #0 waiting for children to finish; elapsed time=67.006
++ Job #9 finished; elapsed time=67.083
++ Job #0 now finishing up; elapsed time=67.092
++ Smallest FDR q [0 Full_Fstat] = 1.69668e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 8.56856e-13
++ Smallest FDR q [3 uns1_Fstat] = 8.57142e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 1.68276e-13
++ Smallest FDR q [6 uns2_Fstat] = 1.68232e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 2.86401e-13
++ Smallest FDR q [9 uns3_Fstat] = 2.86295e-13
++ Smallest FDR q [11 str1#0_Tstat] = 8.9425e-13
++ Smallest FDR q [12 str1_Fstat] = 8.9425e-13
++ Smallest FDR q [14 str2#0_Tstat] = 5.46007e-13
++ Smallest FDR q [15 str2_Fstat] = 5.45961e-13
++ Smallest FDR q [17 str3#0_Tstat] = 5.21854e-13
++ Smallest FDR q [18 str3_Fstat] = 5.21785e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 3.50782e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 3.50637e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 5.93605e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 5.93493e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 1.00203e-08
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 1.00186e-08
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.0937225
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.0937466
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 5.3103e-05
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 5.31086e-05
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 3.23998e-08
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 3.24002e-08
++ Wrote bucket dataset into ./stats.tb6813+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb6813+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb6813+orig.BRIK
++ Program finished; elapsed time=109.517
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.726       0.791  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.726       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.726       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.475       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.475       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb6813.r01.blur+orig.HEAD pb03.tb6813.r02.blur+orig.HEAD pb03.tb6813.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb6813_REML -Rvar stats.tb6813_REMLvar -Rfitts fitts.tb6813_REML -Rerrts errts.tb6813_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 54859 voxels (out of 426275 = 12.9%)
++ -----  matrix condition (450x24):  3.96093  ++ VERY GOOD ++
 + masked off 240857 voxels for being all zero; 185418 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 334 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=37.54
 + X matrix: 46.639% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=450 cols=24; 109*1 cases; total CPU=0.00 Elapsed=37.57
 +  average case bandwidth = 12.53
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=110.71
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=161.76
++ Output dataset ./stats.tb6813_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb6813_REML+orig.BRIK
++ Output dataset ./errts.tb6813_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb6813_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 3.34671e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 9.54991e-09
++ Smallest FDR q [3 uns1_Fstat] = 9.54991e-09
++ Smallest FDR q [5 uns2#0_Tstat] = 1.27018e-07
++ Smallest FDR q [6 uns2_Fstat] = 1.27018e-07
++ Smallest FDR q [8 uns3#0_Tstat] = 1.05145e-05
++ Smallest FDR q [9 uns3_Fstat] = 1.05145e-05
++ Smallest FDR q [11 str1#0_Tstat] = 2.10442e-09
++ Smallest FDR q [12 str1_Fstat] = 2.10442e-09
++ Smallest FDR q [14 str2#0_Tstat] = 6.04449e-06
++ Smallest FDR q [15 str2_Fstat] = 6.04449e-06
++ Smallest FDR q [17 str3#0_Tstat] = 0.000123908
++ Smallest FDR q [18 str3_Fstat] = 0.000123908
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.0765e-12
++ Smallest FDR q [21 unstructured_Fstat] = 1.0765e-12
++ Smallest FDR q [23 structured#0_Tstat] = 1.72958e-12
++ Smallest FDR q [24 structured_Fstat] = 1.72958e-12
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.678539 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.678538 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999884 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999884 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.581372 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.581372 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.0140936
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.0140936
 + Added 25 FDR curves to dataset stats.tb6813_REML+orig
++ Output dataset ./stats.tb6813_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=203.84
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb6813 pb03.tb6813.r01.blur+orig.HEAD pb03.tb6813.r02.blur+orig.HEAD pb03.tb6813.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 42.7 s
3dTstat -mean -prefix rm.signal.all all_runs.tb6813+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb6813_REML+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb6813+orig -expr c*a/b -prefix TSNR.tb6813
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
** Can't read ANY data from file 'rm.noise.all+orig.HEAD'
[7m** FATAL ERROR:[0m can't open dataset rm.noise.all+orig
** Program compile date = Jul 20 2017
