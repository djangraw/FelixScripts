echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb6663
endif
set output_dir = tb6663.srtt
if ( -d tb6663.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb6663.srtt
mkdir tb6663.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb6663.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb6663.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb6663.srtt/pb00.tb6663.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.1 s
3dTcat -prefix tb6663.srtt/pb00.tb6663.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.5 s
3dTcat -prefix tb6663.srtt/pb00.tb6663.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.2 s
set tr_counts = ( 150 150 150 )
cd tb6663.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6663.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6663.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6663.r01.tcat+orig.BRIK is 5.900034 degrees from plumb.
++ 24133 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6663.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6663.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6663.r02.tcat+orig.BRIK is 5.900034 degrees from plumb.
++ 24247 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6663.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6663.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6663.r03.tcat+orig.BRIK is 5.900034 degrees from plumb.
++ 24044 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb6663.r01.tshift -tpattern alt+z2 pb00.tb6663.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6663.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6663.r01.tcat+orig.BRIK is 5.900034 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6663.r02.tshift -tpattern alt+z2 pb00.tb6663.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6663.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6663.r02.tcat+orig.BRIK is 5.900034 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6663.r03.tshift -tpattern alt+z2 pb00.tb6663.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6663.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6663.r03.tcat+orig.BRIK is 5.900034 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb6663.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 5.900034 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 426.593994
 + Used gradual clip level = 390.990601 .. 472.605011
 + Number voxels above clip level = 24412
 + Clustering voxels ...
 + Largest cluster has 24138 voxels
 + Clustering voxels ...
 + Largest cluster has 23854 voxels
 + Filled   231 voxels in small holes; now have 24085 voxels
 + Clustering voxels ...
 + Largest cluster has 24085 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 106987 voxels
 + Mask now has 24085 voxels
++ 24085 voxels in the mask [out of 131072: 18.38%]
++ first  15 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first   7 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1033.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1033.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 5.900034 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 5.900034 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1358935 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 24085 voxels [15.5%] in weight mask
++ Number of points for matching = 24085
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.840 28.920 20.387 (index)
 + source center of mass = 85.455 158.291 167.017 (index)
 + source-target CM = 0.134 0.845 -6.300 (xyz)
 + center of mass shifts = 0.134 0.845 -6.300
++ shift param auto-range: -69.4..69.7 -68.7..70.4 -53.8..41.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.865601 .. 10.134399
 + Range param#2 [y-shift] = -9.154709 .. 10.845291
 + Range param#3 [z-shift] = -16.300186 .. 3.699814
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.865601 .. 40.134399
 + Range param#2 [y-shift] = -39.154709 .. 40.845291
 + Range param#3 [z-shift] = -46.300186 .. 33.699814
 + 12 free parameters
++ Normalized convergence radius = 0.000482
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1358935 [out of 13897136] voxels
 + base mask has 33733 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=83 usiz=194
 + - copying weight image
 + - using 24085 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 20893 total points stored in 198 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=0.00452967] **[#2=-0.0126461] *o-.o--*[#17=-0.0156343] *o.*[#28=-0.0477089] *o+o.+--..-+*[#1180=-0.0489249] *-...$.
 + - best 45 costs found:
    0 v=-0.048925: -13.20 -25.82   7.03 -15.00 -30.00  15.00  [grid]
    1 v=-0.047709: -13.20 -12.49   7.03 -15.00 -15.00  15.00  [grid]
    2 v=-0.043434: -13.20 -12.49   7.03 -15.00 -15.00 -15.00  [grid]
    3 v=-0.043109: -13.20 -25.82   7.03 -15.00 -30.00 -15.00  [grid]
    4 v=-0.038769: -11.46  -3.71  -2.41 -24.53 -29.49 -26.10  [rand]
    5 v=-0.037354: -13.20  14.18   7.03 -30.00  15.00  30.00  [grid]
    6 v=-0.036503: -13.20 -12.49   7.03 -15.00 -15.00 -30.00  [grid]
    7 v=-0.032949:  31.97 -10.95  -3.56  23.31  -3.26 -40.47  [rand]
    8 v=-0.032508:  13.47  14.18  20.37  15.00 -30.00  15.00  [grid]
    9 v=-0.032173: -13.20 -12.49  20.37 -30.00 -15.00  30.00  [grid]
   10 v=-0.032154: -13.20  27.51   7.03 -15.00  15.00  30.00  [grid]
   11 v=-0.031764: -13.20  14.18   7.03  15.00  15.00  30.00  [grid]
   12 v=-0.031667: -13.20  14.18  20.37 -30.00 -30.00 -30.00  [grid]
   13 v=-0.031233: -13.20  14.18   7.03 -15.00  15.00  30.00  [grid]
   14 v=-0.031154: -13.20 -12.49  20.37 -15.00 -30.00  15.00  [grid]
   15 v=-0.030875: -13.20  14.18   7.03 -15.00  30.00 -15.00  [grid]
   16 v=-0.030375: -13.20 -12.49  20.37 -15.00 -15.00  30.00  [grid]
   17 v=-0.029831: -13.20  14.18   7.03 -30.00 -30.00  30.00  [grid]
   18 v=-0.029586:  26.80  14.18  20.37 -30.00 -15.00 -30.00  [grid]
   19 v=-0.029514:  -3.94   7.07   1.50   4.32  22.85 -18.95  [rand]
   20 v=-0.028759: -22.72  24.42   4.12  -5.91  29.74  29.45  [rand]
   21 v=-0.028726: -26.53 -12.49  20.37  30.00 -15.00  30.00  [grid]
   22 v=-0.028660: -13.20 -25.82  20.37 -15.00 -30.00  30.00  [grid]
   23 v=-0.028609: -26.53 -25.82   7.03  30.00 -30.00  30.00  [grid]
   24 v=-0.028358: -22.22 -15.54   9.53 -41.11 -22.86   3.97  [rand]
   25 v=-0.028327:  -8.51 -19.59  11.17 -25.20 -18.50 -13.54  [rand]
   26 v=-0.027899: -34.19  17.43 -14.90 -16.34   8.64  40.54  [rand]
   27 v=-0.027704:  13.47 -25.82   7.03  15.00 -15.00  15.00  [grid]
   28 v=-0.027674: -14.07  -8.61  -1.46 -15.99 -13.53 -29.93  [rand]
   29 v=-0.027428:  26.80 -12.49  20.37 -30.00 -30.00 -30.00  [grid]
   30 v=-0.027055:  -8.51 -19.59  11.17 -25.20 -18.50  13.54  [rand]
   31 v=-0.026731: -13.20  14.18   7.03  15.00  30.00  15.00  [grid]
   32 v=-0.026636: -26.53  14.18  20.37  30.00 -15.00  30.00  [grid]
   33 v=-0.026608: -16.01  10.31  18.05 -20.99 -15.73  16.09  [rand]
   34 v=-0.026595: -13.20 -25.82   7.03 -15.00 -15.00 -15.00  [grid]
   35 v=-0.026594: -13.20 -25.82   7.03 -30.00 -15.00  30.00  [grid]
   36 v=-0.026577: -13.20 -25.82   7.03 -30.00 -30.00  30.00  [grid]
   37 v=-0.026070:  -9.69 -23.91   5.08  -3.10 -34.36  -2.55  [rand]
   38 v=-0.026011:   9.96  25.60 -17.68   3.10  34.36   2.55  [rand]
   39 v=-0.025976: -13.20  14.18   7.03 -15.00  30.00 -30.00  [grid]
   40 v=-0.025957:  -3.94   7.07   1.50  -4.32 -22.85 -18.95  [rand]
   41 v=-0.025683:  13.47 -25.82   7.03  15.00 -30.00 -15.00  [grid]
   42 v=-0.025667: -13.20 -12.49   7.03 -30.00 -30.00 -30.00  [grid]
   43 v=-0.025628: -26.53  14.18 -32.97 -15.00  30.00 -15.00  [grid]
   44 v=-0.025599:  26.80 -25.82   7.03 -30.00 -30.00 -30.00  [grid]
*[#8004=-0.0511109] *[#8005=-0.0532472] *[#8010=-0.0573835] *[#8011=-0.0789004] *[#8016=-0.0797391] *[#8023=-0.0798735] *[#8832=-0.0800143] *[#8835=-0.0810256] *[#8836=-0.081794] *[#8837=-0.0830253] *[#8838=-0.0846442] *[#8841=-0.0852139] *[#8846=-0.0861964] *[#8847=-0.0869671] *[#8848=-0.0885517] *[#8855=-0.090208] *[#8857=-0.0905647] *[#8858=-0.0912397] *[#8859=-0.091469] *[#8862=-0.0924122] *[#8863=-0.0929533] *[#8864=-0.0934331] *[#8865=-0.0941596] *[#8866=-0.0942813] *[#8867=-0.0953459] *[#8868=-0.0970648] *[#8873=-0.0972671] *[#8875=-0.0973367] *[#8876=-0.0982952] *[#8879=-0.0983652] *[#8880=-0.0985049] *[#9228=-0.0996197] *[#9236=-0.100044] *[#9237=-0.100305] *[#9239=-0.100475] *[#9242=-0.100505] *[#9244=-0.100721] *[#9246=-0.100885] *[#9332=-0.111623] *[#9334=-0.113478] *[#9341=-0.11692] *[#9345=-0.120228] *[#9346=-0.120253] *[#9348=-0.121206]  + - costs of the above after a little optimization:
    0 v=-0.079874: -12.09 -26.37  10.75 -12.65 -32.66  10.86  [grid]
    1 v=-0.048490: -13.33 -12.10   7.21 -14.79 -15.21  15.11  [grid]
    2 v=-0.058760: -11.81 -17.09   6.00 -13.87 -17.94 -16.26  [grid]
    3 v=-0.078690:  -8.22 -24.00   8.60 -12.64 -31.47 -14.28  [grid]
    4 v=-0.047880: -12.32  -3.68  -2.06 -20.03 -30.66 -26.15  [rand]
    5 v=-0.054598: -12.31   9.33   4.28 -37.05  12.19  32.65  [grid]
    6 v=-0.049912: -11.68 -14.19   6.89 -13.50 -13.37 -21.02  [grid]
    7 v=-0.039309:  31.96 -10.67  -3.58  23.60  -3.38 -36.06  [rand]
    8 v=-0.037560:  13.60  13.97  20.51  15.51 -31.42  19.75  [grid]
    9 v=-0.037784: -13.15 -12.34  24.58 -30.16 -14.65  29.76  [grid]
   10 v=-0.038741: -12.73  23.89   7.07 -15.29  14.81  29.66  [grid]
   11 v=-0.061693: -14.09   5.10   6.81  15.61  13.41  33.87  [grid]
   12 v=-0.040827: -12.01  14.67  20.08 -25.25 -29.57 -30.26  [grid]
   13 v=-0.046492:  -9.46  13.83   6.32 -13.25  16.59  27.74  [grid]
   14 v=-0.077877:  -9.83 -15.86  18.60  -4.65 -24.85  15.01  [grid]
   15 v=-0.034303: -13.13   9.95   7.63 -15.17  29.97 -15.13  [grid]
   16 v=-0.040850: -10.99 -13.26  24.79 -12.53 -11.22  29.13  [grid]
   17 v=-0.041190: -11.97   9.65   3.52 -29.76 -29.69  30.58  [grid]
   18 v=-0.045742:  26.77  16.23  16.07 -28.74 -14.81 -33.90  [grid]
   19 v=-0.036677:  -4.82   7.43   1.71   2.53  21.77 -18.71  [rand]
   20 v=-0.036036: -23.94  25.58   1.57  -6.35  30.20  27.88  [rand]
   21 v=-0.044412: -22.56 -13.80  20.65  26.14 -17.02  30.06  [grid]
   22 v=-0.044030: -13.99 -26.47  15.56 -17.69 -23.89  27.88  [grid]
   23 v=-0.040494: -25.92 -26.64  10.77  33.58 -25.79  41.72  [grid]
   24 v=-0.034874: -18.49 -16.08   8.90 -40.78 -22.66   4.06  [rand]
   25 v=-0.098505:  -5.18 -21.69   9.46  -7.40 -25.81  -4.08  [rand]
   26 v=-0.038873: -34.51  18.36 -12.20 -14.34   6.38  38.28  [rand]
   27 v=-0.042871:  11.68 -23.50   6.47  14.04 -17.41  12.49  [grid]
   28 v=-0.044532: -13.29  -9.50   0.09 -21.88 -18.90 -30.11  [rand]
   29 v=-0.030325:  26.69 -12.77  19.51 -30.84 -31.61 -31.57  [grid]
   30 v=-0.091850:  -6.80 -15.66  11.00  -6.98 -21.11   6.70  [rand]
   31 v=-0.048325: -11.11  12.45   8.49  14.68  23.36  24.52  [grid]
   32 v=-0.045221: -23.95  11.70  20.67  24.42 -14.63  32.18  [grid]
   33 v=-0.035048: -16.89  13.16  17.99 -20.44 -14.61  14.92  [rand]
   34 v=-0.100885:  -3.22 -28.28   2.04  -5.99 -18.50  -0.10  [grid]
   35 v=-0.037294: -13.77 -29.81   8.70 -23.63 -15.55  32.37  [grid]
   36 v=-0.040515: -10.53 -23.64   5.72 -28.65 -28.26  30.88  [grid]
  *37 v=-0.121206:  -0.81 -29.32   8.09  -0.86 -32.16   0.17  [rand]
   38 v=-0.072377:   3.64  26.86 -17.30   1.12  30.05  -0.95  [rand]
   39 v=-0.032145: -15.74  13.80   6.33 -15.62  34.14 -30.36  [grid]
   40 v=-0.048478:  -7.71   9.19   3.01  -3.58 -21.51 -20.51  [rand]
   41 v=-0.079673:   5.28 -32.05   7.52  12.75 -36.10  -2.93  [grid]
   42 v=-0.047289: -10.32 -11.83   1.59 -29.12 -34.39 -26.93  [grid]
   43 v=-0.028356: -26.31  12.86 -32.53 -14.85  29.91 -16.20  [grid]
   44 v=-0.037395:  26.56 -27.58   6.91 -32.89 -25.61 -34.72  [grid]
 + - save #37 for twobest
 + - save #34 for twobest
 + - save #25 for twobest
 + - save #30 for twobest
 + - save # 0 for twobest
 + - save #41 for twobest
 + - save # 3 for twobest
 + - save #14 for twobest
 + - save #38 for twobest
 + - save #11 for twobest
 + - save # 2 for twobest
 + - save # 5 for twobest
 + - save # 6 for twobest
 + - save # 1 for twobest
 + - save #40 for twobest
 + - save #31 for twobest
 + - save # 4 for twobest
 + - save #42 for twobest
 + - save #13 for twobest
 + - save #18 for twobest
 + - save #32 for twobest
 + - save #28 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=83 usiz=194
 + - retaining old weight image
 + - using 24085 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 20929 total points stored in 211 'RHDD(13.7332)' bloks
 + - param set #1 has cost=-0.091470
 + -- Parameters = -0.3815 -29.4953 7.7399 -0.3919 -32.5756 -0.3081 1.0024 1.0000 1.0012 0.0040 0.0004 0.0112
 + - param set #2 has cost=-0.080328
 + -- Parameters = -3.1759 -28.1995 3.2223 -6.1314 -21.6699 0.8840 0.9962 0.9911 1.0283 0.0089 0.0120 0.0048
 + - param set #3 has cost=-0.089073
 + -- Parameters = -4.2757 -21.1075 10.4396 -5.2927 -26.2521 1.2393 1.0111 1.0042 0.9978 -0.0024 0.0059 -0.0049
 + - param set #4 has cost=-0.076568
 + -- Parameters = -6.7215 -15.2872 9.0954 -8.6030 -19.8461 2.6482 1.0145 1.0065 0.9907 0.0023 0.0001 -0.0002
 + - param set #5 has cost=-0.066218
 + -- Parameters = -10.3411 -26.0196 10.4762 -11.9413 -31.1182 6.0586 1.0107 0.9930 1.0049 0.0002 -0.0005 -0.0029
 + - param set #6 has cost=-0.061724
 + -- Parameters = 4.3830 -32.1065 8.3209 6.6292 -36.9494 -4.1717 0.9944 0.9891 0.9906 -0.0033 0.0012 0.0010
 + - param set #7 has cost=-0.060914
 + -- Parameters = -8.2143 -24.1638 8.9899 -12.5627 -31.2517 -14.6871 0.9997 1.0150 0.9976 -0.0012 -0.0007 -0.0010
 + - param set #8 has cost=-0.062763
 + -- Parameters = -7.0223 -16.5977 17.8158 -4.3321 -28.2714 11.6430 1.0007 1.0054 1.0010 0.0027 0.0118 0.0039
 + - param set #9 has cost=-0.058643
 + -- Parameters = 3.0412 25.8922 -16.5768 2.4329 30.4857 -5.0396 0.9983 1.0058 0.9955 -0.0012 -0.0004 0.0013
 + - param set #10 has cost=-0.038270
 + -- Parameters = -14.0830 5.8189 7.4171 14.5768 13.7994 35.1540 1.0026 1.0013 1.0032 0.0012 0.0123 0.0012
 + - param set #11 has cost=-0.060209
 + -- Parameters = -9.4120 -19.0188 8.5432 -13.4097 -18.7298 -11.2389 1.0098 0.9698 1.0061 -0.0087 -0.0052 0.0078
*[#10590=-0.21044] *[#10604=-0.322305] *[#10614=-0.322362] *[#10616=-0.346956] *[#10626=-0.348758] *[#10627=-0.353569] *[#10628=-0.354879] *[#10630=-0.360895] *[#10631=-0.37279] *[#10632=-0.393794] *[#10633=-0.408238] *[#10634=-0.442235] *[#10635=-0.447676] *[#10639=-0.450274] *[#10640=-0.458793] *[#10643=-0.459729] *[#10646=-0.466421] *[#10647=-0.468671] *[#10648=-0.473943] *[#10649=-0.477016] *[#10650=-0.479037] *[#10655=-0.482507] *[#10656=-0.483047] *[#10658=-0.486169] *[#10664=-0.487622] *[#10666=-0.488414] *[#10667=-0.488961] *[#10670=-0.48909] *[#10672=-0.49051] *[#10673=-0.490847] *[#10675=-0.491783] *[#10676=-0.491791] *[#10677=-0.492202] 
 + - param set #12 has cost=-0.492202
 + -- Parameters = 0.1796 0.2625 -1.1317 -0.5432 2.3190 -1.0252 1.0052 1.0236 1.0018 0.0049 0.0042 -0.0168
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.388 
 + --- dist(#3,#1) = 0.317 
 + --- dist(#4,#1) = 0.356 
 + --- dist(#5,#1) = 0.246 
 + --- dist(#6,#1) = 0.372 
 + --- dist(#7,#1) = 0.34 
 + --- dist(#8,#1) = 0.436 
 + --- dist(#9,#1) = 0.373 
 + --- dist(#10,#1) = 0.241 
 + --- dist(#11,#1) = 0.32 
 + --- dist(#12,#1) = 0.402 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=83 usiz=194
 + - retaining old weight image
 + - using 24085 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 21011 total points stored in 218 'RHDD(13.5933)' bloks
*[#10720=-0.492285] *[#10721=-0.492524] *[#10722=-0.49274] *[#10723=-0.492842] *[#10732=-0.493765] *[#10735=-0.493985] *[#10737=-0.494165] *[#10738=-0.494171] *[#10739=-0.494337] *[#10741=-0.494343] *[#10744=-0.494532] *[#10745=-0.494791] *[#10748=-0.494916] *[#10755=-0.494982] *[#10760=-0.495377] *[#10761=-0.495627] *[#10764=-0.495667] *[#10766=-0.495801] *[#10769=-0.495873] *[#10770=-0.495889] *[#10772=-0.495889] *[#10774=-0.496033] *[#10778=-0.496194] *[#10779=-0.496269] 
 + - param set #1 has cost=-0.496269
 + -- Parameters = 0.2388 0.4957 -0.8147 -0.5838 2.0830 -1.0953 0.9968 1.0339 0.9892 0.0022 0.0038 -0.0131
 + - param set #2 has cost=-0.076351
 + -- Parameters = -0.4814 -30.6065 7.6875 -0.2567 -32.0712 -0.5528 0.9826 0.9761 0.9875 -0.0087 -0.0045 0.0038
 + - param set #3 has cost=-0.074714
 + -- Parameters = -3.7019 -20.7258 10.9271 -4.6503 -26.4033 0.6157 1.0099 1.0038 0.9844 -0.0045 0.0138 -0.0090
 + - param set #4 has cost=-0.068898
 + -- Parameters = -3.3382 -27.0084 3.7279 -5.5580 -22.6876 1.7430 0.9897 0.9773 1.0296 0.0137 0.0203 -0.0138
 + - param set #5 has cost=-0.076484
 + -- Parameters = -4.9883 -16.0322 8.1384 -7.4820 -19.5819 -1.1307 1.0252 1.0280 0.9953 0.0064 0.0002 -0.0017
 + - param set #6 has cost=-0.052377
 + -- Parameters = -10.2163 -26.0291 10.5025 -11.8856 -31.0407 5.8617 1.0118 0.9940 1.0063 0.0004 0.0063 -0.0024
 + - param set #7 has cost=-0.052021
 + -- Parameters = -7.2721 -16.7924 17.6753 -4.5101 -28.4694 11.2397 0.9929 1.0032 0.9934 0.0041 0.0203 0.0050
 + - param set #8 has cost=-0.053298
 + -- Parameters = 4.2542 -32.0180 8.1735 6.2500 -36.7709 -4.4693 0.9944 0.9900 0.9895 0.0023 0.0009 0.0012
 + - param set #9 has cost=-0.051531
 + -- Parameters = -7.8102 -24.1889 9.1688 -11.4716 -31.7288 -16.3688 0.9985 1.0121 0.9918 0.0002 0.0033 -0.0010
 + - param set #10 has cost=-0.054675
 + -- Parameters = -8.8299 -18.9592 8.6486 -13.1464 -19.0545 -11.1195 0.9922 0.9770 1.0078 0.0011 0.0149 0.0087
 + - param set #11 has cost=-0.051785
 + -- Parameters = 2.2033 25.0013 -15.9320 1.8334 29.6029 -5.4172 1.0168 1.0061 0.9771 0.0006 -0.0032 -0.0003
 + - param set #12 has cost=-0.033485
 + -- Parameters = -14.2495 5.6122 7.5414 13.6259 15.3782 34.0220 0.9875 0.9839 0.9827 0.0235 0.0096 -0.0054
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.241 
 + --- dist(#3,#1) = 0.389 
 + --- dist(#4,#1) = 0.317 
 + --- dist(#5,#1) = 0.344 
 + --- dist(#6,#1) = 0.243 
 + --- dist(#7,#1) = 0.432 
 + --- dist(#8,#1) = 0.368 
 + --- dist(#9,#1) = 0.339 
 + --- dist(#10,#1) = 0.306 
 + --- dist(#11,#1) = 0.376 
 + --- dist(#12,#1) = 0.39 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=83 usiz=194
 + - retaining old weight image
 + - using 24085 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 21090 total points stored in 225 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.475683
 + -- Parameters = 0.2600 0.4693 -0.7823 -0.5586 1.9828 -0.9981 1.0011 1.0317 0.9848 0.0041 0.0041 -0.0178
 + - param set #2 has cost=-0.068307
 + -- Parameters = -4.3432 -15.5350 8.3223 -7.1650 -19.2668 -1.9599 1.0096 1.0282 0.9987 0.0009 0.0059 -0.0061
 + - param set #3 has cost=-0.066164
 + -- Parameters = -0.7772 -30.3527 7.5579 -0.0838 -32.3133 -1.1955 0.9732 0.9727 0.9610 -0.0058 0.0035 0.0087
 + - param set #4 has cost=-0.063175
 + -- Parameters = -3.2828 -20.7706 10.2222 -4.3574 -26.1433 0.7965 1.0012 1.0045 0.9824 -0.0061 0.0133 -0.0099
 + - param set #5 has cost=-0.063345
 + -- Parameters = -3.6492 -26.8737 5.4294 -5.7683 -24.5981 3.1870 0.9713 0.9629 1.0004 0.0130 0.0271 -0.0231
 + - param set #6 has cost=-0.062758
 + -- Parameters = -5.2649 -15.8319 8.6934 -9.4249 -18.9380 -4.9256 0.9844 0.9994 0.9813 0.0043 0.0594 -0.0153
 + - param set #7 has cost=-0.045809
 + -- Parameters = 2.9829 -32.0235 8.2492 5.0483 -36.3892 -4.9020 1.0006 0.9842 0.9793 -0.0076 0.0075 0.0005
 + - param set #8 has cost=-0.041723
 + -- Parameters = -10.1653 -26.0668 10.5099 -11.6867 -31.1163 5.6519 1.0118 0.9939 1.0146 0.0003 0.0066 -0.0022
 + - param set #9 has cost=-0.042005
 + -- Parameters = -6.6380 -16.6134 17.4864 -4.1141 -28.1519 11.2559 0.9950 1.0120 0.9916 0.0047 0.0209 0.0042
 + - param set #10 has cost=-0.046522
 + -- Parameters = 2.6134 24.3689 -15.7309 1.8287 28.9714 -4.7348 1.0211 1.0203 0.9807 0.0063 -0.0060 -0.0026
 + - param set #11 has cost=-0.045177
 + -- Parameters = -6.9609 -25.0125 9.0924 -12.1793 -31.5548 -15.8597 0.9974 1.0131 0.9910 -0.0001 0.0078 0.0001
 + - param set #12 has cost=-0.029265
 + -- Parameters = -14.4239 5.4269 7.7062 13.4132 15.5427 33.4285 0.9892 0.9887 0.9730 0.0215 0.0171 -0.0041
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.236 
 + --- dist(#3,#1) = 0.385 
 + --- dist(#4,#1) = 0.342 
 + --- dist(#5,#1) = 0.313 
 + --- dist(#6,#1) = 0.249 
 + --- dist(#7,#1) = 0.3 
 + --- dist(#8,#1) = 0.426 
 + --- dist(#9,#1) = 0.373 
 + --- dist(#10,#1) = 0.335 
 + --- dist(#11,#1) = 0.368 
 + --- dist(#12,#1) = 0.383 
 + - Total coarse refinement net CPU time = 0.0 s; 3166 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=83 usiz=194
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 21154 total points stored in 227 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.463662 *
 + -- Parameters = 0.2600 0.4693 -0.7823 -0.5586 1.9828 -0.9981 1.0011 1.0317 0.9848 0.0041 0.0041 -0.0178
 + - cost(#2)=-0.063063  
 + -- Parameters = -4.3432 -15.5350 8.3223 -7.1650 -19.2668 -1.9599 1.0096 1.0282 0.9987 0.0009 0.0059 -0.0061
 + - cost(#3)=-0.062412  
 + -- Parameters = -0.7772 -30.3527 7.5579 -0.0838 -32.3133 -1.1955 0.9732 0.9727 0.9610 -0.0058 0.0035 0.0087
 + - cost(#4)=-0.061890  
 + -- Parameters = -3.6492 -26.8737 5.4294 -5.7683 -24.5981 3.1870 0.9713 0.9629 1.0004 0.0130 0.0271 -0.0231
 + - cost(#5)=-0.058318  
 + -- Parameters = -3.2828 -20.7706 10.2222 -4.3574 -26.1433 0.7965 1.0012 1.0045 0.9824 -0.0061 0.0133 -0.0099
 + - cost(#6)=-0.056508  
 + -- Parameters = -5.2649 -15.8319 8.6934 -9.4249 -18.9380 -4.9256 0.9844 0.9994 0.9813 0.0043 0.0594 -0.0153
 + - cost(#7)=-0.044854  
 + -- Parameters = 2.6134 24.3689 -15.7309 1.8287 28.9714 -4.7348 1.0211 1.0203 0.9807 0.0063 -0.0060 -0.0026
 + - cost(#8)=-0.043863  
 + -- Parameters = 2.9829 -32.0235 8.2492 5.0483 -36.3892 -4.9020 1.0006 0.9842 0.9793 -0.0076 0.0075 0.0005
 + - cost(#9)=-0.043062  
 + -- Parameters = -6.9609 -25.0125 9.0924 -12.1793 -31.5548 -15.8597 0.9974 1.0131 0.9910 -0.0001 0.0078 0.0001
 + - cost(#10)=-0.039207  
 + -- Parameters = -6.6380 -16.6134 17.4864 -4.1141 -28.1519 11.2559 0.9950 1.0120 0.9916 0.0047 0.0209 0.0042
 + - cost(#11)=-0.037761  
 + -- Parameters = -10.1653 -26.0668 10.5099 -11.6867 -31.1163 5.6519 1.0118 0.9939 1.0146 0.0003 0.0066 -0.0022
 + - cost(#12)=-0.028758  
 + -- Parameters = -14.4239 5.4269 7.7062 13.4132 15.5427 33.4285 0.9892 0.9887 0.9730 0.0215 0.0171 -0.0041
 + - cost(#13)=-0.025853  
 + -- Parameters = 0.1344 0.8453 -6.3002 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.466720 *
 + -- Parameters = 0.2202 0.4415 -0.8125 -0.5026 1.9843 -1.0574 1.0014 1.0255 0.9810 0.0052 0.0014 -0.0191
 + - cost(#2)=-0.064310  
 + -- Parameters = -4.5759 -15.4836 8.4114 -6.9232 -19.6803 -2.4424 1.0029 1.0321 0.9937 0.0017 0.0110 -0.0025
 + - cost(#3)=-0.063945  
 + -- Parameters = -0.2947 -30.2713 7.7175 0.3882 -32.6135 -1.2444 0.9726 0.9679 0.9611 -0.0053 0.0068 0.0068
 + - cost(#4)=-0.063904  
 + -- Parameters = -3.7078 -27.1615 5.2946 -6.0274 -24.3628 2.5808 0.9761 0.9455 0.9991 0.0158 0.0263 -0.0247
 + - cost(#5)=-0.061736  
 + -- Parameters = -3.1069 -21.9740 9.8344 -3.6838 -26.0253 0.3015 0.9953 0.9883 0.9668 -0.0150 0.0114 -0.0086
 + - cost(#6)=-0.060062  
 + -- Parameters = -5.5518 -15.9660 8.3837 -9.1474 -19.0329 -5.6447 1.0046 1.0057 0.9701 0.0069 0.0599 -0.0158
 + - cost(#7)=-0.049984  
 + -- Parameters = 2.3028 24.4269 -14.5018 0.7497 28.6479 -3.2116 1.0517 1.0206 0.9553 -0.0207 -0.0148 0.0026
 + - cost(#8)=-0.044770  
 + -- Parameters = 2.5833 -31.9986 8.2098 4.7274 -36.3888 -4.9306 1.0040 0.9843 0.9796 -0.0096 0.0051 0.0036
 + - cost(#9)=-0.044113  
 + -- Parameters = -7.0279 -25.0988 9.2236 -12.0437 -31.7669 -15.7073 0.9947 1.0150 0.9907 -0.0057 0.0090 0.0015
 + - cost(#10)=-0.045054  
 + -- Parameters = -6.0351 -17.2510 16.2984 -4.5744 -28.3337 8.3986 1.0060 1.0152 0.9848 0.0097 0.0200 0.0057
 + - cost(#11)=-0.059757  
 + -- Parameters = -4.8242 -25.2444 9.5766 -5.3853 -29.7984 3.5963 0.9897 0.9803 0.9967 -0.0017 0.0086 -0.0240
 + - cost(#12)=-0.029814  
 + -- Parameters = -14.4385 5.1816 7.8903 12.8182 16.2635 33.0053 0.9865 0.9921 0.9759 0.0220 0.0205 -0.0042
 + - cost(#13)=-0.461242  
 + -- Parameters = 0.2083 0.1993 -0.8832 -0.4812 2.7563 -1.0611 1.0000 1.0271 0.9888 0.0046 0.0038 -0.0027
 + - case #1 is now the best
 + - Initial  cost = -0.466720
 + - Initial fine Parameters = 0.2202 0.4415 -0.8125 -0.5026 1.9843 -1.0574 1.0014 1.0255 0.9810 0.0052 0.0014 -0.0191
 + - Finalish cost = -0.467656 ; 345 funcs
 + - Final    cost = -0.467665 ; 143 funcs
 + Final fine fit Parameters:
       x-shift= 0.2724   y-shift= 0.5900   z-shift=-0.7537
       z-angle=-0.4881   x-angle= 1.5753   y-angle=-0.8887
       x-scale= 1.0007   y-scale= 1.0253   z-scale= 0.9774
     y/x-shear= 0.0052 z/x-shear=-0.0018 z/y-shear=-0.0265
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.2724 0.5900 -0.7537 -0.4881 1.5753 -0.8887 1.0007 1.0253 0.9774 0.0052 -0.0018 -0.0265
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 19.4
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 5.900034 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0121 -1.0138 0.1285 240.6940 -0.0188 0.1589 0.9680 79.8529 -1.0005 -0.0089 -0.0155 201.9060
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 17.0 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2255.760100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 86.8057 47.5058   ITER = 7/137
86.8057

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 942ms]
lev=0 0..171 0..213 0..166: [first cost=-0.65634] ... done [cost:-0.65634==>-0.71496]
lev=1 patch=129x161x125 [clock= 12m 23s 667ms]........:[cost=-0.74790]:........ done [cost:-0.71496==>-0.75076 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 19m 35s 525ms]......................... done [cost:-0.75076==>-0.81893 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 26m 10s 302ms]............... done [cost:-0.81893==>-0.88545 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 31m 22s 680ms]............. done [cost:-0.88545==>-0.95252 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 35m 16s 872ms]...................... done [cost:-0.95252==>-1.01396 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 38m 59s 970ms].......................... done [cost:-1.01396==>-1.06185 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 42m 37s 663ms]..................... done [cost:-1.06185==>-1.14441 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 46m 20s 401ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6663/tb6663.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.3 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb6663.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.900034 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6663.r01.tshift+orig.BRIK is 5.900034 degrees from plumb.
++ Reading input dataset ./pb01.tb6663.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 25743 voxels
 + 4244 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.008  pitch=-0.085  yaw=-0.181  dS=-0.766  dL=-0.195  dP=-0.359
++ Mean: roll=+0.200  pitch=+0.803  yaw=-0.064  dS=-0.303  dL=-0.090  dP=-0.167
++ Max : roll=+0.369  pitch=+1.402  yaw=+0.036  dS=+0.095  dL=+0.017  dP=+0.032
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.17(0.17) 0.15(0.13) 0.10(0.05) 0.09(0.01) 0.06(0.04) 0.06(0.04) 0.10(0.05) 0.13(0.04) 0.15(0.07) 0.11(0.16) 0.15(0.11) 0.16(0.08) 0.18(0.08) 0.21(0.03) 0.22(0.02) 0.29(0.07) 0.30(0.04) 0.31(0.02) 0.32(0.05) 0.34(0.06) 0.35(0.02) 1.09(0.74) 1.24(0.25) 0.67(0.63) 0.66(0.06) 0.66(0.10) 0.66(0.03) 0.68(0.02) 0.76(0.09) 0.79(0.05) 0.78(0.04) 0.84(0.11) 0.90(0.07) 0.94(0.11) 0.94(0.01) 0.89(0.08) 0.93(0.06) 0.94(0.05) 0.97(0.06) 0.91(0.07) 0.95(0.06) 0.95(0.02) 0.97(0.04) 1.02(0.09) 1.05(0.03) 1.05(0.02) 1.06(0.04) 1.05(0.11) 1.07(0.02) 1.13(0.14) 1.14(0.03) 1.30(0.16) 1.38(0.09) 1.37(0.05) 1.55(0.32) 1.58(0.12) 1.61(0.13) 1.66(0.09) 1.69(0.03) 1.66(0.04) 1.65(0.07) 1.67(0.05) 1.69(0.05) 1.68(0.02) 1.71(0.05) 1.72(0.04) 1.69(0.07) 1.61(0.14) 1.68(0.07) 1.77(0.11) 1.80(0.04) 1.79(0.03) 1.78(0.03) 1.80(0.04) 1.80(0.04) 1.83(0.03) 1.83(0.02) 1.85(0.04) 1.89(0.04) 1.90(0.04) 1.84(0.08) 1.78(0.07) 1.78(0.06) 1.82(0.05) 1.86(0.07) 1.90(0.04) 1.90(0.06) 1.89(0.03) 1.90(0.04) 1.88(0.08) 1.88(0.04) 1.91(0.07) 1.92(0.03) 1.97(0.07) 1.96(0.06) 1.95(0.05) 1.91(0.07) 1.80(0.15) 1.90(0.13) 1.99(0.11) 2.03(0.04) 1.99(0.10) 2.03(0.05) 2.04(0.04) 2.00(0.05) 2.02(0.04) 2.10(0.07) 2.09(0.04) 2.05(0.08) 2.06(0.06) 2.25(0.20) 2.32(0.07) 2.22(0.12) 2.17(0.06) 2.24(0.11) 2.32(0.09) 2.35(0.03) 2.38(0.05) 2.36(0.08) 2.39(0.10) 2.46(0.07) 2.42(0.06) 2.39(0.04) 2.28(0.11) 2.27(0.04) 2.20(0.21) 2.32(0.13) 2.54(0.23) 2.59(0.08) 2.58(0.03) 2.63(0.07) 2.67(0.06) 2.74(0.11) 2.77(0.03) 2.78(0.02) 2.83(0.05) 2.89(0.09) 2.94(0.06) 2.95(0.03) 2.98(0.04) 2.97(0.03) 2.89(0.10) 2.78(0.14) 2.83(0.06) 2.87(0.10) 2.80(0.23) 2.86(0.18) 2.86(0.18) 2.80(0.16)
++ Max displacement in automask = 2.98 (mm) at sub-brick 140
++ Max delta displ  in automask = 0.74 (mm) at sub-brick 22
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb6663.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6663.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6663.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6663.r01.tshift+orig.BRIK is 5.900034 degrees from plumb.
++ Source dataset: ./pb01.tb6663.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.900034 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb6663.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.900034 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6663.r02.tshift+orig.BRIK is 5.900034 degrees from plumb.
++ Reading input dataset ./pb01.tb6663.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 25791 voxels
 + 4223 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.045  pitch=-1.725  yaw=-0.263  dS=-1.379  dL=-0.185  dP=-0.438
++ Mean: roll=+0.042  pitch=-1.031  yaw=+0.361  dS=-1.052  dL=+0.122  dP=+0.365
++ Max : roll=+0.100  pitch=+1.715  yaw=+0.601  dS=-0.808  dL=+0.300  dP=+0.546
++ Max displacements (mm) for each sub-brick:
 2.72(0.00) 4.03(1.36) 3.68(0.37) 3.87(0.19) 3.80(0.12) 3.50(0.30) 3.59(0.21) 2.37(1.32) 1.38(1.26) 1.51(0.27) 1.39(0.44) 1.18(0.26) 1.49(0.34) 1.49(0.23) 1.51(0.12) 1.31(0.25) 1.59(0.32) 1.38(0.27) 1.61(0.24) 1.47(0.28) 1.65(0.20) 1.48(0.18) 1.80(0.36) 2.07(0.33) 1.82(0.27) 1.77(0.11) 1.72(0.16) 1.83(0.25) 1.70(0.23) 1.49(0.30) 2.00(0.52) 2.23(0.30) 1.90(0.38) 1.91(0.18) 2.07(0.19) 1.83(0.24) 1.81(0.04) 1.95(0.15) 2.20(0.27) 2.05(0.16) 2.05(0.18) 2.56(0.51) 2.34(0.23) 2.35(0.10) 2.62(0.28) 2.76(0.35) 2.86(0.13) 2.79(0.09) 2.88(0.17) 3.17(0.30) 2.87(0.32) 3.00(0.14) 2.76(0.24) 3.00(0.24) 2.86(0.22) 3.17(0.31) 2.83(0.37) 2.99(0.19) 2.97(0.08) 2.95(0.14) 2.95(0.10) 2.83(0.12) 2.92(0.11) 3.12(0.23) 3.16(0.08) 3.07(0.13) 3.21(0.14) 3.21(0.06) 2.98(0.27) 3.11(0.16) 2.96(0.16) 3.20(0.25) 3.00(0.21) 3.09(0.10) 2.89(0.21) 3.05(0.18) 2.90(0.18) 2.87(0.10) 3.03(0.17) 3.01(0.08) 2.93(0.13) 2.98(0.06) 3.21(0.26) 3.05(0.17) 3.16(0.14) 3.14(0.04) 2.97(0.19) 3.07(0.19) 3.02(0.15) 3.19(0.17) 2.89(0.30) 3.25(0.37) 3.60(0.36) 3.34(0.42) 3.54(0.49) 3.37(0.49) 3.29(0.11) 3.30(0.09) 3.34(0.09) 3.46(0.14) 3.25(0.22) 3.46(0.22) 3.32(0.17) 3.60(0.28) 3.48(0.13) 3.72(0.28) 3.59(0.14) 3.39(0.20) 3.47(0.08) 3.45(0.11) 3.41(0.12) 3.63(0.22) 3.40(0.23) 3.37(0.07) 3.55(0.21) 3.49(0.10) 3.69(0.20) 3.40(0.29) 3.50(0.12) 3.51(0.12) 3.38(0.15) 3.54(0.18) 3.41(0.13) 3.66(0.25) 3.47(0.19) 3.50(0.10) 3.69(0.21) 3.63(0.11) 3.76(0.14) 3.69(0.09) 3.52(0.18) 3.61(0.10) 3.57(0.06) 3.59(0.10) 3.52(0.12) 3.48(0.07) 3.56(0.10) 3.42(0.14) 3.51(0.13) 3.60(0.14) 3.62(0.14) 3.54(0.13) 3.50(0.09) 3.60(0.11) 3.53(0.08) 3.65(0.12) 3.58(0.11) 3.58(0.10) 3.63(0.06) 3.54(0.10)
++ Max displacement in automask = 4.03 (mm) at sub-brick 1
++ Max delta displ  in automask = 1.36 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb6663.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6663.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6663.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6663.r02.tshift+orig.BRIK is 5.900034 degrees from plumb.
++ Source dataset: ./pb01.tb6663.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.4
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.900034 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb6663.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.900034 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6663.r03.tshift+orig.BRIK is 5.900034 degrees from plumb.
++ Reading input dataset ./pb01.tb6663.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 25586 voxels
 + 4216 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.006  pitch=-1.152  yaw=-0.243  dS=-1.825  dL=-0.214  dP=-0.376
++ Mean: roll=+0.130  pitch=-0.552  yaw=-0.047  dS=-1.589  dL=-0.129  dP=-0.213
++ Max : roll=+0.231  pitch=-0.216  yaw=+0.177  dS=-1.368  dL=+0.077  dP=+0.188
++ Max displacements (mm) for each sub-brick:
 2.41(0.00) 2.23(0.20) 2.24(0.04) 2.27(0.10) 2.25(0.11) 2.30(0.05) 2.36(0.09) 2.42(0.07) 2.53(0.24) 2.63(0.28) 2.74(0.23) 2.59(0.23) 2.60(0.05) 2.57(0.07) 2.57(0.08) 2.58(0.07) 2.58(0.04) 2.55(0.04) 2.54(0.04) 2.53(0.03) 2.53(0.09) 2.72(0.26) 2.69(0.07) 2.63(0.14) 2.63(0.04) 2.58(0.06) 2.63(0.18) 2.62(0.05) 2.58(0.16) 2.54(0.05) 2.56(0.11) 2.60(0.10) 2.56(0.10) 2.53(0.05) 2.50(0.06) 2.49(0.01) 2.48(0.07) 2.45(0.05) 2.42(0.05) 2.43(0.06) 2.45(0.03) 2.42(0.06) 2.41(0.02) 2.42(0.06) 2.40(0.03) 2.40(0.10) 2.42(0.06) 2.42(0.10) 2.50(0.09) 2.52(0.06) 2.48(0.06) 2.44(0.08) 2.42(0.07) 2.38(0.09) 2.33(0.06) 2.31(0.05) 2.35(0.07) 2.38(0.06) 2.39(0.06) 2.35(0.17) 2.44(0.10) 2.47(0.10) 2.45(0.04) 2.41(0.08) 2.41(0.05) 2.42(0.05) 2.42(0.07) 2.42(0.03) 2.38(0.08) 2.35(0.05) 2.37(0.05) 2.38(0.04) 2.19(0.24) 2.31(0.13) 2.49(0.26) 2.67(0.31) 2.49(0.28) 2.48(0.12) 2.47(0.04) 2.43(0.07) 2.25(0.25) 2.25(0.14) 2.51(0.29) 2.56(0.30) 2.34(0.28) 2.38(0.12) 2.38(0.04) 2.34(0.05) 2.33(0.06) 2.23(0.10) 2.35(0.19) 2.48(0.19) 2.56(0.17) 3.17(0.74) 3.12(0.42) 2.80(0.57) 2.70(0.30) 2.70(0.07) 2.64(0.10) 2.60(0.07) 2.58(0.05) 2.58(0.06) 2.58(0.03) 2.58(0.06) 2.59(0.05) 2.58(0.02) 2.58(0.04) 2.56(0.06) 2.54(0.06) 2.55(0.05) 2.55(0.03) 2.54(0.04) 2.53(0.04) 2.48(0.05) 2.49(0.07) 2.52(0.07) 2.49(0.18) 2.38(0.24) 2.36(0.05) 2.36(0.11) 2.34(0.04) 2.34(0.04) 2.26(0.12) 2.29(0.06) 2.37(0.10) 2.36(0.06) 2.34(0.05) 2.27(0.08) 2.31(0.10) 2.35(0.05) 2.35(0.07) 2.29(0.08) 2.25(0.09) 2.26(0.11) 2.31(0.12) 2.30(0.09) 2.29(0.11) 2.27(0.05) 2.26(0.06) 2.22(0.07) 2.27(0.06) 2.29(0.09) 2.47(0.44) 2.48(0.24) 2.45(0.16) 2.46(0.11) 2.40(0.12) 2.36(0.05) 2.32(0.07) 2.35(0.05)
++ Max displacement in automask = 3.17 (mm) at sub-brick 93
++ Max delta displ  in automask = 0.74 (mm) at sub-brick 93
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb6663.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6663.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6663.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6663.r03.tshift+orig.BRIK is 5.900034 degrees from plumb.
++ Source dataset: ./pb01.tb6663.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.900034 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6663.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6663.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6663.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6663.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6663.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6663.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.900034 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb6663
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb6663+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb6663+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1245116 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 267729 voxels [62.8%] in weight mask
++ Number of points for matching = 125832
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.125956
   sp   = 0.335051
   mi   = -0.511984
   crM  = 0.0356936
   nmi  = 0.832858
   je   = 2.5512
   hel  = -0.102957
   crA  = 0.189058
   crU  = 0.196093
   lss  = 0.874044
   lpc  = 0.291817
   lpa  = 0.708183
   lpc+ = 0.429905
   ncd  = 0.995908
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.3
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb6663+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb6663+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 37.3 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6663.r01.blur pb02.tb6663.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6663.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb6663.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6663.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6663.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6663.r02.blur pb02.tb6663.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6663.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb6663.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6663.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6663.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6663.r03.blur pb02.tb6663.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6663.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb6663.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6663.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6663.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb6663.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6663.r01.blur+orig
++ Forming automask
 + Fixed clip level = 415.144226
 + Used gradual clip level = 383.701355 .. 466.162842
 + Number voxels above clip level = 43058
 + Clustering voxels ...
 + Largest cluster has 42993 voxels
 + Clustering voxels ...
 + Largest cluster has 42977 voxels
 + Filled    14 voxels in small holes; now have 42991 voxels
 + Clustering voxels ...
 + Largest cluster has 42991 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 383284 voxels
 + Mask now has 42991 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 376219 voxels
++ 50056 voxels in the mask [out of 426275: 11.74%]
++ first  18 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  29 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    8 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb6663.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6663.r02.blur+orig
++ Forming automask
 + Fixed clip level = 414.882629
 + Used gradual clip level = 381.091675 .. 468.641388
 + Number voxels above clip level = 43465
 + Clustering voxels ...
 + Largest cluster has 43197 voxels
 + Clustering voxels ...
 + Largest cluster has 43174 voxels
 + Filled    28 voxels in small holes; now have 43202 voxels
 + Filled     2 voxels in large holes; now have 43204 voxels
 + Clustering voxels ...
 + Largest cluster has 43204 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 383071 voxels
 + Mask now has 43204 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 376118 voxels
++ 50157 voxels in the mask [out of 426275: 11.77%]
++ first  17 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  29 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    8 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb6663.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6663.r03.blur+orig
++ Forming automask
 + Fixed clip level = 417.545013
 + Used gradual clip level = 386.271484 .. 470.406494
 + Number voxels above clip level = 42869
 + Clustering voxels ...
 + Largest cluster has 42783 voxels
 + Clustering voxels ...
 + Largest cluster has 42761 voxels
 + Filled    27 voxels in small holes; now have 42788 voxels
 + Clustering voxels ...
 + Largest cluster has 42788 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 383487 voxels
 + Mask now has 42788 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 376512 voxels
++ 49763 voxels in the mask [out of 426275: 11.67%]
++ first  18 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  29 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    8 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb6663
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 50459 survived, 375816 were zero
++ writing result full_mask.tb6663...
3dresample -master full_mask.tb6663+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb6663
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 48755 survived, 377520 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb6663...
3dABoverlap -no_automask full_mask.tb6663+orig mask_anat.tb6663+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb6663+orig.BRIK  B=./mask_anat.tb6663+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
50459        48755        54387        44827        5632         3928         11.1615      8.0566     0.8574     1.0678     0.9481
3ddot -dodice full_mask.tb6663+orig mask_anat.tb6663+orig
tee out.mask_ae_dice.txt
0.903643	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb6663
total number of censored TRs (simple form) = 19
1deval -a motion_tb6663_censor.1D -b outcount_tb6663_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb6663_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb6663.r01.blur+orig.HEAD pb03.tb6663.r02.blur+orig.HEAD pb03.tb6663.r03.blur+orig.HEAD -censor censor_tb6663_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb6663 -errts errts.tb6663 -bucket stats.tb6663
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb6663.r01.blur+orig.HEAD pb03.tb6663.r02.blur+orig.HEAD pb03.tb6663.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,394 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 42992 voxels (out of 426275 = 10.1%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 427 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,417 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb6663.r01.blur+orig.HEAD pb03.tb6663.r02.blur+orig.HEAD pb03.tb6663.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb6663_REML -Rvar stats.tb6663_REMLvar \
 -Rfitts fitts.tb6663_REML -Rerrts errts.tb6663_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (427x24):  4.83516  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (427x6):  1.03113  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (427x18):  4.6702  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (427x6):  3.53244  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (427x12):  1.2817  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.06001e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.24 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=6.218
++ Job #2: processing voxels 85254 to 127880; elapsed time=6.237
++ Job #3: processing voxels 127881 to 170507; elapsed time=6.255
++ Job #4: processing voxels 170508 to 213134; elapsed time=6.276
++ Job #5: processing voxels 213135 to 255761; elapsed time=6.296
++ Job #6: processing voxels 255762 to 298388; elapsed time=6.316
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.352
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.372
++ Job #0: processing voxels 0 to 42626; elapsed time=6.388
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=6.392
0123456789.0123456789.0123456789.01234++ Job #1 finished; elapsed time=33.702
5++ Job #7 finished; elapsed time=34.119
++ Job #8 finished; elapsed time=34.533
6++ Job #2 finished; elapsed time=34.856
++ Job #5 finished; elapsed time=34.904
++ Job #4 finished; elapsed time=34.940
789.0123++ Job #9 finished; elapsed time=37.759
++ Job #6 finished; elapsed time=37.763
45678++ Job #3 finished; elapsed time=39.663
9.
++ Job #0 waiting for children to finish; elapsed time=39.761
++ Job #0 now finishing up; elapsed time=39.761
++ Smallest FDR q [0 Full_Fstat] = 1.27922e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 8.32375e-10
++ Smallest FDR q [3 uns1_Fstat] = 8.32377e-10
++ Smallest FDR q [5 uns2#0_Tstat] = 0.0139821
++ Smallest FDR q [6 uns2_Fstat] = 0.0139847
++ Smallest FDR q [8 uns3#0_Tstat] = 1.02149e-08
++ Smallest FDR q [9 uns3_Fstat] = 1.02143e-08
++ Smallest FDR q [11 str1#0_Tstat] = 9.86137e-07
++ Smallest FDR q [12 str1_Fstat] = 9.86139e-07
++ Smallest FDR q [14 str2#0_Tstat] = 0.00176959
++ Smallest FDR q [15 str2_Fstat] = 0.00177023
++ Smallest FDR q [17 str3#0_Tstat] = 7.45341e-11
++ Smallest FDR q [18 str3_Fstat] = 7.45296e-11
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.11684e-05
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.11697e-05
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 7.93559e-08
++ Smallest FDR q [24 structured_GLT_Fstat] = 7.9341e-08
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 6.04202e-05
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 6.04204e-05
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 5.01815e-10
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 5.01769e-10
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 1.31954e-12
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 1.31949e-12
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.08821e-05
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.08827e-05
++ Wrote bucket dataset into ./stats.tb6663+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb6663+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb6663+orig.BRIK
++ Program finished; elapsed time=64.065
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.752       0.810  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.728       0.795  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.723       0.790  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.498       0.571  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.464       0.542  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.458       0.536  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb6663.r01.blur+orig.HEAD pb03.tb6663.r02.blur+orig.HEAD pb03.tb6663.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb6663_REML -Rvar stats.tb6663_REMLvar -Rfitts fitts.tb6663_REML -Rerrts errts.tb6663_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 42992 voxels (out of 426275 = 10.1%)
++ -----  matrix condition (427x24):  4.83516  ++ VERY GOOD ++
 + masked off 248634 voxels for being all zero; 177641 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 320 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=24.76
 + X matrix: 46.673% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=427 cols=24; 109*1 cases; total CPU=0.00 Elapsed=24.79
 +  average case bandwidth = 12.14
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=91.25
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=136.13
++ Output dataset ./stats.tb6663_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb6663_REML+orig.BRIK
++ Output dataset ./errts.tb6663_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb6663_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 0.00230477
++ Smallest FDR q [2 uns1#0_Tstat] = 0.0518485
++ Smallest FDR q [3 uns1_Fstat] = 0.0518485
[7m*+ WARNING:[0m Smallest FDR q [5 uns2#0_Tstat] = 0.999656 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [6 uns2_Fstat] = 0.999656 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [8 uns3#0_Tstat] = 0.234956 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [9 uns3_Fstat] = 0.234955 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [11 str1#0_Tstat] = 0.733988 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [12 str1_Fstat] = 0.733988 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [14 str2#0_Tstat] = 0.999857 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [15 str2_Fstat] = 0.999857 ==> few true single voxel detections
++ Smallest FDR q [17 str3#0_Tstat] = 0.0296588
++ Smallest FDR q [18 str3_Fstat] = 0.0296589
[7m*+ WARNING:[0m Smallest FDR q [20 unstructured#0_Tstat] = 0.385824 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [21 unstructured_Fstat] = 0.385824 ==> few true single voxel detections
++ Smallest FDR q [23 structured#0_Tstat] = 0.0332468
++ Smallest FDR q [24 structured_Fstat] = 0.0332468
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.00444434
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.00444435
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.756495 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.756496 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 1.45277e-05
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 1.45277e-05
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.999882 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.999882 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb6663_REML+orig
++ Output dataset ./stats.tb6663_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=159.57
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb6663 pb03.tb6663.r01.blur+orig.HEAD pb03.tb6663.r02.blur+orig.HEAD pb03.tb6663.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 18.2 s
3dTstat -mean -prefix rm.signal.all all_runs.tb6663+orig[0..20,25..149,159..178,181..189,192..241,244..391,396..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb6663_REML+orig[0..20,25..149,159..178,181..189,192..241,244..391,396..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb6663+orig -expr c*a/b -prefix TSNR.tb6663
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb6663_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb6663+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 50459 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.254756
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb6663.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..20,25..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb6663+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb6663+orig[0..20,25..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 50459
[7m*+ WARNING:[0m removed 45 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.24 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 159..178,181..189,192..241,244..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb6663+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb6663+orig[159..178,181..189,192..241,244..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 50459
[7m*+ WARNING:[0m removed 45 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 135 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 33.54 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..391,396..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb6663+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb6663+orig[300..391,396..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 50459
[7m*+ WARNING:[0m removed 45 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 33.39 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 11.4458 10.1913 11.1373 10.9114
average errts FWHM blurs: 11.4458 10.1913 11.1373 10.9114
echo 11.4458 10.1913 11.1373 10.9114   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.442252 7.03972 15.845 18.3975
average errts ACF blurs: 0.442252 7.03972 15.845 18.3975
echo 0.442252 7.03972 15.845 18.3975   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..20,25..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb6663+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb6663_REML+orig[0..20,25..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 50459
[7m*+ WARNING:[0m removed 45 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.94 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 159..178,181..189,192..241,244..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb6663+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb6663_REML+orig[159..178,181..189,192..241,244..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 50459
[7m*+ WARNING:[0m removed 45 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 135 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 33.47 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..391,396..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb6663+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb6663_REML+orig[300..391,396..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 50459
[7m*+ WARNING:[0m removed 45 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.76 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 11.3362 10.079 11.029 10.8011
average err_reml FWHM blurs: 11.3362 10.079 11.029 10.8011
echo 11.3362 10.079 11.029 10.8011   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.452202 6.8601 16.1099 18.1661
average err_reml ACF blurs: 0.452202 6.8601 16.1099 18.1661
echo 0.452202 6.8601 16.1099 18.1661   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb6663.1D
3dClustSim -both -mask full_mask.tb6663+orig -acf 0.452202 6.8601 16.1099 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 50459 voxels in mask (11.84% of total)
++ Kernel function radius = 53.33 mm
++ ACF(0.45,6.86,16.11) => FWHM=18.16 => 85x85x59 pads to 128x128x96
 + Kernel image dimensions 63 x 63 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 820.7 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb6663+orig stats.tb6663_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m Can't read 'file:files_ClustSim/ClustSim.ACF.mask'
++ Processing AFNI dataset stats.tb6663+orig
++ applying attributes
++ Processing AFNI dataset stats.tb6663_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb6663 -dsets pb00.tb6663.r01.tcat+orig.HEAD pb00.tb6663.r02.tcat+orig.HEAD pb00.tb6663.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
Traceback (most recent call last):
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2698, in <module>
    sys.exit(main())
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2691, in main
    if me.write_scripts():
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2023, in write_scripts
    UTIL.write_text_to_file(scr_basic, self.text_basic, exe=1)
  File "/usr/local/apps/afni/current/linux_openmp_64/afni_util.py", line 71, in write_text_to_file
    fp.close()
IOError: [Errno 122] Disk quota exceeded
