echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb9331
endif
set output_dir = tb9331.srtt
if ( -d tb9331.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb9331.srtt
mkdir tb9331.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb9331.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb9331.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb9331.srtt/pb00.tb9331.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.6 s
3dTcat -prefix tb9331.srtt/pb00.tb9331.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.9 s
3dTcat -prefix tb9331.srtt/pb00.tb9331.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.9 s
set tr_counts = ( 150 150 150 )
cd tb9331.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9331.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9331.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9331.r01.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 25814 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9331.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9331.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9331.r02.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 25929 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9331.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9331.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9331.r03.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 25926 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb9331.r01.tshift -tpattern alt+z2 pb00.tb9331.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9331.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9331.r01.tcat+orig.BRIK is 10.299996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb9331.r02.tshift -tpattern alt+z2 pb00.tb9331.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9331.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9331.r02.tcat+orig.BRIK is 10.299996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb9331.r03.tshift -tpattern alt+z2 pb00.tb9331.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9331.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9331.r03.tcat+orig.BRIK is 10.299996 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb9331.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 10.299996 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 424.117188
 + Used gradual clip level = 390.576599 .. 467.963593
 + Number voxels above clip level = 26357
 + Clustering voxels ...
 + Largest cluster has 26018 voxels
 + Clustering voxels ...
 + Largest cluster has 25458 voxels
 + Filled   277 voxels in small holes; now have 25735 voxels
 + Clustering voxels ...
 + Largest cluster has 25735 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 105337 voxels
 + Mask now has 25735 voxels
++ 25735 voxels in the mask [out of 131072: 19.63%]
++ first  14 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1056.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1056.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 10.299996 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1450546 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 25735 voxels [16.1%] in weight mask
++ Number of points for matching = 25735
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.738 28.155 18.894 (index)
 + source center of mass = 84.884 151.666 184.655 (index)
 + source-target CM = -0.632 2.697 -4.447 (xyz)
 + center of mass shifts = -0.632 2.697 -4.447
++ shift param auto-range: -70.1..68.9 -66.8..72.2 -53.2..44.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.632370 .. 9.367630
 + Range param#2 [y-shift] = -7.303360 .. 12.696640
 + Range param#3 [z-shift] = -14.446899 .. 5.553101
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.632370 .. 39.367630
 + Range param#2 [y-shift] = -37.303360 .. 42.696640
 + Range param#3 [z-shift] = -44.446899 .. 35.553101
 + 12 free parameters
++ Normalized convergence radius = 0.000477
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1450546 [out of 15629504] voxels
 + base mask has 35899 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=64 usiz=198.5
 + - copying weight image
 + - using 25735 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 22006 total points stored in 207 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.00713761] **[#2=-0.0134564] *-.-.*[#10=-0.0282697] *+o*[#19=-0.0530485] *ooo.-..-+-+-$.+++
 + - best 45 costs found:
    0 v=-0.053049:  12.70 -10.64   8.89  15.00 -15.00  15.00  [grid]
    1 v=-0.049833: -13.97 -10.64   8.89 -15.00 -15.00 -15.00  [grid]
    2 v=-0.047194: -10.46 -22.06   6.94  -3.10 -34.36  -2.55  [rand]
    3 v=-0.044724: -10.46 -22.06   6.94  -3.10 -34.36   2.55  [rand]
    4 v=-0.044335: -16.62 -16.80 -10.17 -20.53  -3.14  10.08  [rand]
    5 v=-0.043550:  12.70 -10.64   8.89  15.00 -15.00  30.00  [grid]
    6 v=-0.041259: -13.97 -10.64   8.89 -15.00 -15.00 -30.00  [grid]
    7 v=-0.040970: -16.62 -16.80 -10.17 -20.53   3.14  10.08  [rand]
    8 v=-0.039959: -13.97  16.03  22.22 -15.00 -30.00 -15.00  [grid]
    9 v=-0.039055: -17.49 -15.89  10.01 -19.57 -37.09  16.59  [rand]
   10 v=-0.039054: -13.97 -10.64   8.89 -30.00 -30.00  15.00  [grid]
   11 v=-0.037299: -13.97  16.03   8.89 -15.00  15.00 -15.00  [grid]
   12 v=-0.037207:   3.45  -3.53   3.35   4.32 -22.85  18.95  [rand]
   13 v=-0.036655: -16.78  12.16  19.90 -20.99  15.73 -16.09  [rand]
   14 v=-0.035315: -20.12  19.37  -1.85 -30.54  19.59  20.03  [rand]
   15 v=-0.034865: -16.62  22.19   1.28 -20.53   3.14 -10.08  [rand]
   16 v=-0.034801:  18.86 -13.97  -1.85  30.54 -19.59 -20.03  [rand]
   17 v=-0.034178: -16.78  12.16  19.90 -20.99 -15.73  16.09  [rand]
   18 v=-0.033862: -13.97 -23.97   8.89 -15.00 -30.00 -15.00  [grid]
   19 v=-0.033834: -16.62  22.19   1.28 -20.53  -3.14 -10.08  [rand]
   20 v=-0.033802: -13.97  16.03  22.22 -30.00 -30.00 -30.00  [grid]
   21 v=-0.033753:  -4.71  -3.53 -12.24   4.32  22.85 -18.95  [rand]
   22 v=-0.033613: -13.97  16.03  22.22 -15.00 -15.00 -15.00  [grid]
   23 v=-0.033527: -34.96  19.28 -13.05 -16.34   8.64  40.54  [rand]
   24 v=-0.033428: -13.97  16.03  22.22 -30.00 -15.00 -30.00  [grid]
   25 v=-0.033364: -13.97 -10.64   8.89 -15.00 -30.00 -15.00  [grid]
   26 v=-0.032653: -13.97 -10.64   8.89 -15.00 -30.00  15.00  [grid]
   27 v=-0.032540: -13.97 -10.64   8.89 -15.00 -15.00  15.00  [grid]
   28 v=-0.032206:  -9.27 -17.74  13.02 -25.20 -18.50 -13.54  [rand]
   29 v=-0.032201: -12.23   7.25  -8.34 -24.53  29.49  26.10  [rand]
   30 v=-0.031723: -13.97  16.03   8.89 -30.00  30.00 -15.00  [grid]
   31 v=-0.031057: -13.97  16.03   8.89 -30.00  15.00  30.00  [grid]
   32 v=-0.030954: -13.97 -10.64   8.89 -15.00 -30.00  30.00  [grid]
   33 v=-0.030488:  26.03 -10.64 -17.78  15.00  30.00  15.00  [grid]
   34 v=-0.030162:   3.45  -3.53   3.35  -4.32 -22.85  18.95  [rand]
   35 v=-0.029978:  12.70 -10.64   8.89  15.00 -30.00  30.00  [grid]
   36 v=-0.029955: -27.30  29.36   8.89 -15.00  30.00 -15.00  [grid]
   37 v=-0.029814: -16.78  12.16  19.90 -20.99 -15.73 -16.09  [rand]
   38 v=-0.029505: -14.66 -13.02 -19.11 -24.25  37.55   4.41  [rand]
   39 v=-0.028894: -13.97  16.03  22.22 -15.00  15.00 -15.00  [grid]
   40 v=-0.028751: -13.97 -10.64   8.89 -30.00 -30.00  30.00  [grid]
   41 v=-0.028480: -13.97 -10.64  22.22  15.00 -30.00 -30.00  [grid]
   42 v=-0.028474: -27.30  16.03  22.22 -15.00  30.00 -30.00  [grid]
   43 v=-0.028471: -34.96 -13.89 -13.05  16.34  -8.64  40.54  [rand]
   44 v=-0.028270: -13.97  16.03   8.89 -15.00  15.00  15.00  [grid]
*[#8011=-0.0589574] *[#8013=-0.0600273] *[#8014=-0.0626609] *[#8017=-0.0636101] *[#8019=-0.0649446] *[#8020=-0.06643] *[#8021=-0.0666753] *[#8022=-0.0683049] *[#8025=-0.0694592] *[#8027=-0.069929] *[#8030=-0.070754] *[#8031=-0.0712141] *[#8032=-0.0719849] *[#8035=-0.0727287] *[#8039=-0.0730874] *[#8040=-0.0745851] *[#8041=-0.0759411] *[#8042=-0.0776837] *[#8046=-0.0782839] *[#8048=-0.0793874] *[#8049=-0.0803351] *[#8050=-0.0856956] *[#8051=-0.0958379] *[#8052=-0.105898] *[#8056=-0.108589] *[#8057=-0.142423] *[#8058=-0.156249] *[#8063=-0.167477] *[#8064=-0.187635] *[#8065=-0.209479] *[#8066=-0.229112] *[#8067=-0.263476] *[#8069=-0.297524] *[#8070=-0.465148] *[#8076=-0.474638] *[#8077=-0.540805] *[#8078=-0.586049] *[#8080=-0.588795] *[#8082=-0.604268] *[#8083=-0.63344]  + - costs of the above after a little optimization:
  * 0 v=-0.633440:  -0.20  -0.68   2.28   1.06  -1.69   0.63  [grid]
    1 v=-0.564457:  -0.87  -1.57   2.44  -0.70  -1.80   0.60  [grid]
    2 v=-0.109244:  -7.48 -19.90   4.97 -12.36 -32.94  -3.82  [rand]
    3 v=-0.096779:  -4.72 -21.66   7.01  -5.45 -41.52   2.84  [rand]
    4 v=-0.088917: -11.78 -10.75  -5.46 -15.80  -0.23   8.18  [rand]
    5 v=-0.074379:   6.05 -12.23  10.72  11.25 -19.17  27.65  [grid]
    6 v=-0.080793:  -8.27 -11.55  10.14 -12.60 -15.93 -20.36  [grid]
    7 v=-0.071089: -15.37 -12.45  -8.37 -19.36   1.68  10.28  [rand]
    8 v=-0.046545: -13.36  16.69  19.94 -17.96 -31.51 -16.95  [grid]
    9 v=-0.060464: -12.65 -15.49  10.34 -17.26 -34.47  13.42  [rand]
   10 v=-0.055801: -13.77 -11.03  10.58 -24.21 -28.99  15.26  [grid]
   11 v=-0.066122: -14.35  15.65   8.68 -12.80  15.76  -7.22  [grid]
   12 v=-0.111469:   2.89  -6.69   9.79   3.83 -24.95  17.51  [rand]
   13 v=-0.043918: -16.16  13.67  17.45 -14.73  14.61 -17.43  [rand]
   14 v=-0.048575: -18.22  20.51  -2.98 -30.31  17.79  19.93  [rand]
   15 v=-0.042297: -16.10  22.82   1.38 -17.01   3.26  -9.80  [rand]
   16 v=-0.047605:  18.98 -17.66  -1.43  25.75 -20.48 -20.58  [rand]
   17 v=-0.037960: -16.63  10.57  20.13 -20.35 -15.64  16.42  [rand]
   18 v=-0.099978:  -9.07 -21.52   8.41 -19.73 -34.29 -17.17  [grid]
   19 v=-0.046734: -15.20  22.38  -0.90 -22.97   1.10 -12.26  [rand]
   20 v=-0.051796: -15.26  10.52  21.41 -26.70 -35.00 -26.13  [grid]
   21 v=-0.041227:  -4.72  -2.88 -12.21   4.33  27.56 -19.12  [rand]
   22 v=-0.043162: -11.70  15.98  20.89 -18.55 -15.58 -16.28  [grid]
   23 v=-0.056480: -39.26  14.89 -13.16 -10.51   3.68  42.26  [rand]
   24 v=-0.042294: -14.67  20.88  22.69 -29.50 -12.85 -29.19  [grid]
   25 v=-0.106334:  -7.25 -19.01   7.27 -11.87 -33.40  -8.01  [grid]
   26 v=-0.063433: -11.20  -7.59  13.32 -15.38 -31.03  11.66  [grid]
   27 v=-0.051567: -15.35  -4.87   9.96 -12.87 -14.28  15.61  [grid]
   28 v=-0.106312:  -8.04 -18.82   6.83 -12.23 -32.07  -7.83  [rand]
   29 v=-0.048156: -12.52  12.09  -8.93 -23.07  28.49  25.63  [rand]
   30 v=-0.042251: -17.99  16.50   9.31 -30.33  29.17 -16.36  [grid]
   31 v=-0.047246: -16.02  11.75   6.58 -26.93  18.08  27.51  [grid]
   32 v=-0.052974: -17.99 -17.19  10.05 -16.08 -33.20  28.99  [grid]
   33 v=-0.038537:  27.05 -11.46 -18.69  17.99  28.61  13.94  [grid]
   34 v=-0.125796:   1.16  -9.65   8.71   2.48 -24.47   8.48  [rand]
   35 v=-0.112706:   2.49  -7.24   8.99   2.62 -22.72  15.07  [grid]
   36 v=-0.044496: -23.57  28.05   8.10 -18.62  30.23 -18.24  [grid]
   37 v=-0.040523: -11.45  13.33  19.98 -19.57 -14.50 -16.37  [rand]
   38 v=-0.033127: -14.73 -12.60 -18.98 -24.08  42.06   4.72  [rand]
   39 v=-0.048456: -15.69  14.97  17.86 -16.69  11.35 -19.02  [grid]
   40 v=-0.037931: -11.80 -10.10   9.17 -24.65 -30.37  29.50  [grid]
   41 v=-0.034777: -12.43  -9.59  22.48  14.01 -30.33 -31.12  [grid]
   42 v=-0.031627: -26.99  16.32  22.14 -10.76  30.28 -30.18  [grid]
   43 v=-0.053612: -32.60  -4.21 -13.51   9.46  -6.60  44.90  [rand]
   44 v=-0.064658:  -7.43  16.06   6.66 -13.70  13.59  12.99  [grid]
 + - save # 0 for twobest
 + - skip # 1 for twobest: too close to set # 0
 + - save #34 for twobest
 + - save #35 for twobest
 + - skip #12 for twobest: too close to set #35
 + - save # 2 for twobest
 + - skip #25 for twobest: too close to set # 2
 + - skip #28 for twobest: too close to set # 2
 + - save #18 for twobest
 + - save # 3 for twobest
 + - save # 4 for twobest
 + - save # 6 for twobest
 + - save # 5 for twobest
 + - skip # 7 for twobest: too close to set # 4
 + - save #11 for twobest
 + - save #44 for twobest
 + - save #26 for twobest
 + - save # 9 for twobest
 + - save #23 for twobest
 + - save #10 for twobest
 + - save #43 for twobest
 + - save #32 for twobest
 + - save #20 for twobest
 + - save #27 for twobest
 + - save #14 for twobest
 + - save #39 for twobest
 + - save #29 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=64 usiz=198.5
 + - retaining old weight image
 + - using 25735 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22152 total points stored in 225 'RHDD(13.7332)' bloks
*[#9772=-0.655875] *[#9780=-0.692887] *[#9793=-0.69495] *[#9795=-0.711504] *[#9796=-0.720289] *[#9797=-0.721065] *[#9799=-0.731382] *[#9800=-0.734584] *[#9803=-0.742377] *[#9804=-0.744083] *[#9806=-0.747045] *[#9807=-0.747688] *[#9808=-0.750355] *[#9811=-0.75317] *[#9812=-0.755821] *[#9815=-0.756201] *[#9816=-0.756563] *[#9819=-0.756899] *[#9820=-0.757985] *[#9821=-0.758265] *[#9822=-0.75844] *[#9823=-0.761042] *[#9826=-0.762087] *[#9829=-0.763004] *[#9830=-0.763941] *[#9831=-0.763978] *[#9832=-0.764246] *[#9833=-0.765085] *[#9845=-0.76588] 
 + - param set #1 has cost=-0.765880
 + -- Parameters = -0.5209 -0.4436 1.8636 0.3115 -1.4026 0.1100 1.0025 1.0218 0.9995 0.0005 -0.0010 0.0002
 + - param set #2 has cost=-0.114901
 + -- Parameters = 0.9634 -10.0934 8.4582 2.2389 -23.8505 8.4706 0.9994 1.0169 0.9975 0.0007 0.0001 -0.0002
 + - param set #3 has cost=-0.115663
 + -- Parameters = 2.2499 -6.0923 8.3555 2.8469 -20.5444 13.6869 0.9941 1.0166 0.9912 -0.0004 -0.0052 -0.0059
 + - param set #4 has cost=-0.101443
 + -- Parameters = -7.3908 -18.9700 5.6816 -11.3344 -29.7754 -3.1562 1.0055 1.0026 0.9993 -0.0012 0.0017 0.0048
 + - param set #5 has cost=-0.090006
 + -- Parameters = -9.3751 -21.4614 8.5391 -16.6203 -37.4617 -15.0313 0.9986 0.9959 1.0272 0.0013 -0.0003 -0.0072
 + - param set #6 has cost=-0.080523
 + -- Parameters = -4.9730 -20.7637 7.2760 -6.7170 -41.0141 1.6947 0.9982 1.0032 1.0050 0.0126 0.0006 0.0018
 + - param set #7 has cost=-0.079012
 + -- Parameters = -12.0885 -10.4831 -6.5511 -14.4418 0.7298 7.3553 1.0065 1.0051 1.0164 0.0015 0.0027 -0.0051
 + - param set #8 has cost=-0.124712
 + -- Parameters = -5.8021 -10.7415 7.4794 -7.1508 -22.9178 -5.7120 1.0055 1.0455 0.9877 -0.0293 -0.0121 -0.0038
 + - param set #9 has cost=-0.074914
 + -- Parameters = 5.7941 -10.8863 10.9804 8.5517 -19.6468 26.4735 1.0187 1.0100 1.0088 0.0078 0.0069 0.0062
 + - param set #10 has cost=-0.052646
 + -- Parameters = -13.7896 16.4747 8.7579 -13.1857 16.3955 -5.9587 1.0011 1.0034 1.0019 0.0016 0.0118 0.0010
 + - param set #11 has cost=-0.063779
 + -- Parameters = -6.0556 14.1980 6.1263 -10.4986 12.8063 10.6399 1.0202 1.0175 1.0163 0.0394 -0.0061 0.0067
 + - param set #12 has cost=-0.761250
 + -- Parameters = -0.4995 -0.3161 1.8205 0.2593 -1.6422 0.1843 1.0006 1.0215 1.0020 -0.0016 -0.0035 -0.0052
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0243 
 + --- dist(#3,#1) = 0.239 
 + --- dist(#4,#1) = 0.213 
 + --- dist(#5,#1) = 0.249 
 + --- dist(#6,#1) = 0.315 
 + --- dist(#7,#1) = 0.401 
 + --- dist(#8,#1) = 0.44 
 + --- dist(#9,#1) = 0.164 
 + --- dist(#10,#1) = 0.293 
 + --- dist(#11,#1) = 0.183 
 + --- dist(#12,#1) = 0.211 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=64 usiz=198.5
 + - retaining old weight image
 + - using 25735 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22284 total points stored in 232 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.731995
 + -- Parameters = -0.5071 -0.3085 1.7947 0.3481 -1.4652 0.1243 1.0050 1.0318 1.0015 0.0013 -0.0015 0.0009
 + - param set #2 has cost=-0.729705
 + -- Parameters = -0.4743 -0.2331 1.8311 0.3641 -1.7040 0.1937 1.0029 1.0306 0.9999 -0.0006 -0.0043 -0.0028
 + - param set #3 has cost=-0.123599
 + -- Parameters = -5.8394 -9.9952 7.1096 -7.2451 -22.9616 -1.8882 1.0466 1.0768 0.9028 -0.0233 0.0051 0.0009
 + - param set #4 has cost=-0.170005
 + -- Parameters = 1.2722 -4.7696 7.7861 3.3371 -19.8003 4.2838 1.0403 1.0867 0.8377 0.0564 -0.0336 -0.0254
 + - param set #5 has cost=-0.306208
 + -- Parameters = 1.6433 0.3589 2.1839 3.8158 -3.5571 3.1991 0.9873 1.0704 0.9412 0.0121 -0.0200 -0.0156
 + - param set #6 has cost=-0.084312
 + -- Parameters = -7.3197 -18.9508 5.8101 -11.1655 -30.0125 -3.4110 1.0053 1.0030 1.0111 -0.0006 0.0018 0.0049
 + - param set #7 has cost=-0.079903
 + -- Parameters = -9.2837 -21.5600 8.2869 -15.1777 -37.5672 -11.0519 1.0370 0.9717 1.0382 -0.0115 -0.0204 -0.0534
 + - param set #8 has cost=-0.082658
 + -- Parameters = -6.4004 -18.9493 5.8113 -8.2068 -33.5930 0.9762 1.0170 0.9919 0.9935 0.0160 -0.0075 -0.0111
 + - param set #9 has cost=-0.346634
 + -- Parameters = -0.1629 -4.5135 -1.1357 0.3365 2.6104 0.7324 1.0279 0.9579 1.0069 0.0268 -0.0009 -0.0053
 + - param set #10 has cost=-0.064749
 + -- Parameters = 5.1629 -10.3985 10.8379 7.7652 -19.9844 25.8180 1.0236 1.0298 1.0211 -0.0011 0.0070 0.0020
 + - param set #11 has cost=-0.305722
 + -- Parameters = 0.2763 -0.3292 2.5225 2.2609 0.2569 -1.4092 1.1221 1.0803 1.0174 0.0535 -0.0166 0.0734
 + - param set #12 has cost=-0.034446
 + -- Parameters = -13.8120 16.5647 8.7790 -13.3229 16.4292 -5.7726 1.0123 1.0048 1.0003 0.0023 0.0116 0.0001
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0167 XXX
 + --- dist(#3,#1) = 0.164 
 + --- dist(#4,#1) = 0.326 
 + --- dist(#5,#1) = 0.446 
 + --- dist(#6,#1) = 0.269 
 + --- dist(#7,#1) = 0.317 
 + --- dist(#8,#1) = 0.357 
 + --- dist(#9,#1) = 0.401 
 + --- dist(#10,#1) = 0.285 
 + --- dist(#11,#1) = 0.211 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=64 usiz=198.5
 + - retaining old weight image
 + - using 25735 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22677 total points stored in 244 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.666206
 + -- Parameters = -0.5279 -0.3167 1.8336 0.3418 -1.4206 0.0829 1.0055 1.0320 1.0011 0.0014 -0.0010 0.0012
 + - param set #2 has cost=-0.615762
 + -- Parameters = -0.9474 -1.0009 1.3501 -0.1272 -0.2457 -0.9613 1.0122 1.0186 1.0257 -0.0176 0.0195 0.0185
 + - param set #3 has cost=-0.573086
 + -- Parameters = -0.3075 -0.0250 3.0665 0.5160 -1.5611 0.7257 1.0078 1.0453 0.9382 0.0064 -0.0271 0.0082
 + - param set #4 has cost=-0.596760
 + -- Parameters = 0.1216 -1.0432 2.5069 1.0615 0.2906 1.3366 1.0129 1.0343 0.9771 0.0277 -0.0274 0.0478
 + - param set #5 has cost=-0.176923
 + -- Parameters = 1.3999 -3.6166 6.1810 3.2002 -15.2295 2.7199 1.0108 1.0640 0.8375 0.0610 -0.0152 -0.0390
 + - param set #6 has cost=-0.136028
 + -- Parameters = -4.4916 -7.1703 6.9541 -4.7615 -20.3659 -0.1445 1.0421 1.0662 0.8876 -0.0290 -0.0161 -0.0309
 + - param set #7 has cost=-0.091323
 + -- Parameters = -7.0387 -17.5328 7.3717 -9.9247 -33.3590 -1.3156 1.0272 1.0492 0.9103 -0.0160 0.0019 0.0329
 + - param set #8 has cost=-0.082785
 + -- Parameters = -6.5192 -18.7785 5.5746 -9.1156 -32.0382 1.3750 1.0117 1.0048 0.9834 0.0212 -0.0032 -0.0148
 + - param set #9 has cost=-0.070619
 + -- Parameters = -9.1724 -21.6610 8.2440 -15.1338 -37.5879 -10.9591 1.0305 0.9725 1.0392 -0.0117 -0.0196 -0.0536
 + - param set #10 has cost=-0.059246
 + -- Parameters = 5.0895 -10.2065 10.5770 7.6731 -19.7323 24.0599 1.0234 1.0300 1.0198 -0.0010 0.0069 0.0017
 + - param set #11 has cost=-0.027719
 + -- Parameters = -14.1105 15.9018 8.6815 -13.3009 16.9375 -6.0126 1.0102 1.0039 0.9994 0.0037 0.0154 0.0003
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0922 
 + --- dist(#3,#1) = 0.21 
 + --- dist(#4,#1) = 0.171 
 + --- dist(#5,#1) = 0.446 
 + --- dist(#6,#1) = 0.309 
 + --- dist(#7,#1) = 0.355 
 + --- dist(#8,#1) = 0.34 
 + --- dist(#9,#1) = 0.402 
 + --- dist(#10,#1) = 0.266 
 + --- dist(#11,#1) = 0.204 
 + - Total coarse refinement net CPU time = 0.0 s; 3097 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=64 usiz=198.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 22701 total points stored in 244 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.625060 *
 + -- Parameters = -0.5279 -0.3167 1.8336 0.3418 -1.4206 0.0829 1.0055 1.0320 1.0011 0.0014 -0.0010 0.0012
 + - cost(#2)=-0.576770  
 + -- Parameters = -0.9474 -1.0009 1.3501 -0.1272 -0.2457 -0.9613 1.0122 1.0186 1.0257 -0.0176 0.0195 0.0185
 + - cost(#3)=-0.562186  
 + -- Parameters = 0.1216 -1.0432 2.5069 1.0615 0.2906 1.3366 1.0129 1.0343 0.9771 0.0277 -0.0274 0.0478
 + - cost(#4)=-0.540917  
 + -- Parameters = -0.3075 -0.0250 3.0665 0.5160 -1.5611 0.7257 1.0078 1.0453 0.9382 0.0064 -0.0271 0.0082
 + - cost(#5)=-0.165241  
 + -- Parameters = 1.3999 -3.6166 6.1810 3.2002 -15.2295 2.7199 1.0108 1.0640 0.8375 0.0610 -0.0152 -0.0390
 + - cost(#6)=-0.127139  
 + -- Parameters = -4.4916 -7.1703 6.9541 -4.7615 -20.3659 -0.1445 1.0421 1.0662 0.8876 -0.0290 -0.0161 -0.0309
 + - cost(#7)=-0.087894  
 + -- Parameters = -7.0387 -17.5328 7.3717 -9.9247 -33.3590 -1.3156 1.0272 1.0492 0.9103 -0.0160 0.0019 0.0329
 + - cost(#8)=-0.080684  
 + -- Parameters = -6.5192 -18.7785 5.5746 -9.1156 -32.0382 1.3750 1.0117 1.0048 0.9834 0.0212 -0.0032 -0.0148
 + - cost(#9)=-0.065890  
 + -- Parameters = -9.1724 -21.6610 8.2440 -15.1338 -37.5879 -10.9591 1.0305 0.9725 1.0392 -0.0117 -0.0196 -0.0536
 + - cost(#10)=-0.052969  
 + -- Parameters = 5.0895 -10.2065 10.5770 7.6731 -19.7323 24.0599 1.0234 1.0300 1.0198 -0.0010 0.0069 0.0017
 + - cost(#11)=-0.023824  
 + -- Parameters = -14.1105 15.9018 8.6815 -13.3009 16.9375 -6.0126 1.0102 1.0039 0.9994 0.0037 0.0154 0.0003
 + - cost(#12)=-0.012532  
 + -- Parameters = -0.6324 2.6966 -4.4469 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.627204 *
 + -- Parameters = -0.5908 -0.4331 1.8842 0.3287 -1.1183 0.0097 1.0062 1.0317 1.0008 0.0034 -0.0013 0.0063
 + - cost(#2)=-0.623337  
 + -- Parameters = -0.5473 -0.5632 1.8530 0.4586 -0.7825 -0.2379 1.0072 1.0329 1.0041 0.0103 0.0088 0.0170
 + - cost(#3)=-0.594935  
 + -- Parameters = -0.1572 -1.1294 2.3066 0.6572 0.2415 0.9497 1.0081 1.0279 0.9858 0.0162 -0.0264 0.0373
 + - cost(#4)=-0.612336  
 + -- Parameters = -0.3003 -0.3029 2.1498 0.4888 -1.3574 0.6202 1.0021 1.0337 0.9846 0.0062 -0.0197 0.0007
 + - cost(#5)=-0.188288  
 + -- Parameters = 0.7102 -1.8316 6.0817 2.3545 -14.5857 2.3810 1.0207 1.0906 0.8591 0.0827 0.0104 -0.0498
 + - cost(#6)=-0.142693  
 + -- Parameters = -3.8043 -5.5376 7.5473 -3.6072 -19.0805 0.3409 1.0569 1.0650 0.8472 -0.0254 -0.0117 -0.0249
 + - cost(#7)=-0.091668  
 + -- Parameters = -6.9730 -17.0666 7.4256 -10.1690 -33.4012 -1.5189 1.0212 1.0564 0.8823 -0.0157 0.0222 0.0380
 + - cost(#8)=-0.081518  
 + -- Parameters = -6.4288 -18.6132 5.5801 -8.9976 -31.8592 1.3608 1.0123 1.0045 0.9795 0.0212 0.0001 -0.0129
 + - cost(#9)=-0.066172  
 + -- Parameters = -9.1043 -21.6394 8.1936 -15.0264 -37.4881 -10.9654 1.0307 0.9714 1.0400 -0.0150 -0.0197 -0.0535
 + - cost(#10)=-0.053401  
 + -- Parameters = 5.1561 -10.3405 10.6167 7.9401 -19.8078 24.2122 1.0232 1.0299 1.0190 -0.0014 0.0075 -0.0027
 + - cost(#11)=-0.023983  
 + -- Parameters = -14.1595 15.9343 8.7818 -13.3858 16.8394 -6.0319 1.0100 1.0033 0.9991 0.0039 0.0194 0.0006
 + - cost(#12)=-0.620211  
 + -- Parameters = -0.5921 -0.2693 1.7724 0.2121 -1.5074 -0.0602 1.0063 1.0308 1.0033 -0.0049 -0.0020 -0.0004
 + - case #1 is now the best
 + - Initial  cost = -0.627204
 + - Initial fine Parameters = -0.5908 -0.4331 1.8842 0.3287 -1.1183 0.0097 1.0062 1.0317 1.0008 0.0034 -0.0013 0.0063
 + - Finalish cost = -0.627912 ; 146 funcs
 + - Final    cost = -0.628236 ; 276 funcs
 + Final fine fit Parameters:
       x-shift=-0.5485   y-shift=-0.5202   z-shift= 1.8764
       z-angle= 0.3643   x-angle=-0.9332   y-angle= 0.0340
       x-scale= 1.0056   y-scale= 1.0313   z-scale= 1.0011
     y/x-shear= 0.0050 z/x-shear=-0.0004 z/y-shear= 0.0107
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.5485 -0.5202 1.8764 0.3643 -0.9332 0.0340 1.0056 1.0313 1.0011 0.0050 -0.0004 0.0107
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 24.3
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0015 -1.0195 0.1624 224.7769 0.0003 0.1575 0.9877 93.3418 -1.0056 0.0064 0.0006 200.3498
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.1
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 19.0 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2395.500100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 91.1272 48.1096   ITER = 12/137
91.1272

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 6s 342ms]
lev=0 0..171 0..213 0..166: [first cost=-0.67609] ... done [cost:-0.67609==>-0.75529]
lev=1 patch=129x161x125 [clock= 12m 39s 634ms]........:[cost=-0.78218]:........ done [cost:-0.75529==>-0.78943 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 21m 50s 923ms]......................... done [cost:-0.78943==>-0.86571 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 28m 28s 513ms].............. done [cost:-0.86571==>-0.92597 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 33m 32s 456ms]............... done [cost:-0.92597==>-0.97927 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 37m 28s 65ms]............... done [cost:-0.97927==>-1.04284 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 41m 15s 832ms]........................... done [cost:-1.04284==>-1.09988 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 44m 45s 347ms]....................................... done [cost:-1.09988==>-1.17138 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 48m 24s 598ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9331/tb9331.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 8.5 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb9331.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9331.r01.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb01.tb9331.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27605 voxels
 + 4484 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.741  pitch=-0.343  yaw=-0.868  dS=-1.326  dL=-0.813  dP=-0.295
++ Mean: roll=-0.356  pitch=+0.148  yaw=-0.361  dS=-0.254  dL=-0.342  dP=+0.102
++ Max : roll=+0.062  pitch=+0.796  yaw=+0.045  dS=+0.080  dL=+0.109  dP=+0.317
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.35(0.35) 0.49(0.19) 0.48(0.23) 0.47(0.15) 0.47(0.15) 0.48(0.10) 0.50(0.11) 0.49(0.06) 0.47(0.06) 0.51(0.08) 0.52(0.03) 0.49(0.08) 0.48(0.11) 0.48(0.06) 0.43(0.07) 0.39(0.06) 0.34(0.06) 0.31(0.08) 0.30(0.05) 0.30(0.06) 0.28(0.07) 0.31(0.05) 0.35(0.05) 0.39(0.10) 0.42(0.04) 0.43(0.04) 0.47(0.05) 0.69(0.27) 0.75(0.30) 0.71(0.06) 0.66(0.07) 0.60(0.13) 0.59(0.02) 0.58(0.06) 0.55(0.06) 0.55(0.04) 0.52(0.08) 0.57(0.15) 0.57(0.06) 0.60(0.05) 0.62(0.04) 0.61(0.05) 0.64(0.04) 0.68(0.06) 0.73(0.06) 0.72(0.06) 0.77(0.06) 0.81(0.04) 0.80(0.03) 0.80(0.07) 0.88(0.14) 1.12(0.32) 1.17(0.10) 0.99(0.40) 0.89(0.14) 0.90(0.03) 0.92(0.04) 0.92(0.03) 0.97(0.08) 0.99(0.05) 0.99(0.04) 1.00(0.03) 1.03(0.07) 1.02(0.07) 1.04(0.04) 1.02(0.04) 1.03(0.04) 1.02(0.05) 1.01(0.04) 1.03(0.03) 1.00(0.03) 1.00(0.03) 0.99(0.03) 0.95(0.05) 0.98(0.04) 1.00(0.03) 0.94(0.07) 0.97(0.07) 0.98(0.02) 0.93(0.10) 0.98(0.08) 1.07(0.12) 1.07(0.04) 1.10(0.04) 1.11(0.03) 1.09(0.04) 1.08(0.04) 1.08(0.03) 1.11(0.11) 1.18(0.07) 1.20(0.05) 1.21(0.05) 1.24(0.05) 1.38(0.20) 1.38(0.06) 1.48(0.11) 1.75(0.43) 1.65(0.17) 1.63(0.13) 1.68(0.11) 1.66(0.07) 1.62(0.06) 1.71(0.14) 1.76(0.07) 1.79(0.09) 1.82(0.07) 1.84(0.03) 1.84(0.02) 1.84(0.03) 1.87(0.05) 1.88(0.03) 1.87(0.04) 1.83(0.08) 1.88(0.08) 1.87(0.05) 1.91(0.06) 1.90(0.02) 1.85(0.07) 1.71(0.21) 1.81(0.11) 1.91(0.12) 1.90(0.07) 1.91(0.05) 1.94(0.06) 1.93(0.05) 2.17(1.05) 2.23(0.46) 2.18(0.90) 2.25(0.17) 2.32(0.18) 2.45(0.33) 2.47(0.19) 2.32(0.22) 1.99(1.26) 2.09(0.32) 2.26(0.27) 2.33(0.16) 2.33(0.13) 2.32(0.18) 2.44(0.14) 2.44(0.11) 2.36(0.25) 2.45(0.31) 2.45(0.11) 2.43(0.10) 2.45(0.12) 2.40(0.15) 2.40(0.15) 2.43(0.10)
++ Max displacement in automask = 2.47 (mm) at sub-brick 132
++ Max delta displ  in automask = 1.26 (mm) at sub-brick 134
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb9331.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9331.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9331.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9331.r01.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./pb01.tb9331.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb9331.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9331.r02.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb01.tb9331.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27660 voxels
 + 4488 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.028  pitch=+0.206  yaw=-0.206  dS=-2.454  dL=+0.039  dP=+0.308
++ Mean: roll=+0.195  pitch=+0.914  yaw=+0.020  dS=-1.993  dL=+0.380  dP=+0.505
++ Max : roll=+0.769  pitch=+1.258  yaw=+0.643  dS=-1.643  dL=+1.235  dP=+0.610
++ Max displacements (mm) for each sub-brick:
 3.02(0.00) 3.05(0.30) 3.10(0.09) 3.08(0.14) 3.18(0.14) 3.19(0.07) 3.23(0.16) 3.09(0.19) 3.56(0.70) 3.70(0.26) 3.39(0.56) 3.27(0.21) 3.21(0.21) 3.09(0.18) 3.03(0.12) 3.02(0.14) 2.99(0.19) 2.84(0.20) 3.15(0.31) 3.27(0.17) 3.27(0.04) 3.21(0.07) 3.18(0.07) 3.17(0.05) 3.18(0.03) 3.20(0.05) 3.21(0.02) 3.20(0.03) 3.20(0.02) 3.24(0.05) 3.27(0.04) 3.30(0.09) 3.25(0.06) 3.31(0.08) 3.39(0.11) 3.36(0.09) 3.36(0.05) 3.39(0.04) 3.37(0.03) 3.37(0.03) 3.37(0.04) 3.40(0.06) 3.40(0.03) 3.39(0.04) 3.43(0.07) 3.42(0.06) 3.45(0.04) 3.46(0.04) 3.46(0.03) 3.47(0.01) 3.50(0.04) 3.50(0.02) 3.49(0.02) 3.50(0.02) 3.52(0.03) 3.52(0.03) 3.49(0.04) 3.51(0.02) 3.45(0.06) 3.41(0.07) 3.47(0.07) 3.50(0.04) 3.47(0.04) 3.50(0.03) 3.48(0.02) 3.48(0.05) 3.50(0.04) 3.50(0.04) 3.48(0.05) 3.48(0.03) 3.52(0.08) 3.53(0.04) 3.50(0.04) 4.67(1.19) 4.57(0.30) 4.27(0.35) 4.17(0.21) 4.08(0.09) 4.10(0.07) 4.10(0.03) 4.08(0.05) 4.07(0.02) 4.04(0.05) 4.06(0.05) 4.05(0.02) 4.03(0.08) 4.04(0.05) 4.05(0.02) 4.07(0.05) 4.09(0.03) 4.10(0.03) 4.12(0.04) 4.13(0.06) 4.11(0.04) 4.12(0.03) 4.14(0.03) 4.13(0.03) 4.13(0.02) 4.15(0.02) 4.13(0.05) 4.12(0.05) 4.14(0.04) 4.12(0.07) 4.12(0.02) 4.15(0.03) 4.16(0.08) 4.14(0.03) 4.13(0.01) 4.17(0.06) 4.24(0.10) 4.26(0.09) 4.26(0.03) 4.25(0.02) 4.21(0.05) 4.22(0.02) 4.23(0.07) 4.22(0.03) 4.21(0.03) 4.17(0.05) 4.18(0.05) 4.20(0.04) 4.22(0.07) 4.24(0.07) 4.22(0.05) 4.14(0.09) 4.18(0.09) 4.23(0.06) 4.21(0.04) 4.26(0.07) 4.27(0.08) 4.29(0.03) 4.27(0.03) 4.27(0.12) 4.28(0.17) 4.28(0.03) 4.27(0.08) 4.21(0.12) 4.20(0.03) 4.18(0.11) 4.21(0.05) 4.25(0.08) 4.08(0.22) 3.88(0.34) 3.69(0.30) 3.83(0.57) 3.60(0.26) 3.49(0.17) 3.47(0.14) 3.55(0.09) 3.46(0.11)
++ Max displacement in automask = 4.67 (mm) at sub-brick 73
++ Max delta displ  in automask = 1.19 (mm) at sub-brick 73
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb9331.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9331.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9331.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9331.r02.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./pb01.tb9331.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.9
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb9331.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9331.r03.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb01.tb9331.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27695 voxels
 + 4513 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.220  pitch=+0.658  yaw=+0.372  dS=-1.814  dL=+0.150  dP=+0.098
++ Mean: roll=+0.512  pitch=+0.809  yaw=+0.776  dS=-1.661  dL=+0.551  dP=+0.343
++ Max : roll=+0.833  pitch=+1.135  yaw=+1.141  dS=-1.590  dL=+0.945  dP=+0.450
++ Max displacements (mm) for each sub-brick:
 3.67(0.00) 3.58(0.30) 3.75(0.24) 3.73(0.13) 3.79(0.12) 3.83(0.09) 3.88(0.12) 3.89(0.11) 3.93(0.12) 4.03(0.15) 4.01(0.07) 3.86(0.19) 3.81(0.12) 3.82(0.03) 3.80(0.04) 3.81(0.03) 3.88(0.08) 3.89(0.08) 3.90(0.08) 3.84(0.09) 3.78(0.14) 3.94(0.22) 3.85(0.17) 3.83(0.17) 3.85(0.14) 3.87(0.05) 3.93(0.13) 3.93(0.12) 3.82(0.22) 3.88(0.10) 3.84(0.11) 3.79(0.10) 3.85(0.12) 3.84(0.03) 3.86(0.05) 3.76(0.16) 3.81(0.06) 3.84(0.06) 3.85(0.06) 3.80(0.07) 3.75(0.08) 3.77(0.05) 3.78(0.02) 3.75(0.05) 3.71(0.05) 3.69(0.04) 3.68(0.04) 3.64(0.06) 3.64(0.03) 3.66(0.07) 3.62(0.05) 3.61(0.07) 3.61(0.03) 3.59(0.07) 3.61(0.04) 3.61(0.03) 3.60(0.03) 3.62(0.03) 3.62(0.03) 3.60(0.04) 3.60(0.05) 3.61(0.05) 3.60(0.06) 3.57(0.04) 3.60(0.05) 3.59(0.04) 3.62(0.04) 3.58(0.10) 3.53(0.08) 3.54(0.05) 3.56(0.04) 3.59(0.10) 3.56(0.04) 3.55(0.03) 3.56(0.03) 3.54(0.07) 3.52(0.03) 3.50(0.03) 3.51(0.04) 3.53(0.04) 3.50(0.06) 3.52(0.03) 3.52(0.01) 3.53(0.04) 3.54(0.03) 3.54(0.03) 3.58(0.05) 3.59(0.05) 3.54(0.06) 3.53(0.07) 3.53(0.05) 3.50(0.04) 3.53(0.05) 3.54(0.04) 3.54(0.03) 3.52(0.04) 3.51(0.03) 3.52(0.02) 3.54(0.03) 3.53(0.05) 3.57(0.04) 3.58(0.04) 3.55(0.04) 3.54(0.04) 3.56(0.03) 3.54(0.03) 3.56(0.04) 3.56(0.05) 3.58(0.05) 3.58(0.03) 3.54(0.05) 3.56(0.03) 3.54(0.03) 3.56(0.04) 3.57(0.03) 3.55(0.07) 3.56(0.03) 3.56(0.04) 3.58(0.03) 3.56(0.02) 3.55(0.06) 3.57(0.02) 3.54(0.09) 3.68(0.27) 3.48(0.24) 3.47(0.08) 3.51(0.05) 3.48(0.08) 3.52(0.19) 3.57(0.09) 3.54(0.05) 3.56(0.04) 3.58(0.08) 3.58(0.02) 3.59(0.02) 3.61(0.04) 3.66(0.06) 3.69(0.09) 3.74(0.07) 3.79(0.07) 3.79(0.07) 3.78(0.14) 3.79(0.16) 3.79(0.10) 3.77(0.04) 3.73(0.05) 3.72(0.07) 3.71(0.10) 3.69(0.02) 3.69(0.03)
++ Max displacement in automask = 4.03 (mm) at sub-brick 9
++ Max delta displ  in automask = 0.30 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb9331.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9331.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9331.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9331.r03.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./pb01.tb9331.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9331.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9331.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9331.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9331.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9331.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9331.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb9331
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb9331+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb9331+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1324557 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 270278 voxels [63.4%] in weight mask
++ Number of points for matching = 127030
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.161409
   sp   = 0.336323
   mi   = -0.498316
   crM  = 0.049651
   nmi  = 0.846498
   je   = 2.74801
   hel  = -0.0984609
   crA  = 0.223178
   crU  = 0.23573
   lss  = 0.838591
   lpc  = 0.0239793
   lpa  = 0.976021
   lpc+ = 0.187374
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.4
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb9331+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb9331+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 35.3 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9331.r01.blur pb02.tb9331.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9331.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb9331.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9331.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9331.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9331.r02.blur pb02.tb9331.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9331.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb9331.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9331.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9331.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9331.r03.blur pb02.tb9331.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9331.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb9331.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9331.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9331.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb9331.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9331.r01.blur+orig
++ Forming automask
 + Fixed clip level = 414.446716
 + Used gradual clip level = 384.940033 .. 462.166199
 + Number voxels above clip level = 48072
 + Clustering voxels ...
 + Largest cluster has 47934 voxels
 + Clustering voxels ...
 + Largest cluster has 47900 voxels
 + Filled    24 voxels in small holes; now have 47924 voxels
 + Clustering voxels ...
 + Largest cluster has 47924 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 378351 voxels
 + Mask now has 47924 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 370573 voxels
++ 55702 voxels in the mask [out of 426275: 13.07%]
++ first  13 x-planes are zero [from A]
++ last   13 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last    7 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb9331.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9331.r02.blur+orig
++ Forming automask
 + Fixed clip level = 415.617584
 + Used gradual clip level = 386.998260 .. 465.822174
 + Number voxels above clip level = 47999
 + Clustering voxels ...
 + Largest cluster has 47864 voxels
 + Clustering voxels ...
 + Largest cluster has 47848 voxels
 + Filled    27 voxels in small holes; now have 47875 voxels
 + Clustering voxels ...
 + Largest cluster has 47875 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 378400 voxels
 + Mask now has 47875 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 370751 voxels
++ 55524 voxels in the mask [out of 426275: 13.03%]
++ first  13 x-planes are zero [from A]
++ last   13 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last    7 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb9331.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9331.r03.blur+orig
++ Forming automask
 + Fixed clip level = 415.314301
 + Used gradual clip level = 385.446289 .. 465.762726
 + Number voxels above clip level = 48070
 + Clustering voxels ...
 + Largest cluster has 47934 voxels
 + Clustering voxels ...
 + Largest cluster has 47907 voxels
 + Filled    30 voxels in small holes; now have 47937 voxels
 + Clustering voxels ...
 + Largest cluster has 47937 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 378338 voxels
 + Mask now has 47937 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 370650 voxels
++ 55625 voxels in the mask [out of 426275: 13.05%]
++ first  13 x-planes are zero [from A]
++ last   13 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last    7 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb9331
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 55967 survived, 370308 were zero
++ writing result full_mask.tb9331...
3dresample -master full_mask.tb9331+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb9331
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 52375 survived, 373900 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb9331...
3dABoverlap -no_automask full_mask.tb9331+orig mask_anat.tb9331+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb9331+orig.BRIK  B=./mask_anat.tb9331+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
55967        52375        59237        49105        6862         3270         12.2608      6.2434     0.8983     1.0036     0.9216
3ddot -dodice full_mask.tb9331+orig mask_anat.tb9331+orig
tee out.mask_ae_dice.txt
0.906481	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb9331
total number of censored TRs (simple form) = 14
1deval -a motion_tb9331_censor.1D -b outcount_tb9331_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb9331_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb9331.r01.blur+orig.HEAD pb03.tb9331.r02.blur+orig.HEAD pb03.tb9331.r03.blur+orig.HEAD -censor censor_tb9331_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb9331 -errts errts.tb9331 -bucket stats.tb9331
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb9331.r01.blur+orig.HEAD pb03.tb9331.r02.blur+orig.HEAD pb03.tb9331.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 47909 voxels (out of 426275 = 11.2%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 435 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb9331.r01.blur+orig.HEAD pb03.tb9331.r02.blur+orig.HEAD pb03.tb9331.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb9331_REML -Rvar stats.tb9331_REMLvar \
 -Rfitts fitts.tb9331_REML -Rerrts errts.tb9331_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (435x24):  5.27639  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (435x6):  1.03458  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (435x18):  5.12231  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (435x6):  4.17983  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (435x12):  1.04767  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.24494e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.25 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=6.061
++ Job #2: processing voxels 85254 to 127880; elapsed time=6.078
++ Job #3: processing voxels 127881 to 170507; elapsed time=6.094
++ Job #4: processing voxels 170508 to 213134; elapsed time=6.113
++ Job #5: processing voxels 213135 to 255761; elapsed time=6.131
++ Job #6: processing voxels 255762 to 298388; elapsed time=6.150
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.178
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.198
++ Job #0: processing voxels 0 to 42626; elapsed time=6.216
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=6.218
0123456789.0123456789.0123456789.012345++ Job #8 finished; elapsed time=34.008
++ Job #2 finished; elapsed time=34.052
6++ Job #1 finished; elapsed time=34.490
++ Job #3 finished; elapsed time=34.638
++ Job #7 finished; elapsed time=34.749
++ Job #4 finished; elapsed time=34.785
789.01234++ Job #9 finished; elapsed time=37.617
5++ Job #6 finished; elapsed time=37.794
6789.
++ Job #0 waiting for children to finish; elapsed time=38.661
++ Job #5 finished; elapsed time=38.829
++ Job #0 now finishing up; elapsed time=38.840
++ Smallest FDR q [0 Full_Fstat] = 4.32198e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 3.73183e-14
++ Smallest FDR q [3 uns1_Fstat] = 3.73088e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 3.70059e-14
++ Smallest FDR q [6 uns2_Fstat] = 3.69943e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 6.49241e-14
++ Smallest FDR q [9 uns3_Fstat] = 6.49286e-14
++ Smallest FDR q [11 str1#0_Tstat] = 4.64105e-14
++ Smallest FDR q [12 str1_Fstat] = 4.63978e-14
++ Smallest FDR q [14 str2#0_Tstat] = 3.73661e-14
++ Smallest FDR q [15 str2_Fstat] = 3.73594e-14
++ Smallest FDR q [17 str3#0_Tstat] = 8.47707e-14
++ Smallest FDR q [18 str3_Fstat] = 8.47618e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.7825e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.78214e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 2.74576e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 2.74495e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 3.46e-13
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 3.46048e-13
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 1.91008e-11
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 1.90964e-11
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 1.95208e-06
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 1.95219e-06
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 5.5228e-12
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 5.5214e-12
++ Wrote bucket dataset into ./stats.tb9331+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb9331+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb9331+orig.BRIK
++ Program finished; elapsed time=61.145
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.743       0.804  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.725       0.789  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.723       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.487       0.562  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.472       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.471       0.546  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.412      -0.376  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb9331.r01.blur+orig.HEAD pb03.tb9331.r02.blur+orig.HEAD pb03.tb9331.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb9331_REML -Rvar stats.tb9331_REMLvar -Rfitts fitts.tb9331_REML -Rerrts errts.tb9331_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 47909 voxels (out of 426275 = 11.2%)
++ -----  matrix condition (435x24):  5.27639  ++ VERY GOOD ++
 + masked off 242210 voxels for being all zero; 184065 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 332 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=29.11
 + X matrix: 46.676% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=435 cols=24; 109*1 cases; total CPU=0.00 Elapsed=29.14
 +  average case bandwidth = 12.24
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=97.30
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=144.62
++ Output dataset ./stats.tb9331_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb9331_REML+orig.BRIK
++ Output dataset ./errts.tb9331_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb9331_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.14783e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 2.5566e-11
++ Smallest FDR q [3 uns1_Fstat] = 2.5566e-11
++ Smallest FDR q [5 uns2#0_Tstat] = 3.31679e-11
++ Smallest FDR q [6 uns2_Fstat] = 3.31679e-11
++ Smallest FDR q [8 uns3#0_Tstat] = 1.2684e-11
++ Smallest FDR q [9 uns3_Fstat] = 1.2684e-11
++ Smallest FDR q [11 str1#0_Tstat] = 5.34634e-12
++ Smallest FDR q [12 str1_Fstat] = 5.34634e-12
++ Smallest FDR q [14 str2#0_Tstat] = 3.4572e-11
++ Smallest FDR q [15 str2_Fstat] = 3.4572e-11
++ Smallest FDR q [17 str3#0_Tstat] = 3.96279e-11
++ Smallest FDR q [18 str3_Fstat] = 3.96279e-11
++ Smallest FDR q [20 unstructured#0_Tstat] = 2.33527e-12
++ Smallest FDR q [21 unstructured_Fstat] = 2.33527e-12
++ Smallest FDR q [23 structured#0_Tstat] = 3.09441e-12
++ Smallest FDR q [24 structured_Fstat] = 3.0944e-12
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.00298608
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.00298609
++ Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.00262166
++ Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.00262166
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999864 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999864 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.0705038
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.0705038
 + Added 25 FDR curves to dataset stats.tb9331_REML+orig
++ Output dataset ./stats.tb9331_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=173.12
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb9331 pb03.tb9331.r01.blur+orig.HEAD pb03.tb9331.r02.blur+orig.HEAD pb03.tb9331.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 21.8 s
3dTstat -mean -prefix rm.signal.all all_runs.tb9331+orig[0..124,129..132,136..156,161..221,224..292,295..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb9331_REML+orig[0..124,129..132,136..156,161..221,224..292,295..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb9331+orig -expr c*a/b -prefix TSNR.tb9331
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb9331_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb9331+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 55967 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.252091
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
** Can't read ANY data from file 'rm.DP+orig.HEAD'
[7m** FATAL ERROR:[0m Can't open dataset rm.DP+orig
** Program compile date = Jul 20 2017
