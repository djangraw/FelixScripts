echo auto-generated by afni_proc.py, Tue Aug  8 18:20:31 2017
auto-generated by afni_proc.py, Tue Aug  8 18:20:31 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Tue Aug  8 18:20:31 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0093
endif
set output_dir = tb0093.srtt
if ( -d tb0093.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0093.srtt
mkdir tb0093.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0093.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0093.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0093.srtt/pb00.tb0093.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0093.srtt/pb00.tb0093.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0093.srtt/pb00.tb0093.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0093.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0093.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0093.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0093.r01.tcat+orig.BRIK is 2.900026 degrees from plumb.
++ 31045 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0093.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0093.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0093.r02.tcat+orig.BRIK is 2.900026 degrees from plumb.
++ 31040 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0093.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0093.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0093.r03.tcat+orig.BRIK is 2.900026 degrees from plumb.
++ 31094 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0093.r01.tshift -tpattern alt+z2 pb00.tb0093.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0093.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0093.r01.tcat+orig.BRIK is 2.900026 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0093.r02.tshift -tpattern alt+z2 pb00.tb0093.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0093.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0093.r02.tcat+orig.BRIK is 2.900026 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0093.r03.tshift -tpattern alt+z2 pb00.tb0093.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0093.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0093.r03.tcat+orig.BRIK is 2.900026 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0093.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 2.900026 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 386.468506
 + Used gradual clip level = 344.489594 .. 443.091003
 + Number voxels above clip level = 31465
 + Clustering voxels ...
 + Largest cluster has 31051 voxels
 + Clustering voxels ...
 + Largest cluster has 30656 voxels
 + Filled   307 voxels in small holes; now have 30963 voxels
 + Clustering voxels ...
 + Largest cluster has 30962 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 100109 voxels
 + Mask now has 30963 voxels
++ 30963 voxels in the mask [out of 131072: 23.62%]
++ first  13 x-planes are zero [from R]
++ last   11 x-planes are zero [from L]
++ first   4 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 978.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/978.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 2.900026 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 2.900026 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1546348 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 30963 voxels [18.9%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 30963
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.479 27.928 19.879 (index)
 + source center of mass = 85.944 154.304 166.815 (index)
 + source-target CM = -0.479 0.192 -6.872 (xyz)
 + center of mass shifts = -0.479 0.192 -6.872
++ shift param auto-range: -70.0..69.0 -69.3..69.7 -56.9..43.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.478668 .. 9.521332
 + Range param#2 [y-shift] = -9.807594 .. 10.192406
 + Range param#3 [z-shift] = -16.871803 .. 3.128197
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.478668 .. 39.521332
 + Range param#2 [y-shift] = -39.807594 .. 40.192406
 + Range param#3 [z-shift] = -46.871803 .. 33.128197
 + 12 free parameters
++ Normalized convergence radius = 0.000443
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1546348 [out of 12735536] voxels
 + base mask has 42102 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=82 usiz=187
 + - copying weight image
 + - using 30963 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 26529 total points stored in 244 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--.o---o-o-.+.o+--oo+.--$+ + - best 45 costs found:
    0 v=-0.049265:  -0.48   0.19  -6.87   0.00   0.00   0.00  [grid]
    1 v=-0.038639: -13.81 -13.14   6.46 -15.00 -30.00  15.00  [grid]
    2 v=-0.033635: -14.68  -9.26  -2.03 -15.99 -13.53  29.93  [rand]
    3 v=-0.033447: -13.81  13.53   6.46 -30.00  15.00  30.00  [grid]
    4 v=-0.032664: -13.81 -13.14  19.79 -30.00 -30.00 -30.00  [grid]
    5 v=-0.032431: -13.81 -26.47   6.46 -15.00 -30.00  30.00  [grid]
    6 v=-0.032275:  -4.56  -6.03   0.92  -4.32 -22.85 -18.95  [rand]
    7 v=-0.031839: -27.15 -13.14  19.79  30.00 -15.00  15.00  [grid]
    8 v=-0.031426: -12.08   4.75  -2.98 -24.53 -29.49  26.10  [rand]
    9 v=-0.028887:  12.85 -13.14  19.79  30.00 -15.00 -30.00  [grid]
   10 v=-0.028713: -13.81  13.53  19.79 -15.00 -15.00  15.00  [grid]
   11 v=-0.028388:  -4.56  -6.03   0.92  -4.32 -22.85  18.95  [rand]
   12 v=-0.028027:   3.60  -6.03   0.92   4.32 -22.85  18.95  [rand]
   13 v=-0.027960: -14.51 -15.53   7.80 -24.25 -37.55   4.41  [rand]
   14 v=-0.027556: -13.81 -13.14  19.79 -15.00 -15.00  15.00  [grid]
   15 v=-0.026845: -16.62  -9.27  17.48 -20.99 -15.73 -16.09  [rand]
   16 v=-0.026765:  12.85  26.86   6.46 -30.00  30.00 -30.00  [grid]
   17 v=-0.026678: -27.15  13.53   6.46  15.00  15.00  30.00  [grid]
   18 v=-0.026646:  12.85  13.53  19.79 -30.00  15.00 -15.00  [grid]
   19 v=-0.026505:  26.19  26.86  19.79  15.00  30.00  30.00  [grid]
   20 v=-0.026140: -13.81  13.53  19.79 -30.00 -30.00 -15.00  [grid]
   21 v=-0.026118: -17.34 -18.39   7.58 -19.57 -37.09  16.59  [rand]
   22 v=-0.026080:   9.34  24.95 -18.25   3.10  34.36   2.55  [rand]
   23 v=-0.025868: -27.15 -13.14  19.79  15.00 -15.00  15.00  [grid]
   24 v=-0.025811: -13.81 -13.14  19.79 -15.00 -15.00  30.00  [grid]
   25 v=-0.025495: -13.81 -26.47  19.79 -30.00 -15.00  30.00  [grid]
   26 v=-0.025382:  14.46  24.28  23.05 -19.13  33.53 -22.48  [rand]
   27 v=-0.025363:  25.83  26.15  10.92  15.82  17.65  37.25  [rand]
   28 v=-0.025135: -13.81  13.53   6.46 -15.00  15.00  30.00  [grid]
   29 v=-0.024951: -13.81 -26.47   6.46 -15.00 -30.00  15.00  [grid]
   30 v=-0.024853:  -4.56   6.42 -14.67   4.32  22.85 -18.95  [rand]
   31 v=-0.024837:  12.85 -26.47  19.79  15.00 -30.00 -30.00  [grid]
   32 v=-0.023592: -13.81  13.53  19.79 -15.00  15.00  30.00  [grid]
   33 v=-0.023443: -13.81 -13.14   6.46 -15.00 -15.00  15.00  [grid]
   34 v=-0.023382:  26.19 -13.14  19.79 -30.00 -15.00 -30.00  [grid]
   35 v=-0.023214:  26.19 -26.47  19.79 -30.00 -15.00 -30.00  [grid]
   36 v=-0.023209:  15.74 -13.92  28.26  15.74 -34.09   7.78  [rand]
   37 v=-0.023175: -16.70 -13.92  28.26 -15.74 -34.09   7.78  [rand]
   38 v=-0.023162:  -7.53 -19.62  28.88 -25.15 -27.05 -27.90  [rand]
   39 v=-0.023051: -13.81 -13.14  19.79 -30.00 -15.00  30.00  [grid]
   40 v=-0.022839:  15.66   9.66  17.48 -20.99  15.73 -16.09  [rand]
   41 v=-0.022359: -13.81 -26.47  19.79 -30.00 -30.00 -30.00  [grid]
   42 v=-0.022352: -15.70 -36.24   3.63  -3.49 -11.25  35.41  [rand]
   43 v=-0.022225:   3.60  -6.03   0.92  -4.32 -22.85  18.95  [rand]
   44 v=-0.022067: -34.80  16.78   1.73  16.34   8.64  40.54  [rand]
*[#8004=-0.358027] *[#8011=-0.426338] *[#8013=-0.444474] *[#8015=-0.457446] *[#8018=-0.457551] *[#8019=-0.480934] *[#8020=-0.503352] *[#8021=-0.509654] *[#8022=-0.528966] *[#8024=-0.532166] *[#8025=-0.533594] *[#8032=-0.536741]  + - costs of the above after a little optimization:
  * 0 v=-0.536741:   0.03  -0.69  -1.40  -0.74  -1.00   0.73  [grid]
    1 v=-0.069540: -13.08 -17.73   5.91 -13.91 -29.26  13.06  [grid]
    2 v=-0.044005: -11.80  -8.79  -1.37  -9.38 -11.85  31.49  [rand]
    3 v=-0.039554: -12.34  13.26   6.86 -33.05   9.98  30.01  [grid]
    4 v=-0.055653: -12.19 -17.55  19.78 -28.16 -29.71 -30.63  [grid]
    5 v=-0.064751: -13.89 -21.47   7.79  -5.99 -34.25  26.57  [grid]
    6 v=-0.380148:   0.94  -2.64  -2.06  -0.97  -1.27   1.10  [rand]
    7 v=-0.038007: -27.17 -15.53  16.95  29.47 -15.53  13.24  [grid]
    8 v=-0.044168:  -7.55   4.03  -0.40 -28.35 -26.26  29.53  [rand]
    9 v=-0.044061:  13.03 -11.88  18.72  35.07 -20.22 -34.05  [grid]
   10 v=-0.036934: -13.89  13.16  19.73 -15.19 -14.92  19.31  [grid]
   11 v=-0.113264:  -6.12  -8.34   4.03  -8.17 -17.10   7.38  [rand]
   12 v=-0.451606:   0.35  -1.06  -2.14  -1.01   0.22  -0.70  [rand]
   13 v=-0.050232: -13.80 -16.64   4.43 -21.76 -28.65   7.55  [rand]
   14 v=-0.040085: -11.67 -16.08  19.19 -11.38 -16.06  14.85  [grid]
   15 v=-0.033371: -17.60  -9.97  17.98 -21.47 -16.36 -11.65  [rand]
   16 v=-0.035905:   9.49  24.70   5.81 -32.56  29.12 -28.39  [grid]
   17 v=-0.033295: -26.66  13.68   6.48  14.91  15.61  34.57  [grid]
   18 v=-0.030530:  12.52  13.78  20.67 -28.93  16.38  -9.35  [grid]
   19 v=-0.028977:  27.17  27.27  19.09  13.86  28.95  29.29  [grid]
   20 v=-0.036079: -15.71  13.24  18.15 -32.83 -31.10 -17.39  [grid]
   21 v=-0.057717: -14.37 -19.18   4.61 -11.46 -32.64  20.69  [rand]
   22 v=-0.062508:   3.76  26.66 -15.69   3.76  36.93  -2.61  [rand]
   23 v=-0.033410: -23.68 -14.32  20.40  15.73 -13.45  15.55  [grid]
   24 v=-0.033904: -14.10 -17.87  19.21 -15.29 -15.96  28.39  [grid]
   25 v=-0.037447: -15.15 -21.47  21.75 -28.35 -16.96  32.68  [grid]
   26 v=-0.037800:  12.83  18.82  19.69 -23.18  31.80 -17.25  [rand]
   27 v=-0.039766:  27.76  23.86  12.73  17.77  25.38  39.39  [rand]
   28 v=-0.038633: -13.08  11.70  11.02 -15.71  14.11  29.44  [grid]
   29 v=-0.078654: -10.06 -17.52   8.96 -12.30 -30.40   8.69  [grid]
   30 v=-0.057451:  -5.18   6.60  -6.95  -0.26  14.56 -14.83  [rand]
   31 v=-0.045096:  14.58 -28.20  17.20  13.41 -28.28 -42.74  [grid]
   32 v=-0.039160: -12.99  12.14  11.89 -14.97  16.73  28.36  [grid]
   33 v=-0.111756:  -5.89  -6.63   5.47  -6.88 -16.42   7.76  [grid]
   34 v=-0.035717:  26.11 -11.17  19.90 -27.44 -10.12 -30.65  [grid]
   35 v=-0.034057:  27.35 -16.89  18.97 -29.03 -13.31 -34.75  [grid]
   36 v=-0.031803:  14.13 -19.44  30.28  15.04 -36.88   5.38  [rand]
   37 v=-0.035460: -16.25 -15.26  28.00 -11.51 -35.03   8.52  [rand]
   38 v=-0.025583:  -7.85 -19.28  29.19 -24.78 -27.40 -27.16  [rand]
   39 v=-0.039584: -13.35 -20.42  23.70 -26.37 -15.51  28.06  [grid]
   40 v=-0.030039:  14.37   6.22  17.19 -21.57  19.02 -17.96  [rand]
   41 v=-0.053294: -11.78 -16.89  20.68 -27.57 -29.48 -31.66  [grid]
   42 v=-0.030451: -15.49 -33.92   9.26  -5.46 -13.99  34.10  [rand]
   43 v=-0.262653:  -2.72  -2.40  -0.38  -3.54  -3.91   1.79  [rand]
   44 v=-0.027699: -35.38  17.25   0.99  12.26   6.22  44.07  [rand]
 + - save # 0 for twobest
 + - skip #12 for twobest: too close to set # 0
 + - skip # 6 for twobest: too close to set # 0
 + - skip #43 for twobest: too close to set # 0
 + - save #11 for twobest
 + - skip #33 for twobest: too close to set #11
 + - save #29 for twobest
 + - skip # 1 for twobest: too close to set #29
 + - save # 5 for twobest
 + - save #22 for twobest
 + - save #21 for twobest
 + - save #30 for twobest
 + - save # 4 for twobest
 + - skip #41 for twobest: too close to set # 4
 + - save #13 for twobest
 + - save #31 for twobest
 + - save # 8 for twobest
 + - save # 9 for twobest
 + - save # 2 for twobest
 + - save #14 for twobest
 + - save #27 for twobest
 + - save #39 for twobest
 + - save # 3 for twobest
 + - save #32 for twobest
 + - skip #28 for twobest: too close to set #32
 + - save # 7 for twobest
 + - save #26 for twobest
 + - save #25 for twobest
 + - save #10 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=82 usiz=187
 + - retaining old weight image
 + - using 30963 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26795 total points stored in 269 'RHDD(13.7332)' bloks
*[#9789=-0.55062] *[#9810=-0.552664] *[#9817=-0.55349] *[#9820=-0.553876] *[#9821=-0.554994] *[#9822=-0.555476] *[#9823=-0.555859] *[#9824=-0.556063] *[#9825=-0.556227] *[#9830=-0.556486] *[#9833=-0.556594] *[#9837=-0.557621] *[#9838=-0.558008] *[#9841=-0.558207] *[#9844=-0.55825] *[#9850=-0.558549] *[#9853=-0.559087] *[#9854=-0.559384] *[#9857=-0.559654] *[#9858=-0.559729] *[#9861=-0.559887] *[#9864=-0.559933] *[#9867=-0.560498] *[#9868=-0.560694] *[#9871=-0.560809] *[#9872=-0.56083] 
 + - param set #1 has cost=-0.560830
 + -- Parameters = 0.0340 -0.5789 -1.4927 -0.7594 -0.8345 0.6983 1.0041 1.0042 0.9974 0.0028 0.0002 0.0007
 + - param set #2 has cost=-0.355975
 + -- Parameters = -0.8132 1.3486 -0.3848 -1.0634 -3.8344 0.4709 0.9991 1.0353 1.0582 0.0059 0.0182 -0.0135
 + - param set #3 has cost=-0.069392
 + -- Parameters = -10.4084 -15.6508 7.6146 -10.9256 -28.9881 9.5052 1.0093 0.9999 1.0023 0.0090 0.0111 -0.0037
 + - param set #4 has cost=-0.055825
 + -- Parameters = -13.9022 -19.6874 7.2188 -6.1490 -33.9736 24.4518 0.9884 1.0027 0.9590 0.0559 0.0006 0.0027
 + - param set #5 has cost=-0.056803
 + -- Parameters = 3.1090 26.8258 -14.2527 2.9001 35.8540 -1.7909 1.0007 0.9947 1.0014 -0.0006 -0.0003 0.0002
 + - param set #6 has cost=-0.057763
 + -- Parameters = -13.5732 -19.8507 6.8715 -10.1291 -33.4580 19.0034 0.9839 0.9909 0.9932 0.0051 0.0022 0.0006
 + - param set #7 has cost=-0.396131
 + -- Parameters = -1.0178 -0.0925 -1.9861 -1.5525 1.9714 -0.0659 1.0426 0.9999 1.0481 -0.0566 0.0197 0.0551
 + - param set #8 has cost=-0.033687
 + -- Parameters = -12.6478 -17.5854 19.4923 -27.9442 -29.4408 -30.4663 0.9981 0.9997 1.0162 0.0000 -0.0006 -0.0005
 + - param set #9 has cost=-0.082539
 + -- Parameters = -8.7519 -12.0610 5.1082 -8.9038 -22.6888 10.9062 1.0009 1.0103 1.0097 -0.0010 -0.0005 0.0010
 + - param set #10 has cost=-0.036798
 + -- Parameters = 14.3606 -28.5445 18.0356 13.3853 -29.6378 -41.3416 1.0009 0.9993 1.0001 0.0001 0.0031 0.0118
 + - param set #11 has cost=-0.033055
 + -- Parameters = -7.1937 3.9695 0.0274 -33.5588 -26.6022 29.2313 1.0050 0.9997 0.9995 0.0012 0.0027 -0.0033
 + - param set #12 has cost=-0.555313
 + -- Parameters = 0.0051 -0.6033 -1.5002 -0.8211 -0.4608 0.5581 1.0064 0.9953 1.0012 -0.0024 0.0018 0.0041
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0244 
 + --- dist(#3,#1) = 0.267 
 + --- dist(#4,#1) = 0.166 
 + --- dist(#5,#1) = 0.243 
 + --- dist(#6,#1) = 0.313 
 + --- dist(#7,#1) = 0.362 
 + --- dist(#8,#1) = 0.408 
 + --- dist(#9,#1) = 0.368 
 + --- dist(#10,#1) = 0.467 
 + --- dist(#11,#1) = 0.346 
 + --- dist(#12,#1) = 0.364 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=82 usiz=187
 + - retaining old weight image
 + - using 30963 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 27094 total points stored in 280 'RHDD(13.5933)' bloks
*[#10852=-0.570908] *[#10863=-0.571804] *[#10878=-0.572424] *[#10880=-0.572636] *[#10882=-0.572862] *[#10883=-0.572946] *[#10890=-0.573061] *[#10891=-0.573176] *[#10894=-0.573769] *[#10895=-0.573905] *[#10904=-0.574037] *[#10909=-0.574151] *[#10912=-0.574231] *[#10914=-0.574241] 
 + - param set #1 has cost=-0.574241
 + -- Parameters = 0.0045 -0.5957 -1.5379 -0.7798 -0.8413 0.3796 1.0069 1.0055 0.9961 0.0037 0.0082 0.0003
 + - param set #2 has cost=-0.572807
 + -- Parameters = 0.0029 -0.5948 -1.5585 -0.7534 -0.5632 0.3804 1.0046 1.0035 1.0033 0.0047 0.0107 0.0055
 + - param set #3 has cost=-0.518931
 + -- Parameters = -0.1835 -0.9577 -1.6181 -1.2734 1.5635 -0.1699 1.0083 0.9985 1.0160 -0.0242 0.0116 0.0450
 + - param set #4 has cost=-0.552922
 + -- Parameters = -0.1392 -0.2282 -1.5666 -0.6061 -2.4976 -0.1080 1.0153 1.0159 1.0101 0.0076 0.0192 -0.0278
 + - param set #5 has cost=-0.071974
 + -- Parameters = -8.5918 -12.1997 6.0511 -9.1561 -22.8706 10.1007 0.9945 1.0033 1.0079 -0.0020 0.0058 0.0029
 + - param set #6 has cost=-0.064939
 + -- Parameters = -9.8747 -14.1600 7.4675 -10.2647 -25.8154 8.9153 1.0090 0.9965 1.0038 0.0134 0.0125 -0.0043
 + - param set #7 has cost=-0.046737
 + -- Parameters = -13.9066 -19.9608 7.0788 -9.8813 -33.1037 19.6395 0.9751 0.9779 0.9892 0.0029 0.0056 0.0090
 + - param set #8 has cost=-0.043546
 + -- Parameters = 3.3296 26.8772 -14.2740 2.9840 35.8632 -1.9378 1.0009 0.9938 1.0015 -0.0004 -0.0005 0.0072
 + - param set #9 has cost=-0.042689
 + -- Parameters = -14.1758 -19.5629 6.9752 -6.7792 -33.8748 24.1882 0.9887 1.0037 0.9621 0.0569 0.0024 0.0091
 + - param set #10 has cost=-0.029551
 + -- Parameters = 14.3983 -28.6226 18.0098 13.5952 -29.5295 -41.4259 0.9991 0.9976 1.0003 0.0001 0.0042 0.0118
 + - param set #11 has cost=-0.028304
 + -- Parameters = -12.6534 -17.7122 19.4300 -27.2489 -29.9551 -30.2044 0.9972 1.0012 1.0154 0.0002 -0.0006 0.0050
 + - param set #12 has cost=-0.028394
 + -- Parameters = -6.7809 3.6417 -0.2314 -33.9209 -26.1307 28.5253 0.9904 1.0052 0.9973 0.0018 0.0188 0.0092
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0235 
 + --- dist(#3,#1) = 0.126 
 + --- dist(#4,#1) = 0.201 
 + --- dist(#5,#1) = 0.245 
 + --- dist(#6,#1) = 0.277 
 + --- dist(#7,#1) = 0.358 
 + --- dist(#8,#1) = 0.408 
 + --- dist(#9,#1) = 0.367 
 + --- dist(#10,#1) = 0.465 
 + --- dist(#11,#1) = 0.368 
 + --- dist(#12,#1) = 0.34 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=82 usiz=187
 + - retaining old weight image
 + - using 30963 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 27484 total points stored in 293 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.558905
 + -- Parameters = -0.0402 -0.5704 -1.5543 -0.6265 -0.8785 0.3809 1.0066 1.0031 0.9974 0.0070 0.0100 -0.0016
 + - param set #2 has cost=-0.559761
 + -- Parameters = -0.0575 -0.5576 -1.5460 -0.5707 -1.0270 0.3856 1.0070 1.0027 0.9941 0.0091 0.0108 -0.0043
 + - param set #3 has cost=-0.558332
 + -- Parameters = -0.0948 -0.3877 -1.5052 -0.5648 -1.6622 0.0773 1.0063 0.9998 0.9872 0.0082 0.0169 -0.0179
 + - param set #4 has cost=-0.541722
 + -- Parameters = -0.0823 -0.8928 -1.6336 -0.5696 0.7261 0.3561 1.0079 1.0010 1.0145 0.0075 0.0134 0.0288
 + - param set #5 has cost=-0.071277
 + -- Parameters = -6.8179 -10.5842 6.1235 -7.8100 -20.7807 8.2966 0.9868 1.0036 1.0118 -0.0111 0.0213 0.0007
 + - param set #6 has cost=-0.062861
 + -- Parameters = -8.2271 -13.0438 7.2365 -8.3648 -25.2517 8.9273 1.0086 0.9982 0.9910 0.0122 0.0132 -0.0069
 + - param set #7 has cost=-0.037220
 + -- Parameters = -13.6995 -19.7790 6.9465 -9.9059 -32.9657 19.7330 0.9662 0.9804 0.9832 0.0038 0.0068 0.0104
 + - param set #8 has cost=-0.032892
 + -- Parameters = 3.2486 26.8906 -14.2064 2.9705 35.9355 -1.9604 1.0010 0.9941 1.0016 -0.0005 0.0042 0.0074
 + - param set #9 has cost=-0.036168
 + -- Parameters = -14.4647 -19.7900 6.6268 -8.3266 -33.6412 22.6439 0.9790 0.9964 0.9598 0.0592 0.0132 0.0081
 + - param set #10 has cost=-0.022321
 + -- Parameters = 14.3823 -28.6414 17.9753 13.5771 -29.4922 -41.4527 0.9990 0.9973 1.0002 0.0002 0.0046 0.0162
 + - param set #11 has cost=-0.025519
 + -- Parameters = -7.3972 2.9698 -0.3421 -34.4597 -26.3299 28.0717 0.9967 1.0024 1.0009 0.0028 0.0246 0.0093
 + - param set #12 has cost=-0.025758
 + -- Parameters = -12.7457 -17.6762 19.3734 -27.4781 -29.9267 -30.2912 0.9970 1.0011 1.0155 0.0046 -0.0006 0.0050
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0119 XXX
 + --- dist(#3,#1) = 0.149 
 + --- dist(#4,#1) = 0.219 
 + --- dist(#5,#1) = 0.269 
 + --- dist(#6,#1) = 0.355 
 + --- dist(#7,#1) = 0.362 
 + --- dist(#8,#1) = 0.411 
 + --- dist(#9,#1) = 0.341 
 + --- dist(#10,#1) = 0.377 
 + --- dist(#11,#1) = 0.465 
 + - cast out 1 parameter set for being too close to best set
 + - Total coarse refinement net CPU time = 0.0 s; 3099 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=82 usiz=187
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 27284 total points stored in 291 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.553980 *
 + -- Parameters = -0.0575 -0.5576 -1.5460 -0.5707 -1.0270 0.3856 1.0070 1.0027 0.9941 0.0091 0.0108 -0.0043
 + - cost(#2)=-0.550466  
 + -- Parameters = -0.0948 -0.3877 -1.5052 -0.5648 -1.6622 0.0773 1.0063 0.9998 0.9872 0.0082 0.0169 -0.0179
 + - cost(#3)=-0.537630  
 + -- Parameters = -0.0823 -0.8928 -1.6336 -0.5696 0.7261 0.3561 1.0079 1.0010 1.0145 0.0075 0.0134 0.0288
 + - cost(#4)=-0.066680  
 + -- Parameters = -6.8179 -10.5842 6.1235 -7.8100 -20.7807 8.2966 0.9868 1.0036 1.0118 -0.0111 0.0213 0.0007
 + - cost(#5)=-0.057326  
 + -- Parameters = -8.2271 -13.0438 7.2365 -8.3648 -25.2517 8.9273 1.0086 0.9982 0.9910 0.0122 0.0132 -0.0069
 + - cost(#6)=-0.034374  
 + -- Parameters = -13.6995 -19.7790 6.9465 -9.9059 -32.9657 19.7330 0.9662 0.9804 0.9832 0.0038 0.0068 0.0104
 + - cost(#7)=-0.033788  
 + -- Parameters = -14.4647 -19.7900 6.6268 -8.3266 -33.6412 22.6439 0.9790 0.9964 0.9598 0.0592 0.0132 0.0081
 + - cost(#8)=-0.027625  
 + -- Parameters = 3.2486 26.8906 -14.2064 2.9705 35.9355 -1.9604 1.0010 0.9941 1.0016 -0.0005 0.0042 0.0074
 + - cost(#9)=-0.023699  
 + -- Parameters = -12.7457 -17.6762 19.3734 -27.4781 -29.9267 -30.2912 0.9970 1.0011 1.0155 0.0046 -0.0006 0.0050
 + - cost(#10)=-0.023663  
 + -- Parameters = -7.3972 2.9698 -0.3421 -34.4597 -26.3299 28.0717 0.9967 1.0024 1.0009 0.0028 0.0246 0.0093
 + - cost(#11)=-0.020276  
 + -- Parameters = 14.3823 -28.6414 17.9753 13.5771 -29.4922 -41.4527 0.9990 0.9973 1.0002 0.0002 0.0046 0.0162
 + - cost(#12)=-0.053173  
 + -- Parameters = -0.4787 0.1924 -6.8718 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.555155 *
 + -- Parameters = -0.0788 -0.5000 -1.5655 -0.5592 -1.0036 0.4760 1.0061 1.0031 0.9939 0.0085 0.0088 -0.0051
 + - cost(#2)=-0.552955  
 + -- Parameters = -0.0978 -0.3752 -1.5359 -0.5786 -1.5766 0.2772 1.0069 1.0011 0.9888 0.0069 0.0121 -0.0170
 + - cost(#3)=-0.547098  
 + -- Parameters = -0.0839 -0.7258 -1.5945 -0.5902 0.4681 0.3809 1.0050 1.0007 1.0056 0.0056 0.0083 0.0213
 + - cost(#4)=-0.080074  
 + -- Parameters = -5.3758 -9.2812 5.5092 -6.1318 -20.2289 6.4086 0.9952 1.0021 0.9018 0.0069 0.0358 0.0004
 + - cost(#5)=-0.068340  
 + -- Parameters = -5.7351 -10.7573 8.4626 -7.7350 -24.3473 3.8140 0.9922 1.0101 0.9852 0.0059 0.0182 -0.0048
 + - cost(#6)=-0.034804  
 + -- Parameters = -13.7215 -19.6572 7.0727 -9.9425 -33.1245 19.7209 0.9661 0.9807 0.9820 0.0031 0.0114 0.0111
 + - cost(#7)=-0.035244  
 + -- Parameters = -14.4429 -20.1216 6.6273 -9.0305 -33.9387 22.3563 0.9796 0.9920 0.9589 0.0580 0.0205 0.0078
 + - cost(#8)=-0.032188  
 + -- Parameters = 1.7864 25.7605 -13.4406 1.5246 36.2559 -1.6817 1.0210 0.9846 0.9909 -0.0042 0.0155 0.0083
 + - cost(#9)=-0.024265  
 + -- Parameters = -12.8431 -17.6976 19.4117 -27.2276 -30.1709 -30.0940 0.9896 1.0023 1.0148 0.0063 -0.0011 0.0043
 + - cost(#10)=-0.026451  
 + -- Parameters = -6.8434 2.8231 -0.4450 -35.0301 -26.0670 28.2030 1.0139 1.0016 1.0061 0.0057 0.0401 0.0078
 + - cost(#11)=-0.022801  
 + -- Parameters = 14.3883 -29.2123 17.3913 14.1139 -29.3379 -41.5530 0.9947 0.9876 1.0051 -0.0076 0.0080 0.0006
 + - cost(#12)=-0.554447  
 + -- Parameters = -0.0117 -0.5613 -1.5770 -0.5500 -0.8215 0.7602 1.0069 1.0038 0.9974 0.0098 0.0037 -0.0019
 + - case #1 is now the best
 + - Initial  cost = -0.555155
 + - Initial fine Parameters = -0.0788 -0.5000 -1.5655 -0.5592 -1.0036 0.4760 1.0061 1.0031 0.9939 0.0085 0.0088 -0.0051
 + - Finalish cost = -0.555181 ; 87 funcs
 + - Final    cost = -0.555184 ; 118 funcs
 + Final fine fit Parameters:
       x-shift=-0.0691   y-shift=-0.5030   z-shift=-1.5670
       z-angle=-0.5544   x-angle=-0.9970   y-angle= 0.4895
       x-scale= 1.0058   y-scale= 1.0031   z-scale= 0.9939
     y/x-shear= 0.0085 z/x-shear= 0.0085 z/y-shear=-0.0051
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.0691 -0.5030 -1.5670 -0.5544 -0.9970 0.4895 1.0058 1.0031 0.9939 0.0085 0.0085 -0.0051
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.5
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 2.900026 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0191 -1.0021 0.0328 242.2051 0.0162 0.0388 0.9933 94.4103 -1.0057 -0.0099 0.0086 202.5183
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.7 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3235.840100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 88.1357 45.947   ITER = 12/137
88.1357

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 104ms]
lev=0 0..171 0..213 0..166: [first cost=-0.73520] ... done [cost:-0.73520==>-0.80031]
lev=1 patch=129x161x125 [clock= 12m 32s 21ms]........:[cost=-0.82632]:........ done [cost:-0.80031==>-0.83250 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 17m 0s 403ms]......................... done [cost:-0.83250==>-0.91050 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 20m 28s 176ms]................ done [cost:-0.91050==>-0.96214 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 23m 6s 403ms]........... done [cost:-0.96214==>-1.01396 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 25m 9s 250ms]........................... done [cost:-1.01396==>-1.08947 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 27m 19s 531ms].................... done [cost:-1.08947==>-1.14366 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 29m 37s 656ms]............................ done [cost:-1.14366==>-1.22107 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 32m 5s 621ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0093/tb0093.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 6.2 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0093.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 2.900026 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0093.r01.tshift+orig.BRIK is 2.900026 degrees from plumb.
++ Reading input dataset ./pb01.tb0093.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 32706 voxels
 + 4949 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.067  pitch=-0.000  yaw=-0.340  dS=-0.544  dL=-0.463  dP=-0.208
++ Mean: roll=-0.028  pitch=+0.271  yaw=-0.103  dS=-0.122  dL=-0.214  dP=-0.014
++ Max : roll=+0.037  pitch=+0.919  yaw=+0.017  dS=+0.050  dL=+0.043  dP=+0.072
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.36(0.36) 0.24(0.11) 0.28(0.04) 0.21(0.10) 0.19(0.08) 0.19(0.05) 0.17(0.12) 0.16(0.08) 0.17(0.06) 0.17(0.02) 0.14(0.05) 0.13(0.04) 0.15(0.05) 0.15(0.04) 0.10(0.07) 0.10(0.03) 0.15(0.16) 0.11(0.06) 0.17(0.08) 0.11(0.08) 0.14(0.04) 0.11(0.06) 0.12(0.03) 0.11(0.01) 0.11(0.01) 0.15(0.05) 0.15(0.02) 0.10(0.07) 0.19(0.11) 0.14(0.06) 0.17(0.04) 0.18(0.04) 0.15(0.07) 0.17(0.04) 0.13(0.05) 0.15(0.02) 0.23(0.10) 0.23(0.04) 0.30(0.09) 0.27(0.05) 0.26(0.05) 0.29(0.06) 0.28(0.01) 0.28(0.03) 0.30(0.03) 0.28(0.03) 0.33(0.06) 0.36(0.05) 0.32(0.07) 0.40(0.10) 0.32(0.11) 0.35(0.04) 0.34(0.03) 0.34(0.05) 0.37(0.04) 0.40(0.06) 0.40(0.05) 0.43(0.07) 0.37(0.06) 0.45(0.09) 0.41(0.06) 0.43(0.05) 0.43(0.03) 0.37(0.08) 0.42(0.08) 0.48(0.08) 0.48(0.05) 0.49(0.05) 0.52(0.06) 0.49(0.06) 0.51(0.03) 0.51(0.05) 0.47(0.07) 0.53(0.07) 0.51(0.05) 0.50(0.03) 0.51(0.03) 0.48(0.05) 0.51(0.07) 0.53(0.05) 0.55(0.03) 0.58(0.06) 0.61(0.04) 0.61(0.04) 0.59(0.04) 0.60(0.03) 0.61(0.06) 0.59(0.05) 0.62(0.04) 0.58(0.06) 0.63(0.06) 0.67(0.05) 0.69(0.03) 0.67(0.07) 0.75(0.10) 0.67(0.10) 0.77(0.13) 0.65(0.13) 0.73(0.09) 0.74(0.02) 0.71(0.05) 0.77(0.07) 0.76(0.03) 0.79(0.06) 0.86(0.10) 0.85(0.08) 0.92(0.09) 0.91(0.04) 0.93(0.05) 0.93(0.02) 0.73(0.28) 0.96(0.35) 1.09(0.14) 1.11(0.11) 1.13(0.04) 1.11(0.04) 1.18(0.09) 1.12(0.08) 1.17(0.06) 1.23(0.07) 1.20(0.07) 1.24(0.05) 1.29(0.06) 1.27(0.05) 1.26(0.02) 1.27(0.03) 1.31(0.05) 1.29(0.04) 1.32(0.05) 1.33(0.03) 1.36(0.05) 1.43(0.08) 1.45(0.03) 1.38(0.09) 1.44(0.09) 1.34(0.12) 1.45(0.15) 2.10(0.76) 1.99(0.20) 2.04(0.10) 1.77(0.27) 1.61(0.16) 1.56(0.08) 1.56(0.04) 1.48(0.09) 1.48(0.05) 1.46(0.05) 1.43(0.09) 1.57(0.18)
++ Max displacement in automask = 2.10 (mm) at sub-brick 138
++ Max delta displ  in automask = 0.76 (mm) at sub-brick 138
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0093.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0093.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0093.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0093.r01.tshift+orig.BRIK is 2.900026 degrees from plumb.
++ Source dataset: ./pb01.tb0093.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 14.9
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 2.900026 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0093.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 2.900026 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0093.r02.tshift+orig.BRIK is 2.900026 degrees from plumb.
++ Reading input dataset ./pb01.tb0093.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 32653 voxels
 + 4942 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.230  pitch=+0.403  yaw=-0.082  dS=-0.520  dL=-0.018  dP=-0.435
++ Mean: roll=+0.309  pitch=+0.684  yaw=+0.003  dS=-0.373  dL=+0.041  dP=-0.313
++ Max : roll=+0.375  pitch=+0.960  yaw=+0.045  dS=-0.133  dL=+0.162  dP=-0.211
++ Max displacements (mm) for each sub-brick:
 1.08(0.00) 1.20(0.15) 1.14(0.08) 1.24(0.10) 1.10(0.16) 1.03(0.09) 1.08(0.11) 1.04(0.15) 1.10(0.12) 1.06(0.05) 1.08(0.07) 1.05(0.03) 1.07(0.03) 1.08(0.02) 1.11(0.04) 1.09(0.21) 1.12(0.30) 1.08(0.05) 1.14(0.12) 1.21(0.11) 1.14(0.10) 1.11(0.08) 1.12(0.12) 1.14(0.07) 1.19(0.09) 1.16(0.04) 1.13(0.04) 1.25(0.13) 1.22(0.06) 1.20(0.03) 1.23(0.03) 1.24(0.03) 1.30(0.07) 1.28(0.06) 1.19(0.13) 1.30(0.12) 1.27(0.04) 1.28(0.03) 1.31(0.05) 1.33(0.03) 1.32(0.05) 1.35(0.04) 1.35(0.04) 1.36(0.04) 1.38(0.03) 1.36(0.04) 1.39(0.03) 1.39(0.03) 1.41(0.04) 1.40(0.02) 1.38(0.03) 1.41(0.04) 1.42(0.03) 1.42(0.04) 1.45(0.05) 1.44(0.04) 1.42(0.05) 1.44(0.02) 1.42(0.03) 1.40(0.04) 1.45(0.06) 1.37(0.11) 1.42(0.07) 1.45(0.05) 1.48(0.06) 1.49(0.02) 1.48(0.04) 1.49(0.06) 1.51(0.04) 1.48(0.06) 1.46(0.04) 1.47(0.05) 1.79(0.35) 1.84(0.08) 1.84(0.06) 1.81(0.03) 1.84(0.04) 1.83(0.05) 1.77(0.08) 1.80(0.04) 1.75(0.06) 1.76(0.02) 1.79(0.04) 1.77(0.02) 1.78(0.04) 1.79(0.05) 1.76(0.05) 1.81(0.06) 1.78(0.03) 1.80(0.03) 1.79(0.02) 1.81(0.03) 1.89(0.08) 1.84(0.08) 1.90(0.08) 1.85(0.05) 1.87(0.03) 1.89(0.04) 1.85(0.06) 1.89(0.05) 1.87(0.05) 1.87(0.02) 1.83(0.06) 1.78(0.07) 1.85(0.07) 1.81(0.05) 1.84(0.05) 1.89(0.07) 1.82(0.08) 1.88(0.06) 1.82(0.06) 1.87(0.05) 1.92(0.07) 1.89(0.07) 1.97(0.09) 1.89(0.08) 1.94(0.06) 1.96(0.08) 1.94(0.05) 2.00(0.06) 2.01(0.04) 2.00(0.04) 2.05(0.06) 1.97(0.09) 2.02(0.05) 2.01(0.04) 1.98(0.05) 2.03(0.06) 2.00(0.05) 2.00(0.06) 2.07(0.11) 2.05(0.04) 2.12(0.13) 1.98(0.16) 2.02(0.07) 2.10(0.09) 2.12(0.02) 2.19(0.07) 2.12(0.07) 2.11(0.03) 2.19(0.09) 2.09(0.12) 2.06(0.06) 1.89(0.19) 1.92(0.11) 1.92(0.09) 1.96(0.19) 2.03(0.07) 2.07(0.10) 2.03(0.07)
++ Max displacement in automask = 2.19 (mm) at sub-brick 140
++ Max delta displ  in automask = 0.35 (mm) at sub-brick 72
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0093.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0093.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0093.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0093.r02.tshift+orig.BRIK is 2.900026 degrees from plumb.
++ Source dataset: ./pb01.tb0093.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 2.900026 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.2
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0093.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 2.900026 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0093.r03.tshift+orig.BRIK is 2.900026 degrees from plumb.
++ Reading input dataset ./pb01.tb0093.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 32632 voxels
 + 4942 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.279  pitch=+0.392  yaw=-0.185  dS=-0.787  dL=-0.021  dP=-0.527
++ Mean: roll=+0.304  pitch=+0.648  yaw=-0.084  dS=-0.521  dL=+0.080  dP=-0.445
++ Max : roll=+0.373  pitch=+0.945  yaw=+0.002  dS=-0.262  dL=+0.230  dP=-0.353
++ Max displacements (mm) for each sub-brick:
 1.31(0.00) 1.49(0.20) 1.44(0.09) 1.47(0.07) 1.36(0.16) 1.37(0.03) 1.31(0.07) 1.39(0.10) 1.35(0.06) 1.30(0.07) 1.34(0.06) 1.35(0.06) 1.37(0.05) 1.32(0.06) 1.29(0.06) 1.32(0.06) 1.26(0.08) 1.30(0.05) 1.26(0.08) 1.33(0.09) 1.36(0.04) 1.35(0.05) 1.35(0.04) 1.30(0.06) 1.28(0.07) 1.32(0.06) 1.31(0.02) 1.33(0.04) 1.31(0.03) 1.34(0.04) 1.35(0.03) 1.36(0.03) 1.33(0.03) 1.34(0.03) 1.36(0.04) 1.30(0.06) 1.31(0.01) 1.28(0.04) 1.29(0.03) 1.35(0.07) 1.31(0.04) 1.31(0.03) 1.36(0.08) 1.28(0.11) 1.33(0.06) 1.30(0.05) 1.32(0.04) 1.35(0.06) 1.32(0.03) 1.37(0.05) 1.37(0.05) 1.30(0.11) 1.34(0.06) 1.30(0.04) 1.34(0.05) 1.37(0.06) 1.41(0.06) 1.38(0.07) 1.38(0.01) 1.37(0.04) 1.36(0.03) 1.38(0.03) 1.70(0.37) 1.72(0.10) 1.79(0.08) 1.79(0.07) 1.77(0.06) 1.80(0.05) 1.79(0.02) 1.77(0.05) 1.47(0.37) 1.75(0.43) 1.73(0.09) 1.75(0.09) 1.77(0.04) 1.73(0.06) 1.73(0.02) 1.74(0.03) 1.78(0.04) 1.79(0.04) 1.79(0.03) 1.79(0.02) 1.78(0.04) 1.79(0.02) 1.79(0.02) 1.84(0.06) 1.81(0.04) 1.88(0.08) 1.83(0.06) 1.85(0.02) 1.84(0.02) 1.84(0.04) 1.87(0.04) 1.92(0.07) 1.93(0.02) 1.90(0.04) 1.95(0.06) 1.93(0.03) 1.96(0.04) 1.98(0.03) 1.97(0.03) 2.01(0.05) 2.01(0.03) 2.00(0.03) 2.01(0.04) 2.02(0.03) 2.03(0.03) 2.06(0.04) 2.08(0.04) 2.08(0.06) 2.10(0.04) 2.14(0.08) 2.13(0.06) 2.13(0.03) 2.16(0.06) 2.12(0.05) 2.15(0.04) 2.20(0.06) 2.16(0.08) 2.22(0.06) 2.24(0.03) 2.26(0.03) 2.28(0.02) 2.19(0.09) 2.19(0.04) 2.27(0.09) 2.31(0.06) 2.27(0.07) 2.33(0.08) 2.30(0.04) 2.34(0.05) 2.36(0.04) 2.28(0.11) 2.35(0.08) 2.34(0.03) 2.32(0.06) 2.34(0.03) 2.32(0.04) 2.31(0.05) 2.37(0.07) 2.37(0.05) 2.19(0.25) 2.22(0.31) 2.32(0.12) 2.46(0.16) 2.46(0.04) 2.39(0.11) 2.33(0.08) 2.30(0.06) 2.33(0.06)
++ Max displacement in automask = 2.46 (mm) at sub-brick 145
++ Max delta displ  in automask = 0.43 (mm) at sub-brick 71
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0093.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0093.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0093.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0093.r03.tshift+orig.BRIK is 2.900026 degrees from plumb.
++ Source dataset: ./pb01.tb0093.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 2.900026 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0093.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0093.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0093.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0093.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0093.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0093.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 2.900026 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0093
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0093+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0093+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1423418 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=1
++ Zero-pad: zbot=0 ztop=1
++ Computing -autobox
++ 276026 voxels [62.9%] in weight mask
++ Number of points for matching = 129732
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.153184
   sp   = 0.31358
   mi   = -0.535751
   crM  = 0.0448875
   nmi  = 0.847813
   je   = 2.98461
   hel  = -0.108721
   crA  = 0.213259
   crU  = 0.237589
   lss  = 0.846816
   lpc  = 0.0283346
   lpa  = 0.971665
   lpc+ = 0.18083
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.5
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0093+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0093+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 24.9 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0093.r01.blur pb02.tb0093.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0093.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0093.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0093.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0093.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0093.r02.blur pb02.tb0093.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0093.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0093.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0093.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0093.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0093.r03.blur pb02.tb0093.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0093.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0093.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0093.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0093.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0093.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0093.r01.blur+orig
++ Forming automask
 + Fixed clip level = 374.862488
 + Used gradual clip level = 333.297424 .. 434.520477
 + Number voxels above clip level = 55877
 + Clustering voxels ...
 + Largest cluster has 55575 voxels
 + Clustering voxels ...
 + Largest cluster has 55567 voxels
 + Filled    47 voxels in small holes; now have 55614 voxels
 + Clustering voxels ...
 + Largest cluster has 55614 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 370661 voxels
 + Mask now has 55614 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 362535 voxels
++ 63740 voxels in the mask [out of 426275: 14.95%]
++ first  16 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last    9 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0093.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0093.r02.blur+orig
++ Forming automask
 + Fixed clip level = 375.410492
 + Used gradual clip level = 333.756500 .. 435.434875
 + Number voxels above clip level = 55954
 + Clustering voxels ...
 + Largest cluster has 55632 voxels
 + Clustering voxels ...
 + Largest cluster has 55621 voxels
 + Filled    44 voxels in small holes; now have 55665 voxels
 + Clustering voxels ...
 + Largest cluster has 55665 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 370610 voxels
 + Mask now has 55665 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 362447 voxels
++ 63828 voxels in the mask [out of 426275: 14.97%]
++ first  16 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last    9 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0093.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0093.r03.blur+orig
++ Forming automask
 + Fixed clip level = 376.188690
 + Used gradual clip level = 334.569672 .. 436.571716
 + Number voxels above clip level = 56023
 + Clustering voxels ...
 + Largest cluster has 55709 voxels
 + Clustering voxels ...
 + Largest cluster has 55696 voxels
 + Filled    40 voxels in small holes; now have 55736 voxels
 + Clustering voxels ...
 + Largest cluster has 55736 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 370539 voxels
 + Mask now has 55736 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 362340 voxels
++ 63935 voxels in the mask [out of 426275: 15.00%]
++ first  16 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last    9 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0093
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 63999 survived, 362276 were zero
++ writing result full_mask.tb0093...
3dresample -master full_mask.tb0093+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0093
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 55997 survived, 370278 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0093...
3dABoverlap -no_automask full_mask.tb0093+orig mask_anat.tb0093+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0093+orig.BRIK  B=./mask_anat.tb0093+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
63999        55997        66426        53570        10429        2427         16.2956      4.3342     0.8344     0.9833     0.8914
3ddot -dodice full_mask.tb0093+orig mask_anat.tb0093+orig
tee out.mask_ae_dice.txt
0.892863	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0093
total number of censored TRs (simple form) = 2
1deval -a motion_tb0093_censor.1D -b outcount_tb0093_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0093_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0093.r01.blur+orig.HEAD pb03.tb0093.r02.blur+orig.HEAD pb03.tb0093.r03.blur+orig.HEAD -censor censor_tb0093_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0093 -errts errts.tb0093 -bucket stats.tb0093
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0093.r01.blur+orig.HEAD pb03.tb0093.r02.blur+orig.HEAD pb03.tb0093.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 55660 voxels (out of 426275 = 13.1%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 448 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0093.r01.blur+orig.HEAD pb03.tb0093.r02.blur+orig.HEAD pb03.tb0093.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0093_REML -Rvar stats.tb0093_REMLvar \
 -Rfitts fitts.tb0093_REML -Rerrts errts.tb0093_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (448x24):  4.85436  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (448x6):  1.03514  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (448x18):  4.40617  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (448x6):  3.19311  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (448x12):  1.02014  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.29558e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.37 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.548
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.562
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.576
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.591
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.605
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.619
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.633
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.647
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.661
++ Job #0: processing voxels 0 to 42626; elapsed time=7.671
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #1 finished; elapsed time=19.773
9.
++ Job #0 waiting for children to finish; elapsed time=19.799
++ Job #3 finished; elapsed time=19.805
++ Job #4 finished; elapsed time=19.813
++ Job #2 finished; elapsed time=19.858
++ Job #7 finished; elapsed time=19.871
++ Job #8 finished; elapsed time=19.881
++ Job #6 finished; elapsed time=19.890
++ Job #9 finished; elapsed time=19.903
++ Job #5 finished; elapsed time=20.098
++ Job #0 now finishing up; elapsed time=20.117
++ Smallest FDR q [0 Full_Fstat] = 2.61837e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 4.0703e-06
++ Smallest FDR q [3 uns1_Fstat] = 4.06971e-06
++ Smallest FDR q [5 uns2#0_Tstat] = 2.95341e-13
++ Smallest FDR q [6 uns2_Fstat] = 2.95341e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 1.15867e-12
++ Smallest FDR q [9 uns3_Fstat] = 1.15881e-12
++ Smallest FDR q [11 str1#0_Tstat] = 8.9383e-08
++ Smallest FDR q [12 str1_Fstat] = 8.93884e-08
++ Smallest FDR q [14 str2#0_Tstat] = 3.38137e-13
++ Smallest FDR q [15 str2_Fstat] = 3.38172e-13
++ Smallest FDR q [17 str3#0_Tstat] = 1.44519e-13
++ Smallest FDR q [18 str3_Fstat] = 1.44503e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.54684e-13
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.54684e-13
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.33321e-13
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.33321e-13
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 2.47498e-06
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 2.47451e-06
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 4.08174e-05
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 4.08223e-05
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 0.000138698
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 0.000138696
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 2.87415e-11
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 2.87455e-11
++ Wrote bucket dataset into ./stats.tb0093+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0093+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0093+orig.BRIK
++ Program finished; elapsed time=38.152
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.733       0.796  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.726       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.726       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.475       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.468       0.543  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0093.r01.blur+orig.HEAD pb03.tb0093.r02.blur+orig.HEAD pb03.tb0093.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0093_REML -Rvar stats.tb0093_REMLvar -Rfitts fitts.tb0093_REML -Rerrts errts.tb0093_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 55660 voxels (out of 426275 = 13.1%)
++ -----  matrix condition (448x24):  4.85436  ++ VERY GOOD ++
 + masked off 244780 voxels for being all zero; 181495 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 327 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=7.55
 + X matrix: 46.633% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=448 cols=24; 109*1 cases; total CPU=0.00 Elapsed=7.58
 +  average case bandwidth = 12.49
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=54.07
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=104.15
++ Output dataset ./stats.tb0093_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0093_REML+orig.BRIK
++ Output dataset ./errts.tb0093_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0093_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 1.62498e-05
++ Smallest FDR q [2 uns1#0_Tstat] = 0.00565078
++ Smallest FDR q [3 uns1_Fstat] = 0.00565078
++ Smallest FDR q [5 uns2#0_Tstat] = 3.52344e-05
++ Smallest FDR q [6 uns2_Fstat] = 3.52344e-05
++ Smallest FDR q [8 uns3#0_Tstat] = 0.00178961
++ Smallest FDR q [9 uns3_Fstat] = 0.00178961
++ Smallest FDR q [11 str1#0_Tstat] = 0.0416605
++ Smallest FDR q [12 str1_Fstat] = 0.0416605
++ Smallest FDR q [14 str2#0_Tstat] = 4.57618e-05
++ Smallest FDR q [15 str2_Fstat] = 4.57617e-05
++ Smallest FDR q [17 str3#0_Tstat] = 0.00118136
++ Smallest FDR q [18 str3_Fstat] = 0.00118136
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.84814e-07
++ Smallest FDR q [21 unstructured_Fstat] = 1.84815e-07
++ Smallest FDR q [23 structured#0_Tstat] = 1.06191e-05
++ Smallest FDR q [24 structured_Fstat] = 1.06191e-05
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.954305 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.954305 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.99985 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.99985 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999894 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999894 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.453433 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.453433 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0093_REML+orig
++ Output dataset ./stats.tb0093_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=121.78
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0093 pb03.tb0093.r01.blur+orig.HEAD pb03.tb0093.r02.blur+orig.HEAD pb03.tb0093.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.8 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0093+orig[0..136,139..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0093_REML+orig[0..136,139..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0093+orig -expr c*a/b -prefix TSNR.tb0093
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0093_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0093+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 63999 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.219453
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0093.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..136,139..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0093+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0093+orig[0..136,139..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63999
[7m*+ WARNING:[0m removed 251 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.98 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0093+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0093+orig[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63999
[7m*+ WARNING:[0m removed 251 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.74 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0093+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0093+orig[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63999
[7m*+ WARNING:[0m removed 251 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.50 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 10.4836 9.88924 10.388 10.2503
average errts FWHM blurs: 10.4836 9.88924 10.388 10.2503
echo 10.4836 9.88924 10.388 10.2503   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.449971 7.28224 13.7525 17.8396
average errts ACF blurs: 0.449971 7.28224 13.7525 17.8396
echo 0.449971 7.28224 13.7525 17.8396   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..136,139..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0093+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0093_REML+orig[0..136,139..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63999
[7m*+ WARNING:[0m removed 251 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.62 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0093+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0093_REML+orig[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63999
[7m*+ WARNING:[0m removed 251 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.51 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0093+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0093_REML+orig[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63999
[7m*+ WARNING:[0m removed 251 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.31 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 10.3986 9.7973 10.305 10.1635
average err_reml FWHM blurs: 10.3986 9.7973 10.305 10.1635
echo 10.3986 9.7973 10.305 10.1635   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.450113 7.20199 13.7374 17.699
average err_reml ACF blurs: 0.450113 7.20199 13.7374 17.699
echo 0.450113 7.20199 13.7374 17.699   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0093.1D
3dClustSim -both -mask full_mask.tb0093+orig -acf 0.450113 7.20199 13.7374 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 63999 voxels in mask (15.01% of total)
++ Kernel function radius = 45.53 mm
++ ACF(0.45,7.20,13.74) => FWHM=17.71 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 500.3 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0093+orig stats.tb0093_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0093+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0093_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0093 -dsets pb00.tb0093.r01.tcat+orig.HEAD pb00.tb0093.r02.tcat+orig.HEAD pb00.tb0093.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0093.r01.blur+orig.BRIK rm.pb03.tb0093.r01.blur+orig.HEAD rm.pb03.tb0093.r02.blur+orig.BRIK rm.pb03.tb0093.r02.blur+orig.HEAD rm.pb03.tb0093.r03.blur+orig.BRIK rm.pb03.tb0093.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0093.txt
./@ss_review_basic

subject ID                : tb0093
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0093+orig.HEAD
final stats dset          : stats.tb0093_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 1
average motion (per TR)   : 0.0456521
average censored motion   : 0.0447274
max motion displacement   : 1.37091
max censored displacement : 1.37091
outlier limit             : 0.1
average outlier frac (TR) : 0.00211842
num TRs above out limit   : 0

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 148 150 150
num TRs per run (censored): 2 0 0
fraction censored per run : 0.0133333 0 0
TRs total (uncensored)    : 450
TRs total                 : 448
degrees of freedom used   : 24
degrees of freedom left   : 424

TRs censored              : 2
censor fraction           : 0.004444
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 2 0 0 1 0 0
fraction TRs censored     : 0.029 0.000 0.000 0.009 0.000 0.000
ave mot per sresp (orig)  : 0.053504 0.050090 0.044609 0.040933 0.039474 0.039551
ave mot per sresp (cens)  : 0.047507 0.050090 0.044609 0.040530 0.039474 0.039551

TSNR average              : 279.78
global correlation (GCOR) : 0.219453
anat/EPI mask Dice coef   : 0.892863
maximum F-stat (masked)   : 9.36953
blur estimates (ACF)      : 0.450113 7.20199 13.7374
blur estimates (FWHM)     : 10.3986 9.7973 10.305


cd ..
echo execution finished: `date`
date
execution finished: Tue Aug  8 19:14:02 EDT 2017
