echo auto-generated by afni_proc.py, Wed Aug  9 00:22:15 2017
auto-generated by afni_proc.py, Wed Aug  9 00:22:15 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 00:22:15 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0275
endif
set output_dir = tb0275.srtt
if ( -d tb0275.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0275.srtt
mkdir tb0275.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0275.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0275.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0275.srtt/pb00.tb0275.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0275.srtt/pb00.tb0275.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0275.srtt/pb00.tb0275.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0275.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0275.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0275.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0275.r01.tcat+orig.BRIK is 8.499994 degrees from plumb.
++ 32969 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0275.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0275.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0275.r02.tcat+orig.BRIK is 8.499994 degrees from plumb.
++ 32905 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0275.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0275.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0275.r03.tcat+orig.BRIK is 8.499994 degrees from plumb.
++ 32714 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0275.r01.tshift -tpattern alt+z2 pb00.tb0275.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0275.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0275.r01.tcat+orig.BRIK is 8.499994 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0275.r02.tshift -tpattern alt+z2 pb00.tb0275.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0275.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0275.r02.tcat+orig.BRIK is 8.499994 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0275.r03.tshift -tpattern alt+z2 pb00.tb0275.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0275.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0275.r03.tcat+orig.BRIK is 8.499994 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0275.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 8.499994 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 375.461700
 + Used gradual clip level = 343.027802 .. 425.042114
 + Number voxels above clip level = 34083
 + Clustering voxels ...
 + Largest cluster has 33533 voxels
 + Clustering voxels ...
 + Largest cluster has 32510 voxels
 + Filled   363 voxels in small holes; now have 32873 voxels
 + Filled     2 voxels in large holes; now have 32875 voxels
 + Clustering voxels ...
 + Largest cluster has 32873 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 98188 voxels
 + Mask now has 32884 voxels
++ 32884 voxels in the mask [out of 131072: 25.09%]
++ first  13 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   4 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 941.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/941.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 8.499994 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 8.499994 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1743751 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 32884 voxels [20.1%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 32884
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.925 28.411 19.461 (index)
 + source center of mass = 87.453 161.997 176.810 (index)
 + source-target CM = 1.295 2.096 -2.879 (xyz)
 + center of mass shifts = 1.295 2.096 -2.879
++ shift param auto-range: -68.2..70.8 -67.4..71.6 -53.0..47.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -8.705215 .. 11.294785
 + Range param#2 [y-shift] = -7.903915 .. 12.096085
 + Range param#3 [z-shift] = -12.878525 .. 7.121475
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -38.705215 .. 41.294785
 + Range param#2 [y-shift] = -37.903915 .. 42.096085
 + Range param#3 [z-shift] = -42.878525 .. 37.121475
 + 12 free parameters
++ Normalized convergence radius = 0.000441
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1743751 [out of 15006464] voxels
 + base mask has 44826 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=87 usiz=183.5
 + - copying weight image
 + - using 32884 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 28682 total points stored in 267 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--.+*[#10=-0.0502456] *.o.oo-+.-...o*[#1180=-0.0510866] *.$..
 + - best 45 costs found:
    0 v=-0.051087: -12.04 -24.57  10.45 -15.00 -30.00  15.00  [grid]
    1 v=-0.050246: -12.04  15.43  10.45 -15.00  15.00  15.00  [grid]
    2 v=-0.049362: -12.04 -11.24  10.45 -15.00 -30.00  15.00  [grid]
    3 v=-0.047013: -12.04 -11.24  10.45 -15.00 -15.00  15.00  [grid]
    4 v=-0.046647:   5.37   8.32 -10.67  -4.32  22.85  18.95  [rand]
    5 v=-0.044148:  -8.53 -22.66   8.50  -3.10 -34.36   2.55  [rand]
    6 v=-0.042067:  -2.78   8.32 -10.67   4.32  22.85 -18.95  [rand]
    7 v=-0.041727:  -8.53 -22.66   8.50  -3.10 -34.36  -2.55  [rand]
    8 v=-0.040033: -12.73 -13.62  11.79 -24.25 -37.55   4.41  [rand]
    9 v=-0.039748: -15.56 -16.49  11.58 -19.57 -37.09  16.59  [rand]
   10 v=-0.038662: -25.37 -24.57  10.45 -15.00 -30.00  30.00  [grid]
   11 v=-0.036257: -12.04 -11.24  10.45 -15.00 -15.00 -15.00  [grid]
   12 v=-0.034646: -12.04 -24.57  10.45 -15.00 -30.00 -15.00  [grid]
   13 v=-0.032714:  -7.35 -18.34  14.59 -25.20 -18.50 -13.54  [rand]
   14 v=-0.032343: -12.91  11.55   1.96 -15.99  13.53  29.93  [rand]
   15 v=-0.031752: -12.04 -24.57  10.45 -15.00 -15.00  15.00  [grid]
   16 v=-0.031065:  14.63 -24.57  10.45  15.00 -30.00 -15.00  [grid]
   17 v=-0.031001: -12.04 -11.24  10.45 -15.00 -30.00  30.00  [grid]
   18 v=-0.030946: -12.04  28.76  10.45 -15.00  30.00  15.00  [grid]
   19 v=-0.030672: -12.04 -24.57  10.45 -30.00 -30.00  15.00  [grid]
   20 v=-0.030373: -12.04 -24.57  23.79 -15.00 -15.00 -15.00  [grid]
   21 v=-0.030246: -25.37  15.43  23.79  15.00  30.00  30.00  [grid]
   22 v=-0.030070: -14.85  -7.37  21.47 -20.99 -15.73 -16.09  [rand]
   23 v=-0.029815: -18.20  18.77  -5.48 -30.54  19.59  20.03  [rand]
   24 v=-0.029775: -12.04  15.43  10.45 -30.00  15.00  30.00  [grid]
   25 v=-0.029545: -10.30   6.65   1.02 -24.53 -29.49 -26.10  [rand]
   26 v=-0.029417: -12.04 -24.57  23.79 -15.00 -30.00 -15.00  [grid]
   27 v=-0.029253: -12.13 -20.59  28.46  -4.37 -20.12  15.12  [rand]
   28 v=-0.029127:  -2.78  -4.13   4.92  -4.32 -22.85 -18.95  [rand]
   29 v=-0.028981:  11.12  26.85   8.50   3.10 -34.36  -2.55  [rand]
   30 v=-0.028083:  -2.78  -4.13   4.92   4.32 -22.85  18.95  [rand]
   31 v=-0.027703: -12.04  28.76 -16.21 -15.00 -30.00  30.00  [grid]
   32 v=-0.027611: -14.85  -7.37  21.47 -20.99 -15.73  16.09  [rand]
   33 v=-0.027590: -12.04 -24.57  10.45 -30.00 -30.00 -30.00  [grid]
   34 v=-0.027497: -18.20  18.77  -0.28 -30.54  19.59  20.03  [rand]
   35 v=-0.027309: -10.30   6.65   1.02 -24.53 -29.49  26.10  [rand]
   36 v=-0.027295: -25.37 -11.24  10.45 -15.00 -15.00  30.00  [grid]
   37 v=-0.027193: -12.91  11.55   1.96 -15.99 -13.53  29.93  [rand]
   38 v=-0.027169:  -8.53 -22.66   8.50   3.10 -34.36   2.55  [rand]
   39 v=-0.026930: -12.04 -11.24  10.45 -30.00 -30.00  15.00  [grid]
   40 v=-0.026708: -14.69 -17.40  -8.60 -20.53   3.14  10.08  [rand]
   41 v=-0.026685: -12.04 -11.24  10.45 -30.00 -30.00  30.00  [grid]
   42 v=-0.026549: -12.04  28.76 -16.21 -15.00 -30.00  15.00  [grid]
   43 v=-0.026522: -12.73  17.82 -17.55 -24.25  37.55   4.41  [rand]
   44 v=-0.026494: -12.04 -11.24  23.79 -15.00 -15.00 -15.00  [grid]
*[#8005=-0.0627367] *[#8011=-0.0665204] *[#8013=-0.0666119] *[#8014=-0.0687037] *[#8017=-0.0705269] *[#8018=-0.0716998] *[#8020=-0.0724927] *[#8022=-0.0741315] *[#8023=-0.0748141] *[#8028=-0.0754134] *[#8112=-0.0762271] *[#8115=-0.0797537] *[#8117=-0.0958712] *[#8119=-0.09653] *[#8120=-0.0968711] *[#8123=-0.100148] *[#8125=-0.102827] *[#8128=-0.105454] *[#8470=-0.107603] *[#8471=-0.107767] *[#8473=-0.109171] *[#8474=-0.10947] *[#8475=-0.110881] *[#8476=-0.112324] *[#8477=-0.114903] *[#8478=-0.116236] *[#8480=-0.116652] *[#8482=-0.11976] *[#8483=-0.120388] *[#8486=-0.122862] *[#8487=-0.125213]  + - costs of the above after a little optimization:
    0 v=-0.075413: -13.88 -23.10  12.66  -7.62 -29.69  14.70  [grid]
    1 v=-0.061889:  -7.70  15.81  10.98 -14.86  15.05  15.51  [grid]
    2 v=-0.070530: -11.27  -8.23  15.29 -10.33 -32.57  17.21  [grid]
    3 v=-0.105454:  -8.88  -9.30   8.33  -6.75 -14.19   9.90  [grid]
    4 v=-0.056167:   5.81   6.91 -10.71  -4.79  22.04  18.14  [rand]
    5 v=-0.083493:  -4.85 -23.98   6.03  -6.83 -29.27   2.79  [rand]
    6 v=-0.061277:  -4.13  12.49  -9.22   3.01  21.59 -19.62  [rand]
    7 v=-0.079646:  -3.89 -24.89   7.31  -5.55 -31.91   2.13  [rand]
    8 v=-0.060681: -11.13 -13.80  15.08 -21.33 -37.54   7.11  [rand]
    9 v=-0.074983:  -9.01 -14.53  17.92 -13.95 -39.96   7.14  [rand]
   10 v=-0.045185: -24.33 -23.67  10.13 -11.61 -29.68  29.87  [grid]
  *11 v=-0.125213:  -2.26  -4.80  11.64  -4.37 -12.73  -1.89  [grid]
   12 v=-0.074366:  -5.41 -23.05  10.03 -13.38 -31.43 -13.45  [grid]
   13 v=-0.056016:  -2.54 -17.76  16.40 -24.93 -18.44 -14.33  [rand]
   14 v=-0.071039: -10.03  17.35  -1.16 -14.77  11.61  31.06  [rand]
   15 v=-0.085450: -11.31 -21.01  15.44  -7.00 -29.11  11.10  [grid]
   16 v=-0.062883:   6.03 -23.36  10.82  10.65 -32.96   0.02  [grid]
   17 v=-0.070128: -10.72  -8.39  15.14  -6.01 -32.64  20.40  [grid]
   18 v=-0.044135: -11.28  28.24   8.45  -9.10  28.78  13.34  [grid]
   19 v=-0.071030: -12.32 -25.19   6.04 -25.21 -32.19   4.47  [grid]
   20 v=-0.043746:  -7.13 -24.50  20.67 -17.18 -15.72 -15.13  [grid]
   21 v=-0.034802: -24.95  14.98  23.89  16.17  31.09  29.12  [grid]
   22 v=-0.043277: -10.58  -6.68  17.15 -15.40 -14.64 -17.61  [rand]
   23 v=-0.046200: -17.20  18.05  -6.48 -25.72  17.03  18.66  [rand]
   24 v=-0.052529: -11.83  15.73   6.71 -37.48  12.66  27.58  [grid]
   25 v=-0.046856: -10.54  10.87   2.27 -21.84 -29.46 -23.36  [rand]
   26 v=-0.062051:  -4.99 -27.16  19.95 -14.47 -42.62  -8.47  [grid]
   27 v=-0.083695:  -6.97 -17.28  14.03 -11.03 -39.84   5.37  [rand]
   28 v=-0.085154:  -3.76 -11.97  13.25  -7.03 -20.88  -2.46  [rand]
   29 v=-0.030820:  10.73  26.33   7.65   2.39 -35.94  -3.11  [rand]
   30 v=-0.084071:  -2.35  -8.28  10.77   0.60 -20.55  13.57  [rand]
   31 v=-0.032642: -12.00  30.02 -17.38 -11.61 -30.25  28.96  [grid]
   32 v=-0.032587: -14.35 -11.38  21.46 -20.99 -15.73  16.08  [rand]
   33 v=-0.056774:  -8.78 -23.04   8.15 -20.61 -27.14 -20.61  [grid]
   34 v=-0.039172: -13.16  18.53   1.80 -29.68  21.16  21.00  [rand]
   35 v=-0.044763:  -8.19  10.88   3.79 -23.87 -30.73  25.66  [rand]
   36 v=-0.030310: -20.84 -12.30  10.19 -15.06 -14.98  29.91  [grid]
   37 v=-0.044147: -13.79  10.71   6.93 -14.11 -13.13  29.74  [rand]
   38 v=-0.087992:  -4.97 -18.78   6.47  -8.18 -22.58  -0.76  [rand]
   39 v=-0.049489: -11.67  -2.47  11.26 -28.44 -29.32  15.63  [grid]
   40 v=-0.060776:  -8.39 -16.17  -5.98 -17.73   7.41   4.60  [rand]
   41 v=-0.038844: -16.59 -11.31  10.06 -33.01 -30.27  31.05  [grid]
   42 v=-0.032959:  -7.89  27.31 -15.75 -17.45 -27.78  17.78  [grid]
   43 v=-0.040543: -12.76  17.90 -17.36 -19.65  37.43   4.76  [rand]
   44 v=-0.057478:  -5.41  -8.53  18.88 -13.66 -15.34 -10.97  [grid]
 + - save #11 for twobest
 + - save # 3 for twobest
 + - save #38 for twobest
 + - save #15 for twobest
 + - save #28 for twobest
 + - save #30 for twobest
 + - save #27 for twobest
 + - save # 5 for twobest
 + - skip # 7 for twobest: too close to set # 5
 + - skip # 0 for twobest: too close to set #15
 + - skip # 9 for twobest: too close to set #27
 + - save #12 for twobest
 + - save #14 for twobest
 + - save #19 for twobest
 + - save # 2 for twobest
 + - skip #17 for twobest: too close to set # 2
 + - save #16 for twobest
 + - save #26 for twobest
 + - save # 1 for twobest
 + - save # 6 for twobest
 + - save #40 for twobest
 + - save # 8 for twobest
 + - save #44 for twobest
 + - save #33 for twobest
 + - save # 4 for twobest
 + - save #13 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=87 usiz=183.5
 + - retaining old weight image
 + - using 32884 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 28950 total points stored in 291 'RHDD(13.7332)' bloks
*[#9823=-0.137698] *[#9824=-0.148509] *[#9829=-0.160941] *[#9830=-0.171812] *[#9831=-0.182006] *[#9834=-0.194048] *[#9835=-0.204178] *[#9836=-0.210579] *[#9838=-0.212772] *[#9839=-0.221108] *[#9844=-0.224444] *[#9846=-0.230591] *[#9847=-0.24084] *[#9848=-0.241114] *[#9850=-0.249127] *[#9851=-0.263093] *[#9852=-0.287839] *[#9853=-0.298633] *[#9856=-0.320342] *[#9857=-0.339934] *[#9859=-0.341229] *[#9862=-0.367881] *[#9863=-0.378991] *[#9864=-0.391417] *[#9865=-0.398464] *[#9866=-0.41164] *[#9867=-0.430158] *[#9869=-0.433949] *[#9870=-0.444897] *[#9872=-0.447344] *[#9873=-0.448119] *[#9874=-0.46147] *[#9875=-0.477501] *[#9876=-0.505716] *[#9877=-0.511268] *[#9878=-0.516832] *[#9879=-0.531192] *[#9880=-0.53914] *[#9884=-0.544398] *[#9885=-0.548576] *[#9886=-0.551128] *[#9888=-0.551696] *[#9889=-0.552234] *[#9891=-0.55264] *[#9894=-0.554758] *[#9897=-0.555068] 
 + - param set #1 has cost=-0.555068
 + -- Parameters = 0.2041 -0.3839 2.3838 -0.6852 -1.1615 0.4456 1.0371 1.0090 1.0033 -0.0012 -0.0052 -0.0028
 + - param set #2 has cost=-0.279344
 + -- Parameters = -1.8454 -1.2420 5.1072 -2.5720 -2.5059 1.3327 1.0767 0.9747 0.9629 -0.0123 -0.0007 0.0021
 + - param set #3 has cost=-0.080114
 + -- Parameters = -4.8806 -19.4562 6.6482 -8.6039 -22.5299 -1.0404 1.0048 0.9984 0.9978 0.0010 0.0106 0.0012
 + - param set #4 has cost=-0.072938
 + -- Parameters = -10.7775 -21.0483 15.4434 -6.5853 -28.8350 11.2504 1.0157 0.9997 0.9975 0.0005 0.0002 -0.0003
 + - param set #5 has cost=-0.114114
 + -- Parameters = -2.8131 -11.0748 5.3665 -3.3600 -12.5175 2.0314 1.0259 1.0040 0.9873 -0.0015 -0.0202 -0.0016
 + - param set #6 has cost=-0.111496
 + -- Parameters = -0.7567 -6.6764 10.6152 0.0496 -15.3947 5.6962 1.0014 1.0221 0.9849 0.0036 -0.0008 -0.0046
 + - param set #7 has cost=-0.059543
 + -- Parameters = -6.3666 -17.3950 13.7990 -10.9306 -40.0993 5.1445 1.0173 0.9971 0.9969 -0.0016 -0.0013 0.0002
 + - param set #8 has cost=-0.078183
 + -- Parameters = -4.7474 -23.1145 5.9417 -6.0998 -27.5770 3.5675 1.0152 1.0091 1.0013 0.0043 -0.0024 -0.0005
 + - param set #9 has cost=-0.075976
 + -- Parameters = -4.6097 -22.0220 9.1259 -8.1461 -28.3476 -5.7811 0.9914 0.9945 0.9938 0.0012 -0.0014 -0.0007
 + - param set #10 has cost=-0.051869
 + -- Parameters = -10.3322 17.7335 -1.0882 -14.3575 12.8353 31.5868 1.0213 0.9998 1.0066 0.0025 -0.0007 0.0014
 + - param set #11 has cost=-0.056095
 + -- Parameters = -11.0443 -24.4944 5.7338 -24.8629 -31.4329 3.5852 1.0169 1.0029 1.0065 0.0046 0.0010 0.0100
*[#10795=-0.559122] *[#10796=-0.560761] *[#10798=-0.562637] *[#10799=-0.563198] *[#10802=-0.564019] *[#10805=-0.569515] *[#10806=-0.574188] *[#10808=-0.576629] *[#10810=-0.577421] *[#10812=-0.578704] *[#10813=-0.58003] *[#10815=-0.580143] *[#10817=-0.580476] *[#10820=-0.580674] *[#10824=-0.581345] *[#10828=-0.582152] *[#10835=-0.582331] *[#10837=-0.582724] 
 + - param set #12 has cost=-0.582724
 + -- Parameters = 0.3520 -0.6120 2.2808 -0.7455 -0.9644 0.2090 0.9990 0.9983 0.9970 0.0024 -0.0008 -0.0013
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.104 
 + --- dist(#3,#1) = 0.212 
 + --- dist(#4,#1) = 0.131 
 + --- dist(#5,#1) = 0.16 
 + --- dist(#6,#1) = 0.24 
 + --- dist(#7,#1) = 0.296 
 + --- dist(#8,#1) = 0.304 
 + --- dist(#9,#1) = 0.31 
 + --- dist(#10,#1) = 0.435 
 + --- dist(#11,#1) = 0.339 
 + --- dist(#12,#1) = 0.349 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=87 usiz=183.5
 + - retaining old weight image
 + - using 32884 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 28673 total points stored in 293 'RHDD(13.5933)' bloks
*[#10880=-0.582891] *[#10881=-0.583197] *[#10882=-0.583532] *[#10883=-0.583551] *[#10885=-0.583662] *[#10891=-0.584042] *[#10893=-0.584734] *[#10896=-0.584851] *[#10898=-0.585088] *[#10899=-0.58529] *[#10901=-0.585334] *[#10902=-0.585672] *[#10903=-0.585756] *[#10906=-0.585764] *[#10918=-0.585972] *[#10919=-0.586027] *[#10920=-0.586316] *[#10923=-0.586388] *[#10926=-0.586558] *[#10929=-0.586589] *[#10932=-0.586977] *[#10933=-0.587204] 
 + - param set #1 has cost=-0.587204
 + -- Parameters = 0.2962 -0.3512 2.2531 -0.6319 -1.0220 0.1434 1.0054 1.0060 0.9995 0.0050 0.0005 -0.0035
 + - param set #2 has cost=-0.587082
 + -- Parameters = 0.2394 -0.2333 2.2981 -0.7223 -1.2921 0.3069 1.0074 1.0093 1.0015 0.0057 -0.0024 -0.0070
 + - param set #3 has cost=-0.529741
 + -- Parameters = 0.0125 -0.4124 2.4583 -0.9905 -1.3298 -0.0025 1.0334 1.0057 0.9765 -0.0023 0.0016 -0.0056
 + - param set #4 has cost=-0.358712
 + -- Parameters = -1.4630 0.5950 3.6432 -2.7988 -4.2712 -0.5240 1.0334 1.0029 0.9779 -0.0119 -0.0108 -0.0180
 + - param set #5 has cost=-0.251374
 + -- Parameters = -2.2078 1.6359 4.1125 -1.3749 -6.8657 3.9260 1.0113 1.0510 0.9502 0.0078 -0.0325 -0.0585
 + - param set #6 has cost=-0.069096
 + -- Parameters = -4.8309 -19.7803 6.8090 -8.5452 -22.6861 -1.3972 1.0028 0.9976 0.9962 0.0028 0.0164 0.0012
 + - param set #7 has cost=-0.066535
 + -- Parameters = -4.9768 -23.2341 6.1406 -6.1010 -27.8091 3.4965 1.0173 1.0217 0.9994 0.0035 -0.0018 0.0011
 + - param set #8 has cost=-0.066432
 + -- Parameters = -4.3256 -21.7804 8.4905 -7.5585 -28.0692 -5.9572 0.9832 0.9999 0.9806 -0.0016 0.0227 -0.0170
 + - param set #9 has cost=-0.064132
 + -- Parameters = -10.5621 -20.8132 15.5694 -6.3426 -29.3052 11.0994 1.0139 0.9941 0.9863 0.0082 0.0033 0.0002
 + - param set #10 has cost=-0.048921
 + -- Parameters = -6.4246 -17.7864 13.8154 -10.4720 -40.1554 5.1930 1.0227 1.0010 0.9934 -0.0030 0.0039 0.0042
 + - param set #11 has cost=-0.051282
 + -- Parameters = -10.3148 -22.7447 7.0413 -20.9699 -28.6444 3.2091 1.0199 0.9958 0.9731 0.0240 0.0118 0.0336
 + - param set #12 has cost=-0.044201
 + -- Parameters = -9.6920 16.5235 -1.0833 -13.6639 12.2030 29.7802 1.0182 1.0000 1.0251 0.0047 -0.0032 -0.0001
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0158 XXX
 + --- dist(#3,#1) = 0.0762 
 + --- dist(#4,#1) = 0.247 
 + --- dist(#5,#1) = 0.243 
 + --- dist(#6,#1) = 0.298 
 + --- dist(#7,#1) = 0.301 
 + --- dist(#8,#1) = 0.314 
 + --- dist(#9,#1) = 0.307 
 + --- dist(#10,#1) = 0.435 
 + --- dist(#11,#1) = 0.329 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=87 usiz=183.5
 + - retaining old weight image
 + - using 32884 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 29173 total points stored in 308 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.566387
 + -- Parameters = 0.2440 -0.2680 2.2603 -0.6573 -1.1564 -0.0484 1.0070 1.0082 1.0005 0.0066 0.0055 -0.0059
 + - param set #2 has cost=-0.564264
 + -- Parameters = 0.1811 -0.2904 2.2315 -0.7834 -1.2828 0.0450 1.0078 1.0055 0.9984 0.0018 0.0032 -0.0084
 + - param set #3 has cost=-0.510918
 + -- Parameters = -0.2159 -0.0041 2.4159 -1.4133 -1.4773 -0.6508 1.0200 1.0085 0.9975 -0.0275 0.0179 -0.0123
 + - param set #4 has cost=-0.455830
 + -- Parameters = 0.6650 0.6751 2.2064 -0.3216 -4.8761 1.3737 0.9962 1.0131 0.9645 0.0142 -0.0336 -0.0803
 + - param set #5 has cost=-0.065688
 + -- Parameters = -5.3758 -18.0311 7.4539 -9.0933 -22.0301 -3.4147 1.0000 0.9980 0.9795 0.0013 0.0159 0.0002
 + - param set #6 has cost=-0.058282
 + -- Parameters = -4.6145 -22.8973 6.7153 -5.9632 -27.4891 3.5104 1.0345 1.0207 0.9760 0.0097 -0.0056 0.0096
 + - param set #7 has cost=-0.059711
 + -- Parameters = -4.1551 -21.7871 8.5110 -7.7804 -28.1729 -5.8890 0.9868 0.9963 0.9773 -0.0025 0.0325 -0.0177
 + - param set #8 has cost=-0.057583
 + -- Parameters = -10.4817 -21.1262 15.1191 -6.3371 -29.5423 11.0648 1.0092 0.9837 0.9768 0.0088 0.0063 -0.0029
 + - param set #9 has cost=-0.044916
 + -- Parameters = -9.2065 -22.7456 6.4114 -19.9242 -27.3901 2.5644 1.0204 0.9935 0.9688 0.0289 0.0205 0.0385
 + - param set #10 has cost=-0.039073
 + -- Parameters = -6.5542 -17.8332 13.4615 -10.5325 -39.9613 5.1424 1.0213 0.9988 0.9963 -0.0025 0.0085 0.0056
 + - param set #11 has cost=-0.037197
 + -- Parameters = -9.7810 16.3959 -1.1548 -13.7706 12.1776 29.7239 1.0252 0.9995 1.0247 0.0053 -0.0032 -0.0002
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0212 
 + --- dist(#3,#1) = 0.153 
 + --- dist(#4,#1) = 0.335 
 + --- dist(#5,#1) = 0.232 
 + --- dist(#6,#1) = 0.3 
 + --- dist(#7,#1) = 0.293 
 + --- dist(#8,#1) = 0.315 
 + --- dist(#9,#1) = 0.291 
 + --- dist(#10,#1) = 0.431 
 + --- dist(#11,#1) = 0.331 
 + - Total coarse refinement net CPU time = 0.0 s; 3138 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=87 usiz=183.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 29133 total points stored in 309 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.546455 *
 + -- Parameters = 0.2440 -0.2680 2.2603 -0.6573 -1.1564 -0.0484 1.0070 1.0082 1.0005 0.0066 0.0055 -0.0059
 + - cost(#2)=-0.544849  
 + -- Parameters = 0.1811 -0.2904 2.2315 -0.7834 -1.2828 0.0450 1.0078 1.0055 0.9984 0.0018 0.0032 -0.0084
 + - cost(#3)=-0.493615  
 + -- Parameters = -0.2159 -0.0041 2.4159 -1.4133 -1.4773 -0.6508 1.0200 1.0085 0.9975 -0.0275 0.0179 -0.0123
 + - cost(#4)=-0.436011  
 + -- Parameters = 0.6650 0.6751 2.2064 -0.3216 -4.8761 1.3737 0.9962 1.0131 0.9645 0.0142 -0.0336 -0.0803
 + - cost(#5)=-0.061332  
 + -- Parameters = -5.3758 -18.0311 7.4539 -9.0933 -22.0301 -3.4147 1.0000 0.9980 0.9795 0.0013 0.0159 0.0002
 + - cost(#6)=-0.056806  
 + -- Parameters = -4.1551 -21.7871 8.5110 -7.7804 -28.1729 -5.8890 0.9868 0.9963 0.9773 -0.0025 0.0325 -0.0177
 + - cost(#7)=-0.055105  
 + -- Parameters = -4.6145 -22.8973 6.7153 -5.9632 -27.4891 3.5104 1.0345 1.0207 0.9760 0.0097 -0.0056 0.0096
 + - cost(#8)=-0.052482  
 + -- Parameters = -10.4817 -21.1262 15.1191 -6.3371 -29.5423 11.0648 1.0092 0.9837 0.9768 0.0088 0.0063 -0.0029
 + - cost(#9)=-0.041860  
 + -- Parameters = -9.2065 -22.7456 6.4114 -19.9242 -27.3901 2.5644 1.0204 0.9935 0.9688 0.0289 0.0205 0.0385
 + - cost(#10)=-0.036322  
 + -- Parameters = -6.5542 -17.8332 13.4615 -10.5325 -39.9613 5.1424 1.0213 0.9988 0.9963 -0.0025 0.0085 0.0056
 + - cost(#11)=-0.031672  
 + -- Parameters = -9.7810 16.3959 -1.1548 -13.7706 12.1776 29.7239 1.0252 0.9995 1.0247 0.0053 -0.0032 -0.0002
 + - cost(#12)=-0.030067  
 + -- Parameters = 1.2948 2.0961 -2.8785 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.548246 *
 + -- Parameters = 0.1828 -0.2053 2.2584 -0.7916 -1.4465 -0.1288 1.0049 1.0093 0.9970 0.0059 0.0085 -0.0111
 + - cost(#2)=-0.547466  
 + -- Parameters = 0.2275 -0.1933 2.2496 -0.7407 -1.4339 0.0485 1.0044 1.0087 0.9982 0.0061 0.0038 -0.0107
 + - cost(#3)=-0.539973  
 + -- Parameters = 0.0387 0.0263 2.3580 -0.9769 -1.8602 -0.4801 1.0058 1.0118 0.9994 0.0043 0.0242 -0.0140
 + - cost(#4)=-0.500315  
 + -- Parameters = 0.4438 0.3869 1.8838 -0.4628 -3.7828 0.4774 1.0116 1.0132 0.9960 0.0133 -0.0096 -0.0665
 + - cost(#5)=-0.063490  
 + -- Parameters = -5.4792 -17.9554 7.6703 -9.5765 -22.0693 -4.6059 1.0173 1.0024 0.9696 -0.0002 0.0156 -0.0007
 + - cost(#6)=-0.057522  
 + -- Parameters = -4.3054 -21.9195 8.3741 -7.9123 -28.4044 -6.0329 0.9873 0.9951 0.9699 -0.0024 0.0349 -0.0180
 + - cost(#7)=-0.055366  
 + -- Parameters = -4.5860 -22.7907 6.6979 -5.8925 -27.7571 3.7626 1.0366 1.0248 0.9677 0.0092 -0.0040 0.0089
 + - cost(#8)=-0.053474  
 + -- Parameters = -10.5999 -20.9219 15.0585 -6.4459 -29.6566 10.9860 1.0121 0.9832 0.9730 0.0103 0.0132 -0.0035
 + - cost(#9)=-0.048674  
 + -- Parameters = -9.7490 -22.1413 6.5797 -18.4259 -26.5075 1.5769 1.0479 1.0126 0.9813 0.0809 0.0648 0.0412
 + - cost(#10)=-0.038166  
 + -- Parameters = -6.5410 -18.5149 12.9639 -11.2383 -39.6974 4.8931 1.0182 1.0088 1.0018 0.0001 0.0151 0.0150
 + - cost(#11)=-0.031988  
 + -- Parameters = -9.8107 16.3804 -1.2180 -13.7334 12.2088 29.6819 1.0251 0.9992 1.0246 0.0090 -0.0030 -0.0004
 + - cost(#12)=-0.540510  
 + -- Parameters = 0.2474 -0.3572 2.2828 -0.7956 -0.7950 0.0910 1.0014 1.0077 0.9972 0.0028 0.0031 0.0019
 + - case #1 is now the best
 + - Initial  cost = -0.548246
 + - Initial fine Parameters = 0.1828 -0.2053 2.2584 -0.7916 -1.4465 -0.1288 1.0049 1.0093 0.9970 0.0059 0.0085 -0.0111
 + - Finalish cost = -0.548880 ; 150 funcs
 + - Final    cost = -0.548888 ; 101 funcs
 + Final fine fit Parameters:
       x-shift= 0.2250   y-shift=-0.1670   z-shift= 2.2521
       z-angle=-0.7145   x-angle=-1.5727   y-angle=-0.1818
       x-scale= 1.0056   y-scale= 1.0089   z-scale= 0.9971
     y/x-shear= 0.0081 z/x-shear= 0.0104 z/y-shear=-0.0138
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.2250 -0.1670 2.2521 -0.7145 -1.5727 -0.1818 1.0056 1.0089 0.9971 0.0081 0.0104 -0.0138
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 21.7
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 8.499994 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0216 -0.9993 0.1200 235.8298 0.0043 0.1358 0.9903 84.6502 -1.0056 -0.0125 -0.0032 201.4812
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 17.7 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2831.160100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 84.6411 47.3912   ITER = 12/137
84.6411

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 170ms]
lev=0 0..171 0..213 0..166: [first cost=-0.69775] ... done [cost:-0.69775==>-0.75490]
lev=1 patch=129x161x125 [clock= 12m 36s 40ms]........:[cost=-0.77356]:........ done [cost:-0.75490==>-0.78014 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 16m 49s 625ms]......................... done [cost:-0.78014==>-0.84398 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 20m 15s 508ms]............ done [cost:-0.84398==>-0.90503 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 22m 53s 596ms]............. done [cost:-0.90503==>-0.95905 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 24m 53s 984ms]................ done [cost:-0.95905==>-1.01756 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 27m 7s 639ms]................ done [cost:-1.01756==>-1.04718 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 29m 26s 604ms]......................... done [cost:-1.04718==>-1.15580 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 31m 56s 606ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0275/tb0275.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 6.4 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0275.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 8.499994 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0275.r01.tshift+orig.BRIK is 8.499994 degrees from plumb.
++ Reading input dataset ./pb01.tb0275.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 35600 voxels
 + 5771 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.472  pitch=-0.482  yaw=-0.059  dS=-1.673  dL=-0.342  dP=-0.534
++ Mean: roll=-0.150  pitch=+0.015  yaw=+0.020  dS=-0.291  dL=-0.166  dP=-0.006
++ Max : roll=+0.041  pitch=+1.808  yaw=+0.136  dS=+0.170  dL=+0.046  dP=+0.160
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.79(0.79) 0.69(0.11) 0.72(0.04) 0.70(0.04) 0.62(0.10) 0.69(0.12) 0.63(0.14) 0.56(0.15) 0.54(0.05) 0.53(0.04) 0.43(0.10) 0.42(0.06) 0.40(0.05) 0.31(0.09) 0.26(0.10) 0.31(0.04) 0.31(0.06) 0.27(0.05) 0.31(0.06) 0.26(0.06) 0.24(0.05) 0.23(0.05) 0.22(0.12) 0.29(0.12) 0.29(0.13) 0.26(0.08) 0.25(0.04) 0.30(0.16) 0.30(0.05) 0.35(0.12) 0.31(0.08) 0.30(0.05) 0.34(0.05) 0.32(0.05) 0.33(0.05) 0.32(0.05) 0.36(0.05) 0.36(0.07) 0.32(0.12) 0.32(0.03) 0.37(0.09) 0.41(0.07) 0.45(0.06) 0.55(0.11) 0.59(0.08) 0.59(0.03) 0.70(0.11) 0.76(0.07) 0.74(0.04) 0.85(0.12) 0.90(0.05) 0.94(0.04) 0.99(0.06) 0.97(0.03) 0.88(0.10) 0.94(0.08) 0.96(0.03) 1.03(0.07) 1.05(0.11) 0.95(0.10) 0.95(0.06) 1.04(0.09) 1.02(0.06) 0.92(0.11) 0.98(0.06) 0.95(0.04) 0.95(0.04) 0.90(0.16) 0.64(0.33) 0.39(0.52) 0.51(0.25) 0.60(0.24) 0.57(0.09) 0.59(0.02) 0.64(0.06) 0.65(0.04) 0.80(0.16) 0.70(0.28) 0.77(0.24) 0.80(0.11) 0.75(0.08) 0.73(0.04) 0.84(0.40) 0.79(0.24) 0.78(0.19) 0.75(0.10) 0.68(0.09) 0.69(0.05) 0.70(0.04) 0.71(0.05) 0.71(0.02) 0.73(0.05) 0.75(0.04) 0.76(0.04) 0.74(0.04) 0.69(0.08) 0.62(0.11) 0.65(0.07) 0.66(0.05) 0.64(0.02) 0.63(0.09) 0.59(0.06) 0.60(0.10) 0.57(0.21) 0.57(0.16) 0.59(0.11) 0.88(0.55) 0.76(0.23) 0.74(0.09) 0.76(0.08) 0.74(0.06) 0.74(0.12) 0.83(0.10) 0.86(0.06) 0.85(0.15) 0.77(0.11) 0.67(0.28) 0.63(0.08) 0.65(0.05) 0.71(0.13) 1.17(0.81) 1.43(0.43) 1.56(0.49) 1.55(0.21) 1.50(0.11) 1.44(0.07) 1.39(0.05) 1.38(0.03) 1.37(0.06) 1.38(0.05) 1.34(0.05) 1.33(0.04) 1.42(0.11) 1.38(0.08) 1.30(0.13) 1.27(0.07) 1.29(0.06) 4.19(3.03) 4.90(0.72) 4.57(0.37) 4.51(0.06) 4.35(0.17) 4.17(0.19) 3.95(0.23) 4.00(0.21) 4.01(0.13) 3.79(0.24) 3.64(0.17) 3.65(0.06)
++ Max displacement in automask = 4.90 (mm) at sub-brick 139
++ Max delta displ  in automask = 3.03 (mm) at sub-brick 138
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0275.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0275.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0275.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0275.r01.tshift+orig.BRIK is 8.499994 degrees from plumb.
++ Source dataset: ./pb01.tb0275.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 8.499994 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.2
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0275.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 8.499994 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0275.r02.tshift+orig.BRIK is 8.499994 degrees from plumb.
++ Reading input dataset ./pb01.tb0275.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 35413 voxels
 + 5762 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.245  pitch=+0.339  yaw=-0.354  dS=+1.037  dL=-0.436  dP=-0.746
++ Mean: roll=-0.103  pitch=+0.552  yaw=-0.268  dS=+1.263  dL=-0.288  dP=-0.519
++ Max : roll=-0.034  pitch=+0.752  yaw=-0.208  dS=+1.923  dL=-0.218  dP=-0.200
++ Max displacements (mm) for each sub-brick:
 2.46(0.00) 2.56(0.30) 2.50(0.11) 2.47(0.08) 2.56(0.11) 2.56(0.07) 2.52(0.08) 2.50(0.05) 2.48(0.05) 2.45(0.05) 2.52(0.08) 2.43(0.13) 2.45(0.05) 2.45(0.05) 2.37(0.08) 2.41(0.04) 2.40(0.02) 2.41(0.07) 2.41(0.06) 2.42(0.16) 2.46(0.17) 2.44(0.03) 2.41(0.14) 2.41(0.03) 2.36(0.05) 2.37(0.04) 2.42(0.10) 2.43(0.06) 2.39(0.07) 2.41(0.06) 2.43(0.09) 2.40(0.08) 2.35(0.05) 2.37(0.03) 2.43(0.06) 2.46(0.04) 2.35(0.11) 2.37(0.02) 2.35(0.03) 2.35(0.02) 2.30(0.07) 2.52(0.90) 2.70(0.32) 2.43(0.84) 2.49(0.24) 2.45(0.27) 2.38(0.16) 2.39(0.06) 2.44(0.07) 2.43(0.03) 2.43(0.04) 2.33(0.10) 2.30(0.06) 2.27(0.04) 2.28(0.06) 2.27(0.04) 2.34(0.09) 2.32(0.07) 2.24(0.13) 2.23(0.04) 2.25(0.04) 2.24(0.02) 2.26(0.11) 2.32(0.19) 2.26(0.08) 2.29(0.04) 2.32(0.08) 2.30(0.11) 2.29(0.02) 2.28(0.04) 2.27(0.02) 2.30(0.05) 2.42(0.21) 2.40(0.07) 2.35(0.11) 2.27(0.09) 2.27(0.03) 2.29(0.03) 2.21(0.09) 2.21(0.09) 2.19(0.03) 2.18(0.06) 2.17(0.03) 2.18(0.02) 2.20(0.07) 2.15(0.06) 2.16(0.02) 2.18(0.08) 2.18(0.08) 2.18(0.04) 2.15(0.04) 2.18(0.09) 2.17(0.01) 2.16(0.02) 2.20(0.06) 2.18(0.04) 2.22(0.07) 2.24(0.05) 2.28(0.31) 2.34(0.06) 2.33(0.06) 2.33(0.03) 2.24(0.19) 2.10(0.22) 2.07(0.10) 2.12(0.11) 2.18(0.07) 2.11(0.08) 2.13(0.09) 2.14(0.02) 2.17(0.06) 2.19(0.02) 2.17(0.05) 2.14(0.07) 2.16(0.05) 2.15(0.04) 2.18(0.04) 2.17(0.03) 2.12(0.06) 2.15(0.03) 2.19(0.06) 2.20(0.12) 2.18(0.04) 2.22(0.05) 2.20(0.05) 2.22(0.08) 2.23(0.10) 2.24(0.04) 2.19(0.09) 2.23(0.07) 2.20(0.14) 2.20(0.11) 2.25(0.07) 2.26(0.03) 2.19(0.08) 2.19(0.07) 2.22(0.03) 2.26(0.04) 2.24(0.07) 2.34(0.17) 2.39(0.06) 2.33(0.11) 2.24(0.11) 2.21(0.11) 2.26(0.15) 2.56(0.49) 2.68(0.19) 2.26(0.62) 2.41(0.40) 2.40(0.08)
++ Max displacement in automask = 2.70 (mm) at sub-brick 42
++ Max delta displ  in automask = 0.90 (mm) at sub-brick 41
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0275.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0275.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0275.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0275.r02.tshift+orig.BRIK is 8.499994 degrees from plumb.
++ Source dataset: ./pb01.tb0275.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 18.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 8.499994 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.8
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0275.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 8.499994 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0275.r03.tshift+orig.BRIK is 8.499994 degrees from plumb.
++ Reading input dataset ./pb01.tb0275.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 35065 voxels
 + 5688 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.289  pitch=-0.181  yaw=-0.270  dS=+2.354  dL=-0.511  dP=-0.879
++ Mean: roll=-0.229  pitch=+0.057  yaw=-0.234  dS=+2.774  dL=-0.352  dP=-0.462
++ Max : roll=-0.050  pitch=+0.688  yaw=-0.188  dS=+3.059  dL=-0.098  dP=-0.356
++ Max displacements (mm) for each sub-brick:
 3.30(0.00) 3.54(0.34) 3.71(0.35) 3.43(0.47) 3.60(0.18) 3.60(0.21) 3.54(0.06) 3.58(0.08) 3.59(0.11) 3.52(0.21) 3.54(0.11) 3.47(0.10) 3.46(0.02) 3.47(0.04) 3.56(0.19) 3.43(0.19) 3.37(0.17) 3.35(0.12) 3.35(0.04) 3.33(0.05) 3.28(0.10) 3.27(0.12) 3.25(0.03) 3.26(0.23) 3.27(0.22) 3.24(0.05) 3.24(0.05) 3.22(0.03) 3.30(0.11) 3.24(0.10) 3.21(0.04) 3.20(0.05) 3.19(0.04) 3.19(0.13) 3.25(0.08) 3.23(0.04) 3.20(0.05) 3.17(0.07) 3.15(0.10) 3.17(0.13) 3.19(0.09) 3.20(0.03) 3.23(0.12) 3.26(0.06) 3.26(0.10) 3.25(0.07) 3.22(0.07) 3.04(0.22) 3.01(0.09) 3.01(0.04) 3.12(0.11) 3.18(0.09) 3.19(0.03) 3.20(0.04) 3.26(0.10) 3.29(0.08) 3.23(0.07) 3.20(0.04) 3.19(0.06) 3.19(0.02) 3.22(0.08) 3.22(0.03) 3.22(0.04) 3.23(0.03) 3.22(0.03) 3.19(0.06) 3.19(0.02) 3.21(0.07) 3.20(0.06) 3.25(0.08) 3.19(0.10) 3.17(0.05) 3.14(0.06) 3.19(0.07) 3.17(0.07) 3.15(0.07) 3.14(0.04) 3.18(0.06) 3.16(0.06) 3.15(0.04) 3.18(0.13) 3.47(0.42) 3.46(0.05) 3.24(0.25) 3.13(0.13) 3.17(0.07) 3.20(0.05) 3.17(0.03) 3.21(0.06) 3.28(0.09) 3.28(0.04) 3.23(0.08) 3.23(0.02) 3.30(0.10) 3.32(0.09) 3.30(0.05) 3.32(0.05) 3.32(0.05) 3.32(0.03) 3.35(0.03) 3.35(0.02) 3.32(0.06) 3.34(0.07) 3.33(0.04) 3.32(0.04) 3.32(0.05) 3.33(0.02) 3.23(0.15) 3.18(0.31) 3.26(0.24) 3.24(0.08) 3.24(0.02) 3.25(0.09) 3.28(0.08) 3.39(0.14) 3.34(0.06) 3.11(0.31) 3.15(0.06) 3.32(0.22) 3.35(0.04) 3.35(0.04) 3.36(0.04) 3.39(0.04) 3.40(0.04) 3.44(0.08) 3.40(0.06) 3.37(0.05) 3.41(0.09) 3.42(0.02) 3.37(0.08) 3.42(0.07) 3.41(0.06) 3.43(0.05) 3.46(0.07) 3.44(0.07) 3.45(0.03) 3.44(0.05) 3.43(0.04) 3.47(0.08) 3.45(0.05) 3.40(0.07) 3.45(0.11) 3.40(0.16) 3.55(0.16) 3.32(0.27) 3.40(0.11) 3.32(0.11) 3.48(0.18) 3.38(0.19) 3.42(0.08)
++ Max displacement in automask = 3.71 (mm) at sub-brick 2
++ Max delta displ  in automask = 0.47 (mm) at sub-brick 3
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0275.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0275.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0275.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0275.r03.tshift+orig.BRIK is 8.499994 degrees from plumb.
++ Source dataset: ./pb01.tb0275.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.9
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 8.499994 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0275.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0275.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0275.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0275.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0275.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0275.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 8.499994 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0275
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0275+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0275+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1599020 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=1
++ Zero-pad: zbot=1 ztop=3
++ Computing -autobox
++ 315126 voxels [68.4%] in weight mask
++ Number of points for matching = 148109
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.155073
   sp   = 0.324943
   mi   = -0.526812
   crM  = 0.0475778
   nmi  = 0.8504
   je   = 2.99469
   hel  = -0.106569
   crA  = 0.218159
   crU  = 0.22213
   lss  = 0.844927
   lpc  = 0.0136688
   lpa  = 0.986331
   lpc+ = 0.160881
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.9
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0275+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0275+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 24.9 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0275.r01.blur pb02.tb0275.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0275.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0275.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0275.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0275.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0275.r02.blur pb02.tb0275.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0275.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0275.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0275.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0275.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0275.r03.blur pb02.tb0275.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0275.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0275.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0275.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0275.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0275.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0275.r01.blur+orig
++ Forming automask
 + Fixed clip level = 367.048981
 + Used gradual clip level = 318.847900 .. 415.945374
 + Number voxels above clip level = 59943
 + Clustering voxels ...
 + Largest cluster has 59651 voxels
 + Clustering voxels ...
 + Largest cluster has 59603 voxels
 + Filled    51 voxels in small holes; now have 59654 voxels
 + Clustering voxels ...
 + Largest cluster has 59653 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 366622 voxels
 + Mask now has 59653 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 357655 voxels
++ 68620 voxels in the mask [out of 426275: 16.10%]
++ first  13 x-planes are zero [from A]
++ last    6 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0275.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0275.r02.blur+orig
++ Forming automask
 + Fixed clip level = 365.225250
 + Used gradual clip level = 318.267426 .. 413.440155
 + Number voxels above clip level = 60139
 + Clustering voxels ...
 + Largest cluster has 59817 voxels
 + Clustering voxels ...
 + Largest cluster has 59754 voxels
 + Filled    50 voxels in small holes; now have 59804 voxels
 + Clustering voxels ...
 + Largest cluster has 59804 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 366471 voxels
 + Mask now has 59804 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 357438 voxels
++ 68837 voxels in the mask [out of 426275: 16.15%]
++ first  13 x-planes are zero [from A]
++ last    6 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0275.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0275.r03.blur+orig
++ Forming automask
 + Fixed clip level = 364.825287
 + Used gradual clip level = 317.530609 .. 411.809570
 + Number voxels above clip level = 59903
 + Clustering voxels ...
 + Largest cluster has 59596 voxels
 + Clustering voxels ...
 + Largest cluster has 59537 voxels
 + Filled    53 voxels in small holes; now have 59590 voxels
 + Clustering voxels ...
 + Largest cluster has 59590 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 366685 voxels
 + Mask now has 59590 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 357684 voxels
++ 68591 voxels in the mask [out of 426275: 16.09%]
++ first  13 x-planes are zero [from A]
++ last    6 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0275
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 69001 survived, 357274 were zero
++ writing result full_mask.tb0275...
3dresample -master full_mask.tb0275+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0275
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 63851 survived, 362424 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0275...
3dABoverlap -no_automask full_mask.tb0275+orig mask_anat.tb0275+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0275+orig.BRIK  B=./mask_anat.tb0275+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
69001        63851        73197        59655        9346         4196         13.5447      6.5715     0.8461     1.1322     0.8514
3ddot -dodice full_mask.tb0275+orig mask_anat.tb0275+orig
tee out.mask_ae_dice.txt
0.898067	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0275
total number of censored TRs (simple form) = 20
1deval -a motion_tb0275_censor.1D -b outcount_tb0275_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0275_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0275.r01.blur+orig.HEAD pb03.tb0275.r02.blur+orig.HEAD pb03.tb0275.r03.blur+orig.HEAD -censor censor_tb0275_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0275 -errts errts.tb0275 -bucket stats.tb0275
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0275.r01.blur+orig.HEAD pb03.tb0275.r02.blur+orig.HEAD pb03.tb0275.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 59699 voxels (out of 426275 = 14.0%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 429 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0275.r01.blur+orig.HEAD pb03.tb0275.r02.blur+orig.HEAD pb03.tb0275.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0275_REML -Rvar stats.tb0275_REMLvar \
 -Rfitts fitts.tb0275_REML -Rerrts errts.tb0275_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (429x24):  4.48203  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (429x6):  1.03717  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (429x18):  4.36153  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (429x6):  3.20224  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (429x12):  1.12677  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.30661e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.30 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.351
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.365
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.379
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.394
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.408
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.422
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.437
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.451
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.465
++ Job #0: processing voxels 0 to 42626; elapsed time=7.475
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #1 finished; elapsed time=19.150
++ Job #4 finished; elapsed time=19.162
++ Job #3 finished; elapsed time=19.166
++ Job #5 finished; elapsed time=19.192
++ Job #7 finished; elapsed time=19.192
9.
++ Job #0 waiting for children to finish; elapsed time=19.216
++ Job #6 finished; elapsed time=19.241
++ Job #9 finished; elapsed time=19.320
++ Job #2 finished; elapsed time=19.350
++ Job #8 finished; elapsed time=19.384
++ Job #0 now finishing up; elapsed time=19.397
++ Smallest FDR q [0 Full_Fstat] = 3.1092e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 2.00055e-12
++ Smallest FDR q [3 uns1_Fstat] = 2.00063e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 1.01432e-06
++ Smallest FDR q [6 uns2_Fstat] = 1.01436e-06
++ Smallest FDR q [8 uns3#0_Tstat] = 1.1114e-13
++ Smallest FDR q [9 uns3_Fstat] = 1.111e-13
++ Smallest FDR q [11 str1#0_Tstat] = 9.14053e-13
++ Smallest FDR q [12 str1_Fstat] = 9.13837e-13
++ Smallest FDR q [14 str2#0_Tstat] = 3.9338e-11
++ Smallest FDR q [15 str2_Fstat] = 3.934e-11
++ Smallest FDR q [17 str3#0_Tstat] = 2.72219e-13
++ Smallest FDR q [18 str3_Fstat] = 2.72132e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.33817e-13
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.33817e-13
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 7.89539e-13
++ Smallest FDR q [24 structured_GLT_Fstat] = 7.89281e-13
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 1.01114e-08
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 1.011e-08
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 4.20086e-10
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 4.19936e-10
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 1.46852e-05
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 1.46851e-05
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 4.0694e-11
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 4.0694e-11
++ Wrote bucket dataset into ./stats.tb0275+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0275+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0275+orig.BRIK
++ Program finished; elapsed time=39.091
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.740       0.801  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.736       0.798  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.729       0.796  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.491       0.567  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.555  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.471       0.546  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.403      -0.378  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0275.r01.blur+orig.HEAD pb03.tb0275.r02.blur+orig.HEAD pb03.tb0275.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0275_REML -Rvar stats.tb0275_REMLvar -Rfitts fitts.tb0275_REML -Rerrts errts.tb0275_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 59699 voxels (out of 426275 = 14.0%)
++ -----  matrix condition (429x24):  4.48203  ++ VERY GOOD ++
 + masked off 249585 voxels for being all zero; 176690 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 319 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=7.79
 + X matrix: 46.717% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=429 cols=24; 109*1 cases; total CPU=0.00 Elapsed=7.81
 +  average case bandwidth = 12.22
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=49.95
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=98.03
++ Output dataset ./stats.tb0275_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0275_REML+orig.BRIK
++ Output dataset ./errts.tb0275_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0275_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 1.54602e-10
++ Smallest FDR q [2 uns1#0_Tstat] = 2.29337e-07
++ Smallest FDR q [3 uns1_Fstat] = 2.29337e-07
++ Smallest FDR q [5 uns2#0_Tstat] = 0.00547415
++ Smallest FDR q [6 uns2_Fstat] = 0.00547414
++ Smallest FDR q [8 uns3#0_Tstat] = 3.38671e-08
++ Smallest FDR q [9 uns3_Fstat] = 3.38671e-08
++ Smallest FDR q [11 str1#0_Tstat] = 1.29633e-09
++ Smallest FDR q [12 str1_Fstat] = 1.29633e-09
++ Smallest FDR q [14 str2#0_Tstat] = 0.00152503
++ Smallest FDR q [15 str2_Fstat] = 0.00152503
++ Smallest FDR q [17 str3#0_Tstat] = 6.15258e-07
++ Smallest FDR q [18 str3_Fstat] = 6.15259e-07
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.88633e-10
++ Smallest FDR q [21 unstructured_Fstat] = 1.88633e-10
++ Smallest FDR q [23 structured#0_Tstat] = 1.47499e-07
++ Smallest FDR q [24 structured_Fstat] = 1.47499e-07
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.187002 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.187002 ==> few true single voxel detections
++ Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.00350204
++ Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.00350204
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.549713 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.549713 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.00930087
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.00930087
 + Added 25 FDR curves to dataset stats.tb0275_REML+orig
++ Output dataset ./stats.tb0275_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=118.41
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0275 pb03.tb0275.r01.blur+orig.HEAD pb03.tb0275.r02.blur+orig.HEAD pb03.tb0275.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.9 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0275+orig[2..119,124..136,141..189,194..293,299..301,304..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0275_REML+orig[2..119,124..136,141..189,194..293,299..301,304..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0275+orig -expr c*a/b -prefix TSNR.tb0275
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.tb0275+orig.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0275_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0275+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 69001 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.197927
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0275.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 2..119,124..136,141..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0275+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0275+orig[2..119,124..136,141..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 69001
[7m*+ WARNING:[0m removed 381 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 140 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.33 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..189,194..293,299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0275+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0275+orig[150..189,194..293,299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 69001
[7m*+ WARNING:[0m removed 381 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 141 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.90 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300,301,304..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0275+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0275+orig[300,301,304..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 69001
[7m*+ WARNING:[0m removed 381 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.48 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 10.9989 10.0642 10.8794 10.6392
average errts FWHM blurs: 10.9989 10.0642 10.8794 10.6392
echo 10.9989 10.0642 10.8794 10.6392   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.443525 7.18636 14.8511 18.2014
average errts ACF blurs: 0.443525 7.18636 14.8511 18.2014
echo 0.443525 7.18636 14.8511 18.2014   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 2..119,124..136,141..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0275+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0275_REML+orig[2..119,124..136,141..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 69001
[7m*+ WARNING:[0m removed 381 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 140 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.13 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..189,194..293,299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0275+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0275_REML+orig[150..189,194..293,299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 69001
[7m*+ WARNING:[0m removed 381 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 141 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.80 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300,301,304..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0275+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0275_REML+orig[300,301,304..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 69001
[7m*+ WARNING:[0m removed 381 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.37 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 10.9557 10.0173 10.8314 10.5931
average err_reml FWHM blurs: 10.9557 10.0173 10.8314 10.5931
echo 10.9557 10.0173 10.8314 10.5931   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.436954 7.15981 14.8102 18.1786
average err_reml ACF blurs: 0.436954 7.15981 14.8102 18.1786
echo 0.436954 7.15981 14.8102 18.1786   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0275.1D
3dClustSim -both -mask full_mask.tb0275+orig -acf 0.436954 7.15981 14.8102 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 69001 voxels in mask (16.19% of total)
++ Kernel function radius = 49.43 mm
++ ACF(0.44,7.16,14.81) => FWHM=18.18 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 515.6 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0275+orig stats.tb0275_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0275+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0275_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0275 -dsets pb00.tb0275.r01.tcat+orig.HEAD pb00.tb0275.r02.tcat+orig.HEAD pb00.tb0275.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0275.r01.blur+orig.BRIK rm.pb03.tb0275.r01.blur+orig.HEAD rm.pb03.tb0275.r02.blur+orig.BRIK rm.pb03.tb0275.r02.blur+orig.HEAD rm.pb03.tb0275.r03.blur+orig.BRIK rm.pb03.tb0275.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0275.txt
./@ss_review_basic

subject ID                : tb0275
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0275+orig.HEAD
final stats dset          : stats.tb0275_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 11
average motion (per TR)   : 0.0685821
average censored motion   : 0.0545496
max motion displacement   : 5.10244
max censored displacement : 4.93105
outlier limit             : 0.1
average outlier frac (TR) : 0.00596733
num TRs above out limit   : 6

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 140 141 148
num TRs per run (censored): 10 9 2
fraction censored per run : 0.0666667 0.06 0.0133333
TRs total (uncensored)    : 450
TRs total                 : 429
degrees of freedom used   : 24
degrees of freedom left   : 405

TRs censored              : 21
censor fraction           : 0.046667
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 4 4 0 5 4 0
fraction TRs censored     : 0.059 0.059 0.000 0.045 0.036 0.000
ave mot per sresp (orig)  : 0.083311 0.060690 0.045062 0.072816 0.055325 0.051136
ave mot per sresp (cens)  : 0.054643 0.048134 0.045062 0.063871 0.043855 0.051136

TSNR average              : 245.221
global correlation (GCOR) : 0.197927
anat/EPI mask Dice coef   : 0.898067
maximum F-stat (masked)   : 14.4068
blur estimates (ACF)      : 0.436954 7.15981 14.8102
blur estimates (FWHM)     : 10.9557 10.0173 10.8314


cd ..
echo execution finished: `date`
date
execution finished: Wed Aug  9 01:14:55 EDT 2017
