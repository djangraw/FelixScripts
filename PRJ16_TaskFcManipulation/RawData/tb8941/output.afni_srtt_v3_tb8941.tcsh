echo auto-generated by afni_proc.py, Tue Jan  2 15:41:20 2018
auto-generated by afni_proc.py, Tue Jan  2 15:41:20 2018
echo (version 6.02, December 12, 2017)
(version 6.02, December 12, 2017)
echo execution started: `date`
date
execution started: Tue Jan  2 15:41:21 EST 2018
afni -ver
Precompiled binary linux_openmp_64: Dec 22 2017 (Version AFNI_17.3.09)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   22 Dec 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb8941
endif
set output_dir = tb8941.srtt_v3
if ( -d tb8941.srtt_v3 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb8941.srtt_v3
mkdir tb8941.srtt_v3/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb8941.srtt_v3/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb8941.srtt_v3/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dTcat -prefix tb8941.srtt_v3/pb00.tb8941.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 3.3 s
3dTcat -prefix tb8941.srtt_v3/pb00.tb8941.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.5 s
3dTcat -prefix tb8941.srtt_v3/pb00.tb8941.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 2.2 s
set tr_counts = ( 150 150 150 )
cd tb8941.srtt_v3
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8941.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8941.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8941.r01.tcat+orig.BRIK is 16.499998 degrees from plumb.
++ 28077 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8941.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8941.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8941.r02.tcat+orig.BRIK is 16.499998 degrees from plumb.
++ 28067 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8941.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8941.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8941.r03.tcat+orig.BRIK is 16.499998 degrees from plumb.
++ 28105 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.tb8941.r01.despike pb00.tb8941.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8941.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8941.r01.tcat+orig.BRIK is 16.499998 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb8941.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #4
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #3
........................................................
++ Elapsed despike time =  1s 600ms

++ FINAL: 19353450 data points, 720239 edits [3.722%], 48822 big edits [0.252%]
++ Output dataset ./pb01.tb8941.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb8941.r02.despike pb00.tb8941.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8941.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8941.r02.tcat+orig.BRIK is 16.499998 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb8941.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #4
++ start OpenMP thread #5
++ start OpenMP thread #2
++ start OpenMP thread #3
........................................................
++ Elapsed despike time =  1s 797ms

++ FINAL: 19353450 data points, 710893 edits [3.673%], 43667 big edits [0.226%]
++ Output dataset ./pb01.tb8941.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb8941.r03.despike pb00.tb8941.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8941.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8941.r03.tcat+orig.BRIK is 16.499998 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb8941.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #3
++ start OpenMP thread #2
++ start OpenMP thread #1
++ start OpenMP thread #0
++ start OpenMP thread #4
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  1s 606ms

++ FINAL: 19353450 data points, 727162 edits [3.757%], 54098 big edits [0.280%]
++ Output dataset ./pb01.tb8941.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.tb8941.r01.tshift -tpattern alt+z2 pb01.tb8941.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8941.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8941.r01.despike+orig.BRIK is 16.499998 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb8941.r02.tshift -tpattern alt+z2 pb01.tb8941.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8941.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8941.r02.despike+orig.BRIK is 16.499998 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb8941.r03.tshift -tpattern alt+z2 pb01.tb8941.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8941.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8941.r03.despike+orig.BRIK is 16.499998 degrees from plumb.
end
3dbucket -prefix vr_base pb02.tb8941.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 16.499998 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 440.747437
 + Used gradual clip level = 403.847382 .. 493.886047
 + Number voxels above clip level = 28869
 + Clustering voxels ...
 + Largest cluster has 28229 voxels
 + Clustering voxels ...
 + Largest cluster has 27673 voxels
 + Filled   341 voxels in small holes; now have 28014 voxels
 + Filled     2 voxels in large holes; now have 28016 voxels
 + Clustering voxels ...
 + Largest cluster has 28015 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 103057 voxels
 + Mask now has 28015 voxels
++ 28015 voxels in the mask [out of 131072: 21.37%]
++ first  13 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1071.976318 on /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1071.976318))'
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 16.499998 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 16.499998 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1568419 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 28015 voxels [17.5%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 28015
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 30.312 29.290 19.074 (index)
 + source center of mass = 86.489 162.786 198.460 (index)
 + source-target CM = -2.221 0.644 -4.318 (xyz)
 + center of mass shifts = -2.221 0.644 -4.318
++ shift param auto-range: -71.7..67.3 -68.9..70.2 -53.1..44.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -12.221245 .. 7.778755
 + Range param#2 [y-shift] = -9.355614 .. 10.644386
 + Range param#3 [z-shift] = -14.317703 .. 5.682297
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -42.221245 .. 37.778755
 + Range param#2 [y-shift] = -39.355614 .. 40.644386
 + Range param#3 [z-shift] = -44.317703 .. 35.682297
 + 12 free parameters
++ Normalized convergence radius = 0.000473
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1568419 [out of 17909936] voxels
 + base mask has 38670 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=75 usiz=192
 + - copying weight image
 + - using 28015 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24228 total points stored in 225 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=0.0113552] **[#2=-0.0122919] *oo-o-...*[#19=-0.021527] **[#28=-0.0461563] *.+ooo-...o.-*[#1212=-0.0497134] *-..$.
 + - best 45 costs found:
    0 v=-0.049713: -15.55 -26.02   9.02 -15.00 -30.00 -15.00  [grid]
    1 v=-0.046156: -15.55 -12.69   9.02 -15.00 -15.00  15.00  [grid]
    2 v=-0.044233: -15.55 -12.69  22.35 -15.00 -15.00 -15.00  [grid]
    3 v=-0.039926: -15.55 -12.69  22.35 -15.00 -30.00  15.00  [grid]
    4 v=-0.039059:   7.60  25.40 -15.70   3.10  34.36   2.55  [rand]
    5 v=-0.038254: -15.55 -26.02  22.35 -15.00 -30.00  15.00  [grid]
    6 v=-0.037782: -15.55 -12.69  22.35 -15.00 -30.00 -15.00  [grid]
    7 v=-0.037626: -18.36  -8.82  20.03 -20.99 -15.73 -16.09  [rand]
    8 v=-0.037080: -15.55 -12.69   9.02 -15.00 -15.00 -15.00  [grid]
    9 v=-0.033715: -15.55 -12.69   9.02 -15.00 -15.00 -30.00  [grid]
   10 v=-0.033542: -18.20 -18.85 -10.04 -20.53  -3.14  10.08  [rand]
   11 v=-0.033513:  11.11 -26.02   9.02  15.00 -30.00  15.00  [grid]
   12 v=-0.033438: -12.55 -28.17  10.69 -30.67 -17.79 -20.52  [rand]
   13 v=-0.033342: -15.55 -26.02  22.35 -15.00 -30.00 -15.00  [grid]
   14 v=-0.031593: -17.51 -20.24  26.07 -14.56 -29.40  15.92  [rand]
   15 v=-0.031033: -18.44 -13.46  30.81 -15.74 -34.09   7.78  [rand]
   16 v=-0.030980: -28.89 -12.69  22.35  30.00 -30.00  30.00  [grid]
   17 v=-0.030954: -15.55  13.98   9.02 -15.00 -15.00 -15.00  [grid]
   18 v=-0.030766: -15.55 -26.02   9.02 -15.00 -30.00  15.00  [grid]
   19 v=-0.030619: -15.55 -26.02   9.02 -15.00 -30.00 -30.00  [grid]
   20 v=-0.030481: -20.96 -35.75  28.73 -24.90  -4.74  17.23  [rand]
   21 v=-0.029915: -15.55 -12.69  22.35  30.00 -30.00  15.00  [grid]
   22 v=-0.029850: -15.55 -12.69   9.02 -15.00 -30.00 -15.00  [grid]
   23 v=-0.029741: -10.86 -19.79  13.15 -25.20 -18.50 -13.54  [rand]
   24 v=-0.029729:  11.11 -26.02  22.35 -30.00  15.00 -30.00  [grid]
   25 v=-0.029712: -24.57 -15.74  11.51 -41.11 -22.86   3.97  [rand]
   26 v=-0.028985: -18.36  -8.82  20.03  20.99  15.73 -16.09  [rand]
   27 v=-0.028103: -28.89 -12.69   9.02  15.00 -15.00  15.00  [grid]
   28 v=-0.027905: -15.55 -12.69  22.35 -30.00 -30.00 -15.00  [grid]
   29 v=-0.027733: -18.20 -18.85   1.41 -20.53  -3.14 -10.08  [rand]
   30 v=-0.027677: -15.55 -12.69  22.35  15.00  15.00 -15.00  [grid]
   31 v=-0.027444: -18.36  -8.82  20.03 -20.99 -15.73  16.09  [rand]
   32 v=-0.027088: -15.55  13.98  22.35 -15.00 -30.00 -15.00  [grid]
   33 v=-0.026344:  32.10 -15.94 -12.92 -16.34  -8.64 -40.54  [rand]
   34 v=-0.026217: -28.89 -12.69  22.35  15.00 -30.00  15.00  [grid]
   35 v=-0.026021: -15.55 -26.02   9.02 -15.00 -15.00 -15.00  [grid]
   36 v=-0.025905:  -6.30   6.87   3.48   4.32  22.85 -18.95  [rand]
   37 v=-0.025812: -15.55 -26.02   9.02 -30.00 -30.00 -15.00  [grid]
   38 v=-0.025734: -28.89  27.31   9.02 -15.00  30.00 -30.00  [grid]
   39 v=-0.025521: -28.89 -26.02  22.35  30.00 -30.00  30.00  [grid]
   40 v=-0.025401:  11.11  13.98 -17.65  15.00  30.00 -15.00  [grid]
   41 v=-0.025380: -34.71  15.34   7.49  11.16  -9.40  34.39  [rand]
   42 v=-0.025152: -15.55 -12.69  22.35 -15.00 -15.00  15.00  [grid]
   43 v=-0.025054: -15.55 -12.69  22.35 -15.00  15.00  15.00  [grid]
   44 v=-0.024994: -15.55 -12.69  22.35 -30.00 -30.00 -30.00  [grid]
*[#8002=-0.0621421] *[#8010=-0.064255] *[#8012=-0.0652725] *[#8014=-0.0775086] *[#8020=-0.0782999] *[#8021=-0.0807733] *[#8022=-0.0829302] *[#8026=-0.0833932] *[#8512=-0.0877393] *[#8514=-0.0900289] *[#8518=-0.0900886] *[#8521=-0.0902296] *[#8523=-0.0909611] *[#9321=-0.0910352] *[#9324=-0.0916352] *[#9327=-0.0919766]  + - costs of the above after a little optimization:
    0 v=-0.083393: -12.22 -25.59  13.66 -15.59 -31.12 -19.29  [grid]
    1 v=-0.060280: -14.29 -13.22   9.78  -9.06 -16.12  13.42  [grid]
    2 v=-0.060591: -14.19 -13.21  22.93 -13.47 -15.00  -8.88  [grid]
    3 v=-0.075907: -13.73 -13.18  17.43 -10.35 -25.38   9.39  [grid]
    4 v=-0.043799:   6.35  25.24 -16.34   1.60  33.22   2.84  [rand]
    5 v=-0.073205: -16.58 -24.43  22.37  -5.64 -35.41  17.18  [grid]
    6 v=-0.066769:  -9.86 -12.38  23.05 -13.87 -29.86 -13.99  [grid]
    7 v=-0.064496: -15.28  -3.29  16.38 -17.34 -16.31 -11.23  [rand]
    8 v=-0.051348: -15.29 -16.68   8.20 -13.64 -17.15 -15.35  [grid]
    9 v=-0.057861: -15.96 -17.11  10.40 -16.32 -15.69 -27.87  [grid]
   10 v=-0.038036: -17.13 -20.19  -6.28 -21.63  -5.57   9.98  [rand]
   11 v=-0.052927:   9.04 -28.30  11.27  15.69 -28.77  14.08  [grid]
   12 v=-0.044274: -13.47 -27.76  10.80 -26.65 -17.20 -21.76  [rand]
   13 v=-0.090961:  -7.30 -23.38  14.35 -11.57 -35.27 -12.92  [grid]
   14 v=-0.070834: -16.61 -21.21  17.83 -11.49 -34.04  13.08  [rand]
   15 v=-0.046231: -15.19 -15.32  31.27 -13.80 -34.29   6.31  [rand]
   16 v=-0.044486: -27.40 -12.76  21.53  30.77 -29.81  34.41  [grid]
   17 v=-0.048308: -13.81  11.15  11.35 -12.50 -16.57 -10.06  [grid]
   18 v=-0.049962: -19.40 -26.06   9.37 -14.69 -29.11  14.13  [grid]
   19 v=-0.083504: -12.81 -24.82  12.98 -14.83 -28.31 -19.21  [grid]
   20 v=-0.034781: -19.56 -34.84  30.58 -19.88  -3.73  17.84  [rand]
   21 v=-0.036374: -16.79 -13.39  21.74  30.13 -24.66  16.21  [grid]
   22 v=-0.077970: -10.34 -15.66  16.50 -14.56 -30.90 -14.05  [grid]
   23 v=-0.076065: -13.28 -21.81  16.21 -14.32 -27.91 -13.18  [rand]
   24 v=-0.034833:  12.13 -24.20  19.64 -33.49  12.10 -31.83  [grid]
   25 v=-0.047869: -22.97 -13.17  12.46 -38.64 -25.36   5.21  [rand]
   26 v=-0.037174: -17.94 -13.06  20.40  21.11  15.67 -15.75  [rand]
   27 v=-0.030124: -28.93 -12.31   9.23  15.43 -14.47  14.34  [grid]
   28 v=-0.086674:  -8.41 -12.72  21.22  -7.99 -23.77   0.39  [grid]
   29 v=-0.037104: -18.21 -19.27   1.93 -23.01  -5.23  -7.83  [rand]
   30 v=-0.034874: -17.31 -12.48  20.17  19.72  15.51 -16.11  [grid]
   31 v=-0.037239: -18.27  -9.08  19.83 -16.51 -15.86  15.90  [rand]
   32 v=-0.039849: -10.24  13.15  24.15 -14.74 -30.72 -14.35  [grid]
   33 v=-0.037055:  32.36 -15.82 -12.88 -11.72  -8.87 -40.72  [rand]
   34 v=-0.032778: -31.52 -12.51  21.03  15.09 -29.66  18.70  [grid]
  *35 v=-0.091977:  -6.64 -25.45   9.52  -7.89 -24.28  -4.20  [grid]
   36 v=-0.032887:  -6.32  10.91   3.49   4.40  22.54 -18.64  [rand]
   37 v=-0.056435: -10.20 -27.68  11.54 -25.76 -27.30 -16.20  [grid]
   38 v=-0.033746: -27.57  30.98   7.64 -13.75  29.53 -31.29  [grid]
   39 v=-0.045483: -28.52 -21.54  17.63  30.86 -32.56  33.95  [grid]
   40 v=-0.039379:  10.61  15.97 -17.35  11.35  29.53  -8.74  [grid]
   41 v=-0.037972: -34.66  10.03   6.96  11.25  -8.81  38.61  [rand]
   42 v=-0.079230: -12.43 -12.77  16.85  -5.54 -19.96  12.81  [grid]
   43 v=-0.032857: -11.16 -13.43  20.90 -13.75  16.37  14.62  [grid]
   44 v=-0.046727: -15.24 -21.03  24.22 -24.97 -33.16 -27.97  [grid]
 + - save #35 for twobest
 + - save #13 for twobest
 + - save #28 for twobest
 + - save #19 for twobest
 + - skip # 0 for twobest: too close to set #19
 + - save #42 for twobest
 + - save #22 for twobest
 + - save #23 for twobest
 + - save # 3 for twobest
 + - save # 5 for twobest
 + - save #14 for twobest
 + - save # 6 for twobest
 + - save # 7 for twobest
 + - save # 2 for twobest
 + - save # 1 for twobest
 + - save # 9 for twobest
 + - save #37 for twobest
 + - save #11 for twobest
 + - save # 8 for twobest
 + - save #18 for twobest
 + - save #17 for twobest
 + - save #25 for twobest
 + - save #44 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=75 usiz=192
 + - retaining old weight image
 + - using 28015 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24260 total points stored in 245 'RHDD(13.7332)' bloks
 + - param set #1 has cost=-0.068004
 + -- Parameters = -5.8961 -24.1701 9.9452 -7.4181 -24.0307 -3.4982 1.0197 1.0019 1.0024 0.0020 0.0010 0.0022
 + - param set #2 has cost=-0.073248
 + -- Parameters = -7.2422 -21.9091 14.3766 -10.7407 -34.1407 -13.4617 0.9971 0.9995 0.9982 0.0099 -0.0000 -0.0032
 + - param set #3 has cost=-0.072248
 + -- Parameters = -8.5495 -12.1506 20.5560 -7.8657 -19.1796 0.3653 1.0000 1.0025 0.9969 -0.0007 0.0008 -0.0001
 + - param set #4 has cost=-0.067008
 + -- Parameters = -11.6101 -22.7284 12.6138 -14.4011 -28.1550 -18.6437 1.0029 1.0006 1.0033 0.0001 0.0021 -0.0001
 + - param set #5 has cost=-0.077268
 + -- Parameters = -10.2895 -11.1061 15.6390 -4.9955 -19.4380 9.7054 1.0122 1.0124 1.0096 0.0097 0.0083 0.0099
 + - param set #6 has cost=-0.067903
 + -- Parameters = -9.2650 -17.6606 17.8143 -12.7605 -29.8394 -12.1647 1.0206 1.0077 0.9997 0.0002 -0.0005 0.0012
 + - param set #7 has cost=-0.068840
 + -- Parameters = -10.1499 -21.1042 14.7713 -12.8012 -31.2991 -15.1333 1.0087 1.0050 1.0118 0.0099 0.0033 0.0066
 + - param set #8 has cost=-0.056063
 + -- Parameters = -13.7651 -13.7650 17.0708 -9.9782 -25.6019 8.8790 1.0017 0.9910 0.9967 -0.0000 0.0130 -0.0065
 + - param set #9 has cost=-0.058389
 + -- Parameters = -16.0326 -27.0566 21.2271 -5.1360 -37.5019 17.7221 0.9930 1.0350 0.9971 -0.0035 -0.0015 0.0054
 + - param set #10 has cost=-0.055214
 + -- Parameters = -15.7509 -20.0932 16.6748 -11.8328 -32.7925 11.5726 0.9971 0.9967 1.0001 0.0103 -0.0043 0.0003
 + - param set #11 has cost=-0.066225
 + -- Parameters = -10.6161 -14.5201 19.0888 -13.6040 -29.1656 -13.0049 0.9958 0.9985 1.0038 -0.0029 0.0024 0.0029
*[#10614=-0.207362] *[#10630=-0.231879] *[#10631=-0.300806] *[#10632=-0.356354] *[#10637=-0.382477] *[#10638=-0.394568] *[#10641=-0.405311] *[#10642=-0.409151] *[#10643=-0.412658] *[#10644=-0.415392] *[#10647=-0.418751] *[#10648=-0.419577] *[#10649=-0.420922] *[#10651=-0.422001] *[#10652=-0.422431] *[#10654=-0.422557] *[#10655=-0.422657] *[#10661=-0.423309] *[#10664=-0.424285] *[#10665=-0.424346] 
 + - param set #12 has cost=-0.424346
 + -- Parameters = -0.5747 -0.8308 -0.2343 -0.2313 0.8000 -0.2752 0.9978 0.9987 0.9956 -0.0021 -0.0027 -0.0025
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.225 
 + --- dist(#3,#1) = 0.388 
 + --- dist(#4,#1) = 0.26 
 + --- dist(#5,#1) = 0.357 
 + --- dist(#6,#1) = 0.292 
 + --- dist(#7,#1) = 0.34 
 + --- dist(#8,#1) = 0.322 
 + --- dist(#9,#1) = 0.333 
 + --- dist(#10,#1) = 0.426 
 + --- dist(#11,#1) = 0.293 
 + --- dist(#12,#1) = 0.373 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=75 usiz=192
 + - retaining old weight image
 + - using 28015 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24503 total points stored in 254 'RHDD(13.5933)' bloks
*[#10679=-0.428538] *[#10690=-0.43068] *[#10705=-0.430832] *[#10710=-0.431112] *[#10715=-0.431433] *[#10717=-0.431789] *[#10720=-0.432004] *[#10723=-0.432427] *[#10724=-0.432699] *[#10725=-0.432806] *[#10730=-0.433035] *[#10731=-0.433139] *[#10734=-0.433312] *[#10739=-0.433411] *[#10744=-0.43378] *[#10747=-0.433948] *[#10754=-0.434044] *[#10759=-0.434159] *[#10762=-0.434439] *[#10763=-0.434696] *[#10768=-0.434747] *[#10772=-0.43496] *[#10777=-0.434974] 
 + - param set #1 has cost=-0.434974
 + -- Parameters = -0.4019 -0.6500 -0.2033 0.0456 0.6575 -0.3526 0.9975 1.0037 0.9934 0.0012 0.0057 -0.0017
 + - param set #2 has cost=-0.061352
 + -- Parameters = -10.2338 -10.9347 15.6459 -4.5297 -19.1067 10.0215 1.0119 1.0120 1.0092 0.0186 0.0092 0.0090
 + - param set #3 has cost=-0.060859
 + -- Parameters = -6.9652 -21.9254 14.2244 -10.4186 -34.5252 -13.4122 0.9982 1.0021 0.9933 0.0160 0.0011 -0.0037
 + - param set #4 has cost=-0.060892
 + -- Parameters = -8.5644 -12.1703 20.5354 -7.6764 -19.2991 0.5202 0.9993 1.0031 0.9969 -0.0007 0.0010 0.0066
 + - param set #5 has cost=-0.057710
 + -- Parameters = -9.3263 -20.4801 14.6050 -12.0581 -31.2658 -14.4279 1.0129 1.0182 1.0081 0.0090 0.0040 0.0061
 + - param set #6 has cost=-0.066360
 + -- Parameters = -5.9985 -19.7340 10.9517 -6.6716 -23.3829 -2.7073 1.0305 1.0145 1.0140 0.0071 0.0079 -0.0026
 + - param set #7 has cost=-0.058866
 + -- Parameters = -8.9203 -17.6037 17.8745 -12.7438 -29.8117 -12.1540 1.0211 1.0083 1.0004 -0.0001 0.0066 0.0013
 + - param set #8 has cost=-0.051922
 + -- Parameters = -11.5536 -22.4937 12.4785 -14.3313 -28.0125 -18.7105 1.0168 1.0026 1.0034 0.0008 0.0028 -0.0002
 + - param set #9 has cost=-0.058042
 + -- Parameters = -10.0684 -14.7555 17.4144 -12.6026 -28.1452 -11.5189 1.0028 1.0100 1.0025 -0.0103 0.0020 0.0097
 + - param set #10 has cost=-0.047124
 + -- Parameters = -15.7024 -26.9838 21.3389 -4.9544 -37.6193 17.5690 0.9929 1.0357 0.9975 -0.0043 -0.0011 0.0051
 + - param set #11 has cost=-0.052611
 + -- Parameters = -15.0552 -16.3670 16.4765 -9.9891 -23.2285 7.6550 1.0002 0.9933 0.9914 0.0040 0.0141 -0.0092
 + - param set #12 has cost=-0.046828
 + -- Parameters = -15.3676 -19.9399 16.5455 -11.8190 -32.8203 11.7474 1.0082 0.9977 0.9990 0.0098 -0.0043 -0.0011
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.267 
 + --- dist(#3,#1) = 0.22 
 + --- dist(#4,#1) = 0.259 
 + --- dist(#5,#1) = 0.391 
 + --- dist(#6,#1) = 0.339 
 + --- dist(#7,#1) = 0.32 
 + --- dist(#8,#1) = 0.355 
 + --- dist(#9,#1) = 0.265 
 + --- dist(#10,#1) = 0.319 
 + --- dist(#11,#1) = 0.425 
 + --- dist(#12,#1) = 0.372 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=75 usiz=192
 + - retaining old weight image
 + - using 28015 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24626 total points stored in 261 'RHDD(13.5079)' bloks
*[#11630=-0.450029] *[#11652=-0.45009] *[#11654=-0.450635] *[#11655=-0.451043] *[#11656=-0.45127] *[#11661=-0.451351] *[#11662=-0.451444] *[#11665=-0.451457] *[#11668=-0.451609] *[#11670=-0.451792] *[#11673=-0.452088] *[#11674=-0.452317] *[#11677=-0.452378] *[#11680=-0.452403] *[#11681=-0.452467] *[#11682=-0.452483] *[#11688=-0.452806] *[#11695=-0.452887] *[#11698=-0.452899] *[#11699=-0.452981] *[#11704=-0.453027] *[#11707=-0.453081] *[#11710=-0.453094] *[#11714=-0.453112] *[#11715=-0.453126] *[#11718=-0.453193] *[#11722=-0.4532] *[#11727=-0.453203] 
 + - param set #1 has cost=-0.453203
 + -- Parameters = -0.4250 -0.4207 -0.0369 -0.0123 0.4771 -0.2128 0.9982 1.0096 0.9959 -0.0006 0.0047 -0.0012
 + - param set #2 has cost=-0.068943
 + -- Parameters = -5.6128 -17.7226 11.9672 -6.1195 -23.5408 -2.6970 1.0254 1.0123 1.0015 0.0133 0.0046 -0.0050
 + - param set #3 has cost=-0.059357
 + -- Parameters = -10.2204 -10.8709 15.5589 -4.2992 -19.0859 10.2880 1.0105 1.0114 1.0013 0.0214 0.0073 0.0077
 + - param set #4 has cost=-0.061122
 + -- Parameters = -9.0472 -12.2427 19.7068 -6.6482 -19.3863 0.2097 0.9677 0.9795 0.9656 -0.0061 0.0068 0.0024
 + - param set #5 has cost=-0.052947
 + -- Parameters = -7.0341 -21.5862 14.4196 -10.5345 -34.5163 -13.2364 0.9982 1.0115 0.9915 0.0159 0.0015 -0.0037
 + - param set #6 has cost=-0.055846
 + -- Parameters = -8.6177 -17.6315 17.5734 -12.1345 -29.6595 -11.8435 1.0221 1.0233 0.9965 0.0020 0.0057 -0.0046
 + - param set #7 has cost=-0.054569
 + -- Parameters = -9.4564 -15.1409 17.6882 -12.2773 -28.0809 -10.4876 1.0041 1.0129 0.9999 -0.0152 0.0013 0.0075
 + - param set #8 has cost=-0.053142
 + -- Parameters = -8.5499 -20.7687 14.6866 -11.2745 -29.4452 -13.2193 1.0201 1.0211 1.0022 0.0099 0.0031 0.0025
 + - param set #9 has cost=-0.050572
 + -- Parameters = -14.8790 -16.1904 16.1217 -10.2499 -23.2037 7.0445 1.0015 0.9885 0.9875 0.0052 0.0141 -0.0020
 + - param set #10 has cost=-0.045509
 + -- Parameters = -10.4884 -22.2757 12.8144 -14.0244 -27.7879 -17.6088 1.0352 1.0053 0.9889 0.0021 0.0021 0.0007
 + - param set #11 has cost=-0.043209
 + -- Parameters = -14.1504 -26.7980 18.6210 -5.4545 -37.1398 16.0719 1.0017 1.0370 0.9967 -0.0083 -0.0006 0.0105
 + - param set #12 has cost=-0.041707
 + -- Parameters = -15.5589 -20.2486 16.3347 -11.9584 -32.7903 11.7025 1.0072 0.9993 0.9958 0.0100 -0.0039 -0.0015
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.267 
 + --- dist(#3,#1) = 0.247 
 + --- dist(#4,#1) = 0.217 
 + --- dist(#5,#1) = 0.335 
 + --- dist(#6,#1) = 0.317 
 + --- dist(#7,#1) = 0.332 
 + --- dist(#8,#1) = 0.389 
 + --- dist(#9,#1) = 0.263 
 + --- dist(#10,#1) = 0.314 
 + --- dist(#11,#1) = 0.418 
 + --- dist(#12,#1) = 0.37 
 + - Total coarse refinement net CPU time = 0.0 s; 3055 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=75 usiz=192
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24721 total points stored in 264 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.446038 *
 + -- Parameters = -0.4250 -0.4207 -0.0369 -0.0123 0.4771 -0.2128 0.9982 1.0096 0.9959 -0.0006 0.0047 -0.0012
 + - cost(#2)=-0.065005  
 + -- Parameters = -5.6128 -17.7226 11.9672 -6.1195 -23.5408 -2.6970 1.0254 1.0123 1.0015 0.0133 0.0046 -0.0050
 + - cost(#3)=-0.059641  
 + -- Parameters = -9.0472 -12.2427 19.7068 -6.6482 -19.3863 0.2097 0.9677 0.9795 0.9656 -0.0061 0.0068 0.0024
 + - cost(#4)=-0.055624  
 + -- Parameters = -10.2204 -10.8709 15.5589 -4.2992 -19.0859 10.2880 1.0105 1.0114 1.0013 0.0214 0.0073 0.0077
 + - cost(#5)=-0.049582  
 + -- Parameters = -8.6177 -17.6315 17.5734 -12.1345 -29.6595 -11.8435 1.0221 1.0233 0.9965 0.0020 0.0057 -0.0046
 + - cost(#6)=-0.047238  
 + -- Parameters = -9.4564 -15.1409 17.6882 -12.2773 -28.0809 -10.4876 1.0041 1.0129 0.9999 -0.0152 0.0013 0.0075
 + - cost(#7)=-0.049508  
 + -- Parameters = -8.5499 -20.7687 14.6866 -11.2745 -29.4452 -13.2193 1.0201 1.0211 1.0022 0.0099 0.0031 0.0025
 + - cost(#8)=-0.047786  
 + -- Parameters = -7.0341 -21.5862 14.4196 -10.5345 -34.5163 -13.2364 0.9982 1.0115 0.9915 0.0159 0.0015 -0.0037
 + - cost(#9)=-0.046589  
 + -- Parameters = -14.8790 -16.1904 16.1217 -10.2499 -23.2037 7.0445 1.0015 0.9885 0.9875 0.0052 0.0141 -0.0020
 + - cost(#10)=-0.039366  
 + -- Parameters = -10.4884 -22.2757 12.8144 -14.0244 -27.7879 -17.6088 1.0352 1.0053 0.9889 0.0021 0.0021 0.0007
 + - cost(#11)=-0.036179  
 + -- Parameters = -14.1504 -26.7980 18.6210 -5.4545 -37.1398 16.0719 1.0017 1.0370 0.9967 -0.0083 -0.0006 0.0105
 + - cost(#12)=-0.039049  
 + -- Parameters = -15.5589 -20.2486 16.3347 -11.9584 -32.7903 11.7025 1.0072 0.9993 0.9958 0.0100 -0.0039 -0.0015
 + - cost(#13)=-0.034902  
 + -- Parameters = -2.2212 0.6444 -4.3177 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.447361 *
 + -- Parameters = -0.3566 -0.4393 -0.0312 0.1321 0.3718 -0.2707 1.0001 1.0090 0.9945 -0.0015 0.0040 -0.0035
 + - cost(#2)=-0.072169  
 + -- Parameters = -4.1285 -15.3190 10.9444 -4.3587 -21.4903 -2.6450 1.0211 1.0430 0.9508 0.0470 0.0154 0.0029
 + - cost(#3)=-0.063057  
 + -- Parameters = -8.6563 -12.9307 19.1677 -6.4295 -19.4947 0.7026 0.9739 0.9732 0.9428 -0.0183 0.0076 0.0098
 + - cost(#4)=-0.056054  
 + -- Parameters = -10.1847 -10.8041 15.3846 -4.1101 -18.8114 10.3345 1.0111 1.0123 0.9996 0.0216 0.0021 0.0074
 + - cost(#5)=-0.055737  
 + -- Parameters = -7.3908 -19.1684 17.3549 -10.9423 -30.3459 -11.5774 1.0306 1.0391 0.9934 0.0069 0.0123 -0.0039
 + - cost(#6)=-0.050309  
 + -- Parameters = -7.7651 -16.6577 17.7268 -11.5832 -28.3179 -9.9611 1.0091 1.0151 0.9981 -0.0152 0.0011 0.0070
 + - cost(#7)=-0.051216  
 + -- Parameters = -7.6594 -19.7034 15.1056 -10.6710 -29.5841 -12.5864 1.0257 1.0293 1.0024 0.0129 0.0048 0.0045
 + - cost(#8)=-0.055808  
 + -- Parameters = -5.6427 -23.5796 15.5367 -8.6607 -34.9943 -11.8919 0.9732 1.0289 0.9798 0.0066 0.0048 -0.0020
 + - cost(#9)=-0.052227  
 + -- Parameters = -13.0684 -15.4355 17.3314 -8.6589 -23.5619 5.3313 1.0205 1.0028 0.9623 0.0090 0.0036 0.0020
 + - cost(#10)=-0.049763  
 + -- Parameters = -9.1297 -18.0626 14.9782 -12.5339 -26.6717 -11.9754 1.0457 1.0095 0.9904 0.0053 -0.0072 0.0050
 + - cost(#11)=-0.038003  
 + -- Parameters = -13.9934 -26.9111 18.1816 -5.1919 -37.3055 14.8744 1.0015 1.0365 0.9952 -0.0079 -0.0002 0.0102
 + - cost(#12)=-0.040346  
 + -- Parameters = -15.9521 -20.0961 16.2233 -13.1590 -32.9750 11.9045 1.0094 0.9975 0.9929 0.0115 -0.0037 -0.0015
 + - cost(#13)=-0.442342  
 + -- Parameters = -0.3718 -0.6293 -0.0585 0.0951 0.8991 -0.2456 0.9948 1.0066 0.9967 -0.0020 0.0031 0.0065
 + - case #1 is now the best
 + - Initial  cost = -0.447361
 + - Initial fine Parameters = -0.3566 -0.4393 -0.0312 0.1321 0.3718 -0.2707 1.0001 1.0090 0.9945 -0.0015 0.0040 -0.0035
 + - Finalish cost = -0.448554 ; 194 funcs
 + - Final    cost = -0.448554 ; 89 funcs
 + Final fine fit Parameters:
       x-shift=-0.3665   y-shift=-0.3292   z-shift=-0.0704
       z-angle= 0.1148   x-angle=-0.0049   y-angle=-0.3383
       x-scale= 0.9996   y-scale= 1.0096   z-scale= 0.9934
     y/x-shear=-0.0002 z/x-shear= 0.0063 z/y-shear=-0.0113
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.3665 -0.3292 -0.0704 0.1148 -0.0049 -0.3383 0.9996 1.0096 0.9934 -0.0002 0.0063 -0.0113
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 30.9
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 16.499998 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0021 -0.9648 0.2821 223.5693 0.0011 0.2976 0.9525 79.6381 -0.9996 0.0020 -0.0059 192.2309
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.2
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base MNI152_T1_2009c+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 29.2 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3566.420100 ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 142.649 58.3011   ITER = 12/137
142.649

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=0 xtop=0  ybot=1 ytop=2  zbot=15 ztop=0 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 193 x 232 x 208 volume ; autobbox = 19..173 21..211 17..179 [clock= 14s 110ms]
lev=0 0..192 0..231 0..199: [first cost=-0.75887] ... done [cost:-0.75887==>-0.86187]
lev=1 patch=145x175x157 [clock= 28m 7s 901ms]........:[cost=-0.88154]:........ done [cost:-0.86187==>-0.88506 ; 16 patches optimized, 0 skipped]
lev=2 patch=109x131x117 [clock= 49m 10s 604ms]..................... done [cost:-0.88506==>-0.95759 ; 21 patches optimized, 6 skipped]
lev=3 patch=81x99x89 [clock= 1h 3m 12s 386ms]................ done [cost:-0.95759==>-1.01891 ; 41 patches optimized, 23 skipped]
lev=4 patch=61x73x67 [clock= 1h 16m 25s 494ms]........ done [cost:-1.01891==>-1.08325 ; 73 patches optimized, 52 skipped]
lev=5 patch=47x55x49 [clock= 1h 26m 8s 619ms]................... done [cost:-1.08325==>-1.15637 ; 193 patches optimized, 150 skipped]
lev=6 patch=35x41x37 [clock= 1h 36m 39s 672ms]............... done [cost:-1.15637==>-1.20792 ; 451 patches optimized, 359 skipped]
lev=7 patch=25x25x25 [clock= 1h 47m 11s 720ms].................................... done [cost:-1.20792==>-1.29482 ; 1528 patches optimized, 1384 skipped]
++ ========== total number of parameters 'optimized' = 56049
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 1h 59m 1s 868ms
#++ Applying warps to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8941/tb8941.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 19.9 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_T1_2009c+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
if ( ! -f Sag3DMPRAGEs002a1001_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.tb8941.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 16.499998 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb8941.r01.tshift+orig.BRIK is 16.499998 degrees from plumb.
++ Reading input dataset ./pb02.tb8941.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29991 voxels
 + 4964 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.392  pitch=-0.275  yaw=-0.122  dS=-0.206  dL=-0.603  dP=-0.556
++ Mean: roll=-0.201  pitch=-0.086  yaw=-0.008  dS=+0.328  dL=-0.332  dP=-0.326
++ Max : roll=+0.034  pitch=+0.142  yaw=+0.155  dS=+0.505  dL=+0.037  dP=+0.194
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.50(0.50) 0.38(0.13) 0.39(0.08) 0.31(0.09) 0.31(0.03) 0.26(0.07) 0.25(0.10) 0.26(0.04) 0.22(0.09) 0.27(0.07) 0.27(0.06) 0.23(0.05) 0.22(0.04) 0.17(0.08) 0.13(0.06) 0.14(0.05) 0.16(0.25) 0.57(0.47) 0.46(0.16) 0.41(0.16) 0.52(0.13) 0.59(0.11) 0.65(0.08) 0.63(0.05) 0.63(0.04) 0.67(0.05) 0.71(0.09) 0.80(0.10) 0.85(0.07) 0.91(0.07) 0.93(0.04) 0.94(0.05) 0.97(0.04) 0.99(0.06) 1.01(0.04) 1.01(0.04) 1.00(0.03) 1.02(0.07) 1.02(0.06) 0.98(0.09) 1.02(0.05) 1.03(0.03) 1.07(0.04) 1.07(0.03) 1.08(0.03) 1.12(0.05) 1.12(0.03) 1.10(0.04) 1.12(0.05) 1.12(0.04) 1.14(0.05) 1.13(0.05) 1.18(0.08) 1.16(0.06) 1.15(0.04) 1.16(0.05) 1.13(0.04) 1.16(0.06) 1.18(0.07) 1.19(0.03) 1.18(0.05) 1.18(0.02) 1.18(0.05) 1.19(0.03) 1.13(0.09) 1.12(0.05) 1.15(0.05) 1.14(0.06) 1.13(0.05) 1.12(0.04) 1.09(0.06) 1.12(0.07) 1.12(0.04) 1.11(0.03) 1.13(0.07) 1.10(0.05) 1.11(0.04) 1.08(0.09) 1.06(0.05) 1.06(0.04) 1.01(0.07) 1.02(0.11) 1.02(0.08) 1.06(0.08) 1.01(0.10) 0.99(0.07) 1.09(0.11) 1.05(0.08) 1.06(0.06) 1.17(0.13) 1.12(0.09) 1.17(0.07) 1.20(0.06) 1.22(0.03) 1.24(0.06) 1.24(0.04) 1.27(0.03) 1.25(0.06) 1.26(0.02) 1.33(0.10) 1.31(0.09) 1.25(0.07) 1.26(0.05) 1.32(0.09) 1.38(0.08) 1.30(0.09) 1.26(0.15) 1.27(0.13) 1.30(0.08) 1.30(0.06) 1.35(0.10) 1.41(0.08) 1.31(0.14) 1.31(0.07) 1.36(0.07) 1.38(0.08) 1.31(0.08) 1.28(0.03) 1.35(0.09) 1.33(0.07) 1.27(0.08) 1.31(0.05) 1.29(0.05) 1.29(0.06) 1.27(0.06) 1.26(0.05) 1.27(0.10) 1.28(0.09) 1.28(0.07) 1.26(0.08) 1.18(0.12) 1.13(0.10) 1.20(0.14) 1.19(0.04) 1.14(0.07) 1.14(0.12) 1.12(0.08) 0.98(0.19) 0.97(0.07) 0.98(0.06) 1.00(0.32) 0.89(0.24) 0.90(0.28) 0.79(0.22) 0.71(0.10) 0.67(0.08) 0.64(0.09) 0.80(0.17) 0.72(0.14)
++ Max displacement in automask = 1.41 (mm) at sub-brick 112
++ Max delta displ  in automask = 0.50 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.tb8941.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb8941.r01.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb8941.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb8941.r01.tshift+orig.BRIK is 16.499998 degrees from plumb.
++ opened source dataset 'pb02.tb8941.r01.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 485.3 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 16.499998 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.tb8941.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 16.499998 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb8941.r02.tshift+orig.BRIK is 16.499998 degrees from plumb.
++ Reading input dataset ./pb02.tb8941.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30073 voxels
 + 4963 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.385  pitch=+0.156  yaw=-0.562  dS=-0.875  dL=-0.213  dP=-0.455
++ Mean: roll=-0.242  pitch=+0.251  yaw=-0.419  dS=-0.482  dL=+0.126  dP=-0.171
++ Max : roll=-0.098  pitch=+0.441  yaw=-0.349  dS=-0.240  dL=+0.428  dP=+0.153
++ Max displacements (mm) for each sub-brick:
 1.26(0.00) 1.34(0.21) 1.47(0.15) 1.59(0.16) 1.73(0.16) 1.67(0.11) 1.73(0.14) 1.68(0.13) 1.74(0.08) 1.71(0.07) 1.69(0.06) 1.57(0.13) 1.58(0.05) 1.47(0.27) 1.51(0.14) 1.52(0.07) 1.47(0.07) 1.44(0.06) 1.47(0.06) 1.39(0.08) 1.41(0.06) 1.43(0.08) 1.45(0.21) 1.46(0.11) 1.47(0.17) 1.45(0.09) 1.46(0.07) 1.44(0.07) 1.40(0.05) 1.39(0.03) 1.38(0.10) 1.45(0.13) 1.37(0.13) 1.34(0.08) 1.33(0.05) 1.33(0.08) 1.38(0.07) 1.35(0.07) 1.33(0.08) 1.30(0.06) 1.27(0.05) 1.26(0.06) 1.19(0.09) 1.18(0.06) 1.16(0.07) 1.19(0.09) 1.14(0.06) 1.04(0.11) 1.04(0.02) 1.06(0.07) 1.02(0.10) 1.01(0.07) 1.02(0.04) 1.02(0.07) 1.03(0.07) 1.04(0.09) 0.99(0.08) 0.98(0.03) 0.98(0.08) 1.00(0.04) 1.00(0.04) 0.98(0.05) 0.99(0.11) 1.00(0.13) 0.98(0.06) 0.98(0.04) 1.01(0.07) 1.00(0.05) 1.01(0.09) 1.01(0.08) 0.96(0.06) 0.99(0.05) 0.99(0.06) 1.03(0.08) 1.04(0.04) 0.97(0.09) 1.02(0.09) 1.08(0.09) 1.08(0.03) 1.08(0.09) 1.07(0.08) 1.05(0.30) 1.08(0.10) 1.09(0.09) 1.07(0.05) 1.01(0.07) 0.98(0.10) 1.07(0.17) 1.02(0.05) 1.06(0.07) 1.10(0.12) 1.06(0.10) 1.04(0.05) 1.06(0.12) 1.07(0.05) 1.13(0.10) 1.11(0.10) 1.06(0.08) 1.06(0.10) 1.07(0.04) 1.10(0.07) 1.07(0.10) 1.07(0.10) 1.05(0.10) 1.09(0.09) 1.08(0.09) 1.09(0.04) 1.12(0.11) 1.11(0.05) 1.10(0.04) 1.04(0.08) 1.06(0.05) 1.09(0.07) 1.09(0.17) 1.06(0.06) 1.06(0.05) 1.06(0.07) 1.04(0.06) 1.09(0.05) 1.02(0.08) 1.10(0.11) 1.08(0.04) 1.05(0.07) 1.14(0.10) 1.09(0.06) 1.13(0.05) 1.08(0.10) 1.05(0.06) 1.14(0.12) 1.16(0.05) 1.26(0.15) 1.30(0.17) 1.33(0.16) 1.37(0.19) 1.39(0.06) 1.34(0.08) 1.37(0.11) 1.34(0.12) 1.39(0.10) 1.43(0.06) 1.41(0.07) 1.59(0.37) 1.61(0.34) 1.53(0.11) 1.56(0.08) 1.58(0.08) 1.64(0.13) 1.58(0.12) 1.55(0.08) 1.56(0.06)
++ Max displacement in automask = 1.74 (mm) at sub-brick 8
++ Max delta displ  in automask = 0.37 (mm) at sub-brick 141
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.tb8941.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb8941.r02.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb8941.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb8941.r02.tshift+orig.BRIK is 16.499998 degrees from plumb.
++ opened source dataset 'pb02.tb8941.r02.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 503.0 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 16.499998 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.tb8941.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 16.499998 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb8941.r03.tshift+orig.BRIK is 16.499998 degrees from plumb.
++ Reading input dataset ./pb02.tb8941.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30213 voxels
 + 4998 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.680  pitch=+0.042  yaw=-0.585  dS=-1.309  dL=-0.890  dP=-0.200
++ Mean: roll=-0.430  pitch=+0.306  yaw=-0.474  dS=-0.750  dL=-0.632  dP=-0.080
++ Max : roll=-0.210  pitch=+0.607  yaw=-0.279  dS=-0.592  dL=-0.313  dP=+0.055
++ Max displacements (mm) for each sub-brick:
 2.22(0.00) 2.56(0.38) 2.39(0.28) 2.29(0.14) 2.39(0.13) 2.37(0.06) 2.35(0.06) 2.36(0.08) 2.31(0.10) 2.31(0.03) 2.23(0.17) 2.19(0.08) 2.14(0.06) 2.11(0.05) 2.04(0.08) 2.02(0.16) 2.22(0.39) 2.23(0.23) 2.14(0.17) 2.12(0.06) 2.11(0.04) 2.10(0.03) 2.08(0.05) 2.13(0.07) 2.01(0.17) 2.07(0.09) 2.00(0.13) 2.02(0.06) 1.97(0.06) 1.93(0.05) 1.93(0.03) 1.94(0.09) 1.93(0.06) 1.91(0.04) 1.93(0.06) 1.90(0.06) 1.90(0.03) 1.86(0.08) 1.85(0.05) 1.89(0.06) 1.88(0.05) 1.89(0.07) 1.88(0.06) 1.83(0.05) 1.85(0.05) 1.83(0.04) 1.89(0.09) 1.84(0.11) 1.85(0.03) 1.84(0.02) 1.85(0.07) 1.84(0.05) 1.80(0.06) 1.81(0.03) 1.77(0.06) 1.80(0.07) 1.76(0.10) 1.84(0.15) 1.78(0.08) 1.78(0.06) 1.76(0.05) 1.78(0.04) 1.81(0.04) 1.79(0.05) 1.85(0.08) 1.80(0.09) 1.83(0.09) 1.82(0.03) 1.85(0.03) 1.87(0.04) 1.83(0.04) 1.84(0.06) 1.80(0.05) 1.83(0.05) 1.85(0.06) 1.85(0.06) 1.85(0.11) 1.79(0.09) 1.89(0.12) 1.86(0.07) 1.89(0.06) 1.87(0.08) 1.90(0.07) 1.87(0.06) 1.89(0.02) 1.91(0.06) 1.86(0.07) 1.89(0.05) 1.85(0.08) 1.89(0.10) 1.84(0.09) 1.96(0.16) 1.88(0.17) 1.91(0.07) 1.90(0.05) 1.92(0.04) 1.90(0.05) 1.87(0.03) 1.88(0.05) 1.89(0.04) 1.92(0.08) 1.87(0.10) 1.93(0.10) 1.93(0.06) 1.95(0.06) 1.90(0.11) 2.03(0.18) 1.94(0.17) 1.95(0.08) 1.96(0.06) 1.96(0.09) 1.95(0.10) 1.99(0.10) 1.93(0.11) 1.95(0.10) 1.95(0.04) 1.96(0.10) 1.97(0.04) 1.97(0.02) 1.98(0.05) 1.96(0.05) 2.00(0.04) 1.99(0.02) 2.03(0.06) 2.02(0.11) 2.04(0.08) 2.00(0.05) 2.04(0.10) 2.06(0.11) 2.14(0.09) 2.15(0.06) 2.19(0.09) 2.23(0.07) 2.20(0.11) 2.26(0.11) 2.26(0.03) 2.32(0.07) 2.28(0.09) 2.26(0.07) 2.29(0.07) 2.27(0.08) 2.46(0.23) 2.45(0.08) 2.42(0.13) 2.50(0.22) 2.32(0.33) 2.18(0.22) 2.10(0.20) 2.05(0.08) 2.10(0.07)
++ Max displacement in automask = 2.56 (mm) at sub-brick 1
++ Max delta displ  in automask = 0.39 (mm) at sub-brick 16
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.tb8941.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb8941.r03.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb8941.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb8941.r03.tshift+orig.BRIK is 16.499998 degrees from plumb.
++ opened source dataset 'pb02.tb8941.r03.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 498.5 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 16.499998 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb8941.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8941.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb8941.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8941.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb8941.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8941.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source vr_base+orig -nwarp anat.un.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 16.499998 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 14.5 sec
3dcopy Sag3DMPRAGEs002a1001_ns+tlrc anat_final.tb8941
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.tb8941+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb8941+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets
++ 1882278 voxels in source_automask+0
++ Zero-pad: xbot=1 xtop=2
++ Zero-pad: ybot=3 ytop=2
++ Computing -autobox
++ 318370 voxels [91.7%] in weight mask
++ Number of points for matching = 149633
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.130005
   sp   = 0.267355
   mi   = -0.669914
   crM  = 0.0353051
   nmi  = 0.879202
   je   = 4.87578
   hel  = -0.148254
   crA  = 0.187972
   crU  = 0.193305
   lss  = 0.869995
   lpc  = 0.136436
   lpa  = 0.863564
   lpc+ = 0.227432
   ncd  = 0.999982
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.6
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb8941+tlrc -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb8941+tlrc'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 22.2 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb8941.r01.blur pb03.tb8941.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb8941.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb8941.r02.blur pb03.tb8941.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb8941.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb8941.r03.blur pb03.tb8941.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb8941.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb04.tb8941.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb8941.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 433.950775
 + Used gradual clip level = 400.343323 .. 488.562714
 + Number voxels above clip level = 67990
 + Clustering voxels ...
 + Largest cluster has 67335 voxels
 + Clustering voxels ...
 + Largest cluster has 67102 voxels
 + Filled   113 voxels in small holes; now have 67215 voxels
 + Filled     3 voxels in large holes; now have 67218 voxels
 + Clustering voxels ...
 + Largest cluster has 67218 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 244078 voxels
 + Mask now has 67218 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 234649 voxels
++ 76647 voxels in the mask [out of 311296: 24.62%]
++ first   6 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   6 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   5 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb04.tb8941.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb8941.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 435.677246
 + Used gradual clip level = 402.256073 .. 490.704529
 + Number voxels above clip level = 67985
 + Clustering voxels ...
 + Largest cluster has 67336 voxels
 + Clustering voxels ...
 + Largest cluster has 67126 voxels
 + Filled   119 voxels in small holes; now have 67245 voxels
 + Filled     2 voxels in large holes; now have 67247 voxels
 + Clustering voxels ...
 + Largest cluster has 67246 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 244042 voxels
 + Mask now has 67254 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 234653 voxels
++ 76643 voxels in the mask [out of 311296: 24.62%]
++ first   6 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   6 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   5 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb04.tb8941.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb8941.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 435.495789
 + Used gradual clip level = 400.021515 .. 489.138062
 + Number voxels above clip level = 68118
 + Clustering voxels ...
 + Largest cluster has 67449 voxels
 + Clustering voxels ...
 + Largest cluster has 67159 voxels
 + Filled   108 voxels in small holes; now have 67267 voxels
 + Filled     2 voxels in large holes; now have 67269 voxels
 + Clustering voxels ...
 + Largest cluster has 67269 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 244019 voxels
 + Mask now has 67277 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 234611 voxels
++ 76685 voxels in the mask [out of 311296: 24.63%]
++ first   6 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   6 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   5 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.tb8941
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 76974 survived, 234322 were zero
++ writing result full_mask.tb8941...
3dresample -master full_mask.tb8941+tlrc -input Sag3DMPRAGEs002a1001_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.tb8941
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 97720 survived, 213576 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb8941...
3dABoverlap -no_automask full_mask.tb8941+tlrc mask_anat.tb8941+tlrc
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#A=./full_mask.tb8941+tlrc.BRIK  B=./mask_anat.tb8941+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
76974        97720        97896        76798        176          20922         0.2286     21.4102     1.1274     1.0820     1.2655
3ddot -dodice full_mask.tb8941+tlrc mask_anat.tb8941+tlrc
tee out.mask_ae_dice.txt
0.879229	
3dresample -master full_mask.tb8941+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71790 survived, 239506 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb04.tb8941.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.tb8941.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb8941.r01.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb8941.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.tb8941.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.tb8941.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb8941.r02.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb8941.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.tb8941.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.tb8941.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb8941.r03.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb8941.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb8941
total number of censored TRs (simple form) = 2
1deval -a motion_tb8941_censor.1D -b outcount_tb8941_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb8941_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb05.tb8941.r01.scale+tlrc.HEAD pb05.tb8941.r02.scale+tlrc.HEAD pb05.tb8941.r03.scale+tlrc.HEAD -censor censor_tb8941_combined_2.1D -polort 3 -local_times -num_stimts 18 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll_01 -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch_01 -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw_01 -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS_01 -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL_01 -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP_01 -stim_file 13 motion_deriv.1D[0] -stim_base 13 -stim_label 13 roll_02 -stim_file 14 motion_deriv.1D[1] -stim_base 14 -stim_label 14 pitch_02 -stim_file 15 motion_deriv.1D[2] -stim_base 15 -stim_label 15 yaw_02 -stim_file 16 motion_deriv.1D[3] -stim_base 16 -stim_label 16 dS_02 -stim_file 17 motion_deriv.1D[4] -stim_base 17 -stim_label 17 dL_02 -stim_file 18 motion_deriv.1D[5] -stim_base 18 -stim_label 18 dP_02 -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +uns1 -str1 -glt_label 4 unstructured-structured BL1 -gltsym SYM: +uns2 -str2 -glt_label 5 unstructured-structured BL2 -gltsym SYM: +uns3 -str3 -glt_label 6 unstructured-structured BL3 -gltsym SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3 -glt_label 7 task -gltsym SYM: +uns1 +str1 -glt_label 8 task BL1 -gltsym SYM: +uns2 +str2 -glt_label 9 task BL2 -gltsym SYM: +uns3 +str3 -glt_label 10 task BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb8941 -errts errts.tb8941 -bucket stats.tb8941
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 596,852 bytes (about 597 thousand [kilo])
++ loading dataset pb05.tb8941.r01.scale+tlrc.HEAD pb05.tb8941.r02.scale+tlrc.HEAD pb05.tb8941.r03.scale+tlrc.HEAD
++ current memory malloc-ated = 561,233,701 bytes (about 561 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 225574 voxels (out of 311296 = 72.5%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 -str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 -str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 +str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 447 (after)
 + Number of parameters:  30 [24 baseline ; 6 signal]
++ total shared memory needed = 1,181,679,616 bytes (about 1.2 billion [giga])
++ current memory malloc-ated = 561,588,601 bytes (about 562 million [mega])
++ mmap() memory allocated: 1,181,679,616 bytes (about 1.2 billion [giga])
++ Memory required for output bricks = 1,181,679,616 bytes (about 1.2 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.tb8941.r01.scale+tlrc.HEAD pb05.tb8941.r02.scale+tlrc.HEAD pb05.tb8941.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.tb8941_REML -Rvar stats.tb8941_REMLvar \
 -Rfitts fitts.tb8941_REML -Rerrts errts.tb8941_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (447x30):  4.48117  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (447x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (447x24):  4.06744  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (447x12):  2.48338  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (447x12):  1.05525  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.88263e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.59 s
++ Voxels in dataset: 311296
++ Voxels per job:    31129
++ Job #1: processing voxels 31129 to 62257; elapsed time=7.193
++ Job #2: processing voxels 62258 to 93386; elapsed time=7.215
++ Job #3: processing voxels 93387 to 124515; elapsed time=7.240
++ Job #4: processing voxels 124516 to 155644; elapsed time=7.266
++ Job #5: processing voxels 155645 to 186773; elapsed time=7.311
++ Job #6: processing voxels 186774 to 217902; elapsed time=7.347
++ Job #7: processing voxels 217903 to 249031; elapsed time=7.382
++ Job #8: processing voxels 249032 to 280160; elapsed time=7.422
++ Job #9: processing voxels 280161 to 311295; elapsed time=7.466
++ Job #0: processing voxels 0 to 31128; elapsed time=7.471
++ voxel loop:0123456789.0123456789.0123456789.0123456789.01234567++ Job #3 finished; elapsed time=80.308
++ Job #2 finished; elapsed time=81.373
8++ Job #7 finished; elapsed time=81.721
++ Job #8 finished; elapsed time=82.174
9.
++ Job #0 waiting for children to finish; elapsed time=82.702
++ Job #6 finished; elapsed time=82.720
++ Job #9 finished; elapsed time=82.797
++ Job #1 finished; elapsed time=82.954
++ Job #4 finished; elapsed time=83.349
++ Job #5 finished; elapsed time=83.443
++ Job #0 now finishing up; elapsed time=83.457
++ Smallest FDR q [0 Full_Fstat] = 1.35576e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 1.05006e-13
++ Smallest FDR q [3 uns1_Fstat] = 1.05003e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 2.6324e-13
++ Smallest FDR q [6 uns2_Fstat] = 2.63236e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 3.47714e-14
++ Smallest FDR q [9 uns3_Fstat] = 3.47699e-14
++ Smallest FDR q [11 str1#0_Tstat] = 1.0456e-13
++ Smallest FDR q [12 str1_Fstat] = 1.0456e-13
++ Smallest FDR q [14 str2#0_Tstat] = 2.31506e-13
++ Smallest FDR q [15 str2_Fstat] = 2.31504e-13
++ Smallest FDR q [17 str3#0_Tstat] = 3.72924e-14
++ Smallest FDR q [18 str3_Fstat] = 3.72924e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 3.69194e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 3.6919e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 3.7362e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 3.73625e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 2.29878e-08
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 2.29886e-08
++ Smallest FDR q [29 unstructured-structured BL1_GLT#0_Tstat] = 9.11992e-08
++ Smallest FDR q [30 unstructured-structured BL1_GLT_Fstat] = 9.12e-08
++ Smallest FDR q [32 unstructured-structured BL2_GLT#0_Tstat] = 1.32745e-11
++ Smallest FDR q [33 unstructured-structured BL2_GLT_Fstat] = 1.32749e-11
++ Smallest FDR q [35 unstructured-structured BL3_GLT#0_Tstat] = 9.77364e-09
++ Smallest FDR q [36 unstructured-structured BL3_GLT_Fstat] = 9.77386e-09
++ Smallest FDR q [38 task_GLT#0_Tstat] = 3.47803e-14
++ Smallest FDR q [39 task_GLT_Fstat] = 3.47813e-14
++ Smallest FDR q [41 task BL1_GLT#0_Tstat] = 9.58914e-14
++ Smallest FDR q [42 task BL1_GLT_Fstat] = 9.58938e-14
++ Smallest FDR q [44 task BL2_GLT#0_Tstat] = 2.37225e-13
++ Smallest FDR q [45 task BL2_GLT_Fstat] = 2.37233e-13
++ Smallest FDR q [47 task BL3_GLT#0_Tstat] = 3.25889e-14
++ Smallest FDR q [48 task BL3_GLT_Fstat] = 3.25889e-14
++ Wrote bucket dataset into ./stats.tb8941+tlrc.BRIK
 + created 33 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb8941+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.tb8941+tlrc.BRIK
++ Program finished; elapsed time=167.429
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.733       0.796  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.729       0.794  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.725       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.479       0.555  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.477       0.553  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.474       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb05.tb8941.r01.scale+tlrc.HEAD pb05.tb8941.r02.scale+tlrc.HEAD pb05.tb8941.r03.scale+tlrc.HEAD -fout -tout -Rbuck stats.tb8941_REML -Rvar stats.tb8941_REMLvar -Rfitts fitts.tb8941_REML -Rerrts errts.tb8941_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 311296 voxels
++ FDR automask has 225574 voxels (out of 311296 = 72.5%)
++ -----  matrix condition (447x30):  4.48117  ++ VERY GOOD ++
 + masked off 85704 voxels for being all zero; 225592 left in mask
++ Converting input dataset to vector image
 +  dataset = 560 million [mega] bytes
 +  vectim  = 407 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=15.61
 + X matrix: 57.338% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=447 cols=30; 109*1 cases; total CPU=0.00 Elapsed=15.66
 +  average case bandwidth = 12.52
++ REML voxel loop: [6 threads]0123456789.0123456789.0123456789.0123456
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=184.01
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=278.37
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./stats.tb8941_REMLvar+tlrc.BRIK
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./fitts.tb8941_REML+tlrc.BRIK
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./errts.tb8941_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.tb8941_REML+tlrc
++ Smallest FDR q [0 Full_Fstat] = 2.2587e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 7.56417e-13
++ Smallest FDR q [3 uns1_Fstat] = 7.56417e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 6.13912e-12
++ Smallest FDR q [6 uns2_Fstat] = 6.13912e-12
++ Smallest FDR q [8 uns3#0_Tstat] = 3.94348e-13
++ Smallest FDR q [9 uns3_Fstat] = 3.94348e-13
++ Smallest FDR q [11 str1#0_Tstat] = 8.62228e-13
++ Smallest FDR q [12 str1_Fstat] = 8.62228e-13
++ Smallest FDR q [14 str2#0_Tstat] = 7.76729e-12
++ Smallest FDR q [15 str2_Fstat] = 7.76729e-12
++ Smallest FDR q [17 str3#0_Tstat] = 6.63194e-13
++ Smallest FDR q [18 str3_Fstat] = 6.63194e-13
++ Smallest FDR q [20 unstructured#0_Tstat] = 2.73434e-13
++ Smallest FDR q [21 unstructured_Fstat] = 2.73434e-13
++ Smallest FDR q [23 structured#0_Tstat] = 3.84386e-13
++ Smallest FDR q [24 structured_Fstat] = 3.84386e-13
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.247284 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.247285 ==> few true single voxel detections
++ Smallest FDR q [29 unstructured-structured_BL1#0_Tstat] = 0.00913722
++ Smallest FDR q [30 unstructured-structured_BL1_Fstat] = 0.00913722
++ Smallest FDR q [32 unstructured-structured_BL2#0_Tstat] = 0.0122778
++ Smallest FDR q [33 unstructured-structured_BL2_Fstat] = 0.0122778
++ Smallest FDR q [35 unstructured-structured_BL3#0_Tstat] = 0.0697958
++ Smallest FDR q [36 unstructured-structured_BL3_Fstat] = 0.0697959
++ Smallest FDR q [38 task#0_Tstat] = 2.81515e-13
++ Smallest FDR q [39 task_Fstat] = 2.81515e-13
++ Smallest FDR q [41 task_BL1#0_Tstat] = 7.15709e-13
++ Smallest FDR q [42 task_BL1_Fstat] = 7.15709e-13
++ Smallest FDR q [44 task_BL2#0_Tstat] = 5.194e-12
++ Smallest FDR q [45 task_BL2_Fstat] = 5.194e-12
++ Smallest FDR q [47 task_BL3#0_Tstat] = 3.89479e-13
++ Smallest FDR q [48 task_BL3_Fstat] = 3.89479e-13
 + Added 33 FDR curves to dataset stats.tb8941_REML+tlrc
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./stats.tb8941_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=704.13
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb8941 pb05.tb8941.r01.scale+tlrc.HEAD pb05.tb8941.r02.scale+tlrc.HEAD pb05.tb8941.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ elapsed time = 78.7 s
3dTstat -mean -prefix rm.signal.all all_runs.tb8941+tlrc[2..149,151..449]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
** Can't read ANY data from file 'all_runs.tb8941+tlrc.HEAD'
[7m** FATAL ERROR:[0m Can't open dataset all_runs.tb8941+tlrc[2..149,151..449]
** Program compile date = Dec 22 2017
