echo auto-generated by afni_proc.py, Wed Aug  9 12:15:49 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:49 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:49 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb8630
endif
set output_dir = tb8630.srtt
if ( -d tb8630.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb8630.srtt
mkdir tb8630.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb8630.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb8630.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb8630.srtt/pb00.tb8630.r01.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.7 s
3dTcat -prefix tb8630.srtt/pb00.tb8630.r02.tcat func_srtt/ep2dbold156s009a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb8630.srtt/pb00.tb8630.r03.tcat func_srtt/ep2dbold156s011a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.7 s
set tr_counts = ( 150 150 150 )
cd tb8630.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8630.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8630.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8630.r01.tcat+orig.BRIK is 16.699999 degrees from plumb.
++ 27938 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8630.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8630.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8630.r02.tcat+orig.BRIK is 16.699999 degrees from plumb.
++ 27927 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8630.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8630.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8630.r03.tcat+orig.BRIK is 16.699999 degrees from plumb.
++ 27783 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb8630.r01.tshift -tpattern alt+z2 pb00.tb8630.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8630.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8630.r01.tcat+orig.BRIK is 16.699999 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8630.r02.tshift -tpattern alt+z2 pb00.tb8630.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8630.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8630.r02.tcat+orig.BRIK is 16.699999 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8630.r03.tshift -tpattern alt+z2 pb00.tb8630.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8630.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8630.r03.tcat+orig.BRIK is 16.699999 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb8630.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 16.699999 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 385.062500
 + Used gradual clip level = 352.559998 .. 431.004608
 + Number voxels above clip level = 29639
 + Clustering voxels ...
 + Largest cluster has 28336 voxels
 + Clustering voxels ...
 + Largest cluster has 27568 voxels
 + Filled   334 voxels in small holes; now have 27902 voxels
 + Filled     3 voxels in large holes; now have 27905 voxels
 + Clustering voxels ...
 + Largest cluster has 27905 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 103167 voxels
 + Mask now has 27905 voxels
++ 27905 voxels in the mask [out of 131072: 21.29%]
++ first  14 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first   4 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 956.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/956.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 16.699999 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 16.699999 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1418784 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 27905 voxels [17.0%] in weight mask
++ Number of points for matching = 27905
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.683 29.311 21.213 (index)
 + source center of mass = 86.836 167.640 198.142 (index)
 + source-target CM = 2.055 -10.242 27.835 (xyz)
 + center of mass shifts = 2.055 -10.242 27.835
++ shift param auto-range: -67.5..71.6 -79.8..59.3 -22.2..77.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -7.945343 .. 12.054657
 + Range param#2 [y-shift] = -20.242355 .. -0.242355
 + Range param#3 [z-shift] = 17.835274 .. 37.835274
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -37.945343 .. 42.054657
 + Range param#2 [y-shift] = -50.242355 .. 29.757645
 + Range param#3 [z-shift] = -12.164726 .. 67.835274
 + 12 free parameters
++ Normalized convergence radius = 0.000455
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1418784 [out of 17909936] voxels
 + base mask has 38300 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=64 usiz=196
 + - copying weight image
 + - using 27905 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 23751 total points stored in 222 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--.-o..-....+*[#92=-0.0545026] **[#115=-0.060158] *-..------.$.+.
 + - best 45 costs found:
    0 v=-0.060158:  28.72 -23.58  41.17  15.00 -15.00 -15.00  [grid]
    1 v=-0.054503: -24.61 -23.58  41.17 -15.00 -15.00  15.00  [grid]
    2 v=-0.042999: -14.16   3.87  -7.30 -15.74  34.09   7.78  [rand]
    3 v=-0.040502:   2.05 -10.24  27.84   0.00   0.00   0.00  [grid]
    4 v=-0.038251: -30.43 -24.93  39.64 -11.16  -9.40  34.39  [rand]
    5 v=-0.035534:   6.13 -16.47  35.63  -4.32 -22.85 -18.95  [rand]
    6 v=-0.035214:  15.39 -23.58  41.17  15.00 -30.00 -15.00  [grid]
    7 v=-0.035002: -13.93   9.25  33.56 -20.53   3.14  10.08  [rand]
    8 v=-0.034444: -18.92 -38.62  60.08  -3.65 -28.33  14.78  [rand]
    9 v=-0.034194: -24.61 -23.58  54.50 -15.00 -30.00  15.00  [grid]
   10 v=-0.032670:  23.03 -38.62  60.08   3.65 -28.33 -14.78  [rand]
   11 v=-0.032660: -11.11  27.64  -9.36 -14.03  -8.39  25.20  [rand]
   12 v=-0.031265:  15.39 -23.58  41.17 -15.00 -30.00 -30.00  [grid]
   13 v=-0.030804:   6.13 -16.47  35.63   4.32 -22.85 -18.95  [rand]
   14 v=-0.030730:  15.39 -36.91  41.17 -15.00 -30.00 -30.00  [grid]
   15 v=-0.029874: -24.61 -36.91  54.50 -30.00 -15.00  15.00  [grid]
   16 v=-0.029128:  34.54   4.45  39.64 -11.16   9.40 -34.39  [rand]
   17 v=-0.028641:  35.08 -15.26  64.65 -11.98   4.28 -19.20  [rand]
   18 v=-0.028312: -17.73   6.51  45.51  -2.96   2.59  18.65  [rand]
   19 v=-0.027788:  36.38   6.34  19.23  16.34   8.64 -40.54  [rand]
   20 v=-0.027285:   7.40  19.51  41.51  22.21   7.92  40.02  [rand]
   21 v=-0.026384: -24.61   3.09  54.50 -15.00 -15.00  15.00  [grid]
   22 v=-0.026311: -24.61   3.09  54.50  15.00  15.00  15.00  [grid]
   23 v=-0.025944: -30.97 -15.26  64.65  11.98   4.28  19.20  [rand]
   24 v=-0.025780:  18.91 -28.83  42.29  19.57 -37.09 -16.59  [rand]
   25 v=-0.025730:  -2.02 -16.47  35.63   4.32 -22.85  18.95  [rand]
   26 v=-0.025701: -25.08 -29.11  55.57   5.55 -17.35  23.42  [rand]
   27 v=-0.025558: -24.61 -36.91  54.50  15.00 -15.00  15.00  [grid]
   28 v=-0.025529:  18.27   3.87  -7.30  15.74  34.09  -7.78  [rand]
   29 v=-0.025456: -24.61   3.09  41.17 -15.00  15.00  30.00  [grid]
   30 v=-0.025128:  28.72  16.42  54.50 -30.00  30.00 -15.00  [grid]
   31 v=-0.024775: -24.61 -36.91  54.50 -15.00 -15.00  15.00  [grid]
   32 v=-0.024547: -24.61 -36.91  41.17 -15.00 -30.00  15.00  [grid]
   33 v=-0.024464: -24.61  16.42   1.17 -30.00  30.00  15.00  [grid]
   34 v=-0.024378:  29.04  18.57  36.90  18.79   2.63  -4.42  [rand]
   35 v=-0.024282:  36.38   6.34  36.44 -16.34   8.64 -40.54  [rand]
   36 v=-0.024252: -20.30 -26.63  43.67 -41.11 -22.86  -3.97  [rand]
   37 v=-0.024093:  17.27  26.19  38.34   3.49  11.25 -35.41  [rand]
   38 v=-0.024002: -11.37 -32.93  59.17   4.37 -20.12  15.12  [rand]
   39 v=-0.023893:  15.39   3.09  41.17 -15.00 -15.00 -30.00  [grid]
   40 v=-0.023769: -16.28 -36.39  33.88  -6.51 -20.18   7.56  [rand]
   41 v=-0.023559:  28.72   3.09   1.17  30.00  30.00 -15.00  [grid]
   42 v=-0.023351:  15.39   3.09  54.50  15.00  15.00 -15.00  [grid]
   43 v=-0.023326: -24.61   3.09  54.50  30.00  15.00  15.00  [grid]
   44 v=-0.023297: -32.27   6.34  36.44  16.34   8.64  40.54  [rand]
*[#8013=-0.0603873] *[#8016=-0.0620232] *[#8017=-0.0629084] *[#8018=-0.0665404] *[#8019=-0.0671022] *[#8020=-0.070679] *[#8022=-0.0713824] *[#8026=-0.0732361] *[#8029=-0.074655] *[#8030=-0.0755028] *[#8036=-0.0757368] *[#8037=-0.0757877] *[#8038=-0.075926] *[#8055=-0.0780803] *[#8056=-0.0794357] *[#8059=-0.081733] *[#8060=-0.083286] *[#8064=-0.0837585] *[#8065=-0.0845251] *[#8067=-0.0847007] *[#8070=-0.0869745] *[#8071=-0.0871664] *[#8079=-0.0882565] *[#8082=-0.0883282] *[#8110=-0.107445] *[#8116=-0.135534] *[#8117=-0.153211] *[#8121=-0.174463] *[#8124=-0.239208] *[#8130=-0.247933] *[#8133=-0.268944] *[#8134=-0.309031] *[#8135=-0.338062] *[#8137=-0.348971] *[#8138=-0.362068] *[#8141=-0.38445] *[#8142=-0.404359] *[#8143=-0.413687] *[#8148=-0.430357] *[#8149=-0.432082] *[#8150=-0.447829] *[#8153=-0.46009] *[#8154=-0.465588] *[#8155=-0.475422] *[#8156=-0.484523] *[#8158=-0.485099] *[#8161=-0.492662]  + - costs of the above after a little optimization:
    0 v=-0.075926:  28.80 -20.18  40.84  13.24 -12.56 -15.17  [grid]
    1 v=-0.088328: -21.00 -21.32  42.67  -7.31 -13.60  15.80  [grid]
    2 v=-0.044532: -14.66   3.80  -7.31 -15.42  34.26   7.82  [rand]
  * 3 v=-0.492662:   3.10 -16.53  36.33   1.44  -6.41  -0.31  [grid]
    4 v=-0.051943: -36.40 -24.98  39.46 -11.39  -9.61  34.49  [rand]
    5 v=-0.051151:   7.04 -25.14  39.30  -7.26 -29.30 -18.24  [rand]
    6 v=-0.049762:  15.03 -23.72  37.23  12.61 -30.08 -17.02  [grid]
    7 v=-0.052948: -16.20   8.98  33.46 -21.12   6.67   9.86  [rand]
    8 v=-0.041130: -21.25 -37.43  59.26  -4.35 -29.39  15.08  [rand]
    9 v=-0.040574: -24.80 -22.76  53.68 -15.10 -25.83  15.34  [grid]
   10 v=-0.034742:  22.79 -39.06  60.17   3.17 -28.36 -14.78  [rand]
   11 v=-0.037029: -11.24  28.17  -9.98 -14.50  -8.07  23.79  [rand]
   12 v=-0.042707:   9.77 -23.96  38.84 -16.16 -30.31 -27.21  [grid]
   13 v=-0.053919:   5.36 -17.82  36.29   7.23 -24.03 -12.35  [rand]
   14 v=-0.058824:  13.00 -41.88  39.82 -15.56 -24.73 -30.81  [grid]
   15 v=-0.033483: -24.63 -36.71  53.29 -31.39 -15.18  13.95  [grid]
   16 v=-0.034325:  36.08   8.50  37.44 -11.18   8.14 -36.53  [rand]
   17 v=-0.037264:  36.66 -18.74  63.55 -10.50   5.31 -21.61  [rand]
   18 v=-0.074203: -19.70  -6.74  39.97  -7.98   0.60  18.99  [rand]
   19 v=-0.039257:  38.53   6.52  18.72  19.97   6.84 -41.20  [rand]
   20 v=-0.031425:   7.85  19.79  40.83  22.78   9.25  39.83  [rand]
   21 v=-0.042509: -24.72  -2.09  54.43 -13.05 -15.07  16.41  [grid]
   22 v=-0.036149: -24.53   2.67  60.29  15.26  16.44  15.34  [grid]
   23 v=-0.031009: -29.88 -14.11  64.87  10.81   5.29  17.50  [rand]
   24 v=-0.053913:  13.82 -32.79  37.90  17.11 -38.12 -13.86  [rand]
   25 v=-0.030428:  -1.90 -15.99  33.62   3.27 -24.14  16.33  [rand]
   26 v=-0.049900: -23.19 -28.63  52.39   2.71 -22.07  24.57  [rand]
   27 v=-0.034133: -25.30 -37.39  54.62  19.94 -14.59  15.49  [grid]
   28 v=-0.041480:  19.93   4.58  -1.71  16.50  33.80  -6.29  [rand]
   29 v=-0.050631: -24.20   3.40  37.68 -15.58  10.77  25.11  [grid]
   30 v=-0.032823:  28.30  16.76  54.15 -23.80  29.52 -17.46  [grid]
   31 v=-0.041911: -25.29 -35.85  54.20 -15.06 -15.58  19.74  [grid]
   32 v=-0.051315: -25.50 -40.91  42.46 -13.37 -25.76  13.63  [grid]
   33 v=-0.032626: -26.14  10.98   2.19 -29.39  30.25  14.42  [grid]
   34 v=-0.036834:  25.15  18.64  36.38  16.34   2.03  -5.81  [rand]
   35 v=-0.031514:  35.70   6.51  37.61 -15.84   9.42 -34.58  [rand]
   36 v=-0.030176: -20.83 -24.96  44.36 -41.29 -23.14  -4.57  [rand]
   37 v=-0.040121:  15.67  28.60  42.13   1.72   8.02 -31.66  [rand]
   38 v=-0.041770: -12.73 -30.45  57.00   2.94 -21.02  14.33  [rand]
   39 v=-0.027633:  15.52   2.85  40.79 -15.39 -15.80 -29.93  [grid]
   40 v=-0.131287: -10.90 -29.41  41.54  -2.19 -17.59   9.52  [rand]
   41 v=-0.038528:  29.29   4.57   0.90  24.74  27.45 -13.84  [grid]
   42 v=-0.028973:  15.46   7.22  54.31  13.76  15.29 -14.61  [grid]
   43 v=-0.039844: -27.15   4.83  59.78  29.54  18.59  17.34  [grid]
   44 v=-0.036775: -31.94   2.56  32.89  14.69   8.13  38.94  [rand]
 + - save # 3 for twobest
 + - save #40 for twobest
 + - save # 1 for twobest
 + - save # 0 for twobest
 + - save #18 for twobest
 + - save #14 for twobest
 + - save #13 for twobest
 + - save #24 for twobest
 + - save # 7 for twobest
 + - save # 4 for twobest
 + - save #32 for twobest
 + - save # 5 for twobest
 + - save #29 for twobest
 + - save #26 for twobest
 + - save # 6 for twobest
 + - save # 2 for twobest
 + - save #12 for twobest
 + - save #21 for twobest
 + - save #31 for twobest
 + - save #38 for twobest
 + - save #28 for twobest
 + - save # 8 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=64 usiz=196
 + - retaining old weight image
 + - using 27905 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24114 total points stored in 244 'RHDD(13.7332)' bloks
 + - param set #1 has cost=-0.483275
 + -- Parameters = 3.0174 -15.9587 35.9352 1.3968 -5.9294 -0.3341 0.9981 0.9965 0.9972 0.0094 0.0015 0.0029
 + - param set #2 has cost=-0.129004
 + -- Parameters = -8.6349 -25.8001 40.3399 -3.7759 -14.4838 5.9707 1.0195 1.0107 1.0414 0.0020 0.0238 -0.0025
 + - param set #3 has cost=-0.084581
 + -- Parameters = -18.1224 -20.2442 41.0405 -6.6406 -10.7366 13.5044 1.0024 0.9969 1.0351 -0.0021 -0.0099 0.0015
 + - param set #4 has cost=-0.064681
 + -- Parameters = 29.0337 -20.0828 40.6794 12.8113 -11.6838 -13.9293 0.9924 1.0026 0.9975 -0.0016 0.0126 -0.0017
 + - param set #5 has cost=-0.082946
 + -- Parameters = -16.9422 -8.4358 38.5723 -8.9064 -2.1371 12.5126 1.0236 0.9914 0.9775 0.0012 0.0054 0.0348
 + - param set #6 has cost=-0.048595
 + -- Parameters = 13.0788 -42.5161 40.1016 -15.2321 -25.5264 -30.9898 0.9958 1.0000 0.9977 0.0031 -0.0015 0.0092
 + - param set #7 has cost=-0.039653
 + -- Parameters = 5.0661 -17.3149 36.1932 7.2598 -23.9739 -12.5493 0.9985 0.9987 0.9991 0.0119 -0.0003 -0.0008
 + - param set #8 has cost=-0.038851
 + -- Parameters = 13.0122 -33.5290 38.1151 18.2429 -37.6091 -13.1467 1.0075 1.0084 1.0051 0.0032 0.0045 0.0096
 + - param set #9 has cost=-0.041520
 + -- Parameters = -15.9321 9.1875 33.4511 -16.9568 7.4145 9.5533 1.0042 1.0017 1.0025 0.0024 0.0010 0.0015
 + - param set #10 has cost=-0.041818
 + -- Parameters = -37.1684 -20.2853 39.3927 -12.6617 -8.9588 32.1600 0.9905 0.9919 0.9921 -0.0019 -0.0051 0.0009
 + - param set #11 has cost=-0.052693
 + -- Parameters = -22.9809 -42.7770 40.3148 -12.1799 -26.7073 12.2785 0.9941 1.0048 0.9995 -0.0006 -0.0045 -0.0023
 + - param set #12 has cost=-0.463996
 + -- Parameters = 2.7323 -16.0438 35.6747 1.1907 -6.8321 0.0304 0.9997 1.0058 0.9844 -0.0080 -0.0126 -0.0112
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.078 
 + --- dist(#3,#1) = 0.146 
 + --- dist(#4,#1) = 0.264 
 + --- dist(#5,#1) = 0.249 
 + --- dist(#6,#1) = 0.325 
 + --- dist(#7,#1) = 0.335 
 + --- dist(#8,#1) = 0.341 
 + --- dist(#9,#1) = 0.502 
 + --- dist(#10,#1) = 0.314 
 + --- dist(#11,#1) = 0.2 
 + --- dist(#12,#1) = 0.352 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=64 usiz=196
 + - retaining old weight image
 + - using 27905 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24724 total points stored in 259 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.452144
 + -- Parameters = 2.9871 -15.9777 35.8430 1.4774 -5.3955 -0.1781 1.0005 0.9895 0.9987 0.0063 -0.0009 0.0096
 + - param set #2 has cost=-0.446190
 + -- Parameters = 3.0221 -16.1626 35.6173 1.5153 -5.7369 -0.2497 1.0116 0.9904 0.9919 0.0073 -0.0072 0.0008
 + - param set #3 has cost=-0.145344
 + -- Parameters = -1.3985 -24.0893 39.1976 -1.4097 -13.2501 1.5217 1.0090 1.0103 1.0279 0.0137 0.0200 -0.0341
 + - param set #4 has cost=-0.068374
 + -- Parameters = -16.8356 -20.1046 41.2891 -6.4076 -10.4441 12.6836 1.0042 0.9910 1.0336 0.0038 -0.0105 0.0114
 + - param set #5 has cost=-0.067163
 + -- Parameters = -16.0846 -8.6344 38.5944 -8.6168 -2.0616 12.1564 1.0274 0.9911 0.9763 0.0020 0.0057 0.0422
 + - param set #6 has cost=-0.050384
 + -- Parameters = 28.7972 -20.2161 39.8731 13.0172 -11.6384 -13.1622 0.9968 1.0073 0.9942 -0.0056 0.0217 -0.0018
 + - param set #7 has cost=-0.053318
 + -- Parameters = -18.1376 -43.5708 40.8725 -8.7033 -26.8550 11.5632 0.9797 1.0084 0.9995 -0.0055 -0.0070 0.0025
 + - param set #8 has cost=-0.043217
 + -- Parameters = 12.5733 -43.5576 39.5868 -13.6488 -27.3635 -27.7589 0.9846 1.0125 0.9794 0.0065 0.0253 0.0099
 + - param set #9 has cost=-0.036847
 + -- Parameters = -37.3939 -17.1870 39.5551 -12.5345 -7.9045 31.8113 0.9908 0.9937 0.9916 -0.0024 -0.0062 -0.0005
 + - param set #10 has cost=-0.040666
 + -- Parameters = -13.9270 8.6778 32.4257 -12.1423 7.8056 9.5089 1.0102 1.0008 0.9565 -0.0048 -0.0040 0.0105
 + - param set #11 has cost=-0.034708
 + -- Parameters = 5.1525 -18.1281 36.5540 5.4225 -23.7661 -11.4690 0.9885 1.0011 1.0028 0.0107 0.0094 -0.0071
 + - param set #12 has cost=-0.029011
 + -- Parameters = 13.0736 -33.2424 38.0830 18.3942 -37.2614 -12.8128 1.0152 1.0175 1.0069 0.0005 0.0037 0.0105
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0398 
 + --- dist(#3,#1) = 0.197 
 + --- dist(#4,#1) = 0.248 
 + --- dist(#5,#1) = 0.238 
 + --- dist(#6,#1) = 0.345 
 + --- dist(#7,#1) = 0.323 
 + --- dist(#8,#1) = 0.345 
 + --- dist(#9,#1) = 0.308 
 + --- dist(#10,#1) = 0.505 
 + --- dist(#11,#1) = 0.204 
 + --- dist(#12,#1) = 0.354 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=64 usiz=196
 + - retaining old weight image
 + - using 27905 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25200 total points stored in 272 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.440614
 + -- Parameters = 3.0688 -15.8841 35.7874 1.5266 -5.3168 -0.1673 1.0053 0.9906 0.9968 0.0052 -0.0040 0.0132
 + - param set #2 has cost=-0.440037
 + -- Parameters = 3.1109 -15.9779 35.5314 1.5392 -5.1236 -0.1809 1.0044 0.9863 0.9943 0.0046 -0.0021 0.0118
 + - param set #3 has cost=-0.212404
 + -- Parameters = -1.6995 -19.9379 38.8441 -0.8545 -12.6019 2.8913 0.9852 1.0060 1.0310 -0.0322 -0.0417 -0.0929
 + - param set #4 has cost=-0.063482
 + -- Parameters = -16.5505 -20.2125 41.1948 -6.3925 -10.3692 12.3641 0.9952 0.9809 1.0339 0.0054 -0.0111 0.0078
 + - param set #5 has cost=-0.067923
 + -- Parameters = -14.5126 -9.0541 37.1441 -7.4775 -2.6549 10.2293 1.0248 0.9921 0.9664 0.0058 -0.0003 0.0383
 + - param set #6 has cost=-0.049155
 + -- Parameters = -16.8834 -43.7549 41.3397 -8.3847 -26.6220 11.0339 0.9758 0.9945 1.0044 -0.0041 -0.0102 0.0046
 + - param set #7 has cost=-0.041330
 + -- Parameters = 28.5779 -20.2727 39.6108 12.8721 -11.4898 -13.0138 0.9916 1.0101 0.9933 -0.0093 0.0227 0.0056
 + - param set #8 has cost=-0.038193
 + -- Parameters = 11.8166 -44.0692 39.5570 -11.5243 -27.5734 -26.6866 0.9772 1.0151 0.9798 0.0093 0.0280 0.0094
 + - param set #9 has cost=-0.039646
 + -- Parameters = -12.8928 6.9401 32.5517 -9.3273 7.4054 9.8681 1.0054 1.0031 0.9617 -0.0050 -0.0067 0.0091
 + - param set #10 has cost=-0.029568
 + -- Parameters = -37.6462 -17.2243 39.5462 -12.3446 -7.6636 32.2077 0.9918 0.9876 0.9915 -0.0022 -0.0057 -0.0008
 + - param set #11 has cost=-0.035971
 + -- Parameters = 4.5420 -18.1357 37.1466 5.0980 -23.2327 -10.6291 0.9903 1.0048 1.0146 0.0239 0.0123 -0.0066
 + - param set #12 has cost=-0.023667
 + -- Parameters = 12.7311 -32.8991 37.9388 18.3678 -36.6846 -11.9255 1.0038 0.9941 1.0039 0.0024 0.0058 0.0118
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0117 XXX
 + --- dist(#3,#1) = 0.22 
 + --- dist(#4,#1) = 0.245 
 + --- dist(#5,#1) = 0.348 
 + --- dist(#6,#1) = 0.319 
 + --- dist(#7,#1) = 0.285 
 + --- dist(#8,#1) = 0.352 
 + --- dist(#9,#1) = 0.199 
 + --- dist(#10,#1) = 0.509 
 + --- dist(#11,#1) = 0.349 
 + - cast out 1 parameter set for being too close to best set
 + - Total coarse refinement net CPU time = 0.0 s; 3265 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=64 usiz=196
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 25232 total points stored in 273 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.411676 *
 + -- Parameters = 3.0688 -15.8841 35.7874 1.5266 -5.3168 -0.1673 1.0053 0.9906 0.9968 0.0052 -0.0040 0.0132
 + - cost(#2)=-0.191622  
 + -- Parameters = -1.6995 -19.9379 38.8441 -0.8545 -12.6019 2.8913 0.9852 1.0060 1.0310 -0.0322 -0.0417 -0.0929
 + - cost(#3)=-0.057851  
 + -- Parameters = -14.5126 -9.0541 37.1441 -7.4775 -2.6549 10.2293 1.0248 0.9921 0.9664 0.0058 -0.0003 0.0383
 + - cost(#4)=-0.058530  
 + -- Parameters = -16.5505 -20.2125 41.1948 -6.3925 -10.3692 12.3641 0.9952 0.9809 1.0339 0.0054 -0.0111 0.0078
 + - cost(#5)=-0.046033  
 + -- Parameters = -16.8834 -43.7549 41.3397 -8.3847 -26.6220 11.0339 0.9758 0.9945 1.0044 -0.0041 -0.0102 0.0046
 + - cost(#6)=-0.033431  
 + -- Parameters = 28.5779 -20.2727 39.6108 12.8721 -11.4898 -13.0138 0.9916 1.0101 0.9933 -0.0093 0.0227 0.0056
 + - cost(#7)=-0.035301  
 + -- Parameters = -12.8928 6.9401 32.5517 -9.3273 7.4054 9.8681 1.0054 1.0031 0.9617 -0.0050 -0.0067 0.0091
 + - cost(#8)=-0.037587  
 + -- Parameters = 11.8166 -44.0692 39.5570 -11.5243 -27.5734 -26.6866 0.9772 1.0151 0.9798 0.0093 0.0280 0.0094
 + - cost(#9)=-0.033238  
 + -- Parameters = 4.5420 -18.1357 37.1466 5.0980 -23.2327 -10.6291 0.9903 1.0048 1.0146 0.0239 0.0123 -0.0066
 + - cost(#10)=-0.027043  
 + -- Parameters = -37.6462 -17.2243 39.5462 -12.3446 -7.6636 32.2077 0.9918 0.9876 0.9915 -0.0022 -0.0057 -0.0008
 + - cost(#11)=-0.021775  
 + -- Parameters = 12.7311 -32.8991 37.9388 18.3678 -36.6846 -11.9255 1.0038 0.9941 1.0039 0.0024 0.0058 0.0118
 + - cost(#12)=-0.049892  
 + -- Parameters = 2.0547 -10.2424 27.8353 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.413093 *
 + -- Parameters = 3.1189 -15.9071 35.7848 1.5367 -5.1706 -0.2215 1.0043 0.9899 0.9989 0.0041 -0.0001 0.0139
 + - cost(#2)=-0.273308  
 + -- Parameters = 1.8377 -18.2497 35.7808 1.0419 -11.2780 1.2150 1.0010 0.9995 0.9850 -0.0506 -0.0560 -0.0945
 + - cost(#3)=-0.060571  
 + -- Parameters = -13.7302 -9.0293 37.7423 -7.3800 -2.8233 9.6412 1.0282 0.9967 0.9737 0.0064 -0.0049 0.0383
 + - cost(#4)=-0.059617  
 + -- Parameters = -16.3902 -19.8951 41.2943 -6.3650 -10.4078 12.3297 0.9934 0.9843 1.0335 0.0118 -0.0101 0.0067
 + - cost(#5)=-0.046649  
 + -- Parameters = -16.7066 -43.6018 41.3802 -8.3492 -26.5299 10.9375 0.9769 0.9881 1.0051 -0.0040 -0.0097 0.0047
 + - cost(#6)=-0.039223  
 + -- Parameters = 26.4708 -18.5472 39.3691 11.6755 -10.3077 -14.1128 0.9942 1.0097 1.0020 -0.0105 0.0258 0.0081
 + - cost(#7)=-0.036205  
 + -- Parameters = -12.8401 6.6214 33.0856 -9.2085 7.3501 9.5166 1.0032 0.9990 0.9626 -0.0053 -0.0073 0.0089
 + - cost(#8)=-0.037999  
 + -- Parameters = 11.7876 -44.0429 39.6037 -11.5502 -27.5465 -26.8075 0.9762 1.0158 0.9873 0.0096 0.0279 0.0087
 + - cost(#9)=-0.174833  
 + -- Parameters = 4.7587 -17.2621 40.1605 0.7029 -8.7346 -2.4472 0.9578 1.0485 1.0654 0.0252 -0.0059 -0.0175
 + - cost(#10)=-0.027686  
 + -- Parameters = -37.5969 -17.3819 39.5215 -12.4468 -7.5331 32.3403 0.9906 0.9855 0.9836 -0.0012 -0.0042 -0.0005
 + - cost(#11)=-0.023504  
 + -- Parameters = 12.1872 -31.8345 37.7065 18.2780 -35.7318 -11.1348 0.9976 0.9907 1.0040 0.0100 0.0006 0.0124
 + - cost(#12)=-0.407851  
 + -- Parameters = 3.1071 -16.1485 35.6974 1.4907 -5.8048 -0.2411 1.0045 0.9886 0.9968 0.0012 -0.0023 0.0001
 + - case #1 is now the best
 + - Initial  cost = -0.413093
 + - Initial fine Parameters = 3.1189 -15.9071 35.7848 1.5367 -5.1706 -0.2215 1.0043 0.9899 0.9989 0.0041 -0.0001 0.0139
 + - Finalish cost = -0.413921 ; 155 funcs
 + - Final    cost = -0.414376 ; 291 funcs
 + Final fine fit Parameters:
       x-shift= 3.2328   y-shift=-15.8054   z-shift=35.8003
       z-angle= 1.5930   x-angle=-4.8398   y-angle=-0.4172
       x-scale= 1.0017   y-scale= 0.9891   z-scale= 1.0001
     y/x-shear= 0.0076 z/x-shear= 0.0057 z/y-shear= 0.0200
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 3.2328 -15.8054 35.8003 1.5930 -4.8398 -0.4172 1.0017 0.9891 1.0001 0.0076 0.0057 0.0200
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 26.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 16.699999 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0203 -0.9738 0.2060 233.6792 0.0014 0.1836 0.9768 81.2273 -1.0012 0.0285 -0.0073 195.7344
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 17.9 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3023.370100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 93.8811 47.9247   ITER = 10/137
93.8811

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 6s 312ms]
lev=0 0..171 0..213 0..166: [first cost=-0.67884] ... done [cost:-0.67884==>-0.73987]
lev=1 patch=129x161x125 [clock= 14m 32s 125ms]........:[cost=-0.76447]:........ done [cost:-0.73987==>-0.76797 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 22m 45s 690ms]......................... done [cost:-0.76797==>-0.83157 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 29m 19s 601ms].............. done [cost:-0.83157==>-0.88719 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 34m 3s 185ms]............. done [cost:-0.88719==>-0.92449 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 37m 53s 664ms]......................... done [cost:-0.92449==>-1.01346 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 41m 38s 6ms]..................... done [cost:-1.01346==>-1.03756 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 45m 7s 238ms]....................... done [cost:-1.03756==>-1.13700 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 48m 52s 893ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8630/tb8630.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.2 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb8630.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 16.699999 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8630.r01.tshift+orig.BRIK is 16.699999 degrees from plumb.
++ Reading input dataset ./pb01.tb8630.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31290 voxels
 + 5060 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.265  pitch=+0.000  yaw=-0.359  dS=-1.624  dL=-0.644  dP=-0.130
++ Mean: roll=-0.126  pitch=+0.463  yaw=-0.198  dS=-0.759  dL=-0.372  dP=-0.041
++ Max : roll=+0.033  pitch=+1.032  yaw=+0.049  dS=+0.017  dL=+0.154  dP=+0.055
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.12(0.12) 0.13(0.04) 0.13(0.04) 0.14(0.07) 0.17(0.08) 0.13(0.05) 0.14(0.07) 0.17(0.05) 0.19(0.07) 0.18(0.08) 0.16(0.09) 0.22(0.09) 0.28(0.07) 0.30(0.03) 0.32(0.04) 0.34(0.05) 0.36(0.04) 0.37(0.02) 0.40(0.04) 0.42(0.04) 0.50(0.08) 0.49(0.02) 0.48(0.06) 0.55(0.09) 0.57(0.04) 0.58(0.04) 0.61(0.04) 0.60(0.11) 0.60(0.09) 0.66(0.12) 0.65(0.04) 0.66(0.03) 0.66(0.08) 0.70(0.06) 0.76(0.06) 0.82(0.08) 0.84(0.05) 0.85(0.04) 0.88(0.05) 0.89(0.04) 0.93(0.05) 0.97(0.06) 1.01(0.07) 0.98(0.12) 1.07(0.11) 1.08(0.04) 1.06(0.04) 1.08(0.04) 1.15(0.07) 1.16(0.05) 1.20(0.04) 1.22(0.07) 1.24(0.07) 1.24(0.06) 1.27(0.04) 1.29(0.02) 1.34(0.06) 1.35(0.02) 1.35(0.04) 1.37(0.03) 1.39(0.03) 1.38(0.04) 1.41(0.04) 1.46(0.06) 1.48(0.03) 1.48(0.03) 1.51(0.04) 1.53(0.03) 1.55(0.04) 1.55(0.04) 1.56(0.03) 1.57(0.02) 1.60(0.04) 1.62(0.03) 1.65(0.03) 1.63(0.06) 1.64(0.04) 1.66(0.03) 1.77(0.13) 1.80(0.04) 1.88(0.10) 1.88(0.03) 1.89(0.03) 1.91(0.03) 1.94(0.05) 1.95(0.04) 1.97(0.04) 1.99(0.03) 2.03(0.05) 2.08(0.05) 2.03(0.06) 2.12(0.09) 2.20(0.10) 2.24(0.06) 2.28(0.04) 2.28(0.04) 2.29(0.03) 2.28(0.03) 2.31(0.04) 2.31(0.05) 2.33(0.04) 2.34(0.04) 2.33(0.03) 2.35(0.03) 2.35(0.01) 2.38(0.05) 2.42(0.04) 2.42(0.03) 2.49(0.07) 2.52(0.05) 2.54(0.06) 2.57(0.08) 2.61(0.05) 2.59(0.02) 2.60(0.02) 2.62(0.04) 2.66(0.05) 2.65(0.04) 2.62(0.03) 2.67(0.06) 2.70(0.04) 2.71(0.03) 2.70(0.04) 2.71(0.02) 2.71(0.02) 2.74(0.07) 2.72(0.05) 2.74(0.05) 2.79(0.06) 2.84(0.06) 2.84(0.05) 2.83(0.03) 2.88(0.06) 2.94(0.07) 2.95(0.02) 2.99(0.04) 2.98(0.05) 3.15(0.18) 3.30(0.18) 3.37(0.08) 3.21(0.17) 3.26(0.13) 3.27(0.16) 3.25(0.25) 3.40(0.16) 3.42(0.05) 3.40(0.08) 3.45(0.08) 3.47(0.08)
++ Max displacement in automask = 3.47 (mm) at sub-brick 149
++ Max delta displ  in automask = 0.25 (mm) at sub-brick 144
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb8630.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8630.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8630.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8630.r01.tshift+orig.BRIK is 16.699999 degrees from plumb.
++ Source dataset: ./pb01.tb8630.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.3
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 16.699999 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb8630.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 16.699999 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8630.r02.tshift+orig.BRIK is 16.699999 degrees from plumb.
++ Reading input dataset ./pb01.tb8630.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31466 voxels
 + 5106 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.557  pitch=+0.747  yaw=-0.158  dS=-4.145  dL=-0.285  dP=-0.450
++ Mean: roll=-0.437  pitch=+1.670  yaw=+0.025  dS=-3.623  dL=-0.139  dP=-0.200
++ Max : roll=-0.280  pitch=+2.298  yaw=+0.147  dS=-2.704  dL=+0.148  dP=+0.017
++ Max displacements (mm) for each sub-brick:
 4.36(0.00) 4.21(0.22) 4.02(0.24) 4.05(0.12) 4.08(0.14) 4.15(0.11) 4.25(0.12) 4.32(0.09) 4.32(0.06) 4.32(0.07) 4.39(0.07) 4.48(0.09) 4.55(0.08) 4.55(0.02) 4.59(0.05) 4.58(0.04) 4.63(0.05) 4.67(0.05) 4.73(0.06) 4.74(0.02) 4.75(0.01) 4.74(0.04) 4.79(0.08) 4.90(0.12) 4.92(0.04) 4.93(0.05) 4.97(0.04) 4.98(0.04) 5.02(0.06) 5.05(0.04) 5.10(0.06) 5.12(0.04) 5.11(0.02) 5.17(0.08) 5.19(0.03) 5.19(0.02) 5.22(0.03) 5.28(0.07) 5.32(0.07) 5.37(0.07) 5.42(0.05) 5.43(0.04) 5.52(0.09) 5.66(0.14) 5.71(0.07) 5.79(0.10) 5.86(0.08) 5.89(0.05) 5.89(0.05) 5.98(0.09) 6.03(0.07) 6.02(0.03) 6.04(0.03) 6.08(0.06) 6.08(0.06) 6.09(0.04) 6.15(0.06) 6.17(0.04) 6.17(0.06) 6.17(0.06) 6.21(0.08) 6.25(0.05) 6.25(0.02) 6.29(0.06) 6.33(0.05) 6.37(0.05) 6.38(0.03) 6.39(0.02) 6.42(0.04) 6.42(0.04) 6.43(0.03) 6.46(0.05) 6.48(0.04) 6.52(0.04) 6.53(0.03) 6.56(0.03) 6.68(0.15) 6.75(0.08) 6.78(0.05) 6.79(0.04) 6.83(0.05) 6.84(0.03) 6.89(0.06) 6.89(0.04) 6.88(0.05) 6.85(0.04) 6.84(0.05) 7.04(0.22) 7.17(0.13) 7.20(0.04) 7.19(0.03) 7.21(0.03) 7.24(0.05) 7.28(0.05) 7.30(0.04) 7.30(0.03) 7.27(0.03) 7.30(0.03) 7.37(0.08) 7.40(0.06) 7.39(0.02) 7.54(0.18) 7.63(0.11) 7.60(0.06) 7.65(0.05) 7.67(0.04) 7.70(0.06) 7.69(0.05) 7.70(0.04) 7.70(0.03) 7.69(0.03) 7.73(0.06) 7.75(0.05) 7.80(0.05) 7.81(0.02) 7.80(0.03) 7.79(0.04) 7.81(0.04) 7.84(0.05) 7.85(0.04) 7.85(0.06) 7.86(0.04) 7.84(0.05) 7.84(0.04) 7.89(0.04) 7.89(0.02) 7.88(0.03) 7.86(0.03) 7.88(0.06) 7.90(0.03) 7.88(0.03) 7.90(0.04) 7.90(0.04) 7.93(0.06) 7.91(0.04) 7.89(0.05) 7.89(0.03) 7.89(0.06) 7.89(0.04) 7.91(0.03) 7.95(0.04) 7.87(0.10) 7.81(0.08) 7.84(0.13) 7.76(0.14) 7.60(0.18) 7.73(0.19) 7.81(0.09) 7.95(0.15) 7.97(0.21)
++ Max displacement in automask = 7.97 (mm) at sub-brick 149
++ Max delta displ  in automask = 0.24 (mm) at sub-brick 2
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb8630.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8630.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8630.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8630.r02.tshift+orig.BRIK is 16.699999 degrees from plumb.
++ Source dataset: ./pb01.tb8630.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 16.699999 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb8630.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 16.699999 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8630.r03.tshift+orig.BRIK is 16.699999 degrees from plumb.
++ Reading input dataset ./pb01.tb8630.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30989 voxels
 + 5115 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.138  pitch=-0.260  yaw=+0.435  dS=-6.576  dL=+0.875  dP=+0.063
++ Mean: roll=+0.217  pitch=+0.383  yaw=+0.513  dS=-6.075  dL=+1.059  dP=+0.319
++ Max : roll=+0.467  pitch=+0.904  yaw=+0.690  dS=-4.304  dL=+1.521  dP=+0.598
++ Max displacements (mm) for each sub-brick:
 5.95(0.00) 5.38(0.86) 5.56(0.30) 5.77(0.36) 5.88(0.12) 5.96(0.21) 6.03(0.17) 6.06(0.45) 6.00(0.42) 6.24(0.34) 6.24(0.13) 6.17(0.10) 6.09(0.10) 6.06(0.09) 6.03(0.09) 5.99(0.09) 6.03(0.17) 6.03(0.15) 6.08(0.10) 6.14(0.07) 6.18(0.07) 6.22(0.06) 6.25(0.10) 6.32(0.14) 6.44(0.18) 6.56(0.15) 6.63(0.08) 6.69(0.09) 6.72(0.07) 6.74(0.05) 6.74(0.02) 6.74(0.05) 6.76(0.04) 6.76(0.06) 6.78(0.07) 6.78(0.04) 6.77(0.04) 6.78(0.04) 6.80(0.05) 6.79(0.05) 6.80(0.05) 6.80(0.03) 6.80(0.05) 6.83(0.06) 6.83(0.04) 6.85(0.03) 6.86(0.02) 6.87(0.03) 6.87(0.04) 6.86(0.04) 6.85(0.04) 6.86(0.03) 6.88(0.04) 6.87(0.04) 6.87(0.05) 6.90(0.09) 6.95(0.08) 6.98(0.07) 7.05(0.10) 7.07(0.03) 7.09(0.08) 7.14(0.07) 7.14(0.05) 7.16(0.02) 7.18(0.04) 7.23(0.07) 7.20(0.14) 7.19(0.03) 7.23(0.12) 7.23(0.12) 7.26(0.04) 7.25(0.02) 7.25(0.14) 7.32(0.08) 7.50(0.23) 7.39(0.17) 7.45(0.08) 7.51(0.11) 7.51(0.09) 7.51(0.04) 7.50(0.04) 7.50(0.02) 7.52(0.02) 7.52(0.04) 7.49(0.05) 7.52(0.03) 7.52(0.02) 7.53(0.05) 7.52(0.03) 7.53(0.03) 7.52(0.03) 7.52(0.02) 7.55(0.04) 7.58(0.04) 7.57(0.04) 7.59(0.03) 7.60(0.03) 7.60(0.02) 7.60(0.03) 7.61(0.04) 7.62(0.04) 7.62(0.02) 7.64(0.02) 7.65(0.02) 7.68(0.03) 7.66(0.03) 7.67(0.04) 7.66(0.05) 7.64(0.03) 7.69(0.06) 7.71(0.03) 7.70(0.02) 7.69(0.02) 7.71(0.03) 7.72(0.03) 7.72(0.02) 7.71(0.02) 7.71(0.02) 7.69(0.07) 7.83(0.19) 7.85(0.08) 7.92(0.07) 7.94(0.06) 7.93(0.02) 7.95(0.02) 7.99(0.05) 8.03(0.04) 8.00(0.06) 8.02(0.02) 8.04(0.03) 8.06(0.04) 8.05(0.02) 8.06(0.05) 8.08(0.02) 8.07(0.03) 8.06(0.03) 8.09(0.06) 8.20(0.11) 8.26(0.08) 8.25(0.02) 8.28(0.05) 8.25(0.04) 8.21(0.21) 8.18(0.11) 8.20(0.03) 8.19(0.02) 8.19(0.04) 8.17(0.02) 8.22(0.08) 8.17(0.08)
++ Max displacement in automask = 8.28 (mm) at sub-brick 140
++ Max delta displ  in automask = 0.86 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb8630.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8630.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8630.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8630.r03.tshift+orig.BRIK is 16.699999 degrees from plumb.
++ Source dataset: ./pb01.tb8630.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 16.699999 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.9
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8630.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8630.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8630.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8630.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8630.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8630.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 16.699999 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb8630
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb8630+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb8630+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1296448 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=1
++ Zero-pad: zbot=1 ztop=1
++ Computing -autobox
++ 299956 voxels [67.3%] in weight mask
++ Number of points for matching = 140979
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.16857
   sp   = 0.348737
   mi   = -0.469983
   crM  = 0.0556563
   nmi  = 0.85213
   je   = 2.70837
   hel  = -0.0932649
   crA  = 0.23594
   crU  = 0.239326
   lss  = 0.83143
   lpc  = 0.0403633
   lpa  = 0.959637
   lpc+ = 0.202444
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.3
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb8630+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb8630+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 40.1 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8630.r01.blur pb02.tb8630.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8630.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb8630.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8630.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8630.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8630.r02.blur pb02.tb8630.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8630.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb8630.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8630.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8630.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8630.r03.blur pb02.tb8630.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8630.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb8630.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8630.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8630.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb8630.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8630.r01.blur+orig
++ Forming automask
 + Fixed clip level = 378.076538
 + Used gradual clip level = 310.706482 .. 427.366364
 + Number voxels above clip level = 50356
 + Clustering voxels ...
 + Largest cluster has 50224 voxels
 + Clustering voxels ...
 + Largest cluster has 50133 voxels
 + Filled    48 voxels in small holes; now have 50181 voxels
 + Clustering voxels ...
 + Largest cluster has 50179 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376096 voxels
 + Mask now has 50179 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368269 voxels
++ 58006 voxels in the mask [out of 426275: 13.61%]
++ first  16 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb8630.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8630.r02.blur+orig
++ Forming automask
 + Fixed clip level = 381.390778
 + Used gradual clip level = 314.525909 .. 432.769257
 + Number voxels above clip level = 50304
 + Clustering voxels ...
 + Largest cluster has 50158 voxels
 + Clustering voxels ...
 + Largest cluster has 50023 voxels
 + Filled    59 voxels in small holes; now have 50082 voxels
 + Clustering voxels ...
 + Largest cluster has 50073 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376202 voxels
 + Mask now has 50073 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368308 voxels
++ 57967 voxels in the mask [out of 426275: 13.60%]
++ first  16 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb8630.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8630.r03.blur+orig
++ Forming automask
 + Fixed clip level = 386.225586
 + Used gradual clip level = 316.254944 .. 438.522125
 + Number voxels above clip level = 49953
 + Clustering voxels ...
 + Largest cluster has 49816 voxels
 + Clustering voxels ...
 + Largest cluster has 49681 voxels
 + Filled    51 voxels in small holes; now have 49732 voxels
 + Filled     2 voxels in large holes; now have 49734 voxels
 + Clustering voxels ...
 + Largest cluster has 49725 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376550 voxels
 + Mask now has 49725 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368798 voxels
++ 57477 voxels in the mask [out of 426275: 13.48%]
++ first  16 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb8630
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 58330 survived, 367945 were zero
++ writing result full_mask.tb8630...
3dresample -master full_mask.tb8630+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb8630
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 50781 survived, 375494 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb8630...
3dABoverlap -no_automask full_mask.tb8630+orig mask_anat.tb8630+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb8630+orig.BRIK  B=./mask_anat.tb8630+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
58330        50781        60634        48477        9853         2304         16.8918      4.5371     0.8355     0.9560     0.8912
3ddot -dodice full_mask.tb8630+orig mask_anat.tb8630+orig
tee out.mask_ae_dice.txt
0.888581	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb8630
total number of censored TRs (simple form) = 2
1deval -a motion_tb8630_censor.1D -b outcount_tb8630_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb8630_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb8630.r01.blur+orig.HEAD pb03.tb8630.r02.blur+orig.HEAD pb03.tb8630.r03.blur+orig.HEAD -censor censor_tb8630_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb8630 -errts errts.tb8630 -bucket stats.tb8630
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb8630.r01.blur+orig.HEAD pb03.tb8630.r02.blur+orig.HEAD pb03.tb8630.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 49985 voxels (out of 426275 = 11.7%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 448 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb8630.r01.blur+orig.HEAD pb03.tb8630.r02.blur+orig.HEAD pb03.tb8630.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb8630_REML -Rvar stats.tb8630_REMLvar \
 -Rfitts fitts.tb8630_REML -Rerrts errts.tb8630_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (448x24):  6.29952  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (448x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (448x18):  5.84118  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (448x6):  2.89557  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (448x12):  1.05525  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 5.40227e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.29 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=6.157
++ Job #2: processing voxels 85254 to 127880; elapsed time=6.175
++ Job #3: processing voxels 127881 to 170507; elapsed time=6.193
++ Job #4: processing voxels 170508 to 213134; elapsed time=6.213
++ Job #5: processing voxels 213135 to 255761; elapsed time=6.232
++ Job #6: processing voxels 255762 to 298388; elapsed time=6.253
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.285
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.305
++ Job #0: processing voxels 0 to 42626; elapsed time=6.322
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=6.325
0123456789.0123456789.0123456789.0123++ Job #1 finished; elapsed time=33.709
45++ Job #2 finished; elapsed time=34.914
++ Job #8 finished; elapsed time=35.011
++ Job #4 finished; elapsed time=35.244
67++ Job #7 finished; elapsed time=36.196
8++ Job #5 finished; elapsed time=36.386
9.012345++ Job #3 finished; elapsed time=38.702
678++ Job #6 finished; elapsed time=39.261
9.
++ Job #0 waiting for children to finish; elapsed time=39.492
++ Job #9 finished; elapsed time=39.505
++ Job #0 now finishing up; elapsed time=39.516
++ Smallest FDR q [0 Full_Fstat] = 3.83031e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 4.09947e-14
++ Smallest FDR q [3 uns1_Fstat] = 4.09929e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 3.49516e-14
++ Smallest FDR q [6 uns2_Fstat] = 3.49517e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 1.2101e-14
++ Smallest FDR q [9 uns3_Fstat] = 1.20968e-14
++ Smallest FDR q [11 str1#0_Tstat] = 4.55044e-14
++ Smallest FDR q [12 str1_Fstat] = 4.55044e-14
++ Smallest FDR q [14 str2#0_Tstat] = 5.6695e-14
++ Smallest FDR q [15 str2_Fstat] = 5.67039e-14
++ Smallest FDR q [17 str3#0_Tstat] = 1.03363e-14
++ Smallest FDR q [18 str3_Fstat] = 1.0331e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.16464e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.1647e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.49317e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.49288e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 2.97845e-05
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 2.9783e-05
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 1.87909e-05
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 1.87891e-05
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 2.7096e-07
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 2.70941e-07
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.6767e-05
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.67668e-05
++ Wrote bucket dataset into ./stats.tb8630+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb8630+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb8630+orig.BRIK
++ Program finished; elapsed time=57.915
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.733       0.796  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.726       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.726       0.791  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.479       0.555  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.475       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.475       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb8630.r01.blur+orig.HEAD pb03.tb8630.r02.blur+orig.HEAD pb03.tb8630.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb8630_REML -Rvar stats.tb8630_REMLvar -Rfitts fitts.tb8630_REML -Rerrts errts.tb8630_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 49985 voxels (out of 426275 = 11.7%)
++ -----  matrix condition (448x24):  6.29952  ++ VERY GOOD ++
 + masked off 254745 voxels for being all zero; 171530 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 309 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=14.06
 + X matrix: 46.661% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=448 cols=24; 109*1 cases; total CPU=0.00 Elapsed=14.09
 +  average case bandwidth = 12.53
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=81.97
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=127.08
++ Output dataset ./stats.tb8630_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb8630_REML+orig.BRIK
++ Output dataset ./errts.tb8630_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb8630_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 6.653e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 9.0943e-13
++ Smallest FDR q [3 uns1_Fstat] = 9.09433e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 2.58296e-13
++ Smallest FDR q [6 uns2_Fstat] = 2.58296e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 1.37263e-11
++ Smallest FDR q [9 uns3_Fstat] = 1.37263e-11
++ Smallest FDR q [11 str1#0_Tstat] = 8.92591e-13
++ Smallest FDR q [12 str1_Fstat] = 8.92591e-13
++ Smallest FDR q [14 str2#0_Tstat] = 4.55809e-13
++ Smallest FDR q [15 str2_Fstat] = 4.55809e-13
++ Smallest FDR q [17 str3#0_Tstat] = 4.10846e-11
++ Smallest FDR q [18 str3_Fstat] = 4.10847e-11
++ Smallest FDR q [20 unstructured#0_Tstat] = 5.95441e-14
++ Smallest FDR q [21 unstructured_Fstat] = 5.95441e-14
++ Smallest FDR q [23 structured#0_Tstat] = 7.95074e-14
++ Smallest FDR q [24 structured_Fstat] = 7.95074e-14
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.999874 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.999874 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.128691 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.128691 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.1983 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.1983 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.325999 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.325999 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb8630_REML+orig
++ Output dataset ./stats.tb8630_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=149.61
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb8630 pb03.tb8630.r01.blur+orig.HEAD pb03.tb8630.r02.blur+orig.HEAD pb03.tb8630.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.4 s
3dTstat -mean -prefix rm.signal.all all_runs.tb8630+orig[0..299,302..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb8630_REML+orig[0..299,302..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb8630+orig -expr c*a/b -prefix TSNR.tb8630
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb8630_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb8630+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 58330 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.171424
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb8630.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8630+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb8630+orig[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58330
[7m*+ WARNING:[0m removed 408 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.84 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8630+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb8630+orig[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58330
[7m*+ WARNING:[0m removed 408 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.68 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 302..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8630+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb8630+orig[302..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58330
[7m*+ WARNING:[0m removed 408 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.53 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
[7m** FATAL ERROR:[0m Can't read input file 'files_ACF/out.3dFWHMx.ACF.errts.r03.1D[1]'
** Program compile date = Jul 20 2017
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 10.3908 9.77722 10.2008 10.1197
average errts FWHM blurs: 10.3908 9.77722 10.2008 10.1197
echo 10.3908 9.77722 10.2008 10.1197   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.462782 7.3901 12.9546 17.5964
average errts ACF blurs: 0.462782 7.3901 12.9546 17.5964
echo 0.462782 7.3901 12.9546 17.5964   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8630+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb8630_REML+orig[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58330
[7m*+ WARNING:[0m removed 408 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.68 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
pnmtopng: A file read or write error occurred at some point
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8630+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb8630_REML+orig[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58330
[7m*+ WARNING:[0m removed 408 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.57 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
[7m** FATAL ERROR:[0m Can't read input file 'files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D[1]'
** Program compile date = Jul 20 2017
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 302..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8630+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb8630_REML+orig[302..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58330
[7m*+ WARNING:[0m removed 408 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.30 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
pnmtopng: A file read or write error occurred at some point
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 10.3342 9.72341 10.1486 10.0655
average err_reml FWHM blurs: 10.3342 9.72341 10.1486 10.0655
echo 10.3342 9.72341 10.1486 10.0655   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.453848 7.39982 12.7405 17.5098
average err_reml ACF blurs: 0.453848 7.39982 12.7405 17.5098
echo 0.453848 7.39982 12.7405 17.5098   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb8630.1D
3dClustSim -both -mask full_mask.tb8630+orig -acf 0.453848 7.39982 12.7405 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 58330 voxels in mask (13.68% of total)
++ Kernel function radius = 42.13 mm
++ ACF(0.45,7.40,12.74) => FWHM=17.51 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 814.5 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb8630+orig stats.tb8630_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb8630+orig
++ applying attributes
++ Processing AFNI dataset stats.tb8630_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb8630 -dsets pb00.tb8630.r01.tcat+orig.HEAD pb00.tb8630.r02.tcat+orig.HEAD pb00.tb8630.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
Traceback (most recent call last):
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2698, in <module>
    sys.exit(main())
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2691, in main
    if me.write_scripts():
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2023, in write_scripts
    UTIL.write_text_to_file(scr_basic, self.text_basic, exe=1)
  File "/usr/local/apps/afni/current/linux_openmp_64/afni_util.py", line 71, in write_text_to_file
    fp.close()
IOError: [Errno 122] Disk quota exceeded
