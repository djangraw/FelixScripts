echo auto-generated by afni_proc.py, Tue Aug  8 10:41:35 2017
auto-generated by afni_proc.py, Tue Aug  8 10:41:35 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Tue Aug  8 10:41:35 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0027
endif
set output_dir = tb0027.srtt
if ( -d tb0027.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0027.srtt
mkdir tb0027.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0027.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0027.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0027.srtt/pb00.tb0027.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0027.srtt/pb00.tb0027.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0027.srtt/pb00.tb0027.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0027.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0027.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0027.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0027.r01.tcat+orig.BRIK is 5.500001 degrees from plumb.
++ 27369 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0027.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0027.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0027.r02.tcat+orig.BRIK is 5.500001 degrees from plumb.
++ 27375 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0027.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0027.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0027.r03.tcat+orig.BRIK is 5.500001 degrees from plumb.
++ 27316 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0027.r01.tshift -tpattern alt+z2 pb00.tb0027.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0027.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0027.r01.tcat+orig.BRIK is 5.500001 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0027.r02.tshift -tpattern alt+z2 pb00.tb0027.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0027.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0027.r02.tcat+orig.BRIK is 5.500001 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0027.r03.tshift -tpattern alt+z2 pb00.tb0027.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0027.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0027.r03.tcat+orig.BRIK is 5.500001 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0027.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 5.500001 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 405.000397
 + Used gradual clip level = 373.564789 .. 449.096008
 + Number voxels above clip level = 27924
 + Clustering voxels ...
 + Largest cluster has 27434 voxels
 + Clustering voxels ...
 + Largest cluster has 26987 voxels
 + Filled   382 voxels in small holes; now have 27369 voxels
 + Filled     3 voxels in large holes; now have 27372 voxels
 + Clustering voxels ...
 + Largest cluster has 27372 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 103699 voxels
 + Mask now has 27373 voxels
++ 27373 voxels in the mask [out of 131072: 20.88%]
++ first  13 x-planes are zero [from R]
++ last   11 x-planes are zero [from L]
++ first   7 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 990.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/990.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 5.500001 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 5.500001 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1463882 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 27373 voxels [17.6%] in weight mask
++ Number of points for matching = 27373
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.488 29.262 19.468 (index)
 + source center of mass = 83.351 153.097 172.535 (index)
 + source-target CM = -1.465 1.939 -3.046 (xyz)
 + center of mass shifts = -1.465 1.939 -3.046
++ shift param auto-range: -71.0..68.1 -67.6..71.5 -50.6..44.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.464890 .. 8.535110
 + Range param#2 [y-shift] = -8.060509 .. 11.939491
 + Range param#3 [z-shift] = -13.046349 .. 6.953651
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.464890 .. 38.535110
 + Range param#2 [y-shift] = -38.060509 .. 41.939491
 + Range param#3 [z-shift] = -43.046349 .. 36.953651
 + 12 free parameters
++ Normalized convergence radius = 0.000468
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1463882 [out of 13798400] voxels
 + base mask has 37565 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=77 usiz=182.5
 + - copying weight image
 + - using 27373 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 23483 total points stored in 218 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.00588246] **[#2=-0.0100594] *+oo*[#10=-0.0150316] *+*[#19=-0.0190766] **[#28=-0.0374108] *.--.o++-o.o+++*[#1052=-0.0412808] *++..--o.$-*[#6812=-0.0421856] *
 + - best 45 costs found:
    0 v=-0.042186: -18.32 -16.65  11.41 -19.57 -37.09  16.59  [rand]
    1 v=-0.041281: -14.80 -11.39  10.29 -15.00 -30.00  15.00  [grid]
    2 v=-0.039698: -14.80 -24.73  23.62 -30.00 -30.00  30.00  [grid]
    3 v=-0.037411: -14.80 -11.39  10.29 -15.00 -15.00  15.00  [grid]
    4 v=-0.035624:  12.74  11.39   1.79  15.99  13.53 -29.93  [rand]
    5 v=-0.035517: -14.80 -24.73  10.29 -15.00 -30.00  15.00  [grid]
    6 v=-0.034505:  11.87 -24.73  23.62  30.00 -30.00 -30.00  [grid]
    7 v=-0.034327: -13.06   6.50   0.85 -24.53 -29.49 -26.10  [rand]
    8 v=-0.034099:  -5.54   8.17   4.75  -4.32 -22.85 -18.95  [rand]
    9 v=-0.033504: -14.80 -11.39  10.29 -15.00 -30.00  30.00  [grid]
   10 v=-0.033395:  -5.54  -4.29   4.75  -4.32  22.85 -18.95  [rand]
   11 v=-0.032499: -11.29 -22.82   8.34  -3.10 -34.36   2.55  [rand]
   12 v=-0.032380: -14.80  15.27  10.29  30.00  15.00  30.00  [grid]
   13 v=-0.032285: -10.11 -18.49 -20.52 -25.20  18.50  13.54  [rand]
   14 v=-0.031427:  11.87 -11.39  10.29  15.00 -30.00 -15.00  [grid]
   15 v=-0.031276: -14.80 -11.39  10.29 -30.00 -30.00  15.00  [grid]
   16 v=-0.031189:  25.20 -11.39  23.62 -30.00 -15.00 -30.00  [grid]
   17 v=-0.031148: -14.80  15.27  10.29 -30.00  15.00  30.00  [grid]
   18 v=-0.031023: -13.06  -2.62  -6.94 -24.53 -29.49 -26.10  [rand]
   19 v=-0.030862: -14.80  28.61  10.29  30.00  30.00  15.00  [grid]
   20 v=-0.030827: -17.61  -7.53 -27.40 -20.99  15.73 -16.09  [rand]
   21 v=-0.030219: -17.61  11.40  21.30 -20.99 -15.73  16.09  [rand]
   22 v=-0.030197:  10.13   6.50   0.85  24.53 -29.49 -26.10  [rand]
   23 v=-0.030195:  -5.54  -4.29   4.75   4.32  22.85 -18.95  [rand]
   24 v=-0.030052: -14.80 -24.73  23.62 -15.00 -30.00  30.00  [grid]
   25 v=-0.029610: -14.80 -11.39  10.29 -30.00 -15.00  30.00  [grid]
   26 v=-0.029147: -11.29 -22.82   8.34  -3.10 -34.36  -2.55  [rand]
   27 v=-0.028425: -14.80  15.27  23.62 -30.00  30.00  15.00  [grid]
   28 v=-0.028284:  -7.45   5.35  21.48 -29.81   4.26  23.54  [rand]
   29 v=-0.028100: -14.80 -11.39  23.62 -30.00 -15.00  30.00  [grid]
   30 v=-0.027802: -14.80  15.27  10.29 -15.00  15.00  30.00  [grid]
   31 v=-0.027729: -15.49 -13.78  11.62 -24.25 -37.55   4.41  [rand]
   32 v=-0.027534:  -5.54   8.17 -10.84   4.32  22.85 -18.95  [rand]
   33 v=-0.027080: -14.80  15.27  23.62 -30.00  30.00  30.00  [grid]
   34 v=-0.026942: -14.80 -24.73  10.29 -15.00 -15.00  30.00  [grid]
   35 v=-0.026749: -13.06  -2.62  -6.94 -24.53 -29.49  26.10  [rand]
   36 v=-0.026665:  -8.52 -17.88  32.70 -25.15 -27.05 -27.90  [rand]
   37 v=-0.026605: -25.81 -27.75   9.98 -28.68 -38.91  32.36  [rand]
   38 v=-0.025811: -14.80 -24.73 -16.38 -15.00 -30.00 -15.00  [grid]
   39 v=-0.025667: -14.80 -24.73  10.29 -30.00 -30.00  30.00  [grid]
   40 v=-0.025464: -14.80 -11.39 -29.71 -15.00  15.00 -15.00  [grid]
   41 v=-0.025448: -14.88 -20.75  28.29   4.37  20.12  15.12  [rand]
   42 v=-0.025383: -14.88 -20.75  28.29  -4.37  20.12  15.12  [rand]
   43 v=-0.025263: -14.80  15.27  23.62 -30.00  15.00  15.00  [grid]
   44 v=-0.025082:  11.87  15.27  10.29 -30.00  30.00 -30.00  [grid]
*[#8002=-0.0519918] *[#8006=-0.0520087] *[#8014=-0.0527966] *[#8015=-0.0537401] *[#8020=-0.0538675] *[#8024=-0.0541911] *[#8032=-0.0608088] *[#8038=-0.0609224] *[#8040=-0.0620766] *[#8041=-0.0629003] *[#8042=-0.0631364] *[#8044=-0.064915] *[#8045=-0.0670669] *[#8047=-0.0674469] *[#8048=-0.0683826] *[#8051=-0.0685498] *[#8052=-0.0688441] *[#8102=-0.0716904] *[#8103=-0.0723523] *[#8104=-0.0770009] *[#8105=-0.0823302] *[#8106=-0.0860193] *[#8107=-0.0940737] *[#8108=-0.101535] *[#8110=-0.103548] *[#8111=-0.104947] *[#8112=-0.110899] *[#8118=-0.111795] *[#8121=-0.112339] *[#8124=-0.112346] *[#8128=-0.112956] *[#8129=-0.113119]  + - costs of the above after a little optimization:
    0 v=-0.054191: -18.23 -16.89  12.30 -19.08 -33.03  16.40  [rand]
    1 v=-0.068844: -13.36 -10.56  10.21 -13.68 -24.69  15.39  [grid]
    2 v=-0.045976: -13.46 -25.58  23.36 -26.74 -30.64  30.69  [grid]
  * 3 v=-0.113119: -10.77  -2.89   8.12 -10.51 -10.43  10.19  [grid]
    4 v=-0.048383:   9.71  12.35   0.93  13.81  10.17 -31.03  [rand]
    5 v=-0.071013: -11.28 -20.93   9.29 -15.42 -36.19  10.98  [grid]
    6 v=-0.047802:  12.89 -25.61  23.03  27.24 -25.65 -31.69  [grid]
    7 v=-0.062310:  -4.76   5.91   4.25 -22.97 -26.76 -30.89  [rand]
    8 v=-0.064984:  -5.15   8.15   1.90 -10.72 -25.61 -21.37  [rand]
    9 v=-0.051318: -11.48  -9.58  11.26  -8.77 -28.21  29.91  [grid]
   10 v=-0.039408:  -5.75  -4.41   8.64  -4.58  22.64 -18.97  [rand]
   11 v=-0.088239:  -1.52 -21.47   5.52  -1.00 -31.41  -0.56  [rand]
   12 v=-0.039762: -15.63  14.85   8.26  25.32  19.18  30.26  [grid]
   13 v=-0.040010: -10.74 -17.64 -19.38 -23.48  17.92  12.88  [rand]
   14 v=-0.065138:  10.24 -12.15  10.99   7.89 -26.47 -13.99  [grid]
   15 v=-0.059118: -14.83 -15.50   7.90 -20.77 -26.41  11.66  [grid]
   16 v=-0.049276:  22.35 -14.89  29.82 -30.22 -16.51 -29.69  [grid]
   17 v=-0.044095: -10.79  12.62   9.62 -28.00  14.60  28.99  [grid]
   18 v=-0.043672: -11.03  -2.05  -3.64 -25.28 -29.88 -26.34  [rand]
   19 v=-0.032285: -14.48  28.28  10.30  31.38  30.22  15.12  [grid]
   20 v=-0.034471: -17.01  -7.64 -27.92 -16.65  16.00 -16.80  [rand]
   21 v=-0.033366: -17.84  12.31  22.16 -21.27 -17.89  15.70  [rand]
   22 v=-0.048923:   7.39   5.62   3.09  37.25 -34.18 -28.15  [rand]
   23 v=-0.043437:  -4.88  -0.38   5.31   4.35  23.02 -17.77  [rand]
   24 v=-0.033886: -14.60 -25.68  24.56 -15.26 -25.56  30.54  [grid]
   25 v=-0.038461: -14.32  -7.16   8.95 -32.01 -14.03  26.45  [grid]
   26 v=-0.085287:  -1.77 -23.37   4.80 -12.11 -32.05  -5.18  [rand]
   27 v=-0.039753: -14.07  15.96  31.57 -26.32  31.62  16.76  [grid]
   28 v=-0.035954: -11.26   4.48  21.45 -32.12   3.39  21.12  [rand]
   29 v=-0.030875: -14.78  -7.43  23.95 -30.31 -14.83  30.37  [grid]
   30 v=-0.037194: -14.96  13.98   9.40 -21.06  14.25  28.85  [grid]
   31 v=-0.063383:  -9.99 -18.74  10.87 -23.04 -36.13   3.48  [rand]
   32 v=-0.035121:  -6.02   8.18  -7.92   4.73  21.53 -19.86  [rand]
   33 v=-0.028863: -14.19  15.93  23.71 -29.72  29.65  30.55  [grid]
   34 v=-0.030275: -15.58 -24.46  10.25 -15.22 -15.99  33.67  [grid]
   35 v=-0.031612: -13.50  -5.40  -7.94 -24.28 -30.64  25.22  [rand]
   36 v=-0.035294:  -7.26 -18.10  30.82 -25.50 -28.42 -30.26  [rand]
   37 v=-0.031147: -26.84 -27.26  10.55 -28.43 -38.56  36.76  [rand]
   38 v=-0.033454: -14.21 -25.47 -19.15 -17.89 -26.98 -11.10  [grid]
   39 v=-0.051044: -11.62 -26.18  18.22 -28.84 -36.55  30.69  [grid]
   40 v=-0.037573: -12.94 -11.24 -22.26 -11.58  13.52 -14.22  [grid]
   41 v=-0.040766: -14.86 -20.03  22.98  -1.37  14.93  15.47  [rand]
   42 v=-0.040016: -14.51 -19.85  23.70  -2.53  14.91  16.98  [rand]
   43 v=-0.030125: -12.99  15.61  24.42 -35.56  15.28  15.67  [grid]
   44 v=-0.035545:  11.61  16.43   5.95 -29.66  28.69 -30.58  [grid]
 + - save # 3 for twobest
 + - save #11 for twobest
 + - save #26 for twobest
 + - save # 5 for twobest
 + - save # 1 for twobest
 + - save #14 for twobest
 + - save # 8 for twobest
 + - save #31 for twobest
 + - save # 7 for twobest
 + - save #15 for twobest
 + - save # 0 for twobest
 + - save # 9 for twobest
 + - save #39 for twobest
 + - save #16 for twobest
 + - save #22 for twobest
 + - save # 4 for twobest
 + - save # 6 for twobest
 + - save # 2 for twobest
 + - save #17 for twobest
 + - save #18 for twobest
 + - save #23 for twobest
 + - save #41 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=77 usiz=182.5
 + - retaining old weight image
 + - using 27373 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23171 total points stored in 231 'RHDD(13.7332)' bloks
*[#9560=-0.11327] *[#9561=-0.113859] *[#9562=-0.114656] *[#9563=-0.115735] *[#9564=-0.116501] *[#9565=-0.117402] *[#9567=-0.117788] *[#9569=-0.118804] *[#9570=-0.120258] *[#9571=-0.122223] *[#9572=-0.123219] *[#9573=-0.123314] *[#9574=-0.124002] *[#9575=-0.12432] *[#9576=-0.124491] *[#9577=-0.125104] *[#9578=-0.125657] *[#9579=-0.126057] *[#9580=-0.127053] *[#9581=-0.129101] *[#9584=-0.131097] *[#9585=-0.132868] *[#9586=-0.135002] *[#9587=-0.137999] *[#9588=-0.141385] *[#9590=-0.141559] *[#9592=-0.142569] *[#9593=-0.143981] *[#9594=-0.145352] *[#9595=-0.145429] *[#9597=-0.147965] *[#9600=-0.149933] *[#9601=-0.152419] *[#9604=-0.155477] *[#9605=-0.155537] *[#9606=-0.157231] *[#9607=-0.158591] *[#9608=-0.161213] *[#9609=-0.16508] 
 + - param set #1 has cost=-0.165080
 + -- Parameters = -4.1219 -1.0402 4.8630 -4.6158 -6.3923 5.0446 1.0103 1.0043 1.0227 0.0080 0.0090 -0.0119
 + - param set #2 has cost=-0.088113
 + -- Parameters = -1.2880 -21.9550 6.1063 -0.9599 -32.8749 2.0922 1.0065 0.9929 1.0009 0.0003 -0.0002 -0.0038
 + - param set #3 has cost=-0.088433
 + -- Parameters = -1.7137 -23.8299 5.4355 -1.9636 -34.3564 0.9317 0.9920 0.9940 0.9933 -0.0012 0.0124 -0.0027
 + - param set #4 has cost=-0.068824
 + -- Parameters = -11.5984 -20.1961 8.1472 -14.8804 -35.6367 11.2122 1.0045 1.0227 0.9986 0.0005 0.0038 0.0005
 + - param set #5 has cost=-0.096997
 + -- Parameters = -10.1735 -8.2434 9.0768 -9.7741 -20.3532 12.1261 1.0087 0.9936 0.9948 0.0135 0.0062 -0.0042
 + - param set #6 has cost=-0.071354
 + -- Parameters = 7.9283 -11.2891 11.4008 6.1884 -24.2237 -8.1453 0.9983 1.0024 0.9988 0.0017 -0.0008 0.0015
 + - param set #7 has cost=-0.052661
 + -- Parameters = -6.1492 10.1201 1.9123 -12.5616 -22.6822 -21.0123 1.0032 1.0084 1.0156 0.0239 0.0015 0.0030
 + - param set #8 has cost=-0.077417
 + -- Parameters = -9.4849 -18.3083 10.7597 -13.3778 -32.3027 4.5851 1.0022 1.0016 1.0004 0.0029 0.0018 -0.0022
 + - param set #9 has cost=-0.051357
 + -- Parameters = -4.8479 5.9362 4.0063 -23.2176 -26.7242 -30.9385 0.9988 0.9991 1.0003 0.0095 -0.0006 0.0003
 + - param set #10 has cost=-0.067339
 + -- Parameters = -13.7609 -14.6344 7.0518 -18.7410 -24.8514 10.2336 1.0208 1.0130 1.0134 -0.0009 0.0016 0.0028
 + - param set #11 has cost=-0.056003
 + -- Parameters = -17.0993 -16.9817 11.1461 -18.6337 -33.1937 16.2487 1.0061 1.0014 1.0039 0.0092 0.0047 0.0026
*[#10474=-0.227273] *[#10477=-0.262165] *[#10491=-0.290426] *[#10493=-0.293122] *[#10495=-0.294598] *[#10498=-0.296179] *[#10499=-0.299444] *[#10502=-0.302531] *[#10503=-0.306633] *[#10504=-0.312144] *[#10505=-0.320754] *[#10507=-0.327415] *[#10508=-0.329777] *[#10510=-0.334329] *[#10511=-0.343975] *[#10512=-0.348646] *[#10519=-0.353598] *[#10520=-0.356179] *[#10522=-0.356818] *[#10523=-0.358199] *[#10524=-0.359577] *[#10526=-0.360434] *[#10527=-0.361496] *[#10528=-0.362415] *[#10529=-0.363621] *[#10530=-0.364756] *[#10531=-0.366282] *[#10533=-0.366359] *[#10534=-0.367444] *[#10537=-0.367694] *[#10538=-0.368655] *[#10542=-0.369045] *[#10543=-0.370281] *[#10544=-0.371196] *[#10547=-0.372319] *[#10548=-0.373042] *[#10550=-0.374609] *[#10551=-0.375023] 
 + - param set #12 has cost=-0.375023
 + -- Parameters = 0.2860 -0.7028 0.9708 0.1204 -2.3687 -0.0036 1.0008 1.0104 0.9836 -0.0044 -0.0030 -0.0116
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.107 
 + --- dist(#3,#1) = 0.2 
 + --- dist(#4,#1) = 0.355 
 + --- dist(#5,#1) = 0.339 
 + --- dist(#6,#1) = 0.333 
 + --- dist(#7,#1) = 0.243 
 + --- dist(#8,#1) = 0.37 
 + --- dist(#9,#1) = 0.25 
 + --- dist(#10,#1) = 0.343 
 + --- dist(#11,#1) = 0.233 
 + --- dist(#12,#1) = 0.344 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=77 usiz=182.5
 + - retaining old weight image
 + - using 27373 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23870 total points stored in 248 'RHDD(13.5933)' bloks
*[#10577=-0.37524] *[#10578=-0.375741] *[#10580=-0.378946] *[#10585=-0.378954] *[#10591=-0.379255] *[#10592=-0.379277] *[#10594=-0.379379] *[#10597=-0.379499] *[#10598=-0.379639] *[#10599=-0.379709] *[#10602=-0.379763] *[#10603=-0.379793] *[#10606=-0.37982] *[#10608=-0.380035] *[#10613=-0.380112] *[#10619=-0.380233] *[#10622=-0.38025] *[#10625=-0.380331] *[#10626=-0.380394] *[#10627=-0.380499] *[#10634=-0.380686] *[#10635=-0.380695] *[#10641=-0.380766] *[#10644=-0.38079] *[#10645=-0.38085] *[#10650=-0.380945] 
 + - param set #1 has cost=-0.380945
 + -- Parameters = 0.2656 -0.3035 0.9911 -0.1318 -2.6982 0.0217 1.0041 1.0264 0.9902 -0.0044 0.0005 -0.0144
 + - param set #2 has cost=-0.300483
 + -- Parameters = -0.4039 -0.2146 0.9761 -1.4184 -2.9798 -1.9176 1.0348 1.0207 1.0333 -0.0692 0.0155 -0.0141
 + - param set #3 has cost=-0.081329
 + -- Parameters = -10.0990 -8.1449 8.5580 -9.9781 -20.0712 11.6207 1.0150 0.9966 0.9828 0.0126 0.0192 -0.0044
 + - param set #4 has cost=-0.073694
 + -- Parameters = -1.3947 -24.0777 5.3213 -2.3637 -35.1519 2.0904 1.0089 0.9784 0.9760 0.0063 0.0361 -0.0177
 + - param set #5 has cost=-0.071731
 + -- Parameters = -1.3759 -22.9486 5.2620 -2.0649 -33.7683 2.0084 1.0083 0.9897 0.9874 -0.0054 0.0232 -0.0020
 + - param set #6 has cost=-0.062769
 + -- Parameters = -8.8701 -18.2587 10.5208 -12.5655 -30.2823 2.9548 1.0037 0.9773 0.9863 0.0128 0.0033 -0.0058
 + - param set #7 has cost=-0.073545
 + -- Parameters = 3.9295 -9.4448 11.2830 4.1902 -23.8263 -1.3978 1.0131 1.0060 0.9471 -0.0199 -0.0129 -0.0199
 + - param set #8 has cost=-0.059126
 + -- Parameters = -12.0122 -19.9990 8.2869 -13.8937 -34.4389 10.5817 1.0020 1.0270 0.9926 -0.0020 0.0135 -0.0026
 + - param set #9 has cost=-0.056328
 + -- Parameters = -13.6965 -14.5181 6.9374 -18.1345 -24.8952 10.7525 1.0198 1.0251 1.0142 0.0007 0.0005 0.0017
 + - param set #10 has cost=-0.045745
 + -- Parameters = -16.7446 -16.8152 10.7081 -18.4902 -32.3345 16.5160 1.0053 1.0018 1.0027 0.0084 0.0055 0.0014
 + - param set #11 has cost=-0.040890
 + -- Parameters = -6.2848 10.0703 1.8002 -12.6657 -22.5667 -20.9117 1.0046 1.0091 1.0195 0.0220 0.0080 0.0024
 + - param set #12 has cost=-0.043205
 + -- Parameters = -4.5965 5.1651 2.1622 -22.5708 -26.6391 -30.5226 0.9987 0.9967 1.0055 0.0085 -0.0070 -0.0001
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.291 
 + --- dist(#3,#1) = 0.193 
 + --- dist(#4,#1) = 0.361 
 + --- dist(#5,#1) = 0.235 
 + --- dist(#6,#1) = 0.345 
 + --- dist(#7,#1) = 0.306 
 + --- dist(#8,#1) = 0.353 
 + --- dist(#9,#1) = 0.247 
 + --- dist(#10,#1) = 0.329 
 + --- dist(#11,#1) = 0.339 
 + --- dist(#12,#1) = 0.233 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=77 usiz=182.5
 + - retaining old weight image
 + - using 27373 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24016 total points stored in 256 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.367868
 + -- Parameters = 0.2122 -0.2936 0.9220 -0.2266 -2.8770 -0.0726 1.0060 1.0252 0.9971 -0.0088 0.0020 -0.0183
 + - param set #2 has cost=-0.343028
 + -- Parameters = -0.2219 -0.6696 1.2230 -1.0802 -1.9739 -0.7000 1.0005 1.0194 0.9986 -0.0415 0.0154 0.0070
 + - param set #3 has cost=-0.067477
 + -- Parameters = -10.0705 -8.0511 8.7890 -10.0500 -20.2345 11.6832 1.0153 0.9967 0.9814 0.0113 0.0232 -0.0049
 + - param set #4 has cost=-0.065292
 + -- Parameters = -1.0755 -23.7559 4.8155 -3.3359 -35.0626 1.7116 1.0235 0.9819 0.9809 0.0098 0.0388 -0.0248
 + - param set #5 has cost=-0.089693
 + -- Parameters = -0.5734 -7.0276 9.7344 -1.6911 -21.3843 -0.1470 0.9656 1.0400 0.9318 -0.0376 0.0044 -0.0208
 + - param set #6 has cost=-0.062597
 + -- Parameters = -1.2357 -23.3242 5.1018 -3.9303 -33.6077 1.9025 1.0070 0.9907 0.9884 -0.0045 0.0230 -0.0025
 + - param set #7 has cost=-0.057815
 + -- Parameters = -8.2034 -17.1257 9.5758 -11.7949 -27.6334 2.9138 1.0056 0.9850 0.9861 0.0142 0.0023 -0.0070
 + - param set #8 has cost=-0.048509
 + -- Parameters = -11.4633 -19.9974 8.0866 -14.4456 -34.6990 11.0940 1.0024 1.0279 0.9914 -0.0063 0.0141 -0.0048
 + - param set #9 has cost=-0.048453
 + -- Parameters = -12.7523 -14.8982 6.1195 -17.8460 -24.9997 10.8842 1.0315 1.0259 1.0017 0.0043 -0.0064 0.0027
 + - param set #10 has cost=-0.035925
 + -- Parameters = -17.0022 -16.5837 10.6747 -18.6562 -32.3192 16.4614 1.0000 1.0029 1.0030 0.0118 0.0046 0.0011
 + - param set #11 has cost=-0.037791
 + -- Parameters = -4.3285 4.6407 1.7943 -21.1935 -25.2669 -30.6133 0.9945 0.9990 1.0015 0.0028 -0.0090 -0.0028
 + - param set #12 has cost=-0.036508
 + -- Parameters = -5.8282 8.1453 1.9371 -11.8385 -22.7198 -20.2952 1.0145 0.9947 1.0244 0.0245 0.0084 0.0021
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.147 
 + --- dist(#3,#1) = 0.206 
 + --- dist(#4,#1) = 0.193 
 + --- dist(#5,#1) = 0.358 
 + --- dist(#6,#1) = 0.341 
 + --- dist(#7,#1) = 0.275 
 + --- dist(#8,#1) = 0.354 
 + --- dist(#9,#1) = 0.246 
 + --- dist(#10,#1) = 0.339 
 + --- dist(#11,#1) = 0.225 
 + --- dist(#12,#1) = 0.327 
 + - Total coarse refinement net CPU time = 0.0 s; 3264 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=77 usiz=182.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24066 total points stored in 257 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.346046 *
 + -- Parameters = 0.2122 -0.2936 0.9220 -0.2266 -2.8770 -0.0726 1.0060 1.0252 0.9971 -0.0088 0.0020 -0.0183
 + - cost(#2)=-0.321804  
 + -- Parameters = -0.2219 -0.6696 1.2230 -1.0802 -1.9739 -0.7000 1.0005 1.0194 0.9986 -0.0415 0.0154 0.0070
 + - cost(#3)=-0.079201  
 + -- Parameters = -0.5734 -7.0276 9.7344 -1.6911 -21.3843 -0.1470 0.9656 1.0400 0.9318 -0.0376 0.0044 -0.0208
 + - cost(#4)=-0.063729  
 + -- Parameters = -10.0705 -8.0511 8.7890 -10.0500 -20.2345 11.6832 1.0153 0.9967 0.9814 0.0113 0.0232 -0.0049
 + - cost(#5)=-0.060540  
 + -- Parameters = -1.0755 -23.7559 4.8155 -3.3359 -35.0626 1.7116 1.0235 0.9819 0.9809 0.0098 0.0388 -0.0248
 + - cost(#6)=-0.058523  
 + -- Parameters = -1.2357 -23.3242 5.1018 -3.9303 -33.6077 1.9025 1.0070 0.9907 0.9884 -0.0045 0.0230 -0.0025
 + - cost(#7)=-0.049058  
 + -- Parameters = -8.2034 -17.1257 9.5758 -11.7949 -27.6334 2.9138 1.0056 0.9850 0.9861 0.0142 0.0023 -0.0070
 + - cost(#8)=-0.044498  
 + -- Parameters = -11.4633 -19.9974 8.0866 -14.4456 -34.6990 11.0940 1.0024 1.0279 0.9914 -0.0063 0.0141 -0.0048
 + - cost(#9)=-0.041193  
 + -- Parameters = -12.7523 -14.8982 6.1195 -17.8460 -24.9997 10.8842 1.0315 1.0259 1.0017 0.0043 -0.0064 0.0027
 + - cost(#10)=-0.031389  
 + -- Parameters = -4.3285 4.6407 1.7943 -21.1935 -25.2669 -30.6133 0.9945 0.9990 1.0015 0.0028 -0.0090 -0.0028
 + - cost(#11)=-0.033805  
 + -- Parameters = -5.8282 8.1453 1.9371 -11.8385 -22.7198 -20.2952 1.0145 0.9947 1.0244 0.0245 0.0084 0.0021
 + - cost(#12)=-0.033922  
 + -- Parameters = -17.0022 -16.5837 10.6747 -18.6562 -32.3192 16.4614 1.0000 1.0029 1.0030 0.0118 0.0046 0.0011
 + - cost(#13)=-0.024844  
 + -- Parameters = -1.4649 1.9395 -3.0463 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.346813 *
 + -- Parameters = 0.2777 -0.3078 0.9466 -0.1287 -2.9580 -0.0783 1.0050 1.0248 0.9973 -0.0050 0.0021 -0.0189
 + - cost(#2)=-0.339127  
 + -- Parameters = -0.0406 -0.5753 1.1447 -0.4695 -2.2573 -0.7901 1.0060 1.0283 0.9919 -0.0149 0.0212 -0.0011
 + - cost(#3)=-0.096412  
 + -- Parameters = -1.7555 -4.3946 7.8183 -2.8839 -18.2971 1.9211 0.9959 1.0532 0.9323 -0.0679 -0.0109 -0.0516
 + - cost(#4)=-0.064122  
 + -- Parameters = -9.9536 -8.1124 8.7234 -10.0638 -20.3752 11.5040 1.0147 0.9971 0.9769 0.0113 0.0231 -0.0049
 + - cost(#5)=-0.061508  
 + -- Parameters = -1.1918 -23.8506 4.4958 -3.4710 -35.1268 1.7162 1.0242 0.9792 0.9768 0.0098 0.0392 -0.0325
 + - cost(#6)=-0.059449  
 + -- Parameters = -1.0496 -23.0282 4.7024 -3.6733 -33.2354 2.0546 1.0073 0.9927 0.9892 0.0007 0.0248 -0.0043
 + - cost(#7)=-0.053227  
 + -- Parameters = -6.4202 -15.6113 9.2259 -11.0525 -28.0793 3.8278 1.0027 0.9916 0.9840 0.0153 0.0032 -0.0083
 + - cost(#8)=-0.044856  
 + -- Parameters = -11.5651 -19.9241 8.1293 -14.5069 -34.6817 11.0101 1.0004 1.0319 0.9914 -0.0070 0.0139 -0.0048
 + - cost(#9)=-0.041979  
 + -- Parameters = -12.7530 -15.0922 6.1403 -17.8022 -25.2845 10.6485 1.0357 1.0282 0.9998 0.0037 -0.0067 0.0017
 + - cost(#10)=-0.032011  
 + -- Parameters = -4.3027 4.4497 1.3664 -21.3379 -25.5495 -30.4240 0.9964 0.9980 0.9965 0.0029 -0.0152 0.0012
 + - cost(#11)=-0.035253  
 + -- Parameters = -5.8468 8.3156 2.0958 -11.5801 -22.7145 -20.7710 1.0188 0.9963 1.0356 0.0269 0.0048 0.0106
 + - cost(#12)=-0.034269  
 + -- Parameters = -16.9902 -16.6686 10.8128 -18.6606 -32.4401 16.3580 1.0001 1.0038 1.0037 0.0097 0.0060 -0.0020
 + - cost(#13)=-0.338750  
 + -- Parameters = 0.0655 -0.6582 1.1321 -0.4352 -2.4296 -0.3580 0.9953 1.0165 0.9838 -0.0139 0.0081 -0.0054
 + - case #1 is now the best
 + - Initial  cost = -0.346813
 + - Initial fine Parameters = 0.2777 -0.3078 0.9466 -0.1287 -2.9580 -0.0783 1.0050 1.0248 0.9973 -0.0050 0.0021 -0.0189
 + - Finalish cost = -0.348875 ; 438 funcs
 + - Final    cost = -0.349133 ; 377 funcs
 + Final fine fit Parameters:
       x-shift= 0.3429   y-shift= 0.0220   z-shift= 0.8522
       z-angle= 0.0246   x-angle=-3.8157   y-angle=-0.0035
       x-scale= 1.0094   y-scale= 1.0356   z-scale= 1.0011
     y/x-shear= 0.0020 z/x-shear= 0.0009 z/y-shear=-0.0349
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.3429 0.0220 0.8522 0.0246 -3.8157 -0.0035 1.0094 1.0356 1.0011 0.0020 0.0009 -0.0349
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.1
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 5.500001 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0016 -1.0315 0.0274 245.6772 0.0007 0.0686 1.0033 92.2854 -1.0094 0.0004 -0.0001 203.7897
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.1 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2303.070100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 88.9276 47.3187   ITER = 6/137
88.9276

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 92ms]
lev=0 0..171 0..213 0..166: [first cost=-0.66917] ... done [cost:-0.66917==>-0.71851]
lev=1 patch=129x161x125 [clock= 12m 41s 483ms]........:[cost=-0.75060]:........ done [cost:-0.71851==>-0.75577 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 17m 35s 682ms]......................... done [cost:-0.75577==>-0.83941 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 21m 24s 507ms]................. done [cost:-0.83941==>-0.89585 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 24m 19s 453ms].......... done [cost:-0.89585==>-0.94084 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 26m 22s 730ms]................. done [cost:-0.94084==>-1.01739 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 28m 34s 653ms]................... done [cost:-1.01739==>-1.00015 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 30m 54s 780ms]........................... done [cost:-1.00015==>-1.13103 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 33m 24s 745ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0027/tb0027.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 6.1 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0027.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.500001 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0027.r01.tshift+orig.BRIK is 5.500001 degrees from plumb.
++ Reading input dataset ./pb01.tb0027.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28874 voxels
 + 4595 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.091  pitch=-0.009  yaw=-0.102  dS=-0.000  dL=-0.060  dP=-0.133
++ Mean: roll=+0.245  pitch=+0.721  yaw=+0.268  dS=+0.460  dL=+0.331  dP=+0.094
++ Max : roll=+0.482  pitch=+1.623  yaw=+0.540  dS=+1.156  dL=+0.740  dP=+0.242
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.20(0.20) 0.19(0.08) 0.20(0.07) 0.20(0.06) 0.24(0.06) 0.29(0.11) 0.38(0.09) 0.40(0.06) 0.49(0.16) 0.81(0.35) 0.57(0.27) 0.38(0.28) 0.37(0.11) 0.43(0.15) 0.47(0.08) 0.54(0.12) 0.54(0.04) 0.51(0.07) 0.52(0.07) 0.52(0.06) 0.57(0.10) 0.50(0.07) 0.47(0.12) 0.49(0.04) 0.46(0.08) 0.48(0.08) 0.49(0.07) 0.49(0.06) 0.51(0.07) 0.55(0.09) 0.59(0.07) 0.59(0.04) 0.56(0.11) 0.56(0.05) 0.55(0.05) 0.57(0.06) 0.63(0.07) 0.62(0.04) 0.57(0.05) 0.56(0.03) 0.59(0.06) 0.61(0.02) 0.62(0.07) 0.66(0.12) 0.70(0.07) 0.71(0.06) 0.71(0.05) 0.75(0.06) 0.79(0.04) 0.77(0.05) 0.78(0.04) 0.80(0.05) 0.83(0.08) 0.83(0.04) 0.92(0.15) 0.93(0.05) 0.90(0.08) 0.90(0.10) 0.92(0.04) 0.98(0.07) 1.05(0.06) 1.09(0.08) 1.07(0.04) 1.10(0.06) 1.14(0.05) 1.26(0.14) 1.24(0.11) 1.13(0.12) 1.15(0.08) 1.22(0.08) 1.32(0.11) 1.43(0.14) 1.41(0.07) 1.39(0.04) 1.35(0.06) 1.40(0.09) 1.42(0.04) 1.41(0.04) 1.45(0.06) 1.43(0.04) 1.50(0.10) 1.55(0.09) 1.61(0.06) 1.59(0.07) 1.60(0.06) 1.63(0.06) 1.62(0.08) 1.63(0.06) 1.67(0.06) 1.75(0.11) 1.77(0.05) 1.76(0.07) 1.81(0.06) 1.85(0.10) 1.84(0.06) 1.86(0.13) 1.93(0.10) 2.06(0.13) 2.04(0.06) 2.07(0.03) 2.07(0.05) 2.09(0.05) 2.13(0.05) 2.14(0.02) 2.20(0.07) 2.25(0.08) 2.26(0.03) 2.27(0.09) 2.28(0.02) 2.32(0.10) 2.37(0.07) 2.39(0.06) 2.44(0.08) 2.51(0.08) 2.53(0.05) 2.55(0.07) 2.54(0.03) 2.52(0.12) 2.63(0.15) 2.87(0.28) 2.79(0.16) 2.63(0.21) 2.66(0.10) 2.74(0.09) 2.90(0.18) 3.14(0.28) 2.99(0.16) 2.99(0.17) 2.99(0.10) 2.99(0.08) 3.00(0.15) 3.15(0.15) 3.16(0.12) 3.24(0.09) 3.41(0.21) 3.36(0.12) 3.39(0.13) 3.37(0.07) 3.42(0.05) 3.46(0.09) 3.48(0.03) 3.50(0.11) 3.51(0.03) 3.46(0.08) 3.46(0.06) 3.43(0.07) 3.45(0.08) 3.50(0.12) 3.54(0.10)
++ Max displacement in automask = 3.54 (mm) at sub-brick 149
++ Max delta displ  in automask = 0.35 (mm) at sub-brick 10
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0027.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0027.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0027.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0027.r01.tshift+orig.BRIK is 5.500001 degrees from plumb.
++ Source dataset: ./pb01.tb0027.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.500001 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.5
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0027.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.500001 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0027.r02.tshift+orig.BRIK is 5.500001 degrees from plumb.
++ Reading input dataset ./pb01.tb0027.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28918 voxels
 + 4580 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.018  pitch=+0.971  yaw=-0.449  dS=+0.004  dL=-0.029  dP=-0.560
++ Mean: roll=+0.195  pitch=+1.518  yaw=-0.082  dS=+0.489  dL=+0.220  dP=-0.375
++ Max : roll=+0.339  pitch=+1.766  yaw=+0.172  dS=+1.034  dL=+0.450  dP=-0.150
++ Max displacements (mm) for each sub-brick:
 2.21(0.00) 2.13(0.37) 2.29(0.32) 2.28(0.19) 2.14(0.16) 2.24(0.13) 2.40(0.21) 2.37(0.07) 2.40(0.09) 2.50(0.27) 2.45(0.15) 2.43(0.14) 2.61(0.23) 2.48(0.20) 2.39(0.31) 2.09(0.43) 1.94(0.30) 1.98(0.10) 2.05(0.13) 2.13(0.09) 2.20(0.09) 2.29(0.11) 2.41(0.15) 2.83(0.47) 2.90(0.07) 2.85(0.27) 2.77(0.38) 2.33(0.52) 2.25(0.26) 2.31(0.07) 2.48(0.19) 2.49(0.07) 2.53(0.09) 2.62(0.09) 2.63(0.04) 2.90(0.32) 3.14(0.51) 3.12(0.06) 2.98(0.16) 2.92(0.07) 2.67(0.31) 2.18(0.54) 2.26(0.37) 2.31(0.47) 2.38(0.11) 2.83(0.48) 2.82(0.21) 2.81(0.33) 2.61(0.21) 2.44(0.29) 2.41(0.18) 2.53(0.15) 2.69(0.18) 2.82(0.19) 2.76(0.10) 2.86(0.14) 2.84(0.10) 2.85(0.07) 2.85(0.04) 3.10(0.26) 3.23(0.37) 3.07(0.30) 2.98(0.22) 2.64(0.34) 2.25(0.39) 2.11(0.33) 2.30(0.60) 2.44(0.35) 2.60(0.20) 2.73(0.17) 2.82(0.09) 2.89(0.10) 3.21(0.36) 3.33(0.23) 3.34(0.24) 3.31(0.16) 3.18(0.14) 3.00(0.26) 2.91(0.28) 2.86(0.15) 3.03(0.16) 3.30(0.62) 3.18(0.32) 3.01(0.22) 3.01(0.19) 2.77(0.32) 2.91(0.28) 3.14(0.25) 3.16(0.41) 2.94(0.36) 3.07(0.14) 2.91(0.20) 3.07(0.17) 3.16(0.12) 2.96(0.26) 2.91(0.20) 2.88(0.11) 2.91(0.06) 2.38(0.54) 2.18(0.28) 2.04(0.20) 2.35(0.66) 2.37(0.91) 2.29(0.22) 2.26(0.17) 2.28(0.13) 2.28(0.05) 2.35(0.10) 2.37(0.06) 2.38(0.07) 2.37(0.04) 2.48(0.11) 2.63(0.19) 2.58(0.08) 2.56(0.13) 2.60(0.09) 2.57(0.06) 2.54(0.09) 2.49(0.08) 2.44(0.09) 2.40(0.05) 2.36(0.08) 2.39(0.04) 2.44(0.05) 2.60(0.22) 2.58(0.06) 2.53(0.12) 2.48(0.06) 2.58(0.12) 2.61(0.15) 2.61(0.18) 2.76(0.16) 2.69(0.10) 2.66(0.05) 2.71(0.07) 2.77(0.07) 2.69(0.12) 2.74(0.07) 2.66(0.10) 2.69(0.09) 2.84(0.15) 3.02(0.25) 3.09(0.29) 2.86(0.28) 2.77(0.15) 2.83(0.09) 3.14(0.41) 3.11(0.09) 3.22(0.18) 3.16(0.36)
++ Max displacement in automask = 3.34 (mm) at sub-brick 74
++ Max delta displ  in automask = 0.91 (mm) at sub-brick 102
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0027.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0027.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0027.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0027.r02.tshift+orig.BRIK is 5.500001 degrees from plumb.
++ Source dataset: ./pb01.tb0027.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.500001 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.2
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0027.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.500001 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0027.r03.tshift+orig.BRIK is 5.500001 degrees from plumb.
++ Reading input dataset ./pb01.tb0027.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28929 voxels
 + 4635 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.218  pitch=+1.121  yaw=+0.104  dS=-0.317  dL=-0.163  dP=-0.674
++ Mean: roll=-0.118  pitch=+1.232  yaw=+0.226  dS=+0.280  dL=-0.044  dP=-0.447
++ Max : roll=+0.021  pitch=+1.550  yaw=+0.473  dS=+0.596  dL=+0.083  dP=-0.161
++ Max displacements (mm) for each sub-brick:
 2.23(0.00) 2.49(0.36) 2.44(0.13) 2.42(0.08) 2.45(0.06) 2.38(0.08) 2.30(0.08) 2.39(0.16) 2.45(0.15) 2.37(0.15) 2.19(0.20) 2.23(0.09) 2.24(0.07) 2.21(0.04) 2.16(0.08) 2.12(0.05) 2.10(0.07) 2.13(0.06) 2.11(0.04) 2.09(0.04) 2.09(0.06) 2.11(0.03) 2.14(0.08) 2.14(0.04) 2.11(0.04) 2.10(0.05) 2.06(0.05) 2.02(0.04) 1.97(0.05) 1.99(0.04) 2.01(0.08) 2.03(0.03) 2.01(0.05) 1.98(0.09) 1.97(0.03) 1.96(0.02) 1.97(0.10) 1.95(0.05) 1.95(0.05) 1.99(0.05) 1.97(0.06) 1.96(0.05) 2.00(0.04) 2.03(0.04) 1.99(0.05) 1.96(0.04) 1.96(0.07) 1.98(0.04) 2.02(0.08) 2.01(0.04) 2.01(0.05) 2.01(0.04) 2.01(0.05) 2.04(0.03) 2.02(0.06) 2.04(0.04) 2.04(0.05) 2.00(0.10) 2.03(0.09) 2.07(0.05) 2.04(0.08) 2.10(0.08) 2.14(0.09) 2.11(0.10) 2.06(0.11) 2.10(0.05) 2.14(0.05) 2.21(0.09) 2.21(0.07) 2.17(0.06) 2.21(0.05) 2.21(0.08) 2.21(0.10) 2.23(0.05) 2.26(0.04) 2.29(0.04) 2.27(0.03) 2.25(0.06) 2.28(0.04) 2.30(0.04) 2.34(0.07) 2.37(0.12) 2.34(0.08) 2.34(0.03) 2.34(0.04) 2.34(0.07) 2.30(0.07) 2.31(0.04) 2.34(0.08) 2.38(0.06) 2.37(0.04) 2.33(0.06) 2.33(0.05) 2.32(0.03) 2.30(0.03) 2.34(0.04) 2.30(0.05) 2.32(0.06) 2.04(0.47) 2.05(0.17) 2.12(0.19) 2.17(0.30) 2.32(0.26) 2.24(0.26) 2.24(0.11) 2.22(0.06) 2.25(0.04) 2.22(0.04) 2.19(0.06) 2.18(0.09) 2.16(0.04) 2.20(0.06) 2.19(0.04) 2.18(0.05) 2.20(0.04) 2.24(0.06) 2.23(0.05) 2.20(0.04) 2.17(0.08) 2.22(0.08) 2.18(0.04) 2.16(0.05) 2.18(0.02) 2.20(0.03) 2.12(0.10) 2.09(0.05) 2.18(0.10) 2.11(0.08) 2.18(0.08) 2.18(0.04) 2.20(0.06) 2.18(0.06) 2.17(0.06) 2.18(0.07) 2.20(0.04) 2.21(0.06) 2.16(0.10) 2.14(0.08) 2.14(0.05) 2.18(0.05) 2.11(0.08) 2.19(0.11) 2.44(0.46) 2.43(0.58) 2.14(0.32) 2.03(0.23) 2.08(0.11) 2.08(0.06) 1.96(0.12) 1.89(0.12)
++ Max displacement in automask = 2.49 (mm) at sub-brick 1
++ Max delta displ  in automask = 0.58 (mm) at sub-brick 143
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0027.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0027.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0027.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0027.r03.tshift+orig.BRIK is 5.500001 degrees from plumb.
++ Source dataset: ./pb01.tb0027.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.500001 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.0
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0027.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0027.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0027.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0027.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0027.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0027.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.500001 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0027
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0027+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0027+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1342635 voxels in source_automask+0
++ Zero-pad: zbot=1 ztop=3
++ Computing -autobox
++ 291214 voxels [64.0%] in weight mask
++ Number of points for matching = 136870
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.14157
   sp   = 0.341922
   mi   = -0.505654
   crM  = 0.0416809
   nmi  = 0.840863
   je   = 2.67182
   hel  = -0.101042
   crA  = 0.204786
   crU  = 0.220801
   lss  = 0.85843
   lpc  = 0.160834
   lpa  = 0.839166
   lpc+ = 0.304379
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.7
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0027+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0027+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 25.8 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0027.r01.blur pb02.tb0027.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0027.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0027.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0027.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0027.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0027.r02.blur pb02.tb0027.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0027.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0027.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0027.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0027.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0027.r03.blur pb02.tb0027.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0027.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0027.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0027.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0027.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0027.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0027.r01.blur+orig
++ Forming automask
 + Fixed clip level = 394.314301
 + Used gradual clip level = 356.836609 .. 437.283691
 + Number voxels above clip level = 51635
 + Clustering voxels ...
 + Largest cluster has 51366 voxels
 + Clustering voxels ...
 + Largest cluster has 51350 voxels
 + Filled    25 voxels in small holes; now have 51375 voxels
 + Clustering voxels ...
 + Largest cluster has 51374 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374901 voxels
 + Mask now has 51374 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366946 voxels
++ 59329 voxels in the mask [out of 426275: 13.92%]
++ first  17 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    4 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0027.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0027.r02.blur+orig
++ Forming automask
 + Fixed clip level = 395.326782
 + Used gradual clip level = 357.344208 .. 438.642273
 + Number voxels above clip level = 51782
 + Clustering voxels ...
 + Largest cluster has 51480 voxels
 + Clustering voxels ...
 + Largest cluster has 51467 voxels
 + Filled    27 voxels in small holes; now have 51494 voxels
 + Clustering voxels ...
 + Largest cluster has 51493 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374782 voxels
 + Mask now has 51493 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366868 voxels
++ 59407 voxels in the mask [out of 426275: 13.94%]
++ first  17 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    4 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0027.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0027.r03.blur+orig
++ Forming automask
 + Fixed clip level = 396.414825
 + Used gradual clip level = 360.269348 .. 439.732452
 + Number voxels above clip level = 51656
 + Clustering voxels ...
 + Largest cluster has 51404 voxels
 + Clustering voxels ...
 + Largest cluster has 51386 voxels
 + Filled    32 voxels in small holes; now have 51418 voxels
 + Clustering voxels ...
 + Largest cluster has 51417 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374858 voxels
 + Mask now has 51417 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366940 voxels
++ 59335 voxels in the mask [out of 426275: 13.92%]
++ first  16 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    4 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0027
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 59601 survived, 366674 were zero
++ writing result full_mask.tb0027...
3dresample -master full_mask.tb0027+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0027
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 53146 survived, 373129 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0027...
3dABoverlap -no_automask full_mask.tb0027+orig mask_anat.tb0027+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0027+orig.BRIK  B=./mask_anat.tb0027+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
59601        53146        62024        50723        8878         2423         14.8957      4.5591     0.8210     1.0040     0.9382
3ddot -dodice full_mask.tb0027+orig mask_anat.tb0027+orig
tee out.mask_ae_dice.txt
0.899767	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0027
total number of censored TRs (simple form) = 23
1deval -a motion_tb0027_censor.1D -b outcount_tb0027_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0027_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0027.r01.blur+orig.HEAD pb03.tb0027.r02.blur+orig.HEAD pb03.tb0027.r03.blur+orig.HEAD -censor censor_tb0027_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0027 -errts errts.tb0027 -bucket stats.tb0027
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0027.r01.blur+orig.HEAD pb03.tb0027.r02.blur+orig.HEAD pb03.tb0027.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 51406 voxels (out of 426275 = 12.1%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 427 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0027.r01.blur+orig.HEAD pb03.tb0027.r02.blur+orig.HEAD pb03.tb0027.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0027_REML -Rvar stats.tb0027_REMLvar \
 -Rfitts fitts.tb0027_REML -Rerrts errts.tb0027_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (427x24):  4.61932  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (427x6):  1.0354  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (427x18):  4.24096  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (427x6):  3.12551  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (427x12):  1.06936  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.12273e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.23 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=6.800
++ Job #2: processing voxels 85254 to 127880; elapsed time=6.814
++ Job #3: processing voxels 127881 to 170507; elapsed time=6.828
++ Job #4: processing voxels 170508 to 213134; elapsed time=6.841
++ Job #5: processing voxels 213135 to 255761; elapsed time=6.855
++ Job #6: processing voxels 255762 to 298388; elapsed time=6.868
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.882
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.895
++ Job #9: processing voxels 383643 to 426274; elapsed time=6.909
++ Job #0: processing voxels 0 to 42626; elapsed time=6.919
++ voxel loop:0123456789.0123456789.0123456789.0123456789.0++ Job #2 finished; elapsed time=18.479
++ Job #4 finished; elapsed time=18.494
++ Job #1 finished; elapsed time=18.540
++ Job #8 finished; elapsed time=18.555
++ Job #6 finished; elapsed time=18.568
++ Job #7 finished; elapsed time=18.593
++ Job #9 finished; elapsed time=18.616
++ Job #3 finished; elapsed time=18.660
++ Job #5 finished; elapsed time=18.711
123456789.
++ Job #0 waiting for children to finish; elapsed time=21.548
++ Job #0 now finishing up; elapsed time=21.548
++ Smallest FDR q [0 Full_Fstat] = 3.67383e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 6.39119e-09
++ Smallest FDR q [3 uns1_Fstat] = 6.39166e-09
++ Smallest FDR q [5 uns2#0_Tstat] = 1.11742e-09
++ Smallest FDR q [6 uns2_Fstat] = 1.11749e-09
++ Smallest FDR q [8 uns3#0_Tstat] = 1.37667e-12
++ Smallest FDR q [9 uns3_Fstat] = 1.37658e-12
++ Smallest FDR q [11 str1#0_Tstat] = 1.78423e-10
++ Smallest FDR q [12 str1_Fstat] = 1.7842e-10
++ Smallest FDR q [14 str2#0_Tstat] = 7.25463e-09
++ Smallest FDR q [15 str2_Fstat] = 7.25503e-09
++ Smallest FDR q [17 str3#0_Tstat] = 1.5387e-12
++ Smallest FDR q [18 str3_Fstat] = 1.5385e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.36821e-12
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.36834e-12
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.14324e-12
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.143e-12
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 0.00106839
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 0.00106851
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.00147706
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.00147705
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 0.054659
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 0.0546539
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 2.01764e-07
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 2.01803e-07
++ Wrote bucket dataset into ./stats.tb0027+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0027+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0027+orig.BRIK
++ Program finished; elapsed time=39.471
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.736       0.802  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.721       0.791  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.719       0.779  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.478       0.547  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.470       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.459       0.538  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0027.r01.blur+orig.HEAD pb03.tb0027.r02.blur+orig.HEAD pb03.tb0027.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0027_REML -Rvar stats.tb0027_REMLvar -Rfitts fitts.tb0027_REML -Rerrts errts.tb0027_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 51406 voxels (out of 426275 = 12.1%)
++ -----  matrix condition (427x24):  4.61932  ++ VERY GOOD ++
 + masked off 240597 voxels for being all zero; 185678 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 335 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=7.98
 + X matrix: 46.585% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=427 cols=24; 109*1 cases; total CPU=0.00 Elapsed=8.00
 +  average case bandwidth = 11.96
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=52.62
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=101.98
++ Output dataset ./stats.tb0027_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0027_REML+orig.BRIK
++ Output dataset ./errts.tb0027_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0027_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 5.46943e-10
++ Smallest FDR q [2 uns1#0_Tstat] = 0.0650357
++ Smallest FDR q [3 uns1_Fstat] = 0.0650357
[7m*+ WARNING:[0m Smallest FDR q [5 uns2#0_Tstat] = 0.998968 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [6 uns2_Fstat] = 0.998968 ==> few true single voxel detections
++ Smallest FDR q [8 uns3#0_Tstat] = 2.357e-11
++ Smallest FDR q [9 uns3_Fstat] = 2.357e-11
++ Smallest FDR q [11 str1#0_Tstat] = 0.0355577
++ Smallest FDR q [12 str1_Fstat] = 0.0355577
[7m*+ WARNING:[0m Smallest FDR q [14 str2#0_Tstat] = 0.999125 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [15 str2_Fstat] = 0.999125 ==> few true single voxel detections
++ Smallest FDR q [17 str3#0_Tstat] = 1.52021e-10
++ Smallest FDR q [18 str3_Fstat] = 1.52021e-10
++ Smallest FDR q [20 unstructured#0_Tstat] = 2.63449e-08
++ Smallest FDR q [21 unstructured_Fstat] = 2.63448e-08
++ Smallest FDR q [23 structured#0_Tstat] = 4.05034e-06
++ Smallest FDR q [24 structured_Fstat] = 4.05035e-06
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.999759 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.999759 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999838 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999838 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999894 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999894 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.790571 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.790571 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0027_REML+orig
++ Output dataset ./stats.tb0027_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=117.31
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0027 pb03.tb0027.r01.blur+orig.HEAD pb03.tb0027.r02.blur+orig.HEAD pb03.tb0027.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.7 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0027+orig[0..171,174,175,178..184,187..189,192,193,196..214,217..229,232..246,249,253..396,399..441,444..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0027_REML+orig[0..171,174,175,178..184,187..189,192,193,196..214,217..229,232..246,249,253..396,399..441,444..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0027+orig -expr c*a/b -prefix TSNR.tb0027
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0027_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0027+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 59601 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.324285
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0027.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0027+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0027+orig[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59601
[7m*+ WARNING:[0m removed 274 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.21 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..171,174,175,178..184,187..189,192,193,196..214,217..229,232..246,249,253..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0027+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0027+orig[150..171,174,175,178..184,187..189,192,193,196..214,217..229,232..246,249,253..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59601
[7m*+ WARNING:[0m removed 274 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 131 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 33.90 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..396,399..441,444..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0027+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0027+orig[300..396,399..441,444..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59601
[7m*+ WARNING:[0m removed 274 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.26 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 11.3294 10.4659 11.0257 10.9343
average errts FWHM blurs: 11.3294 10.4659 11.0257 10.9343
echo 11.3294 10.4659 11.0257 10.9343   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.462672 7.38004 13.9782 18.0914
average errts ACF blurs: 0.462672 7.38004 13.9782 18.0914
echo 0.462672 7.38004 13.9782 18.0914   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0027+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0027_REML+orig[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59601
[7m*+ WARNING:[0m removed 274 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.99 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..171,174,175,178..184,187..189,192,193,196..214,217..229,232..246,249,253..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0027+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0027_REML+orig[150..171,174,175,178..184,187..189,192,193,196..214,217..229,232..246,249,253..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59601
[7m*+ WARNING:[0m removed 274 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 131 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 33.58 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..396,399..441,444..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0027+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0027_REML+orig[300..396,399..441,444..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59601
[7m*+ WARNING:[0m removed 274 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.06 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 11.2451 10.3812 10.9443 10.8508
average err_reml FWHM blurs: 11.2451 10.3812 10.9443 10.8508
echo 11.2451 10.3812 10.9443 10.8508   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.457178 7.42083 13.8566 18.109
average err_reml ACF blurs: 0.457178 7.42083 13.8566 18.109
echo 0.457178 7.42083 13.8566 18.109   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0027.1D
3dClustSim -both -mask full_mask.tb0027+orig -acf 0.457178 7.42083 13.8566 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 59601 voxels in mask (13.98% of total)
++ Kernel function radius = 45.74 mm
++ ACF(0.46,7.42,13.86) => FWHM=18.09 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 524.4 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0027+orig stats.tb0027_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0027+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0027_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0027 -dsets pb00.tb0027.r01.tcat+orig.HEAD pb00.tb0027.r02.tcat+orig.HEAD pb00.tb0027.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0027.r01.blur+orig.BRIK rm.pb03.tb0027.r01.blur+orig.HEAD rm.pb03.tb0027.r02.blur+orig.BRIK rm.pb03.tb0027.r02.blur+orig.HEAD rm.pb03.tb0027.r03.blur+orig.BRIK rm.pb03.tb0027.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0027.txt
./@ss_review_basic

subject ID                : tb0027
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0027+orig.HEAD
final stats dset          : stats.tb0027_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 12
average motion (per TR)   : 0.0852794
average censored motion   : 0.0755302
max motion displacement   : 2.19891
max censored displacement : 2.19891
outlier limit             : 0.1
average outlier frac (TR) : 0.0030418
num TRs above out limit   : 0

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 150 131 146
num TRs per run (censored): 0 19 4
fraction censored per run : 0 0.126667 0.0266667
TRs total (uncensored)    : 450
TRs total                 : 427
degrees of freedom used   : 24
degrees of freedom left   : 403

TRs censored              : 23
censor fraction           : 0.051111
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 0 11 4 0 17 1
fraction TRs censored     : 0.000 0.162 0.059 0.000 0.153 0.009
ave mot per sresp (orig)  : 0.058751 0.148687 0.067226 0.059116 0.136107 0.043489
ave mot per sresp (cens)  : 0.058751 0.122781 0.055515 0.059116 0.111655 0.043571

TSNR average              : 191.217
global correlation (GCOR) : 0.324285
anat/EPI mask Dice coef   : 0.899767
maximum F-stat (masked)   : 17.2762
blur estimates (ACF)      : 0.457178 7.42083 13.8566
blur estimates (FWHM)     : 11.2451 10.3812 10.9443


cd ..
echo execution finished: `date`
date
execution finished: Tue Aug  8 11:35:36 EDT 2017
