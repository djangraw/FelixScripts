echo auto-generated by afni_proc.py, Tue Jan  2 15:41:01 2018
auto-generated by afni_proc.py, Tue Jan  2 15:41:01 2018
echo (version 6.02, December 12, 2017)
(version 6.02, December 12, 2017)
echo execution started: `date`
date
execution started: Tue Jan  2 15:41:02 EST 2018
afni -ver
Precompiled binary linux_openmp_64: Dec 22 2017 (Version AFNI_17.3.09)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   22 Dec 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb8393
endif
set output_dir = tb8393.srtt_v3
if ( -d tb8393.srtt_v3 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb8393.srtt_v3
mkdir tb8393.srtt_v3/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb8393.srtt_v3/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb8393.srtt_v3/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dTcat -prefix tb8393.srtt_v3/pb00.tb8393.r01.tcat func_srtt/ep2dbold156s005a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.4 s
3dTcat -prefix tb8393.srtt_v3/pb00.tb8393.r02.tcat func_srtt/ep2dbold156s007a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.9 s
3dTcat -prefix tb8393.srtt_v3/pb00.tb8393.r03.tcat func_srtt/ep2dbold156s009a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 2.1 s
set tr_counts = ( 150 150 150 )
cd tb8393.srtt_v3
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8393.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8393.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8393.r01.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 25890 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8393.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8393.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8393.r02.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 26018 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8393.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8393.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8393.r03.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 26124 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.tb8393.r01.despike pb00.tb8393.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8393.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8393.r01.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb8393.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #3
++ start OpenMP thread #1
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 724ms

++ FINAL: 19353600 data points, 852046 edits [4.403%], 102451 big edits [0.529%]
++ Output dataset ./pb01.tb8393.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb8393.r02.despike pb00.tb8393.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8393.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8393.r02.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb8393.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 642ms

++ FINAL: 19353600 data points, 822207 edits [4.248%], 95720 big edits [0.495%]
++ Output dataset ./pb01.tb8393.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb8393.r03.despike pb00.tb8393.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8393.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8393.r03.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb8393.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #1
++ start OpenMP thread #0
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 662ms

++ FINAL: 19353600 data points, 811986 edits [4.196%], 89293 big edits [0.461%]
++ Output dataset ./pb01.tb8393.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.tb8393.r01.tshift -tpattern alt+z2 pb01.tb8393.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8393.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8393.r01.despike+orig.BRIK is 10.299996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb8393.r02.tshift -tpattern alt+z2 pb01.tb8393.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8393.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8393.r02.despike+orig.BRIK is 10.299996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb8393.r03.tshift -tpattern alt+z2 pb01.tb8393.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8393.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8393.r03.despike+orig.BRIK is 10.299996 degrees from plumb.
end
3dbucket -prefix vr_base pb02.tb8393.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 10.299996 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 415.709137
 + Used gradual clip level = 386.688385 .. 453.866730
 + Number voxels above clip level = 26379
 + Clustering voxels ...
 + Largest cluster has 26023 voxels
 + Clustering voxels ...
 + Largest cluster has 25564 voxels
 + Filled   225 voxels in small holes; now have 25789 voxels
 + Clustering voxels ...
 + Largest cluster has 25789 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 105283 voxels
 + Mask now has 25789 voxels
++ 25789 voxels in the mask [out of 131072: 19.68%]
++ first  14 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1009.050537 on /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1009.050537))'
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 10.299996 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1328165 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 25789 voxels [16.1%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 25789
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.401 29.056 20.705 (index)
 + source center of mass = 86.027 164.738 174.208 (index)
 + source-target CM = -2.315 0.776 -3.605 (xyz)
 + center of mass shifts = -2.315 0.776 -3.605
++ shift param auto-range: -71.8..67.2 -68.7..70.3 -52.4..45.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -12.315193 .. 7.684807
 + Range param#2 [y-shift] = -9.224281 .. 10.775719
 + Range param#3 [z-shift] = -13.605385 .. 6.394615
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -42.315193 .. 37.684807
 + Range param#2 [y-shift] = -39.224281 .. 40.775719
 + Range param#3 [z-shift] = -43.605385 .. 36.394615
 + 12 free parameters
++ Normalized convergence radius = 0.000468
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1328165 [out of 15629504] voxels
 + base mask has 35469 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=65 usiz=187
 + - copying weight image
 + - using 25789 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 21750 total points stored in 201 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.00841701] **[#2=-0.0133815] *--++*[#10=-0.0206022] *-.-.-*[#28=-0.0361035] *+.o-.o++o+o+*[#1180=-0.0372614] *-+.*[#2652=-0.0390452] *$*[#4256=-0.0419542] *.o--
 + - best 45 costs found:
    0 v=-0.041954: -18.30 -18.72  -9.33 -20.53  -3.14  10.08  [rand]
    1 v=-0.040070: -12.14 -23.98   7.78  -3.10 -34.36   2.55  [rand]
    2 v=-0.039045: -28.98 -12.56   9.73 -30.00 -15.00  30.00  [grid]
    3 v=-0.038992: -25.17 -22.80   6.81  -5.91 -29.74  29.45  [rand]
    4 v=-0.038319: -16.52  10.23   1.23 -15.99  13.53  29.93  [rand]
    5 v=-0.037261: -15.65 -25.89   9.73 -15.00 -30.00  15.00  [grid]
    6 v=-0.036104: -15.65 -12.56   9.73 -15.00 -15.00  15.00  [grid]
    7 v=-0.035106: -26.66 -28.92   9.42 -28.68 -38.91  32.36  [rand]
    8 v=-0.034324: -28.98 -12.56   9.73 -15.00 -15.00  30.00  [grid]
    9 v=-0.032298: -16.34 -14.94  11.06 -24.25 -37.55   4.41  [rand]
   10 v=-0.031371: -15.65 -12.56   9.73 -15.00 -30.00  15.00  [grid]
   11 v=-0.031312: -21.81  17.45  -6.21 -30.54  19.59  20.03  [rand]
   12 v=-0.030996: -28.98 -25.89   9.73 -30.00 -30.00  30.00  [grid]
   13 v=-0.030836: -28.98 -25.89  23.06 -15.00 -15.00  30.00  [grid]
   14 v=-0.030669:  11.02  27.44 -16.94  15.00  30.00 -15.00  [grid]
   15 v=-0.030570: -19.17 -17.81  10.85 -19.57 -37.09  16.59  [rand]
   16 v=-0.030357: -28.98 -25.89   9.73 -15.00 -30.00  30.00  [grid]
   17 v=-0.029732: -16.34 -14.94  11.06 -24.25 -37.55  -4.41  [rand]
   18 v=-0.029341:  11.02  14.11 -16.94  15.00  30.00 -15.00  [grid]
   19 v=-0.028665:   7.51 -23.98   7.78   3.10 -34.36  -2.55  [rand]
   20 v=-0.028599: -28.98 -25.89  23.06 -30.00 -15.00  30.00  [grid]
   21 v=-0.027546: -28.98 -12.56  23.06 -15.00 -30.00  30.00  [grid]
   22 v=-0.027500: -28.98 -12.56  23.06 -15.00 -15.00  30.00  [grid]
   23 v=-0.027301: -28.98 -25.89   9.73 -15.00 -30.00  15.00  [grid]
   24 v=-0.027134: -21.81  17.45  -1.00 -30.54  19.59  20.03  [rand]
   25 v=-0.026892: -28.62 -25.18  14.19 -15.82 -17.65  37.25  [rand]
   26 v=-0.026751: -28.98 -12.56  23.06  30.00 -30.00  15.00  [grid]
   27 v=-0.026578:   1.76  -5.45   4.19  -4.32 -22.85 -18.95  [rand]
   28 v=-0.026385: -16.34 -14.94 -18.27 -24.25  37.55  -4.41  [rand]
   29 v=-0.026242: -28.98 -12.56  23.06 -30.00 -30.00  30.00  [grid]
   30 v=-0.026217: -15.65  27.44   9.73 -15.00  15.00  30.00  [grid]
   31 v=-0.026091: -28.98 -12.56  23.06 -30.00 -15.00  30.00  [grid]
   32 v=-0.026013: -15.65  14.11   9.73 -30.00  15.00  15.00  [grid]
   33 v=-0.025927: -24.66 -15.61  12.23 -41.11 -22.86   3.97  [rand]
   34 v=-0.025895: -28.98 -25.89  23.06 -15.00 -30.00  30.00  [grid]
   35 v=-0.025565: -27.01  -3.83  12.78  -8.97 -18.72  30.56  [rand]
   36 v=-0.025285:  24.35 -12.56   9.73  30.00 -15.00 -30.00  [grid]
   37 v=-0.025218: -15.65  14.11 -16.94 -15.00  30.00  15.00  [grid]
   38 v=-0.025138: -15.65  27.44   9.73 -30.00  30.00  30.00  [grid]
   39 v=-0.025120:  11.02 -12.56   9.73  15.00 -30.00 -15.00  [grid]
   40 v=-0.025100: -15.65  14.11 -30.27 -15.00  15.00 -30.00  [grid]
   41 v=-0.025095:  -6.39  -5.45   4.19  -4.32 -22.85 -18.95  [rand]
   42 v=-0.024914: -24.64 -28.86   3.39   8.73 -38.75  33.73  [rand]
   43 v=-0.024798: -18.30 -18.72  -9.33 -20.53   3.14  10.08  [rand]
   44 v=-0.024613: -37.17 -34.90  10.64 -40.22 -24.26  41.52  [rand]
*[#8012=-0.0431569] *[#8013=-0.0479956] *[#8015=-0.048428] *[#8017=-0.0486001] *[#8018=-0.0491695] *[#8019=-0.0495756] *[#8021=-0.0498697] *[#8022=-0.0506423] *[#8023=-0.052088] *[#8024=-0.0525403] *[#8027=-0.0553301] *[#8028=-0.0562109] *[#8029=-0.0569529] *[#8034=-0.058308] *[#8035=-0.0591281] *[#8036=-0.05951] *[#8039=-0.0599938] *[#8042=-0.0601867] *[#8044=-0.0610463] *[#8045=-0.0610638] *[#8047=-0.0614369] *[#8050=-0.0671578] *[#8061=-0.068357] *[#8062=-0.0707628] *[#8063=-0.0733404] *[#8065=-0.0736578] *[#8067=-0.0746193] *[#8068=-0.0754487] *[#8069=-0.075663] *[#8072=-0.0767965] *[#8073=-0.0778865] *[#8076=-0.0786915] *[#8079=-0.0798839] *[#8080=-0.0822964] *[#8081=-0.0833168] *[#8083=-0.0844249] *[#8084=-0.0866424] *[#8087=-0.0877907] *[#8088=-0.0911717] *[#8089=-0.0917345] *[#8092=-0.0929119] *[#8093=-0.0929284] *[#8095=-0.093483] *[#8096=-0.0940656] *[#8098=-0.0949973] *[#8101=-0.0951772] *[#8106=-0.0955635] *[#8286=-0.0961875] *[#8288=-0.0970094] *[#8289=-0.0980447] *[#8290=-0.099741] *[#8291=-0.101258] *[#8292=-0.101819] *[#8297=-0.102074] *[#8298=-0.103294] *[#8301=-0.103481] *[#8302=-0.103612] *[#8303=-0.103635]  + - costs of the above after a little optimization:
    0 v=-0.061437: -15.38 -18.25  -8.20 -16.91  -3.14  10.29  [rand]
    1 v=-0.095564: -10.68 -22.73  12.90  -8.39 -31.51   4.31  [rand]
    2 v=-0.047517: -29.27  -9.26   8.04 -24.45 -13.34  30.56  [grid]
    3 v=-0.049931: -26.76 -23.88  11.54  -5.30 -27.80  28.09  [rand]
    4 v=-0.047087: -15.94  14.55   0.70 -13.41  11.10  31.16  [rand]
    5 v=-0.091208: -15.96 -22.90  13.01 -10.33 -31.00  10.00  [grid]
  * 6 v=-0.103635: -15.76 -10.93   7.16 -10.21 -15.33  12.12  [grid]
    7 v=-0.052259: -24.64 -28.43   7.75 -29.50 -31.05  30.67  [rand]
    8 v=-0.050441: -26.35 -10.79   8.83  -9.91 -12.57  26.63  [grid]
    9 v=-0.098043: -14.12 -20.52   9.22 -12.10 -25.82   6.29  [rand]
   10 v=-0.101353: -13.45 -19.62  11.02  -8.58 -25.52   8.10  [grid]
   11 v=-0.037289: -20.80  20.34  -6.35 -31.77  18.91  19.74  [rand]
   12 v=-0.053536: -23.67 -27.74   7.83 -28.68 -30.14  27.44  [grid]
   13 v=-0.039243: -29.59 -22.30  23.30 -14.32 -15.27  29.04  [grid]
   14 v=-0.065196:   7.54  28.94  -9.94   8.44  26.49  -7.10  [grid]
   15 v=-0.074079: -16.64 -33.81   6.85 -16.64 -39.36   9.70  [rand]
   16 v=-0.047482: -28.88 -32.35   8.93 -14.55 -29.28  30.22  [grid]
   17 v=-0.068920: -14.13 -23.89   9.24 -31.60 -28.47   0.60  [rand]
   18 v=-0.048019:  10.85  14.00 -17.39  14.85  27.82 -10.16  [grid]
   19 v=-0.074449:   3.68 -24.00  11.72   6.10 -28.86  -2.86  [rand]
   20 v=-0.035360: -29.48 -26.14  22.85 -24.83 -15.17  29.81  [grid]
   21 v=-0.037916: -27.10  -9.37  19.44 -17.25 -30.70  29.88  [grid]
   22 v=-0.037684: -27.13 -18.53  23.90 -15.56  -9.94  27.56  [grid]
   23 v=-0.100820: -13.15 -22.69  13.68  -6.05 -30.35   9.53  [grid]
   24 v=-0.051625: -18.53  21.74  -1.02 -22.22  21.50  26.40  [rand]
   25 v=-0.037290: -28.66 -21.62  14.12 -15.59 -17.70  36.96  [rand]
   26 v=-0.027721: -28.75 -12.46  23.72  29.49 -30.66  15.12  [grid]
   27 v=-0.050578:  -2.16  -6.01   2.51  -4.93 -23.83 -18.90  [rand]
   28 v=-0.032306: -17.37 -15.33 -19.04 -20.26  38.46  -5.78  [rand]
   29 v=-0.027720: -28.62 -12.43  22.91 -30.05 -30.16  34.34  [grid]
   30 v=-0.029552: -15.06  27.44   9.52 -14.72  15.04  34.41  [grid]
   31 v=-0.037306: -28.19 -13.03  22.87 -25.10 -13.93  29.65  [grid]
   32 v=-0.026724: -15.67  13.81   9.57 -30.26  15.36  14.78  [grid]
   33 v=-0.042879: -18.50 -14.88  13.06 -39.10 -21.37   4.27  [rand]
   34 v=-0.033830: -28.97 -25.87  22.18 -13.77 -30.81  35.90  [grid]
   35 v=-0.047253: -25.30  -8.87   9.75 -15.59 -11.52  26.84  [rand]
   36 v=-0.031475:  25.55 -10.44   8.66  29.24 -14.12 -30.86  [grid]
   37 v=-0.059314: -14.78   7.30 -20.07 -16.49  27.05  10.35  [grid]
   38 v=-0.027008: -14.86  28.21  10.04 -29.93  30.44  29.76  [grid]
   39 v=-0.065206:  10.29 -15.51  11.94  11.51 -22.59  -7.47  [grid]
   40 v=-0.032841: -12.02  13.27 -30.77 -14.37  15.52 -29.87  [grid]
   41 v=-0.050677:  -2.19  -6.18   2.37  -4.86 -23.53 -18.76  [rand]
   42 v=-0.035477: -23.35 -31.24   3.55  14.16 -41.20  32.50  [rand]
   43 v=-0.048841: -14.46 -18.95  -9.30 -20.09   2.20   8.91  [rand]
   44 v=-0.031218: -37.58 -35.84  10.65 -34.01 -21.71  42.08  [rand]
 + - save # 6 for twobest
 + - save #10 for twobest
 + - save #23 for twobest
 + - skip # 9 for twobest: too close to set #10
 + - save # 1 for twobest
 + - skip # 5 for twobest: too close to set #23
 + - save #19 for twobest
 + - save #15 for twobest
 + - save #17 for twobest
 + - save #39 for twobest
 + - save #14 for twobest
 + - save # 0 for twobest
 + - save #37 for twobest
 + - save #12 for twobest
 + - skip # 7 for twobest: too close to set #12
 + - save #24 for twobest
 + - save #41 for twobest
 + - skip #27 for twobest: too close to set #41
 + - save # 8 for twobest
 + - save # 3 for twobest
 + - save #43 for twobest
 + - save #18 for twobest
 + - save # 2 for twobest
 + - save #16 for twobest
 + - save #35 for twobest
 + - save # 4 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=65 usiz=187
 + - retaining old weight image
 + - using 25789 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22322 total points stored in 226 'RHDD(13.7332)' bloks
*[#9753=-0.104002] *[#9754=-0.106363] *[#9755=-0.109376] *[#9756=-0.110126] *[#9759=-0.110464] *[#9760=-0.110734] *[#9761=-0.111091] *[#9762=-0.113536] *[#9763=-0.11356] *[#9766=-0.113582] *[#9769=-0.114274] *[#9772=-0.114644] *[#9774=-0.115342] *[#9777=-0.116229] 
 + - param set #1 has cost=-0.116229
 + -- Parameters = -11.2492 -11.8236 6.1504 -5.4010 -13.6638 8.5425 0.9905 0.9879 1.0047 0.0058 -0.0185 0.0000
 + - param set #2 has cost=-0.087619
 + -- Parameters = -13.3146 -18.0940 11.6496 -7.0203 -24.4788 6.8922 1.0100 1.0290 0.9862 -0.0012 0.0113 0.0053
 + - param set #3 has cost=-0.077149
 + -- Parameters = -13.3189 -22.8333 14.0151 -6.0989 -30.1756 8.9436 1.0009 1.0114 0.9980 0.0011 0.0006 -0.0036
 + - param set #4 has cost=-0.084217
 + -- Parameters = -10.2612 -20.5793 10.4094 -7.7532 -26.9314 3.6614 1.0058 1.0210 0.9956 0.0023 0.0038 -0.0023
 + - param set #5 has cost=-0.071237
 + -- Parameters = 2.2129 -16.8205 11.1506 5.2939 -22.0750 0.4212 0.9912 1.0172 0.9907 0.0100 0.0071 0.0016
 + - param set #6 has cost=-0.058478
 + -- Parameters = -17.0359 -34.4517 6.6506 -16.8618 -39.0970 9.8427 0.9920 1.0039 0.9975 -0.0012 0.0013 0.0084
 + - param set #7 has cost=-0.053499
 + -- Parameters = -13.3139 -24.8845 9.2905 -27.9586 -28.1929 1.2607 1.0026 1.0048 0.9976 -0.0018 0.0015 0.0012
 + - param set #8 has cost=-0.065325
 + -- Parameters = 10.5813 -13.8595 11.6174 10.1414 -20.7595 -6.5937 1.0006 1.0238 0.9950 -0.0010 0.0010 -0.0024
 + - param set #9 has cost=-0.049869
 + -- Parameters = 7.9084 27.9111 -9.5366 9.0452 25.7911 -6.8298 1.0011 1.0044 1.0019 0.0022 0.0025 0.0122
 + - param set #10 has cost=-0.067079
 + -- Parameters = -13.9684 -17.7701 -7.1771 -12.5107 -1.3258 8.5622 0.9886 0.9277 1.0277 0.0376 0.0173 0.0029
 + - param set #11 has cost=-0.063841
 + -- Parameters = -11.6205 7.8444 -20.0477 -13.2433 29.3297 7.6765 1.0354 0.9968 0.9838 0.0010 0.0044 -0.0039
*[#10639=-0.178789] *[#10654=-0.196713] *[#10656=-0.202831] *[#10657=-0.252214] *[#10658=-0.375358] *[#10659=-0.40247] *[#10660=-0.407125] *[#10661=-0.431181] *[#10663=-0.437011] *[#10664=-0.457756] *[#10667=-0.463143] *[#10669=-0.4688] *[#10670=-0.471951] *[#10671=-0.472736] *[#10672=-0.47345] *[#10674=-0.477691] *[#10675=-0.488836] *[#10676=-0.50442] *[#10678=-0.506206] *[#10680=-0.506709] *[#10683=-0.509517] *[#10684=-0.510597] *[#10686=-0.512433] *[#10687=-0.516748] *[#10688=-0.517697] *[#10691=-0.521233] *[#10692=-0.524046] *[#10696=-0.524713] *[#10705=-0.526361] *[#10706=-0.527338] *[#10711=-0.527615] *[#10715=-0.528416] *[#10723=-0.52848] *[#10724=-0.528753] 
 + - param set #12 has cost=-0.528753
 + -- Parameters = -2.2210 -2.8499 1.2455 0.5019 -2.8006 0.7069 1.0017 1.0102 0.9970 0.0049 0.0027 0.0004
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.121 
 + --- dist(#3,#1) = 0.241 
 + --- dist(#4,#1) = 0.268 
 + --- dist(#5,#1) = 0.304 
 + --- dist(#6,#1) = 0.214 
 + --- dist(#7,#1) = 0.225 
 + --- dist(#8,#1) = 0.2 
 + --- dist(#9,#1) = 0.357 
 + --- dist(#10,#1) = 0.403 
 + --- dist(#11,#1) = 0.316 
 + --- dist(#12,#1) = 0.385 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=65 usiz=187
 + - retaining old weight image
 + - using 25789 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22588 total points stored in 235 'RHDD(13.5933)' bloks
*[#10727=-0.53497] *[#10747=-0.535754] *[#10748=-0.535906] *[#10750=-0.536604] *[#10751=-0.537669] *[#10752=-0.53841] *[#10753=-0.538958] *[#10754=-0.539253] *[#10757=-0.539297] *[#10758=-0.539463] *[#10759=-0.539464] *[#10761=-0.540084] *[#10764=-0.540131] *[#10770=-0.540316] *[#10772=-0.540858] *[#10773=-0.541004] *[#10774=-0.541066] *[#10775=-0.541113] *[#10780=-0.541274] *[#10781=-0.541446] *[#10790=-0.541663] *[#10793=-0.541929] *[#10794=-0.542038] *[#10797=-0.542099] *[#10798=-0.54212] *[#10801=-0.54223] *[#10802=-0.542241] *[#10808=-0.542339] *[#10812=-0.542594] *[#10815=-0.542634] *[#10816=-0.542643] *[#10819=-0.542698] *[#10822=-0.542741] *[#10825=-0.542768] 
 + - param set #1 has cost=-0.542768
 + -- Parameters = -2.3131 -2.6307 1.1786 0.4339 -3.1252 0.7868 0.9994 1.0198 0.9874 0.0068 0.0030 -0.0049
 + - param set #2 has cost=-0.118398
 + -- Parameters = -9.5583 -10.8747 4.2847 -4.7659 -11.7503 8.4318 0.9873 0.9943 1.0265 0.0221 -0.0234 -0.0138
 + - param set #3 has cost=-0.076650
 + -- Parameters = -11.8873 -17.6057 10.9528 -6.4306 -24.0217 5.9565 1.0144 1.0259 0.9719 -0.0032 0.0049 0.0038
 + - param set #4 has cost=-0.092981
 + -- Parameters = -9.2470 -17.7314 10.7166 -4.4574 -24.9393 3.5490 1.0393 1.0230 0.8923 -0.0122 -0.0175 0.0142
 + - param set #5 has cost=-0.061432
 + -- Parameters = -13.1998 -23.2703 13.3912 -6.1764 -30.3215 8.5015 0.9987 1.0114 0.9843 -0.0020 -0.0002 -0.0057
 + - param set #6 has cost=-0.085407
 + -- Parameters = 1.8562 -16.0016 10.6401 5.0762 -21.1232 0.9747 1.0089 0.9863 0.9210 0.0170 -0.0108 0.0114
 + - param set #7 has cost=-0.078514
 + -- Parameters = -13.0370 -14.8653 -6.5549 -11.0936 -1.5617 7.3370 0.9765 0.9203 1.0002 0.0255 0.0269 -0.0105
 + - param set #8 has cost=-0.066772
 + -- Parameters = 9.5659 -11.8481 11.2568 8.9374 -20.4092 -5.9426 0.9892 1.0481 0.9548 0.0080 -0.0079 0.0009
 + - param set #9 has cost=-0.056844
 + -- Parameters = -11.5645 8.1718 -19.8928 -13.1633 29.6867 7.7010 1.0461 0.9900 0.9749 -0.0008 0.0035 0.0036
 + - param set #10 has cost=-0.046404
 + -- Parameters = -16.9107 -34.4322 6.4781 -17.0228 -39.0502 9.4141 0.9866 1.0034 0.9921 -0.0023 0.0110 0.0070
 + - param set #11 has cost=-0.047845
 + -- Parameters = -12.1140 -23.7479 9.5172 -27.6534 -27.4760 1.0888 1.0130 1.0320 0.9908 0.0076 -0.0103 0.0081
 + - param set #12 has cost=-0.047947
 + -- Parameters = 8.1455 28.3313 -8.7611 9.2702 24.5706 -7.3315 1.0011 1.0037 0.9977 0.0037 0.0040 0.0183
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.119 
 + --- dist(#3,#1) = 0.259 
 + --- dist(#4,#1) = 0.2 
 + --- dist(#5,#1) = 0.271 
 + --- dist(#6,#1) = 0.232 
 + --- dist(#7,#1) = 0.192 
 + --- dist(#8,#1) = 0.302 
 + --- dist(#9,#1) = 0.365 
 + --- dist(#10,#1) = 0.387 
 + --- dist(#11,#1) = 0.312 
 + --- dist(#12,#1) = 0.399 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=65 usiz=187
 + - retaining old weight image
 + - using 25789 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22770 total points stored in 245 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.518351
 + -- Parameters = -2.2720 -2.6367 1.1638 0.4359 -3.2756 0.8383 1.0002 1.0189 0.9880 0.0067 0.0014 -0.0084
 + - param set #2 has cost=-0.130629
 + -- Parameters = -7.2267 -10.6276 3.6524 -3.2177 -10.8466 6.3817 0.9804 0.9780 1.0130 0.0254 -0.0276 -0.0404
 + - param set #3 has cost=-0.085554
 + -- Parameters = -6.5146 -16.8727 10.0214 -2.6839 -24.8032 2.5426 1.0289 1.0427 0.8740 -0.0210 -0.0162 0.0095
 + - param set #4 has cost=-0.081826
 + -- Parameters = 1.4314 -16.2789 9.7606 5.0020 -21.0919 1.5803 0.9910 0.9809 0.8911 0.0244 -0.0011 0.0086
 + - param set #5 has cost=-0.124778
 + -- Parameters = -6.6576 -11.6520 -3.6459 -4.9834 0.0383 2.6552 0.9775 0.8961 1.0172 0.0305 0.0367 -0.0012
 + - param set #6 has cost=-0.069100
 + -- Parameters = -11.2217 -15.3372 8.4759 -5.2254 -21.2842 7.2096 1.0216 1.0379 0.9575 0.0025 0.0101 0.0050
 + - param set #7 has cost=-0.063502
 + -- Parameters = 8.4790 -10.9752 11.3097 7.7586 -19.8294 -6.2167 0.9831 1.0584 0.9625 0.0187 -0.0058 0.0027
 + - param set #8 has cost=-0.053184
 + -- Parameters = -12.2412 -23.7330 13.0621 -5.2626 -30.4561 8.5281 1.0021 1.0255 0.9855 -0.0053 -0.0018 -0.0052
 + - param set #9 has cost=-0.051242
 + -- Parameters = -11.2974 7.2866 -19.5298 -12.5563 29.2330 7.4890 1.0476 0.9616 0.9785 -0.0045 0.0064 0.0095
 + - param set #10 has cost=-0.043754
 + -- Parameters = 8.4588 28.0876 -8.5582 9.4391 23.8629 -6.2260 0.9978 1.0111 0.9895 0.0029 0.0060 0.0166
 + - param set #11 has cost=-0.039199
 + -- Parameters = -12.0685 -23.6908 9.5077 -27.6553 -27.2845 1.0643 1.0137 1.0316 0.9914 0.0116 -0.0100 0.0087
 + - param set #12 has cost=-0.037584
 + -- Parameters = -16.7454 -34.3887 6.4443 -17.1274 -38.9068 9.3681 0.9875 1.0024 0.9910 -0.0032 0.0111 0.0116
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.144 
 + --- dist(#3,#1) = 0.335 
 + --- dist(#4,#1) = 0.311 
 + --- dist(#5,#1) = 0.264 
 + --- dist(#6,#1) = 0.2 
 + --- dist(#7,#1) = 0.184 
 + --- dist(#8,#1) = 0.302 
 + --- dist(#9,#1) = 0.361 
 + --- dist(#10,#1) = 0.384 
 + --- dist(#11,#1) = 0.312 
 + --- dist(#12,#1) = 0.397 
 + - Total coarse refinement net CPU time = 0.0 s; 3313 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=65 usiz=187
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 22901 total points stored in 248 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.494235 *
 + -- Parameters = -2.2720 -2.6367 1.1638 0.4359 -3.2756 0.8383 1.0002 1.0189 0.9880 0.0067 0.0014 -0.0084
 + - cost(#2)=-0.122316  
 + -- Parameters = -7.2267 -10.6276 3.6524 -3.2177 -10.8466 6.3817 0.9804 0.9780 1.0130 0.0254 -0.0276 -0.0404
 + - cost(#3)=-0.114787  
 + -- Parameters = -6.6576 -11.6520 -3.6459 -4.9834 0.0383 2.6552 0.9775 0.8961 1.0172 0.0305 0.0367 -0.0012
 + - cost(#4)=-0.078608  
 + -- Parameters = -6.5146 -16.8727 10.0214 -2.6839 -24.8032 2.5426 1.0289 1.0427 0.8740 -0.0210 -0.0162 0.0095
 + - cost(#5)=-0.076256  
 + -- Parameters = 1.4314 -16.2789 9.7606 5.0020 -21.0919 1.5803 0.9910 0.9809 0.8911 0.0244 -0.0011 0.0086
 + - cost(#6)=-0.064542  
 + -- Parameters = -11.2217 -15.3372 8.4759 -5.2254 -21.2842 7.2096 1.0216 1.0379 0.9575 0.0025 0.0101 0.0050
 + - cost(#7)=-0.056313  
 + -- Parameters = 8.4790 -10.9752 11.3097 7.7586 -19.8294 -6.2167 0.9831 1.0584 0.9625 0.0187 -0.0058 0.0027
 + - cost(#8)=-0.048055  
 + -- Parameters = -12.2412 -23.7330 13.0621 -5.2626 -30.4561 8.5281 1.0021 1.0255 0.9855 -0.0053 -0.0018 -0.0052
 + - cost(#9)=-0.045368  
 + -- Parameters = -11.2974 7.2866 -19.5298 -12.5563 29.2330 7.4890 1.0476 0.9616 0.9785 -0.0045 0.0064 0.0095
 + - cost(#10)=-0.035257  
 + -- Parameters = 8.4588 28.0876 -8.5582 9.4391 23.8629 -6.2260 0.9978 1.0111 0.9895 0.0029 0.0060 0.0166
 + - cost(#11)=-0.032868  
 + -- Parameters = -12.0685 -23.6908 9.5077 -27.6553 -27.2845 1.0643 1.0137 1.0316 0.9914 0.0116 -0.0100 0.0087
 + - cost(#12)=-0.032519  
 + -- Parameters = -16.7454 -34.3887 6.4443 -17.1274 -38.9068 9.3681 0.9875 1.0024 0.9910 -0.0032 0.0111 0.0116
 + - cost(#13)=-0.021635  
 + -- Parameters = -2.3152 0.7757 -3.6054 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.495441 *
 + -- Parameters = -2.2807 -2.7097 1.1771 0.4797 -3.4127 0.8480 1.0016 1.0182 0.9913 0.0054 0.0006 -0.0108
 + - cost(#2)=-0.330272  
 + -- Parameters = -2.1786 -4.0541 0.8478 0.9033 -7.0617 2.2537 1.0113 0.9779 0.9891 0.0144 -0.0501 -0.1068
 + - cost(#3)=-0.176883  
 + -- Parameters = -2.2295 -9.3282 -1.5759 0.3919 0.6190 -0.9514 0.9884 0.8802 1.0183 0.0306 0.0402 0.0019
 + - cost(#4)=-0.086156  
 + -- Parameters = -6.2563 -16.3695 8.9349 -3.1517 -24.8838 2.3514 0.9697 1.0470 0.8538 -0.0299 -0.0008 -0.0054
 + - cost(#5)=-0.078943  
 + -- Parameters = 0.9480 -16.2130 8.9531 4.6225 -21.2027 1.6748 0.9962 0.9818 0.8777 0.0245 0.0023 0.0047
 + - cost(#6)=-0.090239  
 + -- Parameters = -8.4499 -9.8266 5.2146 -4.9748 -15.9030 5.0724 1.0068 1.0838 0.9435 0.0063 0.0069 -0.0109
 + - cost(#7)=-0.056892  
 + -- Parameters = 8.4794 -10.9607 11.1665 7.6572 -19.8922 -6.2223 0.9853 1.0599 0.9591 0.0199 -0.0117 0.0041
 + - cost(#8)=-0.052127  
 + -- Parameters = -11.6050 -23.7307 11.2896 -4.7474 -30.6234 8.5583 1.0006 1.0313 0.9836 -0.0056 0.0005 -0.0070
 + - cost(#9)=-0.046202  
 + -- Parameters = -11.0788 6.8275 -19.4882 -12.0522 29.0316 7.0863 1.0495 0.9598 0.9785 -0.0071 0.0069 0.0096
 + - cost(#10)=-0.036153  
 + -- Parameters = 8.3433 28.0170 -8.4635 9.2709 24.1188 -6.1675 0.9996 1.0119 0.9881 0.0029 0.0061 0.0128
 + - cost(#11)=-0.035365  
 + -- Parameters = -12.5053 -26.0093 8.3153 -25.4832 -26.2250 1.2180 0.9983 1.0338 0.9968 0.0117 -0.0069 0.0119
 + - cost(#12)=-0.036633  
 + -- Parameters = -16.3183 -35.3575 6.9456 -17.3225 -38.8918 6.3953 0.9877 1.0040 0.9882 -0.0029 0.0149 0.0140
 + - cost(#13)=-0.490133  
 + -- Parameters = -2.3121 -2.7448 1.2692 0.4411 -2.8671 1.1860 1.0017 1.0153 0.9967 0.0071 -0.0060 -0.0012
 + - case #1 is now the best
 + - Initial  cost = -0.495441
 + - Initial fine Parameters = -2.2807 -2.7097 1.1771 0.4797 -3.4127 0.8480 1.0016 1.0182 0.9913 0.0054 0.0006 -0.0108
 + - Finalish cost = -0.495912 ; 223 funcs
 + - Final    cost = -0.495936 ; 171 funcs
 + Final fine fit Parameters:
       x-shift=-2.2797   y-shift=-2.7070   z-shift= 1.1468
       z-angle= 0.4725   x-angle=-3.6419   y-angle= 0.8269
       x-scale= 1.0012   y-scale= 1.0183   z-scale= 0.9892
     y/x-shear= 0.0049 z/x-shear= 0.0007 z/y-shear=-0.0159
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -2.2797 -2.7070 1.1468 0.4725 -3.6419 0.8269 1.0012 1.0183 0.9892 0.0049 0.0007 -0.0159
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 28.9
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0008 -1.0082 0.1130 240.6765 0.0149 0.1357 0.9838 71.9773 -1.0011 0.0073 0.0144 199.7652
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.2
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base MNI152_T1_2009c+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 25.5 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3550.080100 ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 134.46 55.4975   ITER = 12/137
134.46

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=0 xtop=0  ybot=1 ytop=2  zbot=15 ztop=0 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 193 x 232 x 208 volume ; autobbox = 19..173 21..211 17..179 [clock= 12s 196ms]
lev=0 0..192 0..231 0..199: [first cost=-0.73114] ... done [cost:-0.73114==>-0.80618]
lev=1 patch=145x175x157 [clock= 30m 57s 633ms]........:[cost=-0.84086]:........ done [cost:-0.80618==>-0.84378 ; 16 patches optimized, 0 skipped]
lev=2 patch=109x131x117 [clock= 49m 18s 350ms]..................... done [cost:-0.84378==>-0.91029 ; 21 patches optimized, 6 skipped]
lev=3 patch=81x99x89 [clock= 1h 3m 7s 61ms]............. done [cost:-0.91029==>-0.98955 ; 41 patches optimized, 23 skipped]
lev=4 patch=61x73x67 [clock= 1h 15m 46s 351ms].............. done [cost:-0.98955==>-1.05662 ; 73 patches optimized, 52 skipped]
lev=5 patch=47x55x49 [clock= 1h 24m 44s 260ms]................. done [cost:-1.05662==>-1.12515 ; 193 patches optimized, 150 skipped]
lev=6 patch=35x41x37 [clock= 1h 34m 41s 745ms].................... done [cost:-1.12515==>-1.19512 ; 451 patches optimized, 359 skipped]
lev=7 patch=25x25x25 [clock= 1h 45m 4s 431ms]........................................... done [cost:-1.19512==>-1.28412 ; 1528 patches optimized, 1384 skipped]
++ ========== total number of parameters 'optimized' = 56049
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 1h 56m 42s 925ms
#++ Applying warps to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8393/tb8393.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 21.2 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_T1_2009c+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
if ( ! -f Sag3DMPRAGEs002a1001_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.tb8393.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb8393.r01.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb02.tb8393.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27543 voxels
 + 4373 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.210  pitch=-0.295  yaw=-0.000  dS=-1.762  dL=-1.479  dP=-0.132
++ Mean: roll=-0.672  pitch=+0.098  yaw=+0.465  dS=-0.776  dL=-0.833  dP=+0.185
++ Max : roll=+0.282  pitch=+0.609  yaw=+1.186  dS=+0.002  dL=+0.281  dP=+0.426
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.52(0.52) 0.58(0.23) 0.57(0.27) 0.64(0.09) 0.65(0.11) 0.67(0.07) 0.61(0.16) 0.71(0.16) 0.72(0.05) 0.68(0.11) 0.53(0.19) 0.56(0.17) 0.59(0.11) 0.67(0.14) 0.71(0.07) 0.65(0.06) 0.70(0.15) 0.67(0.10) 0.66(0.09) 0.64(0.04) 0.62(0.08) 0.61(0.07) 0.65(0.07) 0.65(0.08) 0.64(0.07) 0.66(0.09) 0.72(0.08) 0.78(0.08) 0.82(0.06) 0.84(0.08) 0.82(0.08) 0.84(0.10) 0.93(0.15) 1.05(0.12) 1.13(0.09) 1.21(0.22) 1.28(0.08) 1.39(0.13) 1.44(0.08) 1.47(0.08) 1.51(0.05) 1.53(0.04) 1.57(0.05) 1.60(0.03) 1.59(0.18) 1.62(0.05) 1.68(0.08) 1.71(0.07) 1.75(0.08) 1.79(0.06) 1.80(0.05) 1.86(0.06) 1.87(0.06) 1.92(0.08) 1.94(0.06) 1.99(0.07) 2.05(0.08) 2.08(0.05) 2.15(0.18) 2.51(1.17) 2.57(0.27) 2.73(0.23) 2.72(0.22) 2.74(0.09) 2.79(0.08) 2.84(0.13) 2.91(0.07) 2.93(0.06) 2.90(0.06) 2.94(0.05) 2.97(0.06) 2.97(0.04) 2.97(0.03) 2.96(0.02) 2.73(0.37) 2.69(0.15) 2.89(0.25) 2.98(0.14) 3.07(0.10) 3.11(0.07) 3.13(0.07) 3.23(0.10) 3.28(0.06) 3.32(0.05) 3.32(0.14) 3.32(0.18) 3.39(0.24) 3.44(0.34) 3.47(0.06) 3.50(0.03) 3.49(0.05) 3.48(0.06) 3.48(0.07) 3.50(0.07) 3.53(0.06) 3.56(0.10) 3.58(0.16) 3.62(0.12) 3.62(0.03) 3.63(0.09) 3.63(0.08) 3.68(0.05) 3.73(0.06) 3.70(0.04) 3.70(0.07) 3.68(0.03) 3.67(0.07) 3.60(0.11) 3.59(0.07) 3.57(0.09) 3.69(0.12) 3.76(0.08) 3.78(0.03) 3.79(0.05) 3.77(0.35) 3.54(0.49) 3.25(0.65) 3.42(0.26) 3.50(0.16) 3.59(0.18) 3.67(0.10) 3.67(0.04) 3.72(0.10) 3.80(0.10) 3.83(0.08) 3.80(0.08) 3.84(0.08) 3.88(0.06) 3.87(0.13) 3.90(0.04) 3.95(0.07) 3.96(0.04) 3.99(0.06) 3.99(0.05) 3.97(0.05) 3.98(0.07) 3.93(0.40) 3.83(0.27) 3.89(0.25) 4.01(0.16) 3.85(0.39) 3.46(0.64) 3.44(0.28) 3.56(0.27) 3.46(0.34) 3.48(0.17) 3.47(0.23) 3.46(0.18) 3.61(0.23)
++ Max displacement in automask = 4.01 (mm) at sub-brick 140
++ Max delta displ  in automask = 1.17 (mm) at sub-brick 60
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.tb8393.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb8393.r01.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb8393.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb8393.r01.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'pb02.tb8393.r01.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 451.1 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.tb8393.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb8393.r02.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb02.tb8393.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27604 voxels
 + 4448 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.594  pitch=+0.695  yaw=+0.934  dS=-3.543  dL=-0.782  dP=-0.151
++ Mean: roll=-0.310  pitch=+1.249  yaw=+1.044  dS=-3.393  dL=-0.358  dP=+0.071
++ Max : roll=+0.349  pitch=+1.803  yaw=+1.158  dS=-3.242  dL=+0.447  dP=+0.180
++ Max displacements (mm) for each sub-brick:
 5.81(0.00) 6.63(0.89) 6.69(0.22) 6.44(0.29) 6.32(0.16) 6.44(0.15) 6.43(0.05) 6.13(0.37) 5.81(0.43) 5.71(0.15) 5.64(0.15) 5.71(0.19) 5.70(0.21) 5.79(0.13) 5.72(0.12) 5.62(0.10) 5.60(0.07) 5.60(0.07) 5.62(0.11) 5.59(0.09) 5.53(0.09) 5.45(0.09) 5.45(0.03) 5.46(0.07) 5.45(0.07) 5.42(0.05) 5.37(0.05) 5.42(0.09) 5.47(0.08) 5.50(0.04) 5.50(0.04) 5.54(0.04) 5.51(0.08) 5.48(0.24) 5.49(0.06) 5.55(0.09) 5.58(0.06) 5.57(0.03) 5.57(0.04) 5.59(0.04) 5.55(0.06) 5.51(0.07) 5.53(0.03) 5.52(0.02) 5.59(0.07) 5.60(0.05) 5.62(0.06) 5.60(0.02) 5.57(0.05) 5.55(0.03) 5.52(0.07) 5.55(0.06) 5.58(0.04) 5.58(0.03) 5.61(0.05) 5.56(0.05) 5.55(0.06) 5.52(0.08) 5.53(0.05) 5.55(0.05) 5.53(0.04) 5.44(0.11) 5.50(0.10) 5.54(0.06) 5.50(0.09) 5.46(0.04) 5.46(0.05) 5.51(0.07) 5.52(0.02) 5.52(0.03) 5.51(0.05) 5.49(0.03) 5.49(0.04) 5.51(0.04) 5.50(0.03) 5.48(0.04) 5.54(0.10) 5.56(0.04) 5.57(0.10) 5.57(0.05) 5.59(0.03) 5.60(0.04) 5.60(0.04) 5.53(0.08) 5.52(0.03) 5.55(0.08) 5.54(0.04) 5.53(0.02) 5.54(0.04) 5.55(0.03) 5.56(0.03) 5.51(0.07) 6.14(0.71) 6.74(0.68) 6.61(0.16) 6.59(0.08) 6.52(0.12) 6.47(0.09) 6.41(0.08) 6.41(0.03) 6.43(0.04) 6.44(0.09) 6.41(0.06) 6.36(0.06) 6.36(0.04) 6.40(0.09) 6.43(0.06) 6.44(0.09) 6.46(0.03) 6.48(0.05) 6.49(0.22) 6.56(0.13) 6.49(0.11) 6.44(0.08) 6.43(0.05) 6.46(0.08) 6.49(0.05) 6.51(0.04) 6.51(0.05) 6.50(0.04) 6.46(0.06) 6.48(0.07) 6.50(0.06) 6.52(0.02) 6.52(0.03) 6.48(0.07) 6.53(0.15) 6.56(0.07) 6.55(0.09) 6.37(0.19) 6.26(0.13) 6.36(0.14) 6.37(0.06) 6.37(0.01) 6.37(0.04) 6.39(0.05) 6.39(0.02) 6.43(0.05) 6.49(0.08) 6.52(0.07) 6.53(0.09) 6.33(0.24) 6.04(0.37) 5.80(0.28) 5.71(0.15) 5.59(0.15) 5.43(0.23) 5.35(0.13) 5.34(0.09) 5.10(0.36)
++ Max displacement in automask = 6.74 (mm) at sub-brick 93
++ Max delta displ  in automask = 0.89 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.tb8393.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb8393.r02.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb8393.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb8393.r02.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'pb02.tb8393.r02.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 454.4 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.tb8393.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb8393.r03.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb02.tb8393.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27676 voxels
 + 4405 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.269  pitch=+0.970  yaw=+1.576  dS=-4.902  dL=-0.707  dP=-0.627
++ Mean: roll=-0.063  pitch=+2.555  yaw=+2.027  dS=-4.536  dL=-0.256  dP=-0.312
++ Max : roll=+0.460  pitch=+3.967  yaw=+2.728  dS=-3.986  dL=+0.587  dP=-0.141
++ Max displacements (mm) for each sub-brick:
 10.44(0.00) 10.98(0.63) 10.73(0.27) 10.49(0.32) 10.13(0.40) 10.14(0.08) 10.17(0.09) 10.04(0.13) 10.01(0.09) 9.85(0.17) 9.51(0.36) 9.48(0.20) 9.38(0.32) 9.32(0.15) 9.28(0.08) 9.32(0.11) 9.34(0.10) 9.36(0.07) 9.38(0.05) 9.37(0.06) 9.39(0.05) 9.40(0.06) 9.37(0.05) 9.27(0.14) 9.35(0.13) 9.33(0.13) 9.31(0.04) 9.27(0.05) 9.23(0.05) 9.27(0.05) 9.30(0.07) 9.37(0.13) 9.48(0.12) 9.50(0.07) 9.49(0.08) 9.50(0.05) 9.52(0.04) 9.51(0.05) 9.53(0.03) 9.54(0.04) 9.51(0.06) 9.50(0.03) 9.48(0.04) 9.50(0.03) 9.48(0.03) 9.53(0.08) 9.58(0.13) 9.58(0.06) 9.60(0.03) 9.62(0.04) 9.63(0.03) 9.66(0.03) 9.69(0.04) 9.69(0.03) 9.71(0.02) 9.73(0.04) 9.72(0.03) 9.74(0.03) 9.73(0.03) 9.73(0.05) 9.72(0.06) 9.74(0.02) 9.74(0.03) 9.71(0.03) 9.69(0.04) 9.70(0.03) 9.69(0.02) 9.73(0.04) 9.77(0.05) 9.75(0.04) 9.77(0.04) 9.75(0.03) 9.75(0.02) 9.79(0.05) 9.82(0.04) 9.80(0.07) 9.81(0.02) 9.82(0.05) 9.80(0.05) 9.77(0.07) 9.76(0.04) 9.78(0.04) 9.79(0.04) 9.74(0.06) 9.72(0.03) 9.76(0.05) 9.77(0.03) 9.81(0.05) 9.77(0.04) 9.71(0.07) 9.71(0.07) 9.70(0.05) 9.67(0.03) 9.67(0.01) 9.68(0.02) 9.72(0.05) 9.72(0.06) 9.68(0.05) 9.66(0.04) 9.68(0.03) 9.66(0.05) 9.72(0.08) 9.70(0.07) 9.72(0.05) 9.74(0.03) 9.75(0.04) 9.74(0.04) 9.77(0.05) 9.73(0.12) 9.83(0.30) 9.76(0.12) 9.61(0.24) 9.23(0.41) 8.93(0.32) 8.88(0.17) 8.89(0.21) 8.90(0.10) 8.88(0.11) 8.87(0.06) 8.95(0.12) 8.97(0.15) 8.96(0.04) 9.00(0.08) 8.98(0.06) 8.98(0.10) 9.00(0.10) 9.01(0.18) 9.04(0.10) 9.06(0.07) 9.07(0.06) 9.05(0.04) 9.05(0.03) 9.02(0.07) 9.00(0.03) 8.98(0.04) 8.97(0.02) 8.97(0.03) 8.94(0.05) 8.96(0.03) 8.94(0.04) 8.92(0.05) 8.63(0.37) 8.77(0.47) 8.89(0.20) 8.72(0.21) 8.64(0.14) 8.72(0.18) 8.75(0.08) 8.63(0.27) 8.45(0.31)
++ Max displacement in automask = 10.98 (mm) at sub-brick 1
++ Max delta displ  in automask = 0.63 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.tb8393.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb8393.r03.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb8393.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb8393.r03.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'pb02.tb8393.r03.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 452.7 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb8393.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8393.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb8393.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8393.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb8393.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8393.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source vr_base+orig -nwarp anat.un.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 17.3 sec
3dcopy Sag3DMPRAGEs002a1001_ns+tlrc anat_final.tb8393
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.tb8393+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb8393+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets
++ 1842354 voxels in source_automask+0
++ Zero-pad: ybot=4 ytop=1
++ Zero-pad: zbot=3 ztop=0
++ Computing -autobox
++ 318370 voxels [91.7%] in weight mask
++ Number of points for matching = 149633
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.138953
   sp   = 0.237078
   mi   = -0.611153
   crM  = 0.033084
   nmi  = 0.845223
   je   = 3.33747
   hel  = -0.127413
   crA  = 0.182163
   crU  = 0.19214
   lss  = 0.861047
   lpc  = 0.152807
   lpa  = 0.847193
   lpc+ = 0.272817
   ncd  = 0.90287
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.4
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb8393+tlrc -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb8393+tlrc'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 22.5 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb8393.r01.blur pb03.tb8393.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb8393.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb8393.r02.blur pb03.tb8393.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb8393.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb8393.r03.blur pb03.tb8393.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb8393.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb04.tb8393.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb8393.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 404.360168
 + Used gradual clip level = 374.925171 .. 438.725403
 + Number voxels above clip level = 71785
 + Clustering voxels ...
 + Largest cluster has 71286 voxels
 + Clustering voxels ...
 + Largest cluster has 71072 voxels
 + Filled    84 voxels in small holes; now have 71156 voxels
 + Clustering voxels ...
 + Largest cluster has 71153 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 240143 voxels
 + Mask now has 71153 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 230457 voxels
++ 80839 voxels in the mask [out of 311296: 25.97%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb04.tb8393.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb8393.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 405.587891
 + Used gradual clip level = 375.977570 .. 441.257294
 + Number voxels above clip level = 71977
 + Clustering voxels ...
 + Largest cluster has 71492 voxels
 + Clustering voxels ...
 + Largest cluster has 71340 voxels
 + Filled    99 voxels in small holes; now have 71439 voxels
 + Filled     1 voxels in large holes; now have 71440 voxels
 + Clustering voxels ...
 + Largest cluster has 71435 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239861 voxels
 + Mask now has 71435 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 230081 voxels
++ 81215 voxels in the mask [out of 311296: 26.09%]
++ first   6 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb04.tb8393.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb8393.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 405.253387
 + Used gradual clip level = 375.913239 .. 443.031250
 + Number voxels above clip level = 72294
 + Clustering voxels ...
 + Largest cluster has 71811 voxels
 + Clustering voxels ...
 + Largest cluster has 71666 voxels
 + Filled    99 voxels in small holes; now have 71765 voxels
 + Clustering voxels ...
 + Largest cluster has 71763 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239533 voxels
 + Mask now has 71763 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 229662 voxels
++ 81634 voxels in the mask [out of 311296: 26.22%]
++ first   6 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.tb8393
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 81936 survived, 229360 were zero
++ writing result full_mask.tb8393...
3dresample -master full_mask.tb8393+tlrc -input Sag3DMPRAGEs002a1001_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.tb8393
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 97841 survived, 213455 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb8393...
3dABoverlap -no_automask full_mask.tb8393+tlrc mask_anat.tb8393+tlrc
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#A=./full_mask.tb8393+tlrc.BRIK  B=./mask_anat.tb8393+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
81936        97841        98597        81180        756          16661         0.9227     17.0286     1.1157     1.0306     1.1836
3ddot -dodice full_mask.tb8393+tlrc mask_anat.tb8393+tlrc
tee out.mask_ae_dice.txt
0.903119	
3dresample -master full_mask.tb8393+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71790 survived, 239506 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb04.tb8393.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.tb8393.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb8393.r01.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb8393.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.tb8393.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.tb8393.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb8393.r02.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb8393.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.tb8393.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.tb8393.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb8393.r03.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb8393.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb8393
total number of censored TRs (simple form) = 18
1deval -a motion_tb8393_censor.1D -b outcount_tb8393_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb8393_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb05.tb8393.r01.scale+tlrc.HEAD pb05.tb8393.r02.scale+tlrc.HEAD pb05.tb8393.r03.scale+tlrc.HEAD -censor censor_tb8393_combined_2.1D -polort 3 -local_times -num_stimts 18 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll_01 -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch_01 -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw_01 -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS_01 -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL_01 -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP_01 -stim_file 13 motion_deriv.1D[0] -stim_base 13 -stim_label 13 roll_02 -stim_file 14 motion_deriv.1D[1] -stim_base 14 -stim_label 14 pitch_02 -stim_file 15 motion_deriv.1D[2] -stim_base 15 -stim_label 15 yaw_02 -stim_file 16 motion_deriv.1D[3] -stim_base 16 -stim_label 16 dS_02 -stim_file 17 motion_deriv.1D[4] -stim_base 17 -stim_label 17 dL_02 -stim_file 18 motion_deriv.1D[5] -stim_base 18 -stim_label 18 dP_02 -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +uns1 -str1 -glt_label 4 unstructured-structured BL1 -gltsym SYM: +uns2 -str2 -glt_label 5 unstructured-structured BL2 -gltsym SYM: +uns3 -str3 -glt_label 6 unstructured-structured BL3 -gltsym SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3 -glt_label 7 task -gltsym SYM: +uns1 +str1 -glt_label 8 task BL1 -gltsym SYM: +uns2 +str2 -glt_label 9 task BL2 -gltsym SYM: +uns3 +str3 -glt_label 10 task BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb8393 -errts errts.tb8393 -bucket stats.tb8393
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 596,852 bytes (about 597 thousand [kilo])
++ loading dataset pb05.tb8393.r01.scale+tlrc.HEAD pb05.tb8393.r02.scale+tlrc.HEAD pb05.tb8393.r03.scale+tlrc.HEAD
++ current memory malloc-ated = 561,233,701 bytes (about 561 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 257436 voxels (out of 311296 = 82.7%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 -str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 -str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 +str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 432 (after)
 + Number of parameters:  30 [24 baseline ; 6 signal]
++ total shared memory needed = 1,181,679,616 bytes (about 1.2 billion [giga])
++ current memory malloc-ated = 561,588,601 bytes (about 562 million [mega])
++ mmap() memory allocated: 1,181,679,616 bytes (about 1.2 billion [giga])
++ Memory required for output bricks = 1,181,679,616 bytes (about 1.2 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.tb8393.r01.scale+tlrc.HEAD pb05.tb8393.r02.scale+tlrc.HEAD pb05.tb8393.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.tb8393_REML -Rvar stats.tb8393_REMLvar \
 -Rfitts fitts.tb8393_REML -Rerrts errts.tb8393_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (432x30):  6.41505  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (432x6):  1.03654  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (432x24):  6.0893  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (432x12):  4.49193  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (432x12):  1.05227  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.76455e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.55 s
++ Voxels in dataset: 311296
++ Voxels per job:    31129
++ Job #1: processing voxels 31129 to 62257; elapsed time=7.128
++ Job #2: processing voxels 62258 to 93386; elapsed time=7.158
++ Job #3: processing voxels 93387 to 124515; elapsed time=7.191
++ Job #4: processing voxels 124516 to 155644; elapsed time=7.225
++ Job #5: processing voxels 155645 to 186773; elapsed time=7.288
++ Job #6: processing voxels 186774 to 217902; elapsed time=7.340
++ Job #7: processing voxels 217903 to 249031; elapsed time=7.393
++ Job #8: processing voxels 249032 to 280160; elapsed time=7.434
++ Job #0: processing voxels 0 to 31128; elapsed time=7.497
++ voxel loop:++ Job #9: processing voxels 280161 to 311295; elapsed time=7.501
0123456789.0123456789.0123456789.0123456789.012345++ Job #2 finished; elapsed time=76.750
67++ Job #3 finished; elapsed time=80.040
8++ Job #1 finished; elapsed time=80.745
++ Job #7 finished; elapsed time=81.117
++ Job #6 finished; elapsed time=81.180
++ Job #5 finished; elapsed time=81.262
9.
++ Job #0 waiting for children to finish; elapsed time=81.311
++ Job #8 finished; elapsed time=81.467
++ Job #9 finished; elapsed time=81.666
++ Job #4 finished; elapsed time=81.752
++ Job #0 now finishing up; elapsed time=81.771
++ Smallest FDR q [0 Full_Fstat] = 5.72963e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 5.50311e-14
++ Smallest FDR q [3 uns1_Fstat] = 5.50311e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 1.20537e-13
++ Smallest FDR q [6 uns2_Fstat] = 1.20538e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 5.32126e-14
++ Smallest FDR q [9 uns3_Fstat] = 5.32126e-14
++ Smallest FDR q [11 str1#0_Tstat] = 5.92005e-14
++ Smallest FDR q [12 str1_Fstat] = 5.91997e-14
++ Smallest FDR q [14 str2#0_Tstat] = 1.73596e-13
++ Smallest FDR q [15 str2_Fstat] = 1.73593e-13
++ Smallest FDR q [17 str3#0_Tstat] = 5.92264e-14
++ Smallest FDR q [18 str3_Fstat] = 5.92264e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 6.08237e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 6.08273e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 7.90712e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 7.907e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 2.51453e-13
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 2.51452e-13
++ Smallest FDR q [29 unstructured-structured BL1_GLT#0_Tstat] = 2.44603e-11
++ Smallest FDR q [30 unstructured-structured BL1_GLT_Fstat] = 2.44603e-11
++ Smallest FDR q [32 unstructured-structured BL2_GLT#0_Tstat] = 7.51018e-13
++ Smallest FDR q [33 unstructured-structured BL2_GLT_Fstat] = 7.50991e-13
++ Smallest FDR q [35 unstructured-structured BL3_GLT#0_Tstat] = 2.74077e-11
++ Smallest FDR q [36 unstructured-structured BL3_GLT_Fstat] = 2.74083e-11
++ Smallest FDR q [38 task_GLT#0_Tstat] = 6.63592e-14
++ Smallest FDR q [39 task_GLT_Fstat] = 6.63592e-14
++ Smallest FDR q [41 task BL1_GLT#0_Tstat] = 5.41823e-14
++ Smallest FDR q [42 task BL1_GLT_Fstat] = 5.41823e-14
++ Smallest FDR q [44 task BL2_GLT#0_Tstat] = 1.36403e-13
++ Smallest FDR q [45 task BL2_GLT_Fstat] = 1.36404e-13
++ Smallest FDR q [47 task BL3_GLT#0_Tstat] = 5.06939e-14
++ Smallest FDR q [48 task BL3_GLT_Fstat] = 5.06939e-14
++ Wrote bucket dataset into ./stats.tb8393+tlrc.BRIK
 + created 33 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb8393+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.tb8393+tlrc.BRIK
++ Program finished; elapsed time=167.579
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.741       0.803  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.737       0.802  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.729       0.794  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.473       0.550  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.470       0.544  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.469       0.547  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb05.tb8393.r01.scale+tlrc.HEAD pb05.tb8393.r02.scale+tlrc.HEAD pb05.tb8393.r03.scale+tlrc.HEAD -fout -tout -Rbuck stats.tb8393_REML -Rvar stats.tb8393_REMLvar -Rfitts fitts.tb8393_REML -Rerrts errts.tb8393_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 311296 voxels
++ FDR automask has 257436 voxels (out of 311296 = 82.7%)
++ -----  matrix condition (432x30):  6.41505  ++ VERY GOOD ++
 + masked off 67604 voxels for being all zero; 243692 left in mask
++ Converting input dataset to vector image
 +  dataset = 560 million [mega] bytes
 +  vectim  = 440 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=14.66
 + X matrix: 57.361% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=432 cols=30; 109*1 cases; total CPU=0.00 Elapsed=14.72
 +  average case bandwidth = 12.23
++ REML voxel loop: [6 threads]0123456789.0123456789.0123456789.0123456789.
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=201.60
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=301.83
++ Output dataset ./stats.tb8393_REMLvar+tlrc.BRIK
++ Output dataset ./fitts.tb8393_REML+tlrc.BRIK
++ Output dataset ./errts.tb8393_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.tb8393_REML+tlrc
++ Smallest FDR q [0 Full_Fstat] = 1.44873e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 3.17763e-12
++ Smallest FDR q [3 uns1_Fstat] = 3.17763e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 2.77689e-11
++ Smallest FDR q [6 uns2_Fstat] = 2.77689e-11
++ Smallest FDR q [8 uns3#0_Tstat] = 8.7938e-12
++ Smallest FDR q [9 uns3_Fstat] = 8.7938e-12
++ Smallest FDR q [11 str1#0_Tstat] = 3.95343e-12
++ Smallest FDR q [12 str1_Fstat] = 3.95343e-12
++ Smallest FDR q [14 str2#0_Tstat] = 3.4624e-11
++ Smallest FDR q [15 str2_Fstat] = 3.4624e-11
++ Smallest FDR q [17 str3#0_Tstat] = 1.54096e-11
++ Smallest FDR q [18 str3_Fstat] = 1.54096e-11
++ Smallest FDR q [20 unstructured#0_Tstat] = 3.42148e-12
++ Smallest FDR q [21 unstructured_Fstat] = 3.42148e-12
++ Smallest FDR q [23 structured#0_Tstat] = 1.12196e-11
++ Smallest FDR q [24 structured_Fstat] = 1.12196e-11
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 5.42554e-09
++ Smallest FDR q [27 unstructured-structured_Fstat] = 5.42555e-09
++ Smallest FDR q [29 unstructured-structured_BL1#0_Tstat] = 0.00379691
++ Smallest FDR q [30 unstructured-structured_BL1_Fstat] = 0.00379691
++ Smallest FDR q [32 unstructured-structured_BL2#0_Tstat] = 0.000859159
++ Smallest FDR q [33 unstructured-structured_BL2_Fstat] = 0.000859159
++ Smallest FDR q [35 unstructured-structured_BL3#0_Tstat] = 0.0645862
++ Smallest FDR q [36 unstructured-structured_BL3_Fstat] = 0.0645861
++ Smallest FDR q [38 task#0_Tstat] = 5.58952e-12
++ Smallest FDR q [39 task_Fstat] = 5.58952e-12
++ Smallest FDR q [41 task_BL1#0_Tstat] = 2.85999e-12
++ Smallest FDR q [42 task_BL1_Fstat] = 2.86e-12
++ Smallest FDR q [44 task_BL2#0_Tstat] = 3.98092e-11
++ Smallest FDR q [45 task_BL2_Fstat] = 3.98092e-11
++ Smallest FDR q [47 task_BL3#0_Tstat] = 8.36091e-12
++ Smallest FDR q [48 task_BL3_Fstat] = 8.36091e-12
 + Added 33 FDR curves to dataset stats.tb8393_REML+tlrc
++ Output dataset ./stats.tb8393_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=392.21
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb8393 pb05.tb8393.r01.scale+tlrc.HEAD pb05.tb8393.r02.scale+tlrc.HEAD pb05.tb8393.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ elapsed time = 314.1 s
3dTstat -mean -prefix rm.signal.all all_runs.tb8393+tlrc[2..58,61..114,118..140,143..149,152..240,244..299,302..440,443..449]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox

*** failure while reading from brick file ./all_runs.tb8393+tlrc.BRIK
*** desired 537919488 bytes but only got 17432576
*** Unix error message: Success
   THD_load_datablock
  3dTstat main
** Command line was:
3dTstat -mean -prefix rm.signal.all 'all_runs.tb8393+tlrc[2..58,61..114,118..140,143..149,152..240,244..299,302..440,443..449]'
[7m** FATAL ERROR:[0m Unable to compute output dataset!
** Program compile date = Dec 22 2017
