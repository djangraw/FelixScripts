echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb8068
endif
set output_dir = tb8068.srtt
if ( -d tb8068.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb8068.srtt
mkdir tb8068.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb8068.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb8068.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb8068.srtt/pb00.tb8068.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.1 s
3dTcat -prefix tb8068.srtt/pb00.tb8068.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 3.2 s
3dTcat -prefix tb8068.srtt/pb00.tb8068.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.1 s
set tr_counts = ( 150 150 150 )
cd tb8068.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8068.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8068.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8068.r01.tcat+orig.BRIK is 15.000003 degrees from plumb.
++ 26435 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8068.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8068.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8068.r02.tcat+orig.BRIK is 15.000003 degrees from plumb.
++ 26437 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8068.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8068.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8068.r03.tcat+orig.BRIK is 15.000003 degrees from plumb.
++ 26458 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb8068.r01.tshift -tpattern alt+z2 pb00.tb8068.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8068.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8068.r01.tcat+orig.BRIK is 15.000003 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8068.r02.tshift -tpattern alt+z2 pb00.tb8068.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8068.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8068.r02.tcat+orig.BRIK is 15.000003 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8068.r03.tshift -tpattern alt+z2 pb00.tb8068.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8068.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8068.r03.tcat+orig.BRIK is 15.000003 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb8068.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 15.000003 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 389.516388
 + Used gradual clip level = 345.054596 .. 432.025208
 + Number voxels above clip level = 26857
 + Clustering voxels ...
 + Largest cluster has 26455 voxels
 + Clustering voxels ...
 + Largest cluster has 26098 voxels
 + Filled   278 voxels in small holes; now have 26376 voxels
 + Filled     1 voxels in large holes; now have 26377 voxels
 + Clustering voxels ...
 + Largest cluster has 26376 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 104695 voxels
 + Mask now has 26377 voxels
++ 26377 voxels in the mask [out of 131072: 20.12%]
++ first  14 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 958.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/958.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 15.000003 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 15.000003 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1434474 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 26377 voxels [16.1%] in weight mask
++ Number of points for matching = 26377
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.488 28.211 19.615 (index)
 + source center of mass = 87.824 182.411 181.277 (index)
 + source-target CM = -0.270 0.083 -6.301 (xyz)
 + center of mass shifts = -0.270 0.083 -6.301
++ shift param auto-range: -69.8..69.2 -69.4..69.6 -56.4..43.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.270248 .. 9.729752
 + Range param#2 [y-shift] = -9.916550 .. 10.083450
 + Range param#3 [z-shift] = -16.300568 .. 3.699432
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.270248 .. 39.729752
 + Range param#2 [y-shift] = -39.916550 .. 40.083450
 + Range param#3 [z-shift] = -46.300568 .. 33.699432
 + 12 free parameters
++ Normalized convergence radius = 0.000463
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1434474 [out of 17352896] voxels
 + base mask has 36587 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=77 usiz=188.5
 + - copying weight image
 + - using 26377 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 23076 total points stored in 220 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=0.0106113] **[#2=-0.00526737] *++o*[#10=-0.0231642] *-..o+o-++.+*[#92=-0.0285146] *ooo-...*[#1203=-0.0296197] *.--*[#2268=-0.0332692] *oo+$..+
 + - best 45 costs found:
    0 v=-0.033269: -26.94 -26.58   7.03 -15.00 -15.00  30.00  [grid]
    1 v=-0.032898:  26.40 -26.58   7.03  30.00 -15.00 -30.00  [grid]
    2 v=-0.032588:   3.81  -6.14   1.50  -4.32 -22.85 -18.95  [rand]
    3 v=-0.031893:  13.06 -26.58   7.03 -15.00 -30.00 -30.00  [grid]
    4 v=-0.030793: -26.94 -26.58   7.03 -30.00 -15.00  30.00  [grid]
    5 v=-0.030601:   3.81   6.31   1.50   4.32  22.85 -18.95  [rand]
    6 v=-0.030579:  10.05  28.90   8.71  30.67  17.79 -20.52  [rand]
    7 v=-0.030498:  -4.35   6.31   1.50  -4.32  22.85 -18.95  [rand]
    8 v=-0.029729:  34.58 -35.59   7.95  40.22 -24.26 -41.52  [rand]
    9 v=-0.029620:  13.06 -26.58   7.03  15.00 -30.00 -15.00  [grid]
   10 v=-0.028515: -26.94 -13.25   7.03 -15.00 -15.00  15.00  [grid]
   11 v=-0.028396: -13.60  13.42   7.03 -30.00  15.00  15.00  [grid]
   12 v=-0.028310: -22.59  29.72 -13.30   8.73  38.75  33.73  [rand]
   13 v=-0.027855: -26.94  13.42   7.03  15.00  15.00  30.00  [grid]
   14 v=-0.027515:  13.06  26.75   7.03 -30.00  30.00 -15.00  [grid]
   15 v=-0.027385: -32.11  11.88  -9.04  23.31   3.26  40.47  [rand]
   16 v=-0.027327: -16.25 -19.41 -12.02 -20.53   3.14  10.08  [rand]
   17 v=-0.027009: -36.92 -17.14  15.96   5.26 -41.39 -40.03  [rand]
   18 v=-0.026903:  13.06 -26.58  20.37 -15.00  15.00 -15.00  [grid]
   19 v=-0.026885:  23.93 -10.25  -1.78  27.51 -29.30 -27.65  [rand]
   20 v=-0.026842: -16.25 -19.41 -12.02 -20.53  -3.14  10.08  [rand]
   21 v=-0.026818: -10.59  28.90   8.71 -30.67  17.79  20.52  [rand]
   22 v=-0.026436:  15.71 -19.41 -12.02  20.53   3.14 -10.08  [rand]
   23 v=-0.026306:  31.57 -11.71  -3.56  23.31   3.26 -40.47  [rand]
   24 v=-0.025902:  26.40  13.42  20.37  30.00 -15.00 -30.00  [grid]
   25 v=-0.025869:  13.06 -26.58   7.03 -15.00 -15.00 -30.00  [grid]
   26 v=-0.025708:  13.06 -13.25  20.37  30.00 -15.00 -30.00  [grid]
   27 v=-0.025669:   3.81   6.31   1.50  -4.32  22.85 -18.95  [rand]
   28 v=-0.025464:  31.57 -11.71  -3.56  23.31  -3.26 -40.47  [rand]
   29 v=-0.025254:  26.40 -13.25  20.37  15.00  15.00 -30.00  [grid]
   30 v=-0.025079:  34.06  16.67   2.30 -16.34   8.64 -40.54  [rand]
   31 v=-0.025016: -13.60 -26.58   7.03  30.00 -30.00  15.00  [grid]
   32 v=-0.024881: -13.60  13.42  20.37  30.00  15.00  15.00  [grid]
   33 v=-0.024817: -26.94  13.42   7.03 -15.00  15.00  30.00  [grid]
   34 v=-0.024545: -26.58 -25.87  11.49 -15.82 -17.65  37.25  [rand]
   35 v=-0.023818:  -4.35   6.31   1.50   4.32 -22.85  18.95  [rand]
   36 v=-0.023800:  -8.91  20.52  11.17 -25.20  18.50  13.54  [rand]
   37 v=-0.023742: -13.60 -26.58   7.03 -15.00 -30.00  15.00  [grid]
   38 v=-0.023718: -13.60  26.75  20.37  30.00  15.00  15.00  [grid]
   39 v=-0.023616: -26.94  13.42   7.03 -30.00  15.00  30.00  [grid]
   40 v=-0.023541:  26.04 -25.87  11.49 -15.82 -17.65 -37.25  [rand]
   41 v=-0.023517:  13.06  13.42  20.37 -30.00  15.00 -15.00  [grid]
   42 v=-0.023443: -13.60  26.75   7.03 -15.00  15.00  15.00  [grid]
   43 v=-0.023352: -24.47  10.42  -1.78 -27.51  29.30  27.65  [rand]
   44 v=-0.023276:  26.40 -13.25  20.37  30.00 -15.00 -30.00  [grid]
*[#8012=-0.0333803] *[#8015=-0.0357314] *[#8020=-0.0360015] *[#8027=-0.036212] *[#8037=-0.037131] *[#8039=-0.0373308] *[#8040=-0.0382289] *[#8043=-0.0395402] *[#8044=-0.0419317] *[#8045=-0.0438758] *[#8050=-0.0443935] *[#8051=-0.044525] *[#8052=-0.0452667] *[#8072=-0.0478141] *[#8074=-0.0488988] *[#8079=-0.0491095] *[#8083=-0.0498171] *[#8084=-0.0505405] *[#8085=-0.0529757] *[#8086=-0.0582953] *[#8087=-0.0628118] *[#8088=-0.0671092] *[#8090=-0.0684261] *[#8093=-0.0692606] *[#8094=-0.0709494] *[#8095=-0.0728952] *[#8096=-0.0751981] *[#8097=-0.0760081] *[#8100=-0.0764531] *[#8103=-0.0776841] *[#8104=-0.0814502] *[#8105=-0.0879522] *[#8106=-0.0896055] *[#8107=-0.0943827] *[#8108=-0.0945923] *[#8110=-0.0976614] *[#8111=-0.104731] *[#8112=-0.119539] *[#8113=-0.155361] *[#8115=-0.174456] *[#8118=-0.207598] *[#8119=-0.261253] *[#8120=-0.364118] *[#8123=-0.449021] *[#8125=-0.44955] *[#8126=-0.470308] *[#8128=-0.482137] *[#8133=-0.490508] *[#8137=-0.49106] *[#8138=-0.491845]  + - costs of the above after a little optimization:
    0 v=-0.036002: -26.57 -26.58   7.59 -15.11 -14.91  29.67  [grid]
    1 v=-0.045267:  30.47 -26.40   6.54  29.24 -15.52 -33.40  [grid]
  * 2 v=-0.491845:   0.59  -1.42  -0.47  -0.22  -0.51   0.36  [rand]
    3 v=-0.063364:   6.93 -27.78   6.51 -13.43 -29.68 -28.75  [grid]
    4 v=-0.039716: -29.68 -26.48   6.88 -32.01 -15.11  26.01  [grid]
    5 v=-0.046674:   3.67   2.73   0.52   6.50  16.11 -26.27  [rand]
    6 v=-0.035825:  14.27  29.68   8.00  30.60  17.98 -20.91  [rand]
    7 v=-0.040984:  -0.32   6.70   1.49  -4.95  21.44 -19.80  [rand]
    8 v=-0.049534:  36.40 -27.60   8.48  41.02 -24.97 -40.47  [rand]
    9 v=-0.035348:  12.68 -26.78   6.61  21.33 -29.67 -14.82  [grid]
   10 v=-0.084616: -14.87 -13.88   8.60  -7.62 -14.62  11.42  [grid]
   11 v=-0.041621: -13.69  17.28   7.02 -29.78  15.44  16.24  [grid]
   12 v=-0.046043: -23.83  30.95 -12.90   8.04  37.15  38.55  [rand]
   13 v=-0.030081: -30.92  13.36   7.61  14.80  14.46  29.94  [grid]
   14 v=-0.031142:  12.21  26.59   6.27 -30.06  28.43 -15.32  [grid]
   15 v=-0.036596: -32.20  12.88  -8.21  23.03   3.45  44.95  [rand]
   16 v=-0.045308: -16.35 -16.12 -11.78 -20.05   2.20   9.04  [rand]
   17 v=-0.032714: -32.95 -16.83  15.73   4.80 -41.60 -40.46  [rand]
   18 v=-0.030493:  12.70 -26.85  20.77 -11.10  14.59 -15.11  [grid]
   19 v=-0.037888:  27.80 -10.66  -4.83  29.33 -31.92 -33.18  [rand]
   20 v=-0.047090: -17.62 -20.97  -8.29 -20.32  -5.44   9.71  [rand]
   21 v=-0.030420: -10.84  24.47   8.64 -30.93  18.28  20.36  [rand]
   22 v=-0.035558:  15.41 -15.30 -11.27  19.92   3.91  -8.27  [rand]
   23 v=-0.028212:  31.23 -11.47  -4.50  22.66   0.99 -41.31  [rand]
   24 v=-0.031678:  26.35   9.51  20.48  29.24 -14.94 -30.40  [grid]
   25 v=-0.041189:  12.86 -30.97   6.91 -15.21 -15.33 -28.94  [grid]
   26 v=-0.026722:  13.09 -12.94  20.29  29.53 -15.34 -29.37  [grid]
   27 v=-0.043688:  -0.60   5.79   0.62  -2.95  22.77 -20.15  [rand]
   28 v=-0.040200:  32.48 -10.03   0.93  24.83  -4.49 -38.71  [rand]
   29 v=-0.026224:  26.10 -13.14  20.09  14.91  16.01 -30.04  [grid]
   30 v=-0.034201:  34.98  15.94  -1.25 -16.19  14.64 -39.55  [rand]
   31 v=-0.050866:  -6.20 -32.52   9.29  33.90 -34.53  12.34  [grid]
   32 v=-0.039125: -13.94  15.01  18.09  28.95  13.49  12.33  [grid]
   33 v=-0.049245: -24.31  10.03   0.12 -20.26  10.61  23.50  [grid]
   34 v=-0.034243: -29.40 -27.09  10.93 -16.76 -13.33  34.70  [rand]
   35 v=-0.037448:   0.78   4.08   2.93   6.06 -22.31  17.81  [rand]
   36 v=-0.032540:  -7.46  24.62  11.17 -27.42  18.79  13.86  [rand]
   37 v=-0.082124: -18.93 -29.20   8.70 -10.98 -27.47  12.19  [grid]
   38 v=-0.034436: -13.84  25.97  19.85  31.45  15.63  19.51  [grid]
   39 v=-0.029967: -28.26  13.75   6.16 -27.56  14.18  30.42  [grid]
   40 v=-0.034943:  25.74 -26.75   9.13 -10.75 -18.19 -37.38  [rand]
   41 v=-0.038341:  12.82   9.97  17.76 -31.71  11.73 -17.14  [grid]
   42 v=-0.057381: -13.92  18.47   3.23 -15.34  11.74  14.32  [grid]
   43 v=-0.027666: -25.11  14.18  -1.93 -26.22  30.22  28.13  [rand]
   44 v=-0.031606:  26.54 -13.49  20.00  34.20 -14.30 -29.04  [grid]
 + - save # 2 for twobest
 + - save #10 for twobest
 + - save #37 for twobest
 + - save # 3 for twobest
 + - save #42 for twobest
 + - save #31 for twobest
 + - save # 8 for twobest
 + - save #33 for twobest
 + - save #20 for twobest
 + - save # 5 for twobest
 + - save #12 for twobest
 + - save #16 for twobest
 + - save # 1 for twobest
 + - save #27 for twobest
 + - save #11 for twobest
 + - save #25 for twobest
 + - skip # 7 for twobest: too close to set #27
 + - save #28 for twobest
 + - save # 4 for twobest
 + - save #32 for twobest
 + - save #41 for twobest
 + - save #19 for twobest
 + - save #35 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=77 usiz=188.5
 + - retaining old weight image
 + - using 26377 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23089 total points stored in 234 'RHDD(13.7332)' bloks
*[#9492=-0.495384] *[#9500=-0.519217] *[#9513=-0.525678] *[#9516=-0.528123] *[#9517=-0.530863] *[#9520=-0.531343] *[#9522=-0.53179] *[#9523=-0.531812] *[#9524=-0.533916] *[#9525=-0.535809] *[#9528=-0.537215] *[#9531=-0.538572] *[#9532=-0.539887] *[#9533=-0.540434] *[#9534=-0.540588] *[#9537=-0.540927] *[#9539=-0.54283] *[#9540=-0.542888] *[#9542=-0.544636] *[#9549=-0.54586] *[#9552=-0.546618] *[#9553=-0.546713] *[#9557=-0.547181] *[#9560=-0.547284] *[#9568=-0.547353] *[#9570=-0.547982] *[#9571=-0.548147] *[#9574=-0.548414] *[#9575=-0.548577] 
 + - param set #1 has cost=-0.548577
 + -- Parameters = 0.1776 -0.9213 -0.0550 -0.6504 -1.0601 0.4343 0.9997 1.0237 1.0034 -0.0040 0.0024 -0.0018
 + - param set #2 has cost=-0.124645
 + -- Parameters = -7.2171 -13.2623 2.8396 -7.6792 -11.4546 5.0098 1.0110 1.0226 0.9983 0.0130 -0.0124 0.0021
 + - param set #3 has cost=-0.058154
 + -- Parameters = -19.0213 -29.0047 9.3091 -10.9891 -27.5152 12.2369 1.0155 1.0001 0.9999 -0.0004 0.0001 0.0005
 + - param set #4 has cost=-0.068240
 + -- Parameters = 4.6160 -28.9251 7.1115 -12.3003 -29.4775 -20.7468 1.0180 1.0541 0.9622 0.0044 0.0095 0.0121
 + - param set #5 has cost=-0.063057
 + -- Parameters = -12.6007 16.3120 2.3697 -12.6423 7.2587 9.4982 0.9989 1.0032 0.9988 0.0076 -0.0024 0.0111
 + - param set #6 has cost=-0.039833
 + -- Parameters = -5.5314 -33.1481 8.6109 33.9094 -34.8396 11.1308 1.0170 1.0009 0.9952 -0.0004 -0.0007 -0.0004
 + - param set #7 has cost=-0.036112
 + -- Parameters = 37.0750 -27.2924 8.0982 39.6790 -25.1699 -39.1989 1.0003 1.0001 1.0218 -0.0005 -0.0001 0.0011
 + - param set #8 has cost=-0.043593
 + -- Parameters = -23.3920 11.7007 1.2705 -17.3288 7.0230 21.3510 1.0012 0.9970 0.9904 0.0091 0.0038 0.0022
 + - param set #9 has cost=-0.043993
 + -- Parameters = -17.9607 -20.6004 -7.8985 -20.7029 -5.8726 9.8326 1.0167 1.0028 1.0016 0.0010 0.0010 0.0007
 + - param set #10 has cost=-0.036699
 + -- Parameters = 4.4143 3.5601 0.5276 6.7518 17.2410 -26.2992 1.0035 1.0206 1.0001 -0.0003 -0.0002 0.0028
 + - param set #11 has cost=-0.034429
 + -- Parameters = -23.5576 34.4575 -13.3593 7.7936 38.1979 38.8149 0.9987 1.0005 0.9982 0.0005 -0.0009 -0.0001
 + - param set #12 has cost=-0.531594
 + -- Parameters = 0.1675 -1.0839 -0.1182 -0.7274 -1.1410 0.2720 0.9979 1.0138 0.9995 -0.0072 -0.0009 -0.0008
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.027 
 + --- dist(#3,#1) = 0.154 
 + --- dist(#4,#1) = 0.35 
 + --- dist(#5,#1) = 0.215 
 + --- dist(#6,#1) = 0.351 
 + --- dist(#7,#1) = 0.246 
 + --- dist(#8,#1) = 0.295 
 + --- dist(#9,#1) = 0.403 
 + --- dist(#10,#1) = 0.297 
 + --- dist(#11,#1) = 0.461 
 + --- dist(#12,#1) = 0.442 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=77 usiz=188.5
 + - retaining old weight image
 + - using 26377 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23189 total points stored in 241 'RHDD(13.5933)' bloks
*[#10466=-0.550135] *[#10474=-0.553193] *[#10486=-0.556287] *[#10496=-0.557459] *[#10497=-0.559274] *[#10500=-0.559663] *[#10501=-0.559673] *[#10502=-0.559853] *[#10503=-0.559938] *[#10506=-0.559946] *[#10508=-0.560063] *[#10509=-0.560067] *[#10513=-0.560171] *[#10514=-0.560185] 
 + - param set #1 has cost=-0.560185
 + -- Parameters = 0.2943 -0.7360 0.0704 -0.6885 -1.3344 0.2088 1.0028 1.0378 1.0065 -0.0029 0.0037 -0.0004
 + - param set #2 has cost=-0.559032
 + -- Parameters = 0.2816 -0.8309 -0.0141 -0.6650 -1.2504 0.3576 1.0009 1.0335 1.0047 -0.0041 -0.0002 -0.0003
 + - param set #3 has cost=-0.251838
 + -- Parameters = -2.0702 -4.1895 -0.2204 -2.5338 -8.1994 1.3436 1.0217 1.0699 0.9752 -0.0118 -0.0377 -0.0618
 + - param set #4 has cost=-0.066547
 + -- Parameters = 3.8973 -28.8028 6.8050 -11.1911 -29.3504 -20.3547 1.0055 1.0514 0.9504 0.0057 0.0233 -0.0070
 + - param set #5 has cost=-0.260708
 + -- Parameters = -0.1833 2.1711 -0.9543 -1.0309 4.2737 3.2520 1.0253 1.0462 0.9516 0.0931 -0.0831 0.0751
 + - param set #6 has cost=-0.051823
 + -- Parameters = -18.9863 -28.8515 9.3186 -11.0624 -27.5531 12.2048 1.0155 1.0008 0.9990 -0.0004 0.0070 0.0010
 + - param set #7 has cost=-0.044751
 + -- Parameters = -18.2092 -19.1686 -6.7039 -19.8311 -5.7814 10.7796 1.0212 0.9992 1.0295 0.0148 -0.0010 -0.0049
 + - param set #8 has cost=-0.043414
 + -- Parameters = -22.6315 11.0504 1.9292 -17.0505 5.2136 20.4306 0.9685 0.9607 0.9657 0.0327 0.0124 -0.0336
 + - param set #9 has cost=-0.033878
 + -- Parameters = -4.8322 -32.8855 8.6049 33.8274 -34.5814 10.2672 1.0370 0.9777 0.9971 -0.0171 -0.0138 -0.0083
 + - param set #10 has cost=-0.031157
 + -- Parameters = 4.5497 3.2876 0.1254 6.8526 17.2923 -26.4663 1.0134 1.0198 0.9986 -0.0011 -0.0007 0.0034
 + - param set #11 has cost=-0.033500
 + -- Parameters = 38.0748 -26.2546 8.8490 37.2228 -25.8033 -39.9678 0.9671 0.9742 1.0691 0.0019 -0.0121 -0.0261
 + - param set #12 has cost=-0.028349
 + -- Parameters = -23.2982 34.3726 -13.3544 7.9028 37.9273 38.8838 0.9980 1.0016 0.9976 0.0068 -0.0010 -0.0002
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0175 XXX
 + --- dist(#3,#1) = 0.276 
 + --- dist(#4,#1) = 0.351 
 + --- dist(#5,#1) = 0.351 
 + --- dist(#6,#1) = 0.231 
 + --- dist(#7,#1) = 0.287 
 + --- dist(#8,#1) = 0.402 
 + --- dist(#9,#1) = 0.472 
 + --- dist(#10,#1) = 0.296 
 + --- dist(#11,#1) = 0.439 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=77 usiz=188.5
 + - retaining old weight image
 + - using 26377 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23356 total points stored in 249 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.534531
 + -- Parameters = 0.3461 -0.8477 0.0798 -0.5979 -1.3941 0.3042 1.0067 1.0354 1.0112 -0.0025 0.0017 -0.0049
 + - param set #2 has cost=-0.406944
 + -- Parameters = 0.6305 -1.2104 -0.6849 1.4921 -1.9184 2.6407 0.9938 1.0374 0.9826 0.0500 -0.0481 -0.0147
 + - param set #3 has cost=-0.462497
 + -- Parameters = 0.1922 -1.3992 -0.8309 -0.4657 -4.3923 1.0686 1.0198 1.0594 0.9782 -0.0098 -0.0313 -0.0555
 + - param set #4 has cost=-0.064079
 + -- Parameters = 2.8764 -29.5930 5.6868 -11.4344 -29.3424 -19.1237 1.0027 1.0552 0.9503 0.0074 0.0260 -0.0021
 + - param set #5 has cost=-0.047393
 + -- Parameters = -19.2587 -28.8515 9.2862 -11.1824 -27.6556 12.1781 1.0136 1.0017 0.9975 0.0004 0.0121 0.0019
 + - param set #6 has cost=-0.043436
 + -- Parameters = -18.0558 -19.2404 -6.4924 -19.1850 -6.1532 10.4522 1.0393 0.9914 1.0399 0.0163 -0.0068 -0.0098
 + - param set #7 has cost=-0.045321
 + -- Parameters = -21.2696 10.6249 1.7580 -17.0191 4.0238 18.0361 0.9638 0.9662 0.9707 0.0400 0.0014 -0.0316
 + - param set #8 has cost=-0.028465
 + -- Parameters = -4.7519 -32.9176 8.6533 33.8239 -34.6640 10.2351 1.0377 0.9779 0.9974 -0.0172 -0.0133 -0.0086
 + - param set #9 has cost=-0.027157
 + -- Parameters = 38.1634 -25.9469 9.2316 36.9284 -25.2339 -39.7743 0.9614 0.9676 1.0713 -0.0005 -0.0122 -0.0243
 + - param set #10 has cost=-0.026742
 + -- Parameters = 4.5296 2.7753 -0.3872 7.1018 17.8540 -26.5517 1.0137 1.0153 0.9947 -0.0009 0.0003 0.0036
 + - param set #11 has cost=-0.023383
 + -- Parameters = -23.6708 34.0502 -13.3128 8.1563 39.3369 38.4248 0.9975 0.9955 0.9978 0.0047 -0.0030 0.0002
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.228 
 + --- dist(#3,#1) = 0.236 
 + --- dist(#4,#1) = 0.359 
 + --- dist(#5,#1) = 0.35 
 + --- dist(#6,#1) = 0.27 
 + --- dist(#7,#1) = 0.23 
 + --- dist(#8,#1) = 0.401 
 + --- dist(#9,#1) = 0.473 
 + --- dist(#10,#1) = 0.298 
 + --- dist(#11,#1) = 0.453 
 + - Total coarse refinement net CPU time = 0.0 s; 3009 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=77 usiz=188.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 23308 total points stored in 249 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.520941 *
 + -- Parameters = 0.3461 -0.8477 0.0798 -0.5979 -1.3941 0.3042 1.0067 1.0354 1.0112 -0.0025 0.0017 -0.0049
 + - cost(#2)=-0.445838  
 + -- Parameters = 0.1922 -1.3992 -0.8309 -0.4657 -4.3923 1.0686 1.0198 1.0594 0.9782 -0.0098 -0.0313 -0.0555
 + - cost(#3)=-0.403192  
 + -- Parameters = 0.6305 -1.2104 -0.6849 1.4921 -1.9184 2.6407 0.9938 1.0374 0.9826 0.0500 -0.0481 -0.0147
 + - cost(#4)=-0.057584  
 + -- Parameters = 2.8764 -29.5930 5.6868 -11.4344 -29.3424 -19.1237 1.0027 1.0552 0.9503 0.0074 0.0260 -0.0021
 + - cost(#5)=-0.045332  
 + -- Parameters = -19.2587 -28.8515 9.2862 -11.1824 -27.6556 12.1781 1.0136 1.0017 0.9975 0.0004 0.0121 0.0019
 + - cost(#6)=-0.041557  
 + -- Parameters = -21.2696 10.6249 1.7580 -17.0191 4.0238 18.0361 0.9638 0.9662 0.9707 0.0400 0.0014 -0.0316
 + - cost(#7)=-0.040908  
 + -- Parameters = -18.0558 -19.2404 -6.4924 -19.1850 -6.1532 10.4522 1.0393 0.9914 1.0399 0.0163 -0.0068 -0.0098
 + - cost(#8)=-0.028647  
 + -- Parameters = -4.7519 -32.9176 8.6533 33.8239 -34.6640 10.2351 1.0377 0.9779 0.9974 -0.0172 -0.0133 -0.0086
 + - cost(#9)=-0.022516  
 + -- Parameters = 38.1634 -25.9469 9.2316 36.9284 -25.2339 -39.7743 0.9614 0.9676 1.0713 -0.0005 -0.0122 -0.0243
 + - cost(#10)=-0.024959  
 + -- Parameters = 4.5296 2.7753 -0.3872 7.1018 17.8540 -26.5517 1.0137 1.0153 0.9947 -0.0009 0.0003 0.0036
 + - cost(#11)=-0.023532  
 + -- Parameters = -23.6708 34.0502 -13.3128 8.1563 39.3369 38.4248 0.9975 0.9955 0.9978 0.0047 -0.0030 0.0002
 + - cost(#12)=-0.022567  
 + -- Parameters = -0.2702 0.0835 -6.3006 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.523297 *
 + -- Parameters = 0.3705 -0.9068 0.0108 -0.5406 -1.4166 0.3108 1.0062 1.0308 1.0110 -0.0001 0.0008 -0.0050
 + - cost(#2)=-0.494844  
 + -- Parameters = 0.1857 -1.3508 -0.4743 -0.6229 -3.9255 1.0795 1.0075 1.0340 0.9926 -0.0034 -0.0179 -0.0536
 + - cost(#3)=-0.489541  
 + -- Parameters = 0.4853 -0.4485 0.0623 0.0903 -2.1709 1.5188 1.0125 1.0500 1.0174 0.0204 -0.0291 -0.0205
 + - cost(#4)=-0.059610  
 + -- Parameters = 2.4871 -28.6979 4.9359 -11.2800 -28.5624 -19.3402 0.9948 1.0526 0.9475 0.0141 0.0244 0.0044
 + - cost(#5)=-0.046065  
 + -- Parameters = -18.7558 -28.7945 9.2766 -10.7598 -27.3832 12.1722 1.0122 1.0021 0.9912 0.0019 0.0118 0.0052
 + - cost(#6)=-0.050570  
 + -- Parameters = -20.0245 7.8787 0.6974 -15.8247 0.9806 15.7458 0.9782 0.9698 0.9795 0.0412 -0.0034 -0.0403
 + - cost(#7)=-0.042088  
 + -- Parameters = -17.9283 -19.4629 -6.2688 -18.9088 -6.1937 10.3262 1.0369 0.9873 1.0396 0.0174 0.0003 -0.0091
 + - cost(#8)=-0.029071  
 + -- Parameters = -4.7931 -32.8490 8.7566 33.8807 -34.5618 10.3140 1.0371 0.9777 1.0064 -0.0165 -0.0124 -0.0091
 + - cost(#9)=-0.023219  
 + -- Parameters = 38.1492 -25.9743 9.3919 36.8643 -25.0382 -39.6179 0.9620 0.9571 1.0763 -0.0032 -0.0135 -0.0230
 + - cost(#10)=-0.026138  
 + -- Parameters = 4.4696 2.6219 -0.8807 7.3426 18.0044 -26.7899 1.0132 1.0153 0.9892 -0.0004 -0.0001 0.0043
 + - cost(#11)=-0.023879  
 + -- Parameters = -23.7711 34.1253 -13.4067 8.2897 39.3923 38.3884 0.9972 0.9953 0.9978 0.0048 -0.0063 0.0001
 + - cost(#12)=-0.520953  
 + -- Parameters = 0.3589 -0.8080 -0.0168 -0.3760 -0.9489 0.6057 1.0073 1.0299 1.0066 0.0049 -0.0059 0.0053
 + - case #1 is now the best
 + - Initial  cost = -0.523297
 + - Initial fine Parameters = 0.3705 -0.9068 0.0108 -0.5406 -1.4166 0.3108 1.0062 1.0308 1.0110 -0.0001 0.0008 -0.0050
 + - Finalish cost = -0.523539 ; 151 funcs
 + - Final    cost = -0.523623 ; 327 funcs
 + Final fine fit Parameters:
       x-shift= 0.3636   y-shift=-0.9107   z-shift=-0.0091
       z-angle=-0.5044   x-angle=-1.4153   y-angle= 0.4270
       x-scale= 1.0066   y-scale= 1.0301   z-scale= 1.0094
     y/x-shear= 0.0012 z/x-shear=-0.0017 z/y-shear=-0.0050
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.3636 -0.9107 -0.0091 -0.5044 -1.4153 0.4270 1.0066 1.0301 1.0094 0.0012 -0.0017 -0.0050
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 21.7
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 15.000003 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0115 -0.9998 0.2366 241.3613 0.0031 0.2474 0.9814 63.0070 -1.0066 -0.0090 0.0075 200.2544
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 18.2 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3997.720100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 83.993 47.0454   ITER = 10/137
83.993

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 6s 82ms]
lev=0 0..171 0..213 0..166: [first cost=-0.68140] ... done [cost:-0.68140==>-0.75925]
lev=1 patch=129x161x125 [clock= 15m 16s 233ms]........:[cost=-0.78228]:........ done [cost:-0.75925==>-0.78539 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 23m 4s 252ms]......................... done [cost:-0.78539==>-0.85390 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 29m 39s 693ms].................. done [cost:-0.85390==>-0.91055 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 34m 32s 997ms].......... done [cost:-0.91055==>-0.97361 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 38m 24s 916ms]................ done [cost:-0.97361==>-1.04092 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 42m 8s 26ms]...................... done [cost:-1.04092==>-1.09366 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 45m 37s 662ms]............................. done [cost:-1.09366==>-1.16155 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 49m 19s 135ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8068/tb8068.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 8.5 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb8068.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.000003 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8068.r01.tshift+orig.BRIK is 15.000003 degrees from plumb.
++ Reading input dataset ./pb01.tb8068.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27952 voxels
 + 4498 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.000  pitch=-0.303  yaw=-0.014  dS=-0.110  dL=-0.076  dP=-0.107
++ Mean: roll=+0.209  pitch=-0.109  yaw=+0.085  dS=+0.241  dL=+0.412  dP=-0.002
++ Max : roll=+0.462  pitch=+0.016  yaw=+0.244  dS=+0.386  dL=+0.734  dP=+0.138
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.22(0.22) 0.31(0.18) 0.25(0.12) 0.16(0.18) 0.20(0.06) 0.23(0.08) 0.24(0.08) 0.42(0.30) 0.59(0.31) 0.28(0.37) 0.18(0.20) 0.22(0.06) 0.22(0.05) 0.22(0.04) 0.24(0.06) 0.27(0.04) 0.27(0.06) 0.30(0.09) 0.37(0.16) 0.43(0.07) 0.44(0.06) 0.46(0.05) 0.45(0.06) 0.47(0.05) 0.54(0.08) 0.50(0.04) 0.49(0.02) 0.48(0.02) 0.42(0.11) 0.46(0.07) 0.48(0.04) 0.49(0.02) 0.49(0.03) 0.51(0.04) 0.52(0.05) 0.56(0.09) 0.59(0.14) 0.56(0.08) 0.58(0.08) 0.62(0.07) 0.62(0.03) 0.60(0.06) 0.58(0.04) 0.56(0.04) 0.56(0.04) 0.54(0.04) 0.51(0.03) 0.51(0.04) 0.52(0.02) 0.56(0.05) 0.56(0.05) 0.56(0.04) 0.59(0.07) 0.56(0.05) 0.55(0.02) 0.55(0.02) 0.57(0.06) 0.57(0.05) 0.58(0.03) 0.54(0.06) 0.56(0.06) 0.60(0.05) 0.61(0.05) 0.61(0.03) 0.62(0.04) 0.65(0.05) 0.65(0.03) 0.63(0.06) 0.69(0.09) 0.72(0.08) 0.69(0.03) 0.71(0.05) 0.74(0.03) 0.76(0.03) 0.74(0.03) 0.78(0.16) 0.87(0.12) 0.84(0.08) 0.87(0.04) 0.91(0.06) 0.96(0.06) 1.03(0.09) 1.01(0.05) 1.04(0.08) 1.04(0.06) 1.03(0.03) 1.04(0.04) 1.08(0.04) 1.08(0.03) 1.07(0.11) 1.10(0.08) 1.10(0.03) 1.08(0.04) 1.07(0.04) 1.08(0.06) 1.06(0.04) 1.06(0.06) 1.09(0.04) 1.10(0.01) 1.13(0.05) 1.14(0.12) 1.18(0.17) 1.22(0.06) 1.24(0.17) 1.29(0.10) 1.28(0.06) 1.26(0.04) 1.29(0.05) 1.30(0.09) 1.33(0.04) 1.35(0.06) 1.37(0.06) 1.37(0.06) 1.33(0.08) 1.33(0.04) 1.38(0.09) 1.42(0.08) 1.44(0.05) 1.40(0.07) 1.39(0.04) 1.42(0.06) 1.43(0.04) 1.47(0.07) 1.47(0.07) 1.46(0.06) 1.50(0.05) 1.50(0.06) 1.44(0.07) 1.47(0.08) 1.48(0.04) 1.41(0.09) 1.37(0.07) 1.35(0.04) 1.32(0.04) 1.34(0.05) 1.35(0.04) 1.37(0.09) 1.37(0.03) 1.38(0.07) 1.40(0.04) 1.40(0.07) 1.41(0.04) 1.43(0.05) 1.46(0.06) 1.47(0.06) 1.45(0.04) 1.52(0.18) 1.57(0.09) 1.50(0.10)
++ Max displacement in automask = 1.57 (mm) at sub-brick 148
++ Max delta displ  in automask = 0.37 (mm) at sub-brick 10
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb8068.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8068.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8068.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8068.r01.tshift+orig.BRIK is 15.000003 degrees from plumb.
++ Source dataset: ./pb01.tb8068.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.000003 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb8068.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.000003 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8068.r02.tshift+orig.BRIK is 15.000003 degrees from plumb.
++ Reading input dataset ./pb01.tb8068.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28000 voxels
 + 4522 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.542  pitch=-0.766  yaw=-0.045  dS=+0.413  dL=+1.019  dP=-0.786
++ Mean: roll=+0.700  pitch=-0.348  yaw=+0.035  dS=+0.827  dL=+1.243  dP=-0.690
++ Max : roll=+0.846  pitch=+0.130  yaw=+0.116  dS=+1.083  dL=+1.369  dP=-0.610
++ Max displacements (mm) for each sub-brick:
 3.39(0.00) 3.06(0.35) 3.14(0.09) 3.24(0.12) 2.98(0.31) 3.13(0.18) 3.15(0.09) 3.17(0.09) 3.27(0.10) 3.28(0.05) 3.20(0.11) 3.17(0.05) 3.16(0.07) 3.15(0.09) 3.16(0.08) 3.17(0.09) 3.19(0.05) 3.20(0.03) 3.22(0.04) 3.23(0.03) 3.27(0.07) 3.32(0.09) 3.31(0.04) 3.30(0.02) 3.31(0.03) 3.39(0.14) 3.41(0.06) 3.35(0.06) 3.36(0.03) 3.38(0.04) 3.31(0.08) 3.25(0.07) 3.27(0.05) 3.32(0.07) 3.38(0.07) 3.39(0.04) 3.42(0.05) 3.44(0.05) 3.46(0.02) 3.47(0.03) 3.47(0.02) 3.46(0.05) 3.44(0.05) 3.44(0.03) 3.40(0.05) 3.38(0.05) 3.38(0.04) 3.39(0.03) 3.37(0.04) 3.37(0.03) 3.38(0.03) 3.31(0.09) 3.30(0.04) 3.29(0.06) 3.29(0.04) 3.28(0.06) 3.27(0.04) 3.32(0.06) 3.16(0.19) 3.19(0.14) 3.23(0.07) 3.21(0.07) 3.23(0.07) 3.17(0.07) 3.17(0.03) 3.24(0.09) 3.18(0.07) 3.14(0.05) 3.12(0.02) 3.18(0.06) 3.19(0.05) 3.20(0.02) 3.20(0.04) 3.14(0.07) 3.12(0.05) 3.18(0.07) 3.17(0.04) 3.15(0.04) 3.13(0.06) 3.04(0.09) 3.02(0.03) 3.00(0.06) 2.98(0.05) 3.00(0.04) 2.95(0.06) 2.98(0.06) 3.03(0.08) 3.05(0.05) 3.06(0.02) 3.02(0.05) 2.94(0.13) 2.89(0.13) 2.92(0.08) 2.89(0.04) 2.80(0.09) 2.73(0.10) 2.69(0.15) 2.58(0.13) 2.60(0.06) 2.61(0.07) 2.64(0.07) 2.54(0.20) 2.53(0.06) 2.40(0.16) 2.38(0.04) 2.46(0.09) 2.44(0.07) 2.44(0.03) 2.45(0.07) 2.41(0.08) 2.41(0.04) 2.47(0.07) 2.46(0.04) 2.46(0.04) 2.43(0.04) 2.39(0.06) 2.43(0.06) 2.39(0.06) 2.39(0.05) 2.43(0.06) 2.45(0.04) 2.44(0.04) 2.46(0.03) 2.40(0.08) 2.33(0.07) 2.36(0.06) 2.37(0.06) 2.25(0.12) 2.31(0.08) 2.26(0.08) 2.16(0.12) 2.19(0.05) 2.15(0.06) 2.17(0.05) 2.19(0.05) 2.16(0.06) 2.15(0.05) 2.21(0.09) 2.19(0.05) 2.20(0.04) 2.22(0.06) 2.22(0.05) 2.30(0.19) 2.37(0.09) 2.35(0.05) 2.36(0.05) 2.38(0.03) 2.36(0.09) 2.38(0.09) 2.36(0.09)
++ Max displacement in automask = 3.47 (mm) at sub-brick 39
++ Max delta displ  in automask = 0.35 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb8068.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8068.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8068.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8068.r02.tshift+orig.BRIK is 15.000003 degrees from plumb.
++ Source dataset: ./pb01.tb8068.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.6
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.000003 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb8068.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.000003 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8068.r03.tshift+orig.BRIK is 15.000003 degrees from plumb.
++ Reading input dataset ./pb01.tb8068.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28072 voxels
 + 4522 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.609  pitch=-0.117  yaw=+0.114  dS=+0.237  dL=+1.170  dP=-0.382
++ Mean: roll=+0.748  pitch=+0.240  yaw=+0.203  dS=+0.461  dL=+1.364  dP=-0.283
++ Max : roll=+0.934  pitch=+0.513  yaw=+0.305  dS=+0.627  dL=+1.449  dP=-0.219
++ Max displacements (mm) for each sub-brick:
 2.56(0.00) 2.43(0.15) 2.76(0.34) 2.70(0.20) 2.77(0.09) 2.86(0.12) 2.79(0.18) 2.78(0.06) 2.86(0.08) 2.80(0.07) 2.82(0.06) 2.86(0.08) 2.80(0.08) 2.70(0.10) 2.63(0.11) 2.64(0.07) 2.64(0.05) 2.70(0.10) 2.68(0.08) 2.63(0.07) 2.67(0.09) 2.68(0.06) 2.66(0.05) 2.63(0.05) 2.58(0.07) 2.56(0.04) 2.52(0.06) 2.47(0.05) 2.48(0.05) 2.52(0.05) 2.52(0.03) 2.52(0.04) 2.59(0.09) 2.57(0.06) 2.53(0.05) 2.57(0.08) 2.58(0.06) 2.53(0.07) 2.59(0.14) 2.58(0.05) 2.63(0.08) 2.66(0.06) 2.64(0.03) 2.67(0.04) 2.68(0.07) 2.65(0.12) 2.63(0.10) 2.64(0.07) 2.61(0.05) 2.62(0.02) 2.58(0.06) 2.62(0.06) 2.59(0.05) 2.59(0.03) 2.57(0.05) 2.55(0.07) 2.52(0.04) 2.51(0.05) 2.45(0.08) 2.46(0.03) 2.46(0.03) 2.44(0.06) 2.48(0.06) 2.50(0.06) 2.47(0.03) 2.47(0.08) 2.47(0.04) 2.40(0.08) 2.46(0.24) 2.45(0.22) 2.39(0.07) 2.41(0.11) 2.32(0.10) 2.24(0.09) 2.28(0.18) 2.38(0.15) 2.39(0.06) 2.45(0.07) 2.48(0.06) 2.46(0.06) 2.46(0.05) 2.48(0.05) 2.47(0.07) 2.44(0.08) 2.42(0.07) 2.37(0.06) 2.31(0.08) 2.32(0.06) 2.28(0.07) 2.27(0.05) 2.34(0.08) 2.33(0.04) 2.27(0.08) 2.27(0.08) 2.35(0.09) 2.39(0.05) 2.37(0.03) 2.34(0.06) 2.36(0.10) 2.47(0.12) 2.48(0.06) 2.56(0.11) 2.58(0.03) 2.49(0.10) 2.49(0.07) 2.61(0.15) 2.64(0.09) 2.58(0.09) 2.67(0.10) 2.65(0.12) 2.57(0.11) 2.59(0.05) 2.65(0.07) 2.67(0.08) 2.68(0.04) 2.53(0.15) 2.51(0.09) 2.51(0.08) 2.48(0.05) 2.55(0.08) 2.59(0.06) 2.68(0.12) 2.66(0.05) 2.62(0.07) 2.63(0.07) 2.66(0.05) 2.64(0.04) 2.61(0.05) 2.59(0.06) 2.63(0.06) 2.62(0.08) 2.56(0.07) 2.61(0.10) 2.61(0.07) 2.62(0.06) 2.60(0.03) 2.62(0.07) 2.65(0.06) 2.68(0.04) 2.67(0.09) 2.62(0.14) 2.60(0.10) 2.54(0.10) 2.66(0.17) 2.71(0.10) 2.72(0.07) 2.65(0.13) 2.76(0.15) 2.79(0.08) 2.85(0.09)
++ Max displacement in automask = 2.86 (mm) at sub-brick 11
++ Max delta displ  in automask = 0.34 (mm) at sub-brick 2
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb8068.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8068.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8068.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8068.r03.tshift+orig.BRIK is 15.000003 degrees from plumb.
++ Source dataset: ./pb01.tb8068.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.000003 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8068.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8068.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8068.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8068.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8068.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8068.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.000003 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb8068
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb8068+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb8068+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1313540 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=4
++ Computing -autobox
++ 285953 voxels [64.1%] in weight mask
++ Number of points for matching = 134397
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.132498
   sp   = 0.334304
   mi   = -0.523548
   crM  = 0.0345964
   nmi  = 0.833941
   je   = 2.62923
   hel  = -0.105102
   crA  = 0.186218
   crU  = 0.195206
   lss  = 0.867502
   lpc  = 0.0948
   lpa  = 0.9052
   lpc+ = 0.22781
   ncd  = 0.986316
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.7
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb8068+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb8068+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 36.8 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8068.r01.blur pb02.tb8068.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8068.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb8068.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8068.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8068.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8068.r02.blur pb02.tb8068.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8068.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb8068.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8068.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8068.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8068.r03.blur pb02.tb8068.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8068.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb8068.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8068.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8068.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb8068.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8068.r01.blur+orig
++ Forming automask
 + Fixed clip level = 381.114746
 + Used gradual clip level = 305.656555 .. 428.740448
 + Number voxels above clip level = 49569
 + Clustering voxels ...
 + Largest cluster has 49266 voxels
 + Clustering voxels ...
 + Largest cluster has 49235 voxels
 + Filled    24 voxels in small holes; now have 49259 voxels
 + Clustering voxels ...
 + Largest cluster has 49259 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 377016 voxels
 + Mask now has 49259 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 369229 voxels
++ 57046 voxels in the mask [out of 426275: 13.38%]
++ first  21 x-planes are zero [from A]
++ last    4 x-planes are zero [from P]
++ first  25 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb8068.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8068.r02.blur+orig
++ Forming automask
 + Fixed clip level = 381.937775
 + Used gradual clip level = 306.497375 .. 430.474335
 + Number voxels above clip level = 49729
 + Clustering voxels ...
 + Largest cluster has 49405 voxels
 + Clustering voxels ...
 + Largest cluster has 49378 voxels
 + Filled    33 voxels in small holes; now have 49411 voxels
 + Clustering voxels ...
 + Largest cluster has 49411 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376864 voxels
 + Mask now has 49411 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 369093 voxels
++ 57182 voxels in the mask [out of 426275: 13.41%]
++ first  21 x-planes are zero [from A]
++ last    4 x-planes are zero [from P]
++ first  25 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb8068.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8068.r03.blur+orig
++ Forming automask
 + Fixed clip level = 381.597473
 + Used gradual clip level = 307.140869 .. 430.461243
 + Number voxels above clip level = 49777
 + Clustering voxels ...
 + Largest cluster has 49467 voxels
 + Clustering voxels ...
 + Largest cluster has 49436 voxels
 + Filled    30 voxels in small holes; now have 49466 voxels
 + Clustering voxels ...
 + Largest cluster has 49466 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376809 voxels
 + Mask now has 49466 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 369015 voxels
++ 57260 voxels in the mask [out of 426275: 13.43%]
++ first  21 x-planes are zero [from A]
++ last    4 x-planes are zero [from P]
++ first  25 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb8068
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 57390 survived, 368885 were zero
++ writing result full_mask.tb8068...
3dresample -master full_mask.tb8068+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb8068
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 51625 survived, 374650 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb8068...
3dABoverlap -no_automask full_mask.tb8068+orig mask_anat.tb8068+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb8068+orig.BRIK  B=./mask_anat.tb8068+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
57390        51625        59664        49351        8039         2274         14.0077      4.4048     0.9043     0.9351     0.9207
3ddot -dodice full_mask.tb8068+orig mask_anat.tb8068+orig
tee out.mask_ae_dice.txt
0.905398	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb8068
total number of censored TRs (simple form) = 0
1deval -a motion_tb8068_censor.1D -b outcount_tb8068_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb8068_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb8068.r01.blur+orig.HEAD pb03.tb8068.r02.blur+orig.HEAD pb03.tb8068.r03.blur+orig.HEAD -censor censor_tb8068_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb8068 -errts errts.tb8068 -bucket stats.tb8068
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb8068.r01.blur+orig.HEAD pb03.tb8068.r02.blur+orig.HEAD pb03.tb8068.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 49399 voxels (out of 426275 = 11.6%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (no censoring)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb8068.r01.blur+orig.HEAD pb03.tb8068.r02.blur+orig.HEAD pb03.tb8068.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb8068_REML -Rvar stats.tb8068_REMLvar \
 -Rfitts fitts.tb8068_REML -Rerrts errts.tb8068_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (450x24):  5.18386  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (450x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (450x18):  4.65981  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (450x6):  3.57525  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (450x12):  1.01522  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.75501e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.22 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=33.829
++ Job #2: processing voxels 85254 to 127880; elapsed time=33.848
++ Job #3: processing voxels 127881 to 170507; elapsed time=33.868
++ Job #4: processing voxels 170508 to 213134; elapsed time=33.890
++ Job #5: processing voxels 213135 to 255761; elapsed time=33.912
++ Job #6: processing voxels 255762 to 298388; elapsed time=33.934
++ Job #7: processing voxels 298389 to 341015; elapsed time=33.975
++ Job #8: processing voxels 341016 to 383642; elapsed time=33.995
++ Job #0: processing voxels 0 to 42626; elapsed time=34.021
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=34.025
0123456789.0123456789.0123456789.0123456789.0++ Job #1 finished; elapsed time=62.483
12++ Job #7 finished; elapsed time=63.373
++ Job #4 finished; elapsed time=63.617
3456++ Job #5 finished; elapsed time=65.516
++ Job #8 finished; elapsed time=65.582
789.
++ Job #0 waiting for children to finish; elapsed time=66.080
++ Job #9 finished; elapsed time=66.349
++ Job #6 finished; elapsed time=66.539
++ Job #2 finished; elapsed time=66.781
++ Job #3 finished; elapsed time=68.163
++ Job #0 now finishing up; elapsed time=68.175
++ Smallest FDR q [0 Full_Fstat] = 2.58919e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 1.33062e-10
++ Smallest FDR q [3 uns1_Fstat] = 1.33095e-10
++ Smallest FDR q [5 uns2#0_Tstat] = 4.28481e-07
++ Smallest FDR q [6 uns2_Fstat] = 4.28514e-07
++ Smallest FDR q [8 uns3#0_Tstat] = 1.20229e-11
++ Smallest FDR q [9 uns3_Fstat] = 1.20212e-11
++ Smallest FDR q [11 str1#0_Tstat] = 5.27899e-12
++ Smallest FDR q [12 str1_Fstat] = 5.27951e-12
++ Smallest FDR q [14 str2#0_Tstat] = 2.80962e-06
++ Smallest FDR q [15 str2_Fstat] = 2.80965e-06
++ Smallest FDR q [17 str3#0_Tstat] = 1.921e-12
++ Smallest FDR q [18 str3_Fstat] = 1.92114e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 4.52807e-13
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 4.52841e-13
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 7.25451e-13
++ Smallest FDR q [24 structured_GLT_Fstat] = 7.25449e-13
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 1.21504e-05
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 1.21519e-05
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 4.73526e-06
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 4.73526e-06
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 9.24119e-07
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 9.24117e-07
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 3.20192e-05
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 3.20178e-05
++ Wrote bucket dataset into ./stats.tb8068+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb8068+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb8068+orig.BRIK
++ Program finished; elapsed time=88.813
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.726       0.791  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.726       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.726       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.475       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.475       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb8068.r01.blur+orig.HEAD pb03.tb8068.r02.blur+orig.HEAD pb03.tb8068.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb8068_REML -Rvar stats.tb8068_REMLvar -Rfitts fitts.tb8068_REML -Rerrts errts.tb8068_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 49399 voxels (out of 426275 = 11.6%)
++ -----  matrix condition (450x24):  5.18386  ++ VERY GOOD ++
 + masked off 242440 voxels for being all zero; 183835 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 332 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=44.84
 + X matrix: 46.639% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=450 cols=24; 109*1 cases; total CPU=0.00 Elapsed=44.87
 +  average case bandwidth = 12.53
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=115.21
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=160.50
++ Output dataset ./stats.tb8068_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb8068_REML+orig.BRIK
++ Output dataset ./errts.tb8068_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb8068_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 3.2649e-07
++ Smallest FDR q [2 uns1#0_Tstat] = 0.000181679
++ Smallest FDR q [3 uns1_Fstat] = 0.000181679
++ Smallest FDR q [5 uns2#0_Tstat] = 0.0121612
++ Smallest FDR q [6 uns2_Fstat] = 0.0121612
++ Smallest FDR q [8 uns3#0_Tstat] = 0.00223153
++ Smallest FDR q [9 uns3_Fstat] = 0.00223153
++ Smallest FDR q [11 str1#0_Tstat] = 7.23804e-05
++ Smallest FDR q [12 str1_Fstat] = 7.23804e-05
++ Smallest FDR q [14 str2#0_Tstat] = 0.0650461
++ Smallest FDR q [15 str2_Fstat] = 0.0650461
++ Smallest FDR q [17 str3#0_Tstat] = 0.000105944
++ Smallest FDR q [18 str3_Fstat] = 0.000105944
++ Smallest FDR q [20 unstructured#0_Tstat] = 8.24556e-09
++ Smallest FDR q [21 unstructured_Fstat] = 8.24556e-09
++ Smallest FDR q [23 structured#0_Tstat] = 3.00011e-07
++ Smallest FDR q [24 structured_Fstat] = 3.00011e-07
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.64797 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.64797 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.3499 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.3499 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999875 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999875 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.999892 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.999892 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb8068_REML+orig
++ Output dataset ./stats.tb8068_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=187.20
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb8068 pb03.tb8068.r01.blur+orig.HEAD pb03.tb8068.r02.blur+orig.HEAD pb03.tb8068.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 27.8 s
3dTstat -mean -prefix rm.signal.all all_runs.tb8068+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb8068_REML+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb8068+orig -expr c*a/b -prefix TSNR.tb8068
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands

*** failure while reading from brick file ./rm.signal.all+orig.BRIK
*** desired 1705100 bytes but only got 0
*** Unix error message: Success
   THD_load_datablock
  3dcalc main
** Command line was:
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb8068+orig -expr 'c*a/b' -prefix TSNR.tb8068
[7m** FATAL ERROR:[0m Can't load dataset './rm.signal.all+orig.BRIK': is it complete?
** Program compile date = Jul 20 2017
