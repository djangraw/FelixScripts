echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb7693
endif
set output_dir = tb7693.srtt
if ( -d tb7693.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb7693.srtt
mkdir tb7693.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb7693.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb7693.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb7693.srtt/pb00.tb7693.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.7 s
3dTcat -prefix tb7693.srtt/pb00.tb7693.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.9 s
3dTcat -prefix tb7693.srtt/pb00.tb7693.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.2 s
set tr_counts = ( 150 150 150 )
cd tb7693.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7693.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7693.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7693.r01.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ 27133 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7693.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7693.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7693.r02.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ 27256 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7693.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7693.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7693.r03.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ 27253 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb7693.r01.tshift -tpattern alt+z2 pb00.tb7693.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7693.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7693.r01.tcat+orig.BRIK is 12.500000 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb7693.r02.tshift -tpattern alt+z2 pb00.tb7693.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7693.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7693.r02.tcat+orig.BRIK is 12.500000 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb7693.r03.tshift -tpattern alt+z2 pb00.tb7693.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7693.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7693.r03.tcat+orig.BRIK is 12.500000 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb7693.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.500000 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 398.036011
 + Used gradual clip level = 356.071106 .. 450.587402
 + Number voxels above clip level = 27935
 + Clustering voxels ...
 + Largest cluster has 27436 voxels
 + Clustering voxels ...
 + Largest cluster has 26765 voxels
 + Filled   331 voxels in small holes; now have 27096 voxels
 + Clustering voxels ...
 + Largest cluster has 27096 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 103975 voxels
 + Mask now has 27097 voxels
++ 27097 voxels in the mask [out of 131072: 20.67%]
++ first  15 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 990.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/990.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 12.500000 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1464700 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 27097 voxels [17.0%] in weight mask
++ Number of points for matching = 27097
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.634 27.392 20.476 (index)
 + source center of mass = 87.152 169.937 184.743 (index)
 + source-target CM = -0.900 0.025 -5.817 (xyz)
 + center of mass shifts = -0.900 0.025 -5.817
++ shift param auto-range: -70.4..68.6 -69.5..69.5 -54.6..43.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.899788 .. 9.100212
 + Range param#2 [y-shift] = -9.975471 .. 10.024529
 + Range param#3 [z-shift] = -15.817047 .. 4.182953
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.899788 .. 39.100212
 + Range param#2 [y-shift] = -39.975471 .. 40.024529
 + Range param#3 [z-shift] = -45.817047 .. 34.182953
 + 12 free parameters
++ Normalized convergence radius = 0.000472
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1464700 [out of 16479936] voxels
 + base mask has 37395 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=67 usiz=191.5
 + - copying weight image
 + - using 27097 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 23362 total points stored in 220 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.00965756] **[#2=-0.0116892] *+-.+-*[#10=-0.031285] *-.--o+-.--o.--.-*[#1180=-0.0366118] *.+o-++$*[#4636=-0.0368467] **[#7900=-0.040731] *
 + - best 45 costs found:
    0 v=-0.040731: -14.93 -15.70   8.85 -24.25 -37.55   4.41  [rand]
    1 v=-0.036847: -10.72 -24.73   5.57  -3.10 -34.36   2.55  [rand]
    2 v=-0.036612: -14.23 -26.64   7.52 -15.00 -30.00  15.00  [grid]
    3 v=-0.034041: -27.57 -13.31   7.52 -30.00 -15.00  30.00  [grid]
    4 v=-0.033722: -27.57 -26.64   7.52 -15.00 -30.00  30.00  [grid]
    5 v=-0.032510: -27.57 -26.64  20.85 -30.00 -15.00  30.00  [grid]
    6 v=-0.031285: -14.23  13.36   7.52 -15.00  15.00  15.00  [grid]
    7 v=-0.031082:  12.43 -26.64  20.85 -15.00 -30.00 -30.00  [grid]
    8 v=-0.030856: -33.38  14.72   5.99  11.16   9.40  34.39  [rand]
    9 v=-0.030822: -27.57 -13.31  20.85 -30.00 -15.00  30.00  [grid]
   10 v=-0.030658: -27.57 -13.31   7.52 -15.00 -15.00  30.00  [grid]
   11 v=-0.030497: -14.23 -26.64   7.52 -15.00 -15.00  15.00  [grid]
   12 v=-0.029331:  25.41 -25.93  11.98  15.82 -17.65 -37.25  [rand]
   13 v=-0.029289:  -9.54  20.46  11.65 -25.20  18.50  13.54  [rand]
   14 v=-0.029092: -14.23 -13.31   7.52 -15.00 -15.00  15.00  [grid]
   15 v=-0.028119: -27.57 -13.31  20.85 -15.00 -15.00  30.00  [grid]
   16 v=-0.027703: -14.93 -15.70   8.85 -24.25 -37.55  -4.41  [rand]
   17 v=-0.027415: -16.88  19.52  -0.09 -20.53   3.14  10.08  [rand]
   18 v=-0.026913: -14.23  26.69  20.85 -15.00  30.00  15.00  [grid]
   19 v=-0.026896: -27.57 -26.64   7.52 -30.00 -15.00  30.00  [grid]
   20 v=-0.026759: -35.77 -30.53   9.95 -11.68 -29.04  39.38  [rand]
   21 v=-0.026582: -10.72 -24.73   5.57   3.10 -34.36   2.55  [rand]
   22 v=-0.026398:  23.45 -29.67   7.21  28.68 -38.91 -32.36  [rand]
   23 v=-0.026365: -23.75 -23.55   4.60  -5.91 -29.74  29.45  [rand]
   24 v=-0.026285:  25.77 -26.64   7.52  30.00 -15.00 -30.00  [grid]
   25 v=-0.025999:  24.07  29.08  29.63  17.69 -14.58 -34.92  [rand]
   26 v=-0.025803: -14.23 -13.31   7.52 -15.00 -30.00  15.00  [grid]
   27 v=-0.025707: -27.57 -26.64  20.85 -15.00 -15.00  30.00  [grid]
   28 v=-0.025477: -14.23  26.69  20.85 -30.00  30.00  15.00  [grid]
   29 v=-0.025268: -17.04  -9.44  18.53 -20.99 -15.73  16.09  [rand]
   30 v=-0.025133:  25.77 -26.64   7.52  30.00 -30.00 -30.00  [grid]
   31 v=-0.025121: -35.23  16.61   2.79  16.34   8.64  40.54  [rand]
   32 v=-0.024876:  12.43 -13.31  20.85  30.00 -30.00 -30.00  [grid]
   33 v=-0.024869:  25.77 -13.31   7.52  30.00 -15.00 -30.00  [grid]
   34 v=-0.024810: -15.10   9.48  -0.98 -15.99  13.53  29.93  [rand]
   35 v=-0.024460:  25.77  13.36 -19.15  30.00 -15.00 -30.00  [grid]
   36 v=-0.024332: -14.23 -26.64  20.85 -15.00 -30.00  15.00  [grid]
   37 v=-0.024256: -14.23 -13.31  20.85 -15.00 -15.00  15.00  [grid]
   38 v=-0.024204:  12.43  26.69  20.85  30.00  30.00 -15.00  [grid]
   39 v=-0.024109: -27.57 -26.64   7.52 -15.00 -15.00  30.00  [grid]
   40 v=-0.023649:  31.58  14.72   5.99 -11.16   9.40 -34.39  [rand]
   41 v=-0.023609: -16.88  19.52  -0.09 -20.53  -3.14  10.08  [rand]
   42 v=-0.023184:  12.43  26.69   7.52 -30.00  15.00 -30.00  [grid]
   43 v=-0.023134: -10.72 -24.73   5.57  -3.10 -34.36  -2.55  [rand]
   44 v=-0.022866: -35.75 -35.65   8.43 -40.22 -24.26  41.52  [rand]
*[#8005=-0.0409644] *[#8011=-0.0455608] *[#8012=-0.050544] *[#8015=-0.0535946] *[#8020=-0.0539268] *[#8021=-0.0542535] *[#8022=-0.0553796] *[#8023=-0.0559428] *[#8025=-0.0565099] *[#8027=-0.057397] *[#8030=-0.0574785] *[#8032=-0.0575709] *[#8034=-0.0576788] *[#8037=-0.0579322] *[#8038=-0.0582196] *[#8039=-0.0582916] *[#8041=-0.0582959] *[#8045=-0.0585469] *[#8048=-0.0586981] *[#8088=-0.0592641] *[#8089=-0.0613268] *[#8090=-0.0644831] *[#8094=-0.0654313] *[#8095=-0.067588] *[#8098=-0.0694402] *[#8099=-0.0710199] *[#8100=-0.071377] *[#8101=-0.0727299] *[#8103=-0.0729119] *[#8110=-0.0730287] *[#8465=-0.0829864] *[#8471=-0.0836071] *[#8472=-0.0850557] *[#8475=-0.0867993] *[#8476=-0.0869482] *[#8477=-0.0871577] *[#8479=-0.0880763] *[#8484=-0.089157] *[#8485=-0.0907907] *[#8486=-0.0911402] *[#8488=-0.0911534] *[#8489=-0.0929581] *[#8490=-0.0953524] *[#8492=-0.0958456] *[#8495=-0.0978615] *[#8496=-0.0999338] *[#8497=-0.10098] *[#8501=-0.102479] *[#8504=-0.1029] *[#8507=-0.102977] *[#8509=-0.103528]  + - costs of the above after a little optimization:
    0 v=-0.058698: -12.63 -17.79  11.12 -14.57 -31.71   7.18  [rand]
    1 v=-0.039533: -11.28 -25.30   5.22  -2.95 -34.25   7.13  [rand]
    2 v=-0.073029: -15.41 -30.08  11.86  -9.18 -33.82  14.75  [grid]
    3 v=-0.043596: -27.45 -14.00   7.95 -30.13  -8.48  25.68  [grid]
    4 v=-0.040807: -27.12 -26.54   8.82  -8.86 -28.63  30.34  [grid]
    5 v=-0.042566: -27.56 -18.31  22.83 -26.22 -12.30  30.61  [grid]
    6 v=-0.046446: -11.61  13.41   6.30 -14.86  10.07  15.60  [grid]
    7 v=-0.036163:  12.13 -26.44  23.78 -15.03 -29.99 -31.08  [grid]
    8 v=-0.035787: -34.58  13.78   6.44  11.02   9.24  38.06  [rand]
    9 v=-0.038953: -26.85 -12.79  23.20 -28.64  -8.08  30.94  [grid]
   10 v=-0.032845: -27.07 -12.78   7.14 -15.00 -14.99  30.07  [grid]
   11 v=-0.043154: -12.38 -26.22   5.55 -10.23 -14.40  14.67  [grid]
   12 v=-0.043644:  25.95 -25.23  11.52  23.53 -17.78 -37.55  [rand]
   13 v=-0.032448:  -8.48  20.92  17.37 -24.42  18.83  13.90  [rand]
  *14 v=-0.103528:  -8.90 -13.22   7.43  -9.89 -14.44   3.99  [grid]
   15 v=-0.034335: -25.69 -17.71  21.95 -15.77 -14.68  29.63  [grid]
   16 v=-0.058908: -13.44 -19.22  11.16 -19.95 -33.76   4.66  [rand]
   17 v=-0.078572: -17.62   7.09   2.26 -18.38   1.91  14.00  [rand]
   18 v=-0.029756: -14.02  27.28  20.63 -10.17  29.61  15.89  [grid]
   19 v=-0.045476: -31.66 -23.79   9.58 -31.08 -17.12  29.37  [grid]
   20 v=-0.040778: -30.58 -31.46   9.98 -11.37 -28.77  38.30  [rand]
   21 v=-0.049656:  -8.52 -26.34   3.74   1.37 -42.53   2.79  [rand]
   22 v=-0.031329:  23.76 -29.46   7.09  28.39 -34.74 -33.20  [rand]
   23 v=-0.060085: -23.25 -24.38  11.98  -5.21 -29.03  28.66  [rand]
   24 v=-0.038948:  28.93 -26.40   5.73  30.91 -12.96 -35.17  [grid]
   25 v=-0.032312:  24.05  25.88  28.61  17.21 -14.85 -39.11  [rand]
   26 v=-0.069036: -16.17 -16.57  12.60 -13.23 -26.66  11.54  [grid]
   27 v=-0.055923: -29.85 -28.93  18.20 -23.00 -22.98  35.99  [grid]
   28 v=-0.028546:  -9.88  26.66  20.82 -29.54  30.10  14.52  [grid]
   29 v=-0.046527: -18.59 -14.49  18.33 -11.54 -15.14  20.44  [rand]
   30 v=-0.037545:  25.61 -25.51   8.58  26.46 -22.73 -35.63  [grid]
   31 v=-0.034767: -36.37  17.02   4.88  12.49   7.97  40.40  [rand]
   32 v=-0.026693:  12.40 -12.87  20.54  30.61 -30.01 -30.19  [grid]
   33 v=-0.038004:  28.12 -18.01   9.41  36.67 -17.34 -30.85  [grid]
   34 v=-0.028704: -14.83   9.83  -1.71 -15.50  13.37  30.03  [rand]
   35 v=-0.033215:  27.03  14.17 -19.59  33.59 -16.31 -31.07  [grid]
   36 v=-0.079951: -14.01 -25.48  15.23 -12.12 -31.81   8.35  [grid]
   37 v=-0.035325: -18.83 -12.62  21.28 -14.18 -13.62  15.34  [grid]
   38 v=-0.029404:  11.80  26.23  20.47  30.14  30.42 -10.43  [grid]
   39 v=-0.048563: -26.37 -27.57  15.12  -1.71 -26.56  33.22  [grid]
   40 v=-0.025612:  31.72  15.13   5.65 -11.42  13.67 -34.60  [rand]
   41 v=-0.048238: -16.16  17.81   1.46 -24.26   3.28   6.32  [rand]
   42 v=-0.027648:  13.01  26.65   8.58 -30.81  15.52 -29.83  [grid]
   43 v=-0.077926: -13.58 -28.91  13.11 -10.84 -32.19   9.96  [rand]
   44 v=-0.048909: -36.42 -29.75  12.82 -29.18 -21.43  43.08  [rand]
 + - save #14 for twobest
 + - save #36 for twobest
 + - save #17 for twobest
 + - skip #43 for twobest: too close to set #36
 + - save # 2 for twobest
 + - save #26 for twobest
 + - save #23 for twobest
 + - save #16 for twobest
 + - save # 0 for twobest
 + - save #27 for twobest
 + - save #21 for twobest
 + - save #44 for twobest
 + - save #39 for twobest
 + - save #41 for twobest
 + - save #29 for twobest
 + - save # 6 for twobest
 + - save #19 for twobest
 + - save #12 for twobest
 + - save # 3 for twobest
 + - save #11 for twobest
 + - save # 5 for twobest
 + - skip # 4 for twobest: too close to set #23
 + - save #20 for twobest
 + - save # 1 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=67 usiz=191.5
 + - retaining old weight image
 + - using 27097 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23121 total points stored in 231 'RHDD(13.7332)' bloks
*[#9685=-0.104105] *[#9686=-0.104208] *[#9692=-0.104316] *[#9695=-0.104431] *[#9696=-0.104606] *[#9697=-0.104647] *[#9699=-0.104682] *[#9700=-0.104944] *[#9701=-0.105013] *[#9704=-0.105263] *[#9705=-0.105396] *[#9706=-0.105735] *[#9708=-0.105753] *[#9709=-0.105959] 
 + - param set #1 has cost=-0.105959
 + -- Parameters = -8.0097 -11.8774 7.6636 -7.8383 -13.1304 3.7741 1.0092 0.9986 1.0243 -0.0042 0.0007 0.0009
 + - param set #2 has cost=-0.060468
 + -- Parameters = -13.8310 -25.3065 14.3144 -11.8757 -31.1490 8.0392 0.9974 0.9990 0.9997 -0.0002 0.0103 -0.0008
 + - param set #3 has cost=-0.063984
 + -- Parameters = -17.6451 7.0094 2.2564 -18.3203 1.9255 14.0278 1.0000 1.0003 0.9986 -0.0005 -0.0006 0.0005
 + - param set #4 has cost=-0.059903
 + -- Parameters = -16.0225 -29.5868 15.2464 -8.8300 -33.4877 14.8029 0.9935 0.9954 0.9966 -0.0018 0.0031 -0.0001
 + - param set #5 has cost=-0.072776
 + -- Parameters = -14.7571 -21.4440 10.9985 -12.6506 -24.7303 7.9389 1.0001 1.0053 1.0002 -0.0025 0.0023 -0.0008
 + - param set #6 has cost=-0.052948
 + -- Parameters = -21.6431 -24.9345 10.9340 -4.3616 -27.7716 28.8642 0.9851 0.9981 0.9948 0.0022 -0.0043 0.0000
 + - param set #7 has cost=-0.075319
 + -- Parameters = -11.9462 -20.6328 11.4958 -15.1832 -24.3749 0.6030 1.0100 1.0109 0.9776 -0.0219 -0.0028 -0.0013
 + - param set #8 has cost=-0.076374
 + -- Parameters = -12.9963 -18.9700 10.0549 -13.4028 -23.0469 5.8811 0.9941 1.0123 0.9899 -0.0006 -0.0004 0.0013
 + - param set #9 has cost=-0.034227
 + -- Parameters = -29.7287 -28.5151 18.2408 -22.0486 -23.1227 36.2064 1.0008 1.0010 1.0163 -0.0014 0.0005 -0.0011
 + - param set #10 has cost=-0.044665
 + -- Parameters = -6.6741 -26.7553 5.5593 -0.2558 -36.0738 2.3328 1.0114 1.0093 1.0148 -0.0053 0.0058 0.0045
 + - param set #11 has cost=-0.032050
 + -- Parameters = -36.4346 -29.7962 12.6558 -29.5643 -21.4425 42.6775 0.9997 0.9999 0.9990 -0.0011 0.0002 -0.0003
*[#10477=-0.175017] *[#10491=-0.234802] *[#10500=-0.26826] *[#10504=-0.275973] *[#10505=-0.304848] *[#10507=-0.34115] *[#10518=-0.36062] *[#10525=-0.364539] *[#10526=-0.366849] *[#10527=-0.367433] *[#10530=-0.36765] *[#10531=-0.368195] *[#10532=-0.373163] *[#10536=-0.375036] *[#10537=-0.376491] *[#10538=-0.37722] *[#10541=-0.377582] *[#10542=-0.377861] *[#10543=-0.378295] *[#10544=-0.378619] *[#10546=-0.379766] *[#10547=-0.380464] *[#10548=-0.381174] *[#10551=-0.381231] *[#10555=-0.382432] *[#10559=-0.382628] *[#10562=-0.382918] *[#10565=-0.383485] *[#10566=-0.383734] *[#10567=-0.384435] *[#10568=-0.384509] *[#10569=-0.385688] *[#10570=-0.386054] *[#10571=-0.386819] *[#10572=-0.387677] 
 + - param set #12 has cost=-0.387677
 + -- Parameters = -0.4825 -0.8317 0.0278 -0.4164 -1.7864 0.6923 0.9965 1.0270 0.9951 0.0160 -0.0010 -0.0131
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.138 
 + --- dist(#3,#1) = 0.236 
 + --- dist(#4,#1) = 0.251 
 + --- dist(#5,#1) = 0.258 
 + --- dist(#6,#1) = 0.215 
 + --- dist(#7,#1) = 0.326 
 + --- dist(#8,#1) = 0.359 
 + --- dist(#9,#1) = 0.313 
 + --- dist(#10,#1) = 0.381 
 + --- dist(#11,#1) = 0.395 
 + --- dist(#12,#1) = 0.467 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=67 usiz=191.5
 + - retaining old weight image
 + - using 27097 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23760 total points stored in 246 'RHDD(13.5933)' bloks
*[#10574=-0.395785] *[#10581=-0.396041] *[#10594=-0.396643] *[#10595=-0.396987] *[#10602=-0.397423] *[#10603=-0.39758] *[#10605=-0.397914] *[#10607=-0.397971] *[#10608=-0.398174] *[#10610=-0.398404] *[#10611=-0.398457] *[#10613=-0.398891] *[#10614=-0.399029] *[#10617=-0.399133] *[#10619=-0.399153] *[#10620=-0.399284] *[#10621=-0.399463] *[#10622=-0.399613] *[#10623=-0.399711] *[#10624=-0.399863] *[#10625=-0.399919] *[#10626=-0.400029] *[#10627=-0.400095] *[#10628=-0.400143] *[#10629=-0.400157] *[#10630=-0.400169] *[#10645=-0.400185] *[#10646=-0.400233] *[#10652=-0.400273] 
 + - param set #1 has cost=-0.400273
 + -- Parameters = -0.3592 -0.7400 0.1136 -0.2468 -1.8535 0.5141 1.0089 1.0320 1.0009 0.0178 0.0005 -0.0168
 + - param set #2 has cost=-0.090129
 + -- Parameters = -7.5228 -12.0245 7.4178 -7.0180 -12.9317 3.7776 1.0111 0.9949 1.0278 -0.0007 0.0104 -0.0014
 + - param set #3 has cost=-0.061958
 + -- Parameters = -12.9081 -19.1680 10.4426 -13.1503 -23.2380 6.1299 0.9897 1.0250 0.9874 -0.0015 0.0000 -0.0006
 + - param set #4 has cost=-0.063961
 + -- Parameters = -11.1408 -21.0134 11.4131 -14.3228 -25.2483 1.5332 0.9992 1.0275 0.9755 -0.0202 0.0064 -0.0012
 + - param set #5 has cost=-0.065764
 + -- Parameters = -13.5394 -21.0947 10.9809 -12.9438 -24.0618 7.1185 0.9426 1.0290 0.9799 -0.0189 0.0076 -0.0031
 + - param set #6 has cost=-0.066136
 + -- Parameters = -16.3245 7.4407 2.2626 -14.8952 2.3015 13.0912 0.9975 0.9993 0.9976 0.0011 -0.0025 0.0009
 + - param set #7 has cost=-0.051965
 + -- Parameters = -14.1639 -26.2028 14.9648 -11.5407 -28.0682 6.8959 0.9965 0.9936 0.9873 0.0006 0.0033 0.0027
 + - param set #8 has cost=-0.047837
 + -- Parameters = -15.8482 -29.7792 15.0197 -8.3323 -33.4019 14.9984 0.9749 0.9980 1.0066 0.0070 0.0216 -0.0045
 + - param set #9 has cost=-0.041698
 + -- Parameters = -20.4669 -25.7666 9.4102 -3.8819 -29.0108 29.0731 0.9873 0.9979 0.9952 0.0022 -0.0048 -0.0000
 + - param set #10 has cost=-0.036864
 + -- Parameters = -6.7189 -26.4259 5.1853 -0.1785 -38.4233 2.8213 1.0116 1.0097 1.0140 -0.0055 0.0077 0.0051
 + - param set #11 has cost=-0.026803
 + -- Parameters = -29.5010 -28.3593 18.2583 -22.3544 -22.8941 36.0002 1.0009 1.0018 1.0170 -0.0019 0.0066 -0.0013
 + - param set #12 has cost=-0.024732
 + -- Parameters = -36.6035 -29.3124 13.4262 -30.4897 -21.7973 43.0459 0.9909 1.0014 0.9912 -0.0021 0.0013 -0.0014
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.141 
 + --- dist(#3,#1) = 0.2 
 + --- dist(#4,#1) = 0.254 
 + --- dist(#5,#1) = 0.26 
 + --- dist(#6,#1) = 0.238 
 + --- dist(#7,#1) = 0.318 
 + --- dist(#8,#1) = 0.363 
 + --- dist(#9,#1) = 0.317 
 + --- dist(#10,#1) = 0.406 
 + --- dist(#11,#1) = 0.394 
 + --- dist(#12,#1) = 0.473 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=67 usiz=191.5
 + - retaining old weight image
 + - using 27097 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23942 total points stored in 255 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.387645
 + -- Parameters = -0.4367 -0.7242 0.0674 -0.3173 -2.0120 0.4943 1.0072 1.0298 1.0092 0.0129 -0.0034 -0.0235
 + - param set #2 has cost=-0.080746
 + -- Parameters = -7.6305 -11.8375 7.4891 -6.8532 -12.8990 3.8485 1.0008 0.9919 1.0261 -0.0006 0.0116 -0.0036
 + - param set #3 has cost=-0.056975
 + -- Parameters = -16.3668 7.3492 2.1735 -14.9215 2.3030 13.2963 0.9966 0.9986 0.9972 0.0009 -0.0026 0.0002
 + - param set #4 has cost=-0.058056
 + -- Parameters = -13.6937 -20.7445 10.8250 -13.1000 -23.6835 6.9553 0.9448 1.0299 0.9833 -0.0141 0.0066 -0.0027
 + - param set #5 has cost=-0.067253
 + -- Parameters = -9.8642 -20.6514 9.2690 -10.8917 -26.9744 3.0872 0.9677 1.0570 0.9282 -0.0193 0.0635 -0.0421
 + - param set #6 has cost=-0.061568
 + -- Parameters = -11.7664 -19.2189 10.9437 -10.4997 -23.2415 6.0500 0.9752 1.0301 0.9726 -0.0010 0.0013 -0.0016
 + - param set #7 has cost=-0.047292
 + -- Parameters = -13.1172 -26.4952 14.5946 -11.1367 -28.5632 6.5776 0.9812 0.9921 0.9780 0.0001 -0.0009 0.0015
 + - param set #8 has cost=-0.038483
 + -- Parameters = -15.9125 -29.8092 14.9518 -8.4746 -33.4811 14.8696 0.9744 0.9983 1.0061 0.0069 0.0217 -0.0046
 + - param set #9 has cost=-0.034415
 + -- Parameters = -20.7477 -25.7171 9.7478 -3.8173 -29.2165 29.8353 0.9796 0.9958 0.9908 0.0005 -0.0056 -0.0046
 + - param set #10 has cost=-0.029195
 + -- Parameters = -6.7586 -26.4856 5.4423 -0.1250 -38.0076 2.8798 1.0117 1.0091 1.0144 -0.0052 0.0075 0.0107
 + - param set #11 has cost=-0.022079
 + -- Parameters = -30.5449 -28.7112 17.9613 -22.6527 -22.7989 35.6825 0.9907 1.0138 1.0251 -0.0053 0.0141 0.0006
 + - param set #12 has cost=-0.019887
 + -- Parameters = -36.7607 -29.1593 13.3139 -30.3068 -22.0447 43.1261 0.9922 1.0013 0.9999 -0.0015 0.0019 -0.0017
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.139 
 + --- dist(#3,#1) = 0.301 
 + --- dist(#4,#1) = 0.236 
 + --- dist(#5,#1) = 0.25 
 + --- dist(#6,#1) = 0.199 
 + --- dist(#7,#1) = 0.322 
 + --- dist(#8,#1) = 0.364 
 + --- dist(#9,#1) = 0.326 
 + --- dist(#10,#1) = 0.4 
 + --- dist(#11,#1) = 0.391 
 + --- dist(#12,#1) = 0.474 
 + - Total coarse refinement net CPU time = 0.0 s; 3069 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=67 usiz=191.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 23722 total points stored in 252 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.375602 *
 + -- Parameters = -0.4367 -0.7242 0.0674 -0.3173 -2.0120 0.4943 1.0072 1.0298 1.0092 0.0129 -0.0034 -0.0235
 + - cost(#2)=-0.074069  
 + -- Parameters = -7.6305 -11.8375 7.4891 -6.8532 -12.8990 3.8485 1.0008 0.9919 1.0261 -0.0006 0.0116 -0.0036
 + - cost(#3)=-0.058461  
 + -- Parameters = -9.8642 -20.6514 9.2690 -10.8917 -26.9744 3.0872 0.9677 1.0570 0.9282 -0.0193 0.0635 -0.0421
 + - cost(#4)=-0.054616  
 + -- Parameters = -11.7664 -19.2189 10.9437 -10.4997 -23.2415 6.0500 0.9752 1.0301 0.9726 -0.0010 0.0013 -0.0016
 + - cost(#5)=-0.053510  
 + -- Parameters = -13.6937 -20.7445 10.8250 -13.1000 -23.6835 6.9553 0.9448 1.0299 0.9833 -0.0141 0.0066 -0.0027
 + - cost(#6)=-0.047710  
 + -- Parameters = -16.3668 7.3492 2.1735 -14.9215 2.3030 13.2963 0.9966 0.9986 0.9972 0.0009 -0.0026 0.0002
 + - cost(#7)=-0.041464  
 + -- Parameters = -13.1172 -26.4952 14.5946 -11.1367 -28.5632 6.5776 0.9812 0.9921 0.9780 0.0001 -0.0009 0.0015
 + - cost(#8)=-0.033541  
 + -- Parameters = -15.9125 -29.8092 14.9518 -8.4746 -33.4811 14.8696 0.9744 0.9983 1.0061 0.0069 0.0217 -0.0046
 + - cost(#9)=-0.030769  
 + -- Parameters = -20.7477 -25.7171 9.7478 -3.8173 -29.2165 29.8353 0.9796 0.9958 0.9908 0.0005 -0.0056 -0.0046
 + - cost(#10)=-0.027099  
 + -- Parameters = -6.7586 -26.4856 5.4423 -0.1250 -38.0076 2.8798 1.0117 1.0091 1.0144 -0.0052 0.0075 0.0107
 + - cost(#11)=-0.021253  
 + -- Parameters = -30.5449 -28.7112 17.9613 -22.6527 -22.7989 35.6825 0.9907 1.0138 1.0251 -0.0053 0.0141 0.0006
 + - cost(#12)=-0.016386  
 + -- Parameters = -36.7607 -29.1593 13.3139 -30.3068 -22.0447 43.1261 0.9922 1.0013 0.9999 -0.0015 0.0019 -0.0017
 + - cost(#13)=-0.009902  
 + -- Parameters = -0.8998 0.0245 -5.8170 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.377473 *
 + -- Parameters = -0.4610 -0.8261 -0.0566 -0.3562 -2.0352 0.4290 1.0037 1.0260 1.0029 0.0101 -0.0036 -0.0249
 + - cost(#2)=-0.076416  
 + -- Parameters = -7.4701 -11.2819 7.2430 -6.7602 -11.9426 3.5705 1.0077 0.9925 1.0325 -0.0002 0.0139 -0.0116
 + - cost(#3)=-0.059676  
 + -- Parameters = -9.8498 -20.8019 9.2866 -10.8645 -26.9796 2.6731 0.9586 1.0545 0.9154 -0.0143 0.0702 -0.0417
 + - cost(#4)=-0.055238  
 + -- Parameters = -11.6303 -19.4841 10.8654 -10.5257 -23.2827 6.0615 0.9721 1.0316 0.9749 0.0002 0.0073 -0.0017
 + - cost(#5)=-0.054148  
 + -- Parameters = -13.4262 -20.7767 10.7287 -12.9580 -23.7856 7.2222 0.9408 1.0328 0.9857 -0.0091 0.0071 -0.0048
 + - cost(#6)=-0.101186  
 + -- Parameters = -5.0478 1.8147 2.3284 -3.8097 -2.7889 4.3825 1.0325 0.9857 0.9921 0.0431 0.0072 -0.0501
 + - cost(#7)=-0.042398  
 + -- Parameters = -13.1444 -26.3166 14.6142 -10.9595 -28.4553 6.8334 0.9807 0.9920 0.9694 0.0001 -0.0011 0.0010
 + - cost(#8)=-0.035853  
 + -- Parameters = -15.5646 -30.2260 14.6063 -8.1109 -33.6650 13.4062 0.9730 0.9969 1.0011 0.0085 0.0185 -0.0056
 + - cost(#9)=-0.031357  
 + -- Parameters = -20.5488 -25.5953 9.7475 -3.5593 -29.6278 30.2256 0.9790 0.9960 0.9848 0.0021 -0.0046 -0.0067
 + - cost(#10)=-0.027552  
 + -- Parameters = -6.6487 -26.4252 5.5458 -0.5657 -38.0209 2.5037 1.0130 1.0113 1.0151 -0.0098 0.0086 0.0119
 + - cost(#11)=-0.022460  
 + -- Parameters = -30.6814 -28.7987 17.6871 -22.6464 -22.6904 35.4889 0.9932 1.0140 1.0391 -0.0054 0.0139 -0.0026
 + - cost(#12)=-0.018066  
 + -- Parameters = -36.9497 -28.9140 13.6846 -30.4882 -20.1571 43.0142 0.9929 1.0024 1.0008 -0.0012 0.0025 -0.0015
 + - cost(#13)=-0.368272  
 + -- Parameters = -0.5574 -0.9883 0.0073 -0.5910 -0.5867 0.1270 1.0018 1.0209 1.0070 0.0007 0.0049 0.0038
 + - case #1 is now the best
 + - Initial  cost = -0.377473
 + - Initial fine Parameters = -0.4610 -0.8261 -0.0566 -0.3562 -2.0352 0.4290 1.0037 1.0260 1.0029 0.0101 -0.0036 -0.0249
 + - Finalish cost = -0.377517 ; 135 funcs
 + - Final    cost = -0.377532 ; 166 funcs
 + Final fine fit Parameters:
       x-shift=-0.4640   y-shift=-0.8210   z-shift=-0.0696
       z-angle=-0.3668   x-angle=-2.0731   y-angle= 0.3835
       x-scale= 1.0037   y-scale= 1.0258   z-scale= 1.0021
     y/x-shear= 0.0095 z/x-shear=-0.0030 z/y-shear=-0.0259
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.4640 -0.8210 -0.0696 -0.3668 -2.0731 0.3835 1.0037 1.0258 1.0021 0.0095 -0.0030 -0.0259
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.0
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0166 -1.0029 0.1807 233.7858 0.0001 0.2125 0.9867 73.9692 -1.0037 -0.0067 0.0067 201.2010
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 18.8 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3162.860100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 88.7623 48.6132   ITER = 14/137
88.7623

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 872ms]
lev=0 0..171 0..213 0..166: [first cost=-0.65279] ... done [cost:-0.65279==>-0.71377]
lev=1 patch=129x161x125 [clock= 14m 25s 970ms]........:[cost=-0.75681]:........ done [cost:-0.71377==>-0.76134 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 23m 27s 866ms]......................... done [cost:-0.76134==>-0.83676 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 30m 17s 872ms]............... done [cost:-0.83676==>-0.89258 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 35m 18s 652ms].......... done [cost:-0.89258==>-0.94560 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 39m 7s 898ms]............... done [cost:-0.94560==>-1.01469 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 42m 40s 691ms].................... done [cost:-1.01469==>-1.05068 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 46m 12s 760ms]..................................... done [cost:-1.05068==>-1.13526 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 49m 54s 894ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7693/tb7693.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 8.9 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb7693.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7693.r01.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Reading input dataset ./pb01.tb7693.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29286 voxels
 + 4803 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.137  pitch=-0.112  yaw=-0.059  dS=-0.497  dL=-0.037  dP=-0.264
++ Mean: roll=-0.068  pitch=+0.101  yaw=+0.002  dS=-0.251  dL=+0.064  dP=-0.069
++ Max : roll=+0.081  pitch=+0.374  yaw=+0.079  dS=+0.134  dL=+0.169  dP=+0.140
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.25(0.25) 0.18(0.11) 0.10(0.14) 0.25(0.23) 0.15(0.21) 0.30(0.26) 0.38(0.09) 0.32(0.15) 0.24(0.13) 0.21(0.10) 0.17(0.07) 0.10(0.11) 0.14(0.11) 0.28(0.29) 0.29(0.14) 0.26(0.36) 0.21(0.12) 0.19(0.34) 0.18(0.13) 0.23(0.29) 0.23(0.40) 0.19(0.27) 0.23(0.13) 0.20(0.15) 0.17(0.05) 0.19(0.03) 0.23(0.07) 0.20(0.10) 0.22(0.11) 0.24(0.06) 0.25(0.12) 0.24(0.08) 0.20(0.05) 0.19(0.04) 0.21(0.04) 0.27(0.07) 0.27(0.01) 0.23(0.06) 0.23(0.03) 0.32(0.10) 0.34(0.05) 0.32(0.05) 0.41(0.10) 0.33(0.32) 0.32(0.18) 0.39(0.22) 0.53(0.29) 0.57(0.21) 0.46(0.26) 0.41(0.10) 0.41(0.05) 0.48(0.06) 0.51(0.05) 0.44(0.20) 0.49(0.13) 0.53(0.16) 0.54(0.10) 0.57(0.05) 0.51(0.11) 0.43(0.17) 0.52(0.27) 0.57(0.14) 0.54(0.12) 0.45(0.18) 0.54(0.22) 0.58(0.12) 0.55(0.13) 0.52(0.10) 0.59(0.21) 0.56(0.09) 0.58(0.08) 0.59(0.03) 0.48(0.19) 0.55(0.20) 0.56(0.10) 0.60(0.09) 0.58(0.03) 0.47(0.16) 0.47(0.07) 0.52(0.11) 0.57(0.07) 0.52(0.05) 0.51(0.03) 0.48(0.19) 0.56(0.27) 0.68(0.15) 0.60(0.24) 0.47(0.22) 0.44(0.18) 0.49(0.13) 0.57(0.19) 0.64(0.23) 0.62(0.22) 0.49(0.18) 0.59(0.20) 0.54(0.11) 0.56(0.04) 0.57(0.03) 0.51(0.12) 0.48(0.14) 0.57(0.29) 0.56(0.10) 0.58(0.08) 0.56(0.04) 0.56(0.05) 0.59(0.06) 0.55(0.05) 0.57(0.03) 0.58(0.02) 0.58(0.18) 0.63(0.21) 0.73(0.32) 0.68(0.20) 0.69(0.09) 0.66(0.06) 0.61(0.05) 0.61(0.05) 0.64(0.06) 0.60(0.06) 0.63(0.03) 0.56(0.20) 0.62(0.24) 0.61(0.07) 0.64(0.11) 0.57(0.09) 0.58(0.03) 0.57(0.02) 0.53(0.03) 0.55(0.03) 0.57(0.03) 0.55(0.03) 0.59(0.04) 0.60(0.05) 0.60(0.06) 0.63(0.03) 0.61(0.02) 0.57(0.05) 0.59(0.03) 0.60(0.01) 0.72(0.14) 0.71(0.18) 0.89(0.29) 0.96(0.09) 1.00(0.14) 0.90(0.13) 0.99(0.14) 0.91(0.18) 0.99(0.20) 0.95(0.10)
++ Max displacement in automask = 1.00 (mm) at sub-brick 144
++ Max delta displ  in automask = 0.40 (mm) at sub-brick 21
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb7693.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7693.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7693.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7693.r01.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./pb01.tb7693.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.500000 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb7693.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7693.r02.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Reading input dataset ./pb01.tb7693.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29659 voxels
 + 5007 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.686  pitch=+0.300  yaw=-0.380  dS=-1.102  dL=-0.283  dP=-0.449
++ Mean: roll=-0.547  pitch=+0.532  yaw=-0.309  dS=-0.900  dL=-0.019  dP=-0.268
++ Max : roll=-0.442  pitch=+0.720  yaw=-0.245  dS=-0.542  dL=+0.175  dP=-0.086
++ Max displacements (mm) for each sub-brick:
 1.96(0.00) 1.97(0.17) 1.91(0.10) 1.87(0.09) 1.93(0.13) 1.76(0.25) 1.80(0.19) 1.79(0.07) 1.86(0.10) 1.70(0.22) 1.60(0.12) 1.64(0.08) 1.63(0.03) 1.65(0.04) 1.68(0.06) 1.66(0.08) 1.86(0.26) 1.82(0.18) 1.81(0.04) 1.90(0.13) 1.76(0.27) 1.75(0.10) 1.88(0.32) 1.87(0.16) 1.86(0.08) 1.83(0.04) 1.86(0.05) 1.83(0.04) 1.83(0.02) 1.87(0.05) 1.89(0.07) 1.85(0.11) 1.85(0.05) 1.85(0.07) 1.89(0.08) 1.91(0.03) 1.86(0.07) 1.88(0.03) 1.89(0.04) 1.81(0.14) 1.79(0.08) 1.89(0.18) 1.92(0.11) 1.94(0.03) 1.90(0.05) 1.81(0.16) 1.95(0.29) 1.91(0.07) 1.89(0.10) 1.95(0.11) 1.89(0.08) 1.92(0.05) 1.96(0.05) 1.96(0.02) 1.95(0.04) 2.22(0.32) 2.25(0.10) 2.19(0.07) 2.17(0.02) 2.17(0.03) 2.19(0.04) 2.24(0.06) 2.21(0.04) 2.16(0.07) 2.21(0.07) 2.16(0.11) 2.16(0.06) 2.14(0.03) 2.10(0.09) 2.11(0.06) 2.11(0.02) 2.12(0.03) 2.11(0.06) 2.14(0.04) 2.16(0.06) 2.17(0.05) 2.20(0.03) 2.22(0.04) 2.22(0.02) 2.21(0.04) 2.21(0.04) 2.21(0.03) 2.18(0.04) 2.21(0.03) 2.22(0.03) 2.20(0.04) 2.27(0.10) 2.28(0.02) 2.19(0.17) 2.15(0.14) 2.24(0.21) 2.20(0.11) 2.19(0.01) 2.20(0.03) 2.19(0.03) 2.21(0.06) 2.25(0.05) 2.22(0.05) 2.08(0.21) 2.17(0.18) 2.20(0.07) 2.21(0.10) 2.22(0.07) 2.17(0.06) 2.17(0.02) 2.20(0.04) 2.23(0.05) 2.23(0.04) 2.21(0.03) 2.17(0.05) 2.18(0.04) 2.26(0.10) 2.27(0.04) 2.18(0.14) 2.24(0.14) 2.22(0.10) 2.19(0.06) 2.21(0.04) 2.19(0.05) 2.19(0.02) 2.21(0.03) 2.18(0.04) 2.18(0.02) 2.14(0.05) 2.24(0.13) 2.21(0.06) 2.24(0.08) 2.25(0.02) 2.29(0.05) 2.25(0.05) 2.24(0.05) 2.17(0.07) 2.13(0.06) 2.12(0.03) 2.05(0.12) 2.08(0.06) 2.06(0.04) 2.06(0.02) 2.11(0.06) 2.12(0.04) 2.05(0.12) 2.25(0.23) 2.41(0.19) 2.25(0.20) 2.24(0.04) 2.34(0.14) 2.21(0.24) 2.09(0.15) 2.14(0.16) 2.26(0.17)
++ Max displacement in automask = 2.41 (mm) at sub-brick 142
++ Max delta displ  in automask = 0.32 (mm) at sub-brick 55
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb7693.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7693.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7693.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7693.r02.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./pb01.tb7693.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.500000 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb7693.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7693.r03.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Reading input dataset ./pb01.tb7693.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29372 voxels
 + 4767 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.714  pitch=+0.847  yaw=-0.763  dS=-1.520  dL=-0.134  dP=-0.656
++ Mean: roll=-0.574  pitch=+1.159  yaw=-0.697  dS=-1.341  dL=+0.145  dP=-0.499
++ Max : roll=-0.460  pitch=+1.440  yaw=-0.608  dS=-1.213  dL=+0.374  dP=-0.331
++ Max displacements (mm) for each sub-brick:
 3.19(0.00) 3.29(0.11) 3.19(0.23) 3.23(0.12) 3.14(0.19) 3.10(0.06) 3.11(0.06) 3.02(0.09) 3.05(0.07) 3.07(0.03) 3.07(0.05) 3.03(0.04) 3.06(0.05) 3.09(0.06) 3.11(0.06) 3.09(0.04) 3.07(0.04) 3.08(0.01) 3.13(0.07) 3.10(0.07) 3.12(0.03) 3.14(0.05) 3.14(0.05) 3.17(0.05) 3.22(0.06) 3.11(0.13) 3.18(0.10) 3.15(0.05) 3.16(0.03) 3.22(0.06) 3.18(0.06) 3.16(0.06) 3.16(0.05) 3.17(0.01) 3.25(0.10) 3.14(0.13) 3.18(0.08) 3.18(0.04) 3.16(0.05) 3.13(0.04) 3.19(0.08) 3.20(0.04) 3.25(0.05) 3.13(0.14) 3.15(0.02) 3.21(0.08) 3.25(0.05) 3.23(0.05) 3.32(0.09) 3.34(0.09) 3.44(0.14) 3.42(0.06) 3.40(0.05) 3.55(0.16) 3.49(0.10) 3.55(0.10) 3.50(0.11) 3.52(0.06) 3.56(0.05) 3.54(0.06) 3.50(0.05) 3.53(0.03) 3.58(0.07) 3.50(0.10) 3.49(0.04) 3.50(0.05) 3.43(0.08) 3.42(0.04) 3.52(0.13) 3.51(0.05) 3.50(0.03) 3.57(0.08) 3.55(0.03) 3.51(0.05) 3.61(0.10) 3.57(0.04) 3.56(0.04) 3.61(0.06) 3.51(0.13) 3.54(0.07) 3.60(0.08) 3.71(0.12) 3.75(0.12) 3.75(0.05) 3.73(0.05) 3.72(0.03) 3.71(0.02) 3.70(0.05) 3.70(0.02) 3.75(0.07) 3.69(0.09) 3.73(0.04) 3.79(0.09) 3.67(0.13) 3.71(0.04) 3.76(0.07) 3.72(0.10) 3.78(0.10) 3.79(0.04) 3.77(0.08) 3.82(0.08) 3.78(0.06) 3.85(0.07) 3.79(0.07) 3.68(0.16) 3.70(0.10) 3.73(0.10) 3.70(0.06) 3.73(0.06) 3.75(0.04) 3.70(0.05) 3.67(0.05) 3.69(0.05) 3.68(0.08) 3.77(0.12) 3.77(0.03) 3.78(0.05) 3.73(0.08) 3.77(0.07) 3.82(0.07) 3.82(0.04) 3.83(0.04) 3.81(0.04) 3.84(0.04) 3.87(0.05) 3.84(0.05) 3.88(0.06) 3.87(0.04) 3.88(0.06) 3.88(0.03) 3.85(0.07) 3.88(0.03) 3.92(0.07) 3.99(0.08) 3.96(0.06) 3.92(0.04) 3.97(0.05) 3.93(0.05) 3.99(0.08) 3.97(0.08) 3.94(0.08) 4.02(0.14) 3.96(0.07) 3.94(0.08) 3.98(0.08) 3.81(0.22) 3.91(0.12) 3.95(0.24) 3.86(0.27) 3.51(0.42)
++ Max displacement in automask = 4.02 (mm) at sub-brick 141
++ Max delta displ  in automask = 0.42 (mm) at sub-brick 149
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb7693.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7693.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7693.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7693.r03.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./pb01.tb7693.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.500000 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7693.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7693.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7693.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7693.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7693.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7693.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.5
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb7693
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb7693+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb7693+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1341249 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=1
++ Computing -autobox
++ 280935 voxels [65.1%] in weight mask
++ Number of points for matching = 132039
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.146776
   sp   = 0.329132
   mi   = -0.511437
   crM  = 0.0429623
   nmi  = 0.84489
   je   = 2.78583
   hel  = -0.103078
   crA  = 0.207596
   crU  = 0.219171
   lss  = 0.853224
   lpc  = 0.184353
   lpa  = 0.815647
   lpc+ = 0.330199
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.3
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb7693+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb7693+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 38.0 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7693.r01.blur pb02.tb7693.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7693.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb7693.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7693.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7693.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7693.r02.blur pb02.tb7693.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7693.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb7693.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7693.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7693.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7693.r03.blur pb02.tb7693.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7693.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb7693.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7693.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7693.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb7693.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7693.r01.blur+orig
++ Forming automask
 + Fixed clip level = 389.528931
 + Used gradual clip level = 314.842590 .. 442.115356
 + Number voxels above clip level = 50995
 + Clustering voxels ...
 + Largest cluster has 50817 voxels
 + Clustering voxels ...
 + Largest cluster has 50766 voxels
 + Filled    46 voxels in small holes; now have 50812 voxels
 + Clustering voxels ...
 + Largest cluster has 50811 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 375464 voxels
 + Mask now has 50811 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 367631 voxels
++ 58644 voxels in the mask [out of 426275: 13.76%]
++ first  18 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   11 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb7693.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7693.r02.blur+orig
++ Forming automask
 + Fixed clip level = 390.688141
 + Used gradual clip level = 315.527405 .. 443.654968
 + Number voxels above clip level = 51062
 + Clustering voxels ...
 + Largest cluster has 50878 voxels
 + Clustering voxels ...
 + Largest cluster has 50842 voxels
 + Filled    45 voxels in small holes; now have 50887 voxels
 + Clustering voxels ...
 + Largest cluster has 50886 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 375389 voxels
 + Mask now has 50886 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 367563 voxels
++ 58712 voxels in the mask [out of 426275: 13.77%]
++ first  18 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   11 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb7693.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7693.r03.blur+orig
++ Forming automask
 + Fixed clip level = 392.539124
 + Used gradual clip level = 318.761078 .. 446.056671
 + Number voxels above clip level = 51091
 + Clustering voxels ...
 + Largest cluster has 50896 voxels
 + Clustering voxels ...
 + Largest cluster has 50862 voxels
 + Filled    42 voxels in small holes; now have 50904 voxels
 + Clustering voxels ...
 + Largest cluster has 50904 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 375371 voxels
 + Mask now has 50904 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 367587 voxels
++ 58688 voxels in the mask [out of 426275: 13.77%]
++ first  18 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   11 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb7693
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 58954 survived, 367321 were zero
++ writing result full_mask.tb7693...
3dresample -master full_mask.tb7693+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb7693
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 52472 survived, 373803 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb7693...
3dABoverlap -no_automask full_mask.tb7693+orig mask_anat.tb7693+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb7693+orig.BRIK  B=./mask_anat.tb7693+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
58954        52472        61497        49929        9025         2543         15.3085      4.8464     0.8821     0.9429     0.8836
3ddot -dodice full_mask.tb7693+orig mask_anat.tb7693+orig
tee out.mask_ae_dice.txt
0.896182	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb7693
total number of censored TRs (simple form) = 2
1deval -a motion_tb7693_censor.1D -b outcount_tb7693_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb7693_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb7693.r01.blur+orig.HEAD pb03.tb7693.r02.blur+orig.HEAD pb03.tb7693.r03.blur+orig.HEAD -censor censor_tb7693_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb7693 -errts errts.tb7693 -bucket stats.tb7693
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb7693.r01.blur+orig.HEAD pb03.tb7693.r02.blur+orig.HEAD pb03.tb7693.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 50877 voxels (out of 426275 = 11.9%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 448 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb7693.r01.blur+orig.HEAD pb03.tb7693.r02.blur+orig.HEAD pb03.tb7693.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb7693_REML -Rvar stats.tb7693_REMLvar \
 -Rfitts fitts.tb7693_REML -Rerrts errts.tb7693_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (448x24):  4.64702  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (448x6):  1.03462  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (448x18):  4.36991  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (448x6):  2.80436  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (448x12):  1.02136  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.3714e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.29 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.768
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.785
++ Job #3: processing voxels 127881 to 170507; elapsed time=5.803
++ Job #4: processing voxels 170508 to 213134; elapsed time=5.822
++ Job #5: processing voxels 213135 to 255761; elapsed time=5.842
++ Job #6: processing voxels 255762 to 298388; elapsed time=5.861
++ Job #7: processing voxels 298389 to 341015; elapsed time=5.893
++ Job #8: processing voxels 341016 to 383642; elapsed time=5.913
++ Job #0: processing voxels 0 to 42626; elapsed time=5.929
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=5.933
0123456789.0123456789.0123456789.0123++ Job #2 finished; elapsed time=32.762
45++ Job #1 finished; elapsed time=34.290
6++ Job #4 finished; elapsed time=35.058
++ Job #7 finished; elapsed time=35.076
++ Job #5 finished; elapsed time=35.248
++ Job #8 finished; elapsed time=35.274
789.0123++ Job #6 finished; elapsed time=37.968
4++ Job #9 finished; elapsed time=38.225
56789.
++ Job #0 waiting for children to finish; elapsed time=39.176
++ Job #3 finished; elapsed time=39.198
++ Job #0 now finishing up; elapsed time=39.208
++ Smallest FDR q [0 Full_Fstat] = 4.42267e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 3.81144e-14
++ Smallest FDR q [3 uns1_Fstat] = 3.81002e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 5.05222e-14
++ Smallest FDR q [6 uns2_Fstat] = 5.0523e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 7.35275e-14
++ Smallest FDR q [9 uns3_Fstat] = 7.35219e-14
++ Smallest FDR q [11 str1#0_Tstat] = 4.58503e-14
++ Smallest FDR q [12 str1_Fstat] = 4.58391e-14
++ Smallest FDR q [14 str2#0_Tstat] = 9.06021e-14
++ Smallest FDR q [15 str2_Fstat] = 9.06077e-14
++ Smallest FDR q [17 str3#0_Tstat] = 1.9351e-12
++ Smallest FDR q [18 str3_Fstat] = 1.93565e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 6.41649e-15
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 6.414e-15
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.16856e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.16783e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 0.000208705
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 0.000208655
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.000436846
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.000436826
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 2.87555e-10
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 2.87495e-10
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.84483e-12
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.84422e-12
++ Wrote bucket dataset into ./stats.tb7693+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb7693+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb7693+orig.BRIK
++ Program finished; elapsed time=62.172
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.732       0.796  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.726       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.726       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.475       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.468       0.543  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb7693.r01.blur+orig.HEAD pb03.tb7693.r02.blur+orig.HEAD pb03.tb7693.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb7693_REML -Rvar stats.tb7693_REMLvar -Rfitts fitts.tb7693_REML -Rerrts errts.tb7693_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 50877 voxels (out of 426275 = 11.9%)
++ -----  matrix condition (448x24):  4.64702  ++ VERY GOOD ++
 + masked off 240860 voxels for being all zero; 185415 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 334 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=25.85
 + X matrix: 46.633% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=448 cols=24; 109*1 cases; total CPU=0.00 Elapsed=25.88
 +  average case bandwidth = 12.48
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=97.28
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=144.04
++ Output dataset ./stats.tb7693_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb7693_REML+orig.BRIK
++ Output dataset ./errts.tb7693_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb7693_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.39457e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 1.33404e-06
++ Smallest FDR q [3 uns1_Fstat] = 1.33404e-06
++ Smallest FDR q [5 uns2#0_Tstat] = 1.77295e-07
++ Smallest FDR q [6 uns2_Fstat] = 1.77295e-07
++ Smallest FDR q [8 uns3#0_Tstat] = 1.17918e-06
++ Smallest FDR q [9 uns3_Fstat] = 1.17918e-06
++ Smallest FDR q [11 str1#0_Tstat] = 1.66654e-07
++ Smallest FDR q [12 str1_Fstat] = 1.66654e-07
++ Smallest FDR q [14 str2#0_Tstat] = 3.71939e-07
++ Smallest FDR q [15 str2_Fstat] = 3.71939e-07
++ Smallest FDR q [17 str3#0_Tstat] = 0.00128965
++ Smallest FDR q [18 str3_Fstat] = 0.00128965
++ Smallest FDR q [20 unstructured#0_Tstat] = 2.61647e-13
++ Smallest FDR q [21 unstructured_Fstat] = 2.61647e-13
++ Smallest FDR q [23 structured#0_Tstat] = 2.93255e-12
++ Smallest FDR q [24 structured_Fstat] = 2.93255e-12
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.991959 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.991959 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999888 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999888 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999891 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999891 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.0168222
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.0168222
 + Added 25 FDR curves to dataset stats.tb7693_REML+orig
++ Output dataset ./stats.tb7693_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=177.36
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb7693 pb03.tb7693.r01.blur+orig.HEAD pb03.tb7693.r02.blur+orig.HEAD pb03.tb7693.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ elapsed time = 974.2 s
3dTstat -mean -prefix rm.signal.all all_runs.tb7693+orig[0..19,22..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox

*** failure while reading from brick file ./all_runs.tb7693+orig.BRIK
*** desired 381942400 bytes but only got 97190700
*** Unix error message: Success
   THD_load_datablock
  3dTstat main
** Command line was:
3dTstat -mean -prefix rm.signal.all 'all_runs.tb7693+orig[0..19,22..449]'
[7m** FATAL ERROR:[0m Unable to compute output dataset!
** Program compile date = Jul 20 2017
