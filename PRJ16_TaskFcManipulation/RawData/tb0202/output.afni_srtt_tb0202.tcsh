echo auto-generated by afni_proc.py, Tue Aug  8 23:29:01 2017
auto-generated by afni_proc.py, Tue Aug  8 23:29:01 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Tue Aug  8 23:29:03 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0202
endif
set output_dir = tb0202.srtt
if ( -d tb0202.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0202.srtt
mkdir tb0202.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0202.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0202.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0202.srtt/pb00.tb0202.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0202.srtt/pb00.tb0202.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0202.srtt/pb00.tb0202.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0202.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0202.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0202.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0202.r01.tcat+orig.BRIK is 2.300016 degrees from plumb.
++ 31522 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0202.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0202.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0202.r02.tcat+orig.BRIK is 2.300016 degrees from plumb.
++ 31476 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0202.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0202.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0202.r03.tcat+orig.BRIK is 2.300016 degrees from plumb.
++ 31931 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0202.r01.tshift -tpattern alt+z2 pb00.tb0202.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0202.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0202.r01.tcat+orig.BRIK is 2.300016 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0202.r02.tshift -tpattern alt+z2 pb00.tb0202.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0202.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0202.r02.tcat+orig.BRIK is 2.300016 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0202.r03.tshift -tpattern alt+z2 pb00.tb0202.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0202.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0202.r03.tcat+orig.BRIK is 2.300016 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0202.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 2.300016 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 399.600006
 + Used gradual clip level = 359.091187 .. 433.049988
 + Number voxels above clip level = 32751
 + Clustering voxels ...
 + Largest cluster has 32324 voxels
 + Clustering voxels ...
 + Largest cluster has 31121 voxels
 + Filled   348 voxels in small holes; now have 31469 voxels
 + Clustering voxels ...
 + Largest cluster has 31463 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 99609 voxels
 + Mask now has 31463 voxels
++ 31463 voxels in the mask [out of 131072: 24.00%]
++ first  13 x-planes are zero [from R]
++ last    9 x-planes are zero [from L]
++ first   3 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 969.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/969.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 2.300016 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 2.300016 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1636699 voxels in -source_automask+2
++ Zero-pad: ybot=1 ytop=0
++ Zero-pad: zbot=4 ztop=2
++ 31463 voxels [19.9%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 31463
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.777 30.040 19.284 (index)
 + source center of mass = 86.367 138.403 155.616 (index)
 + source-target CM = -2.723 0.643 -0.429 (xyz)
 + center of mass shifts = -2.723 0.643 -0.429
++ shift param auto-range: -72.2..66.8 -70.0..71.3 -47.9..47.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -12.723030 .. 7.276970
 + Range param#2 [y-shift] = -9.356613 .. 10.643387
 + Range param#3 [z-shift] = -10.429092 .. 9.570908
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -42.723030 .. 37.276970
 + Range param#2 [y-shift] = -39.356613 .. 40.643387
 + Range param#3 [z-shift] = -40.429092 .. 39.570908
 + 12 free parameters
++ Normalized convergence radius = 0.000437
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1636699 [out of 12546864] voxels
 + base mask has 42212 [out of 158080] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=91 usiz=172
 + - copying weight image
 + - using 31463 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 26774 total points stored in 248 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo---++-o+.+----.$+. + - best 45 costs found:
    0 v=-0.069855:  -2.72   0.64  -0.43   0.00   0.00   0.00  [grid]
    1 v=-0.042194: -16.06 -12.69  12.90 -15.00 -15.00  15.00  [grid]
    2 v=-0.037274:  -8.71  -2.76  24.10 -29.81  -4.26  23.54  [rand]
    3 v=-0.034382:  10.61 -12.69  12.90  15.00 -15.00 -15.00  [grid]
    4 v=-0.034209: -37.05 -15.94   8.17 -16.34  -8.64  40.54  [rand]
    5 v=-0.034090:  10.61 -26.02  12.90  30.00 -30.00  15.00  [grid]
    6 v=-0.033486:   7.10 -24.12  10.95   3.10 -34.36   2.55  [rand]
    7 v=-0.033230: -16.06 -12.69  12.90 -15.00 -15.00  30.00  [grid]
    8 v=-0.032688: -37.58 -35.03 -14.68 -40.22  24.26  41.52  [rand]
    9 v=-0.031777: -16.06 -12.69  12.90 -15.00 -30.00 -30.00  [grid]
   10 v=-0.031239:  10.61 -26.02  12.90  15.00 -30.00 -15.00  [grid]
   11 v=-0.030856:  31.60  17.23  -9.03 -16.34   8.64 -40.54  [rand]
   12 v=-0.030731:  10.61 -26.02 -27.10 -15.00  30.00  30.00  [grid]
   13 v=-0.030631: -37.05 -15.94  -9.03 -16.34   8.64  40.54  [rand]
   14 v=-0.030534: -16.75 -15.08  14.24 -24.25 -37.55   4.41  [rand]
   15 v=-0.030496:   3.26  -2.76  24.10  29.81  -4.26 -23.54  [rand]
   16 v=-0.030457: -16.06 -12.69  12.90 -30.00 -30.00 -30.00  [grid]
   17 v=-0.030402: -11.36 -19.79  17.04 -25.20 -18.50 -13.54  [rand]
   18 v=-0.030085: -16.06 -26.02  12.90 -15.00 -15.00 -15.00  [grid]
   19 v=-0.029987: -34.56 -11.15  -3.17 -23.31   3.26  40.47  [rand]
   20 v=-0.029835:  11.31 -15.08  14.24  24.25 -37.55  -4.41  [rand]
   21 v=-0.029587: -16.06 -12.69  26.24 -15.00  30.00  15.00  [grid]
   22 v=-0.029083: -34.56  12.44   2.31 -23.31   3.26  40.47  [rand]
   23 v=-0.029072: -16.06 -12.69  12.90 -15.00 -15.00 -30.00  [grid]
   24 v=-0.029023:  -8.71  -2.76  24.10  29.81  -4.26  23.54  [rand]
   25 v=-0.028611:  11.31 -15.08  14.24  24.25 -37.55   4.41  [rand]
   26 v=-0.028458:   4.33 -19.17  35.32  25.15 -27.05 -27.90  [rand]
   27 v=-0.028326: -16.06 -26.02  12.90 -15.00 -30.00 -15.00  [grid]
   28 v=-0.028302: -16.06 -12.69  12.90 -15.00 -15.00 -15.00  [grid]
   29 v=-0.027973: -16.06  13.98  12.90 -15.00 -30.00 -30.00  [grid]
   30 v=-0.027806:  13.49 -13.47  34.70  15.74 -34.09   7.78  [rand]
   31 v=-0.027671: -16.06 -12.69  12.90 -30.00 -15.00  15.00  [grid]
   32 v=-0.027659:  -7.68 -10.54  22.80 -35.24 -13.60  30.23  [rand]
   33 v=-0.027647: -16.06 -12.69  26.24 -15.00 -30.00  30.00  [grid]
   34 v=-0.027635:   3.26   4.05  24.10  29.81  -4.26 -23.54  [rand]
   35 v=-0.027549:  10.61  13.98 -13.76 -15.00  30.00  30.00  [grid]
   36 v=-0.027529:   1.36   6.87   7.37  -4.32  22.85  18.95  [rand]
   37 v=-0.027528:   7.10 -24.12  10.95   3.10 -34.36  -2.55  [rand]
   38 v=-0.027177: -34.56 -11.15   2.31 -23.31   3.26  40.47  [rand]
   39 v=-0.026966:  -8.71  -2.76  24.10  29.81   4.26  23.54  [rand]
   40 v=-0.026917: -12.55 -24.12  10.95  -3.10 -34.36  -2.55  [rand]
   41 v=-0.026898:  10.61  13.98 -27.10 -30.00  30.00  30.00  [grid]
   42 v=-0.026842: -35.21  15.34  11.38 -11.16   9.40  34.39  [rand]
   43 v=-0.026631:   2.23 -10.54  22.80  35.24 -13.60 -30.23  [rand]
   44 v=-0.026081: -18.71 -18.85  -6.15 -20.53   3.14  10.08  [rand]
*[#8004=-0.21894] *[#8011=-0.223881] *[#8014=-0.248535] *[#8015=-0.25116] *[#8019=-0.265306] *[#8020=-0.2899] *[#8023=-0.322979] *[#8024=-0.32572] *[#8026=-0.351683] *[#8029=-0.367465] *[#8032=-0.370517] *[#8034=-0.379943] *[#8037=-0.385161] *[#8039=-0.389808] *[#8041=-0.392062] *[#8042=-0.394938]  + - costs of the above after a little optimization:
  * 0 v=-0.394938:  -0.73  -1.68   4.00  -0.38  -0.21   1.17  [grid]
    1 v=-0.082415: -11.14  -9.41  12.61 -11.03 -16.66  12.91  [grid]
    2 v=-0.045944:  -9.22  -4.40  18.94 -28.80  -7.06  24.09  [rand]
    3 v=-0.050499:   9.86  -8.93  13.93  13.04 -15.43 -14.89  [grid]
    4 v=-0.035060: -36.78 -15.72   7.98 -16.53  -8.77  40.32  [rand]
    5 v=-0.035551:  11.02 -26.07  13.44  29.72 -30.09  14.56  [grid]
    6 v=-0.072989:   3.12 -25.76  15.04   5.72 -30.61  -1.07  [rand]
    7 v=-0.063324: -12.74  -4.64  13.66 -15.80 -13.93  28.80  [grid]
    8 v=-0.036302: -38.96 -34.43 -18.41 -40.90  24.00  43.78  [rand]
    9 v=-0.052291: -13.49 -12.01  14.26 -21.87 -31.83 -29.73  [grid]
   10 v=-0.037736:  10.54 -30.18  12.80  14.83 -29.66 -15.10  [grid]
   11 v=-0.037326:  32.96  21.55  -8.05 -17.77   9.72 -44.16  [rand]
   12 v=-0.032077:  10.52 -25.27 -27.06 -15.07  30.11  30.10  [grid]
   13 v=-0.036209: -37.71 -17.08  -9.17 -17.85   8.64  44.77  [rand]
   14 v=-0.076465:  -6.24 -16.21  18.40 -12.68 -36.94  -2.49  [rand]
   15 v=-0.040550:   0.75  -4.90  22.02  26.13  -8.66 -24.34  [rand]
   16 v=-0.053430: -13.85 -13.24  12.98 -20.83 -30.63 -26.94  [grid]
   17 v=-0.052873:  -5.07 -16.34  15.61 -26.97 -17.32 -13.33  [rand]
   18 v=-0.075637:  -7.00 -20.89  12.35 -10.33 -21.26  -4.12  [grid]
   19 v=-0.039743: -36.73 -10.46  -5.50 -24.13   2.49  43.53  [rand]
   20 v=-0.056690:   7.37 -14.66  16.77  21.31 -36.15   2.49  [rand]
   21 v=-0.031481: -14.92 -12.99  26.44 -15.80  29.06  14.24  [grid]
   22 v=-0.040154: -36.51   8.28   0.99 -20.27   1.05  41.12  [rand]
   23 v=-0.030918: -16.95 -13.12  13.32 -15.01 -16.65 -31.25  [grid]
   24 v=-0.032544:  -9.50  -2.59  25.47  30.39  -4.28  23.41  [rand]
   25 v=-0.058003:   7.27 -13.57  17.29  20.99 -37.53   2.88  [rand]
   26 v=-0.035162:   5.68 -19.43  36.35  26.84 -24.85 -28.14  [rand]
   27 v=-0.081718:  -4.80 -20.92  16.57  -6.47 -29.45  -2.67  [grid]
   28 v=-0.042148: -15.14  -9.87  14.18 -10.73 -12.35 -16.85  [grid]
   29 v=-0.051873: -13.05  10.29  14.01 -18.23 -25.58 -23.54  [grid]
   30 v=-0.033080:  12.99 -15.39  34.83  16.94 -33.62  12.75  [rand]
   31 v=-0.086547:  -9.91  -0.96  14.75  -9.10 -10.94  11.88  [grid]
   32 v=-0.042067: -11.86  -9.13  21.32 -34.57 -11.32  28.54  [rand]
   33 v=-0.063866: -12.41 -18.30  23.58 -10.61 -30.77  26.44  [grid]
   34 v=-0.045142:   1.57  -2.55  19.60  36.42  -2.00 -23.94  [rand]
   35 v=-0.042169:  10.86  14.90 -11.79 -14.50  34.45  28.39  [grid]
   36 v=-0.036003:   0.84   8.76   5.86  -5.02  21.43  12.54  [rand]
   37 v=-0.073658:   1.13 -26.72  14.72   2.60 -29.68  -3.53  [rand]
   38 v=-0.050498: -40.76  -1.62   6.23 -18.92   3.62  41.15  [rand]
   39 v=-0.036267:  -9.10  -2.07  22.30  36.57   2.58  29.54  [rand]
   40 v=-0.081353:  -3.90 -19.78  17.83  -6.53 -35.83  -0.74  [rand]
   41 v=-0.033478:   9.88  12.79 -27.66 -29.92  28.47  30.87  [grid]
   42 v=-0.047595: -37.20   5.21  11.28 -12.01   8.60  33.53  [rand]
   43 v=-0.042144:   2.30 -11.36  19.17  33.66 -15.03 -24.78  [rand]
   44 v=-0.046992: -11.31 -18.20  -6.93 -17.10   5.77   9.01  [rand]
 + - save # 0 for twobest
 + - save #31 for twobest
 + - save # 1 for twobest
 + - save #27 for twobest
 + - save #40 for twobest
 + - save #14 for twobest
 + - save #18 for twobest
 + - save #37 for twobest
 + - skip # 6 for twobest: too close to set #37
 + - save #33 for twobest
 + - save # 7 for twobest
 + - save #25 for twobest
 + - skip #20 for twobest: too close to set #25
 + - save #16 for twobest
 + - save #17 for twobest
 + - skip # 9 for twobest: too close to set #16
 + - save #29 for twobest
 + - save # 3 for twobest
 + - save #38 for twobest
 + - save #42 for twobest
 + - save #44 for twobest
 + - save # 2 for twobest
 + - save #34 for twobest
 + - save #35 for twobest
 + - save #28 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=91 usiz=172
 + - retaining old weight image
 + - using 31463 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26872 total points stored in 269 'RHDD(13.7332)' bloks
*[#9612=-0.39972] *[#9634=-0.400339] *[#9636=-0.403889] *[#9637=-0.404381] *[#9640=-0.404676] *[#9641=-0.404844] *[#9642=-0.404942] *[#9644=-0.405064] *[#9646=-0.405486] *[#9649=-0.405579] *[#9653=-0.409085] *[#9654=-0.409173] *[#9656=-0.409368] *[#9658=-0.409991] *[#9659=-0.410012] *[#9661=-0.410974] *[#9664=-0.411106] *[#9665=-0.411391] *[#9666=-0.411734] *[#9667=-0.41195] *[#9669=-0.412988] *[#9672=-0.413075] *[#9673=-0.413312] *[#9674=-0.413571] *[#9677=-0.414132] *[#9680=-0.414448] *[#9683=-0.414665] *[#9684=-0.415] *[#9687=-0.415311] *[#9690=-0.415604] *[#9693=-0.415804] 
 + - param set #1 has cost=-0.415804
 + -- Parameters = -0.4132 -2.2324 3.6068 -0.0231 -0.1608 1.3600 1.0000 0.9927 0.9981 0.0022 0.0043 -0.0022
 + - param set #2 has cost=-0.107213
 + -- Parameters = -6.7316 -1.6758 9.3287 -6.8628 -6.7486 9.4123 1.0087 1.0303 1.0074 -0.0042 -0.0017 0.0013
 + - param set #3 has cost=-0.071416
 + -- Parameters = -9.9866 -8.1237 12.6692 -9.9819 -16.6545 13.3541 0.9953 1.0159 0.9962 -0.0018 0.0082 -0.0036
 + - param set #4 has cost=-0.071639
 + -- Parameters = -5.1281 -21.0955 13.6064 -5.8402 -26.3037 1.4831 0.9973 1.0060 1.0018 0.0009 0.0010 -0.0005
 + - param set #5 has cost=-0.055822
 + -- Parameters = -4.1193 -19.7359 15.3314 -6.8669 -36.6260 -1.2737 0.9986 0.9979 0.9968 -0.0040 -0.0008 -0.0045
 + - param set #6 has cost=-0.055709
 + -- Parameters = -5.4313 -16.5744 18.4944 -12.3458 -37.4341 -2.3061 1.0146 0.9991 0.9996 -0.0006 -0.0014 -0.0019
 + - param set #7 has cost=-0.063858
 + -- Parameters = -8.3223 -21.6413 11.3528 -9.7108 -21.5919 -3.0060 0.9976 1.0005 0.9987 -0.0007 0.0002 0.0143
 + - param set #8 has cost=-0.060848
 + -- Parameters = 1.2739 -26.1259 15.0732 3.3081 -29.2477 -0.2280 0.9970 0.9976 0.9977 -0.0009 -0.0033 -0.0020
 + - param set #9 has cost=-0.047920
 + -- Parameters = -12.7879 -18.2732 22.9833 -11.2417 -30.2148 27.2433 1.0023 1.0020 1.0071 0.0045 0.0184 0.0080
 + - param set #10 has cost=-0.047889
 + -- Parameters = -11.6650 -4.5020 13.6180 -14.7209 -16.1439 26.3239 0.9901 1.0291 0.9938 0.0057 -0.0068 -0.0042
 + - param set #11 has cost=-0.048361
 + -- Parameters = 7.8380 -13.8290 17.8993 19.2684 -33.4558 4.0821 1.0078 0.9963 0.9997 0.0019 0.0011 0.0008
 + - param set #12 has cost=-0.412414
 + -- Parameters = -0.3627 -2.1862 3.6936 -0.0422 -0.0359 1.5170 0.9992 0.9945 0.9967 0.0012 -0.0043 0.0008
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0386 
 + --- dist(#3,#1) = 0.102 
 + --- dist(#4,#1) = 0.29 
 + --- dist(#5,#1) = 0.183 
 + --- dist(#6,#1) = 0.243 
 + --- dist(#7,#1) = 0.323 
 + --- dist(#8,#1) = 0.405 
 + --- dist(#9,#1) = 0.414 
 + --- dist(#10,#1) = 0.37 
 + --- dist(#11,#1) = 0.334 
 + --- dist(#12,#1) = 0.277 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=91 usiz=172
 + - retaining old weight image
 + - using 31463 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 27150 total points stored in 279 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.385496
 + -- Parameters = -0.4368 -2.5040 3.4615 -0.0280 -0.1338 1.2475 1.0024 0.9879 0.9954 -0.0003 0.0058 -0.0053
 + - param set #2 has cost=-0.384792
 + -- Parameters = -0.4430 -2.4823 3.3999 -0.0533 -0.0720 1.3266 1.0017 0.9879 0.9960 -0.0030 0.0031 -0.0045
 + - param set #3 has cost=-0.274248
 + -- Parameters = -1.7006 -1.1939 3.9832 -1.1259 -1.8998 0.8969 0.9659 1.0423 1.0002 0.0011 0.0008 -0.0201
 + - param set #4 has cost=-0.058288
 + -- Parameters = -5.0570 -21.4304 13.5982 -5.9551 -26.2648 1.2471 0.9933 1.0044 1.0025 -0.0012 0.0013 0.0059
 + - param set #5 has cost=-0.055187
 + -- Parameters = -9.5730 -8.0958 12.6038 -9.6487 -16.6526 13.3964 0.9969 1.0177 0.9967 -0.0011 0.0082 -0.0062
 + - param set #6 has cost=-0.054954
 + -- Parameters = -8.1501 -21.3912 11.0365 -9.6885 -21.1911 -3.0807 0.9773 0.9840 1.0012 0.0031 0.0034 0.0089
 + - param set #7 has cost=-0.051784
 + -- Parameters = 1.2672 -26.1281 15.3332 3.1695 -29.2808 -0.3416 0.9927 0.9929 0.9931 -0.0008 -0.0036 -0.0021
 + - param set #8 has cost=-0.044972
 + -- Parameters = -4.4901 -20.3993 15.2966 -7.5657 -35.4794 -1.7737 0.9933 0.9945 0.9869 -0.0053 -0.0062 -0.0096
 + - param set #9 has cost=-0.055107
 + -- Parameters = -5.2327 -19.9043 19.3262 -10.1023 -41.6830 1.3707 0.9932 0.9677 0.8853 -0.0221 -0.0156 0.0255
 + - param set #10 has cost=-0.036587
 + -- Parameters = 7.8602 -13.8821 17.9283 19.0928 -33.6312 3.7975 1.0167 0.9935 0.9963 0.0022 -0.0004 -0.0019
 + - param set #11 has cost=-0.040904
 + -- Parameters = -12.9865 -18.0325 23.2677 -10.4183 -31.2812 25.0791 0.9973 0.9967 1.0008 0.0033 0.0168 0.0105
 + - param set #12 has cost=-0.036996
 + -- Parameters = -11.4276 -4.3857 13.7248 -14.2453 -16.2856 26.5712 0.9938 1.0323 0.9954 0.0128 -0.0060 -0.0053
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0124 XXX
 + --- dist(#3,#1) = 0.29 
 + --- dist(#4,#1) = 0.184 
 + --- dist(#5,#1) = 0.462 
 + --- dist(#6,#1) = 0.236 
 + --- dist(#7,#1) = 0.324 
 + --- dist(#8,#1) = 0.393 
 + --- dist(#9,#1) = 0.346 
 + --- dist(#10,#1) = 0.281 
 + --- dist(#11,#1) = 0.372 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=91 usiz=172
 + - retaining old weight image
 + - using 31463 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 27562 total points stored in 292 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.361353
 + -- Parameters = -0.5710 -2.1860 3.1057 0.1084 -1.0335 0.8081 1.0024 0.9866 1.0054 0.0032 0.0165 -0.0241
 + - param set #2 has cost=-0.354056
 + -- Parameters = -0.5685 -1.9211 3.4572 -0.1963 -1.0735 1.1004 0.9944 0.9910 0.9946 -0.0070 0.0014 -0.0237
 + - param set #3 has cost=-0.049544
 + -- Parameters = -5.7308 -21.5052 13.7580 -6.1244 -26.3951 1.1645 0.9795 1.0031 1.0011 -0.0025 0.0028 0.0036
 + - param set #4 has cost=-0.052290
 + -- Parameters = -8.6953 -7.7537 12.1800 -9.1380 -16.0497 10.1176 0.9954 1.0112 0.9981 0.0002 0.0309 -0.0127
 + - param set #5 has cost=-0.045415
 + -- Parameters = -5.3190 -19.5832 19.4250 -10.1141 -41.9123 1.1880 0.9918 0.9778 0.8806 -0.0221 -0.0136 0.0235
 + - param set #6 has cost=-0.048046
 + -- Parameters = -7.8737 -21.6979 10.9446 -9.7381 -20.8695 -2.9123 0.9826 0.9760 0.9985 0.0049 0.0111 0.0063
 + - param set #7 has cost=-0.046022
 + -- Parameters = 0.7473 -26.0201 15.3301 2.3582 -28.6099 0.1220 0.9814 0.9894 0.9898 0.0024 -0.0056 -0.0052
 + - param set #8 has cost=-0.036236
 + -- Parameters = -4.4371 -20.1300 15.4245 -7.4219 -35.5253 -1.7177 0.9948 0.9962 0.9824 -0.0071 -0.0084 -0.0068
 + - param set #9 has cost=-0.038001
 + -- Parameters = -12.6549 -18.2810 23.4471 -13.5356 -30.9835 24.8145 0.9859 0.9976 1.0107 0.0154 0.0227 0.0297
 + - param set #10 has cost=-0.028664
 + -- Parameters = -11.3274 -4.3310 13.9631 -14.1059 -16.4937 26.6600 0.9946 1.0323 0.9929 0.0143 -0.0011 -0.0065
 + - param set #11 has cost=-0.031040
 + -- Parameters = 7.8223 -14.2722 17.8655 18.8269 -33.6258 3.4027 1.0159 0.9930 0.9959 0.0036 -0.0017 -0.0025
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0677 
 + --- dist(#3,#1) = 0.167 
 + --- dist(#4,#1) = 0.282 
 + --- dist(#5,#1) = 0.244 
 + --- dist(#6,#1) = 0.306 
 + --- dist(#7,#1) = 0.454 
 + --- dist(#8,#1) = 0.333 
 + --- dist(#9,#1) = 0.383 
 + --- dist(#10,#1) = 0.362 
 + --- dist(#11,#1) = 0.287 
 + - Total coarse refinement net CPU time = 0.0 s; 3107 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=91 usiz=172
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 27701 total points stored in 296 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.334372 *
 + -- Parameters = -0.5710 -2.1860 3.1057 0.1084 -1.0335 0.8081 1.0024 0.9866 1.0054 0.0032 0.0165 -0.0241
 + - cost(#2)=-0.328402  
 + -- Parameters = -0.5685 -1.9211 3.4572 -0.1963 -1.0735 1.1004 0.9944 0.9910 0.9946 -0.0070 0.0014 -0.0237
 + - cost(#3)=-0.046645  
 + -- Parameters = -8.6953 -7.7537 12.1800 -9.1380 -16.0497 10.1176 0.9954 1.0112 0.9981 0.0002 0.0309 -0.0127
 + - cost(#4)=-0.045374  
 + -- Parameters = -5.7308 -21.5052 13.7580 -6.1244 -26.3951 1.1645 0.9795 1.0031 1.0011 -0.0025 0.0028 0.0036
 + - cost(#5)=-0.045641  
 + -- Parameters = -7.8737 -21.6979 10.9446 -9.7381 -20.8695 -2.9123 0.9826 0.9760 0.9985 0.0049 0.0111 0.0063
 + - cost(#6)=-0.041192  
 + -- Parameters = 0.7473 -26.0201 15.3301 2.3582 -28.6099 0.1220 0.9814 0.9894 0.9898 0.0024 -0.0056 -0.0052
 + - cost(#7)=-0.042098  
 + -- Parameters = -5.3190 -19.5832 19.4250 -10.1141 -41.9123 1.1880 0.9918 0.9778 0.8806 -0.0221 -0.0136 0.0235
 + - cost(#8)=-0.034204  
 + -- Parameters = -12.6549 -18.2810 23.4471 -13.5356 -30.9835 24.8145 0.9859 0.9976 1.0107 0.0154 0.0227 0.0297
 + - cost(#9)=-0.033360  
 + -- Parameters = -4.4371 -20.1300 15.4245 -7.4219 -35.5253 -1.7177 0.9948 0.9962 0.9824 -0.0071 -0.0084 -0.0068
 + - cost(#10)=-0.030935  
 + -- Parameters = 7.8223 -14.2722 17.8655 18.8269 -33.6258 3.4027 1.0159 0.9930 0.9959 0.0036 -0.0017 -0.0025
 + - cost(#11)=-0.023977  
 + -- Parameters = -11.3274 -4.3310 13.9631 -14.1059 -16.4937 26.6600 0.9946 1.0323 0.9929 0.0143 -0.0011 -0.0065
 + - cost(#12)=-0.050233  
 + -- Parameters = -2.7230 0.6434 -0.4291 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.335482 *
 + -- Parameters = -0.5496 -2.0812 3.1745 0.1389 -1.0773 0.8937 1.0086 0.9878 1.0073 0.0024 0.0143 -0.0253
 + - cost(#2)=-0.335136  
 + -- Parameters = -0.5252 -2.0693 3.2884 0.0176 -1.0801 1.0510 1.0062 0.9898 1.0025 0.0011 0.0113 -0.0238
 + - cost(#3)=-0.049853  
 + -- Parameters = -8.3410 -6.9339 11.8087 -9.0576 -16.1896 9.3831 0.9656 1.0192 0.9899 -0.0202 0.0533 -0.0229
 + - cost(#4)=-0.048362  
 + -- Parameters = -5.0729 -22.0572 14.0604 -6.0200 -26.3631 1.4047 0.9613 1.0022 1.0015 -0.0061 0.0066 0.0032
 + - cost(#5)=-0.046107  
 + -- Parameters = -7.7380 -21.8423 10.8058 -9.7213 -20.9144 -2.7153 0.9821 0.9762 0.9977 -0.0010 0.0104 0.0052
 + - cost(#6)=-0.042471  
 + -- Parameters = 0.5660 -25.9863 15.3184 2.3264 -28.6515 0.0741 0.9713 0.9879 0.9904 0.0012 -0.0056 -0.0055
 + - cost(#7)=-0.042670  
 + -- Parameters = -5.3362 -19.7344 19.4299 -10.3447 -42.0290 0.9738 0.9888 0.9828 0.8815 -0.0228 -0.0143 0.0217
 + - cost(#8)=-0.037711  
 + -- Parameters = -12.4926 -17.7608 23.3785 -13.5371 -30.7210 24.1726 0.9789 1.0096 1.0117 0.0348 0.0253 0.0282
 + - cost(#9)=-0.033858  
 + -- Parameters = -4.5217 -19.7573 15.3947 -7.6382 -35.3538 -1.6690 0.9957 1.0010 0.9846 -0.0080 -0.0096 -0.0061
 + - cost(#10)=-0.031364  
 + -- Parameters = 7.8177 -14.3641 17.9932 19.0934 -33.7273 3.7688 1.0161 0.9954 0.9952 0.0036 -0.0046 -0.0035
 + - cost(#11)=-0.027347  
 + -- Parameters = -10.7493 -4.5845 13.1137 -12.8138 -15.3322 25.2777 0.9938 1.0275 0.9866 0.0139 -0.0000 -0.0028
 + - cost(#12)=-0.329214  
 + -- Parameters = -0.5107 -2.7211 3.1125 -0.0023 0.2195 1.0615 1.0058 0.9888 1.0114 -0.0016 0.0084 0.0007
 + - case #1 is now the best
 + - Initial  cost = -0.335482
 + - Initial fine Parameters = -0.5496 -2.0812 3.1745 0.1389 -1.0773 0.8937 1.0086 0.9878 1.0073 0.0024 0.0143 -0.0253
 + - Finalish cost = -0.336214 ; 287 funcs
 + - Final    cost = -0.336255 ; 241 funcs
 + Final fine fit Parameters:
       x-shift=-0.5502   y-shift=-1.9341   z-shift= 3.0967
       z-angle= 0.0743   x-angle=-1.4057   y-angle= 0.9763
       x-scale= 1.0074   y-scale= 0.9879   z-scale= 1.0081
     y/x-shear= 0.0022 z/x-shear= 0.0115 z/y-shear=-0.0321
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.5502 -1.9341 3.0967 0.0743 -1.4057 0.9763 1.0074 0.9879 1.0081 0.0022 0.0115 -0.0321
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 18.7
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 2.300016 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0021 -0.9865 0.0162 229.7117 0.0287 0.0466 1.0084 82.6680 -1.0072 0.0009 0.0172 200.2204
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 17.2 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2102.360100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 77.5291 47.9751   ITER = 8/137
77.5291

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 79ms]
lev=0 0..171 0..213 0..166: [first cost=-0.67953] ... done [cost:-0.67953==>-0.74049]
lev=1 patch=129x161x125 [clock= 12m 25s 797ms]........:[cost=-0.76413]:........ done [cost:-0.74049==>-0.76822 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 16m 43s 19ms]......................... done [cost:-0.76822==>-0.83732 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 20m 26s 621ms].......... done [cost:-0.83732==>-0.89002 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 23m 23s 465ms]................... done [cost:-0.89002==>-0.94638 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 25m 28s 341ms]..................... done [cost:-0.94638==>-1.00131 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 27m 38s 293ms]........................ done [cost:-1.00131==>-1.05387 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 29m 57s 195ms]............................. done [cost:-1.05387==>-1.12926 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 32m 27s 12ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0202/tb0202.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 7.7 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0202.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 2.300016 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0202.r01.tshift+orig.BRIK is 2.300016 degrees from plumb.
++ Reading input dataset ./pb01.tb0202.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 34572 voxels
 + 5869 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.130  pitch=-4.065  yaw=-0.203  dS=-0.683  dL=-0.195  dP=-0.715
++ Mean: roll=+0.218  pitch=-0.725  yaw=+0.422  dS=-0.167  dL=+0.256  dP=+0.057
++ Max : roll=+0.497  pitch=+1.206  yaw=+1.225  dS=+0.938  dL=+1.043  dP=+1.409
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 2.16(2.16) 2.21(0.46) 0.56(2.32) 0.34(0.55) 2.40(2.19) 1.66(1.48) 0.54(1.45) 3.15(2.80) 2.02(1.57) 1.80(1.23) 1.52(0.32) 1.65(0.15) 1.90(0.37) 1.72(0.22) 1.73(0.18) 1.66(0.15) 1.69(0.06) 1.76(0.08) 1.73(0.09) 1.64(0.10) 1.69(0.07) 1.68(0.09) 1.75(0.09) 1.78(0.05) 1.82(0.07) 2.01(0.19) 2.03(0.06) 2.04(0.04) 2.10(0.07) 2.17(0.08) 2.13(0.08) 2.15(0.07) 2.02(0.15) 1.80(0.39) 2.01(0.24) 1.98(0.07) 1.93(0.13) 1.90(0.18) 1.89(0.10) 1.97(0.11) 1.95(0.12) 1.95(0.06) 1.80(0.33) 1.78(0.19) 1.85(0.16) 1.86(0.14) 1.85(0.06) 1.84(0.04) 1.86(0.04) 1.86(0.06) 1.73(0.21) 1.79(0.16) 1.80(0.12) 1.87(0.07) 1.86(0.06) 1.89(0.05) 1.91(0.11) 1.71(0.33) 1.72(0.40) 1.76(0.10) 1.76(0.10) 1.84(0.14) 1.78(0.19) 1.67(0.11) 1.72(0.16) 1.74(0.05) 1.75(0.05) 1.74(0.03) 1.72(0.05) 1.69(0.06) 1.71(0.09) 1.38(0.63) 1.23(1.66) 1.40(1.63) 1.50(0.15) 1.52(0.14) 1.53(0.09) 1.61(0.11) 1.42(0.38) 1.26(0.24) 1.43(0.35) 1.40(0.11) 1.40(0.14) 1.52(0.21) 1.87(0.46) 1.83(0.13) 1.84(0.38) 1.66(0.19) 1.22(0.69) 1.52(0.45) 1.57(0.32) 1.57(0.06) 1.54(0.06) 1.53(0.03) 1.61(0.11) 1.64(0.08) 1.65(0.12) 1.62(0.09) 1.53(0.42) 1.64(0.16) 1.72(0.09) 1.79(0.08) 1.75(0.12) 1.69(0.13) 1.43(0.29) 1.48(0.09) 1.73(0.30) 1.70(0.11) 1.68(0.10) 1.67(0.26) 1.53(1.02) 1.87(1.41) 1.40(1.76) 1.55(0.26) 1.76(0.22) 1.83(0.12) 1.99(0.23) 2.00(0.04) 1.96(0.10) 1.94(0.06) 1.95(0.07) 2.00(0.09) 2.10(0.19) 1.91(0.31) 1.91(0.12) 2.06(0.20) 2.00(0.13) 1.80(0.27) 1.92(0.25) 1.95(0.10) 1.81(0.25) 1.84(0.06) 1.87(0.05) 1.85(0.06) 2.01(0.30) 2.08(0.08) 2.06(0.03) 2.04(0.04) 1.99(0.10) 1.99(0.21) 1.57(1.62) 2.65(1.47) 7.50(9.25) 3.17(4.46) 2.16(1.04) 2.34(0.48) 2.36(0.17) 2.35(0.15) 2.37(0.18)
++ Max displacement in automask = 7.50 (mm) at sub-brick 143
++ Max delta displ  in automask = 9.25 (mm) at sub-brick 143
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0202.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0202.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0202.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0202.r01.tshift+orig.BRIK is 2.300016 degrees from plumb.
++ Source dataset: ./pb01.tb0202.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 14.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 2.300016 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0202.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 2.300016 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0202.r02.tshift+orig.BRIK is 2.300016 degrees from plumb.
++ Reading input dataset ./pb01.tb0202.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 34599 voxels
 + 5830 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.584  pitch=-1.075  yaw=-0.524  dS=-0.630  dL=+0.637  dP=-0.900
++ Mean: roll=-0.133  pitch=-0.400  yaw=-0.102  dS=-0.076  dL=+0.986  dP=+0.520
++ Max : roll=+0.153  pitch=+0.945  yaw=+0.217  dS=+0.534  dL=+1.201  dP=+0.712
++ Max displacements (mm) for each sub-brick:
 2.51(0.00) 2.57(0.33) 2.21(1.17) 2.56(0.58) 2.35(0.31) 2.24(0.14) 2.41(0.24) 2.31(0.18) 2.27(0.11) 1.90(0.64) 1.93(0.28) 1.92(0.21) 1.96(0.08) 1.92(0.08) 1.94(0.08) 1.93(0.09) 1.88(0.08) 1.85(0.05) 1.79(0.09) 1.76(0.06) 1.73(0.05) 1.72(0.12) 1.70(0.09) 1.71(0.04) 1.73(0.04) 1.73(0.03) 1.76(0.04) 1.77(0.04) 1.78(0.03) 1.76(0.05) 1.76(0.02) 1.75(0.03) 1.75(0.04) 1.75(0.02) 1.71(0.07) 1.67(0.07) 1.65(0.04) 1.66(0.04) 1.65(0.03) 1.66(0.03) 1.64(0.04) 1.62(0.04) 1.61(0.07) 1.61(0.06) 1.62(0.05) 1.63(0.04) 1.58(0.06) 1.60(0.03) 1.64(0.05) 1.61(0.04) 1.60(0.06) 1.61(0.05) 1.60(0.04) 1.60(0.05) 1.61(0.06) 1.61(0.04) 1.62(0.06) 1.61(0.02) 1.61(0.05) 1.64(0.07) 1.34(0.54) 1.41(0.41) 2.15(1.56) 2.06(0.17) 2.02(0.08) 2.04(0.11) 2.03(0.03) 2.01(0.06) 1.97(0.08) 1.91(0.08) 1.90(0.07) 1.90(0.05) 1.87(0.05) 1.89(0.07) 1.85(0.07) 1.90(0.14) 1.87(0.04) 1.91(0.06) 1.91(0.09) 1.91(0.05) 1.91(0.05) 1.89(0.10) 1.88(0.12) 1.87(0.09) 1.84(0.08) 1.79(0.05) 1.80(0.03) 1.81(0.03) 1.82(0.07) 1.81(0.06) 1.58(0.25) 1.48(0.38) 1.51(0.08) 1.57(0.08) 1.66(0.09) 1.69(0.04) 1.74(0.05) 1.73(0.04) 1.75(0.04) 1.75(0.02) 1.73(0.03) 1.72(0.03) 1.73(0.05) 1.75(0.04) 1.75(0.07) 1.75(0.05) 1.75(0.03) 1.73(0.03) 1.73(0.09) 1.71(0.03) 1.68(0.04) 1.69(0.04) 1.70(0.06) 1.71(0.08) 1.71(0.02) 1.67(0.05) 1.65(0.04) 1.66(0.03) 1.66(0.08) 1.65(0.04) 1.56(0.09) 1.26(0.48) 1.30(0.17) 2.01(1.09) 1.38(0.71) 1.27(0.28) 1.39(0.16) 1.40(0.24) 1.42(0.10) 1.46(0.10) 1.41(0.08) 1.48(0.14) 1.55(0.11) 1.58(0.09) 1.59(0.14) 1.60(0.04) 1.54(0.17) 1.60(0.11) 1.60(0.07) 1.58(0.12) 1.56(0.16) 1.10(0.96) 2.41(2.43) 1.55(1.13) 1.56(0.65) 1.86(0.40) 1.59(0.71) 1.58(0.28) 1.41(0.38) 1.35(0.20)
++ Max displacement in automask = 2.57 (mm) at sub-brick 1
++ Max delta displ  in automask = 2.43 (mm) at sub-brick 142
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0202.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0202.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0202.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0202.r02.tshift+orig.BRIK is 2.300016 degrees from plumb.
++ Source dataset: ./pb01.tb0202.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 2.300016 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.3
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0202.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 2.300016 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0202.r03.tshift+orig.BRIK is 2.300016 degrees from plumb.
++ Reading input dataset ./pb01.tb0202.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 34638 voxels
 + 5828 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.394  pitch=-0.628  yaw=-0.365  dS=+0.131  dL=+0.377  dP=-0.099
++ Mean: roll=-0.275  pitch=-0.180  yaw=-0.064  dS=+0.500  dL=+0.571  dP=+0.384
++ Max : roll=-0.069  pitch=+0.974  yaw=+0.109  dS=+0.824  dL=+0.765  dP=+0.574
++ Max displacements (mm) for each sub-brick:
 1.41(0.00) 1.28(0.28) 1.11(0.39) 1.12(0.61) 1.12(0.16) 1.18(0.09) 1.09(0.36) 1.16(0.25) 1.20(0.08) 1.17(0.18) 1.21(0.14) 1.21(0.10) 1.23(0.05) 1.24(0.06) 1.24(0.05) 1.29(0.05) 1.33(0.07) 1.32(0.05) 1.37(0.06) 1.38(0.02) 1.32(0.09) 1.27(0.11) 1.26(0.02) 1.30(0.05) 1.31(0.02) 1.31(0.02) 1.34(0.05) 1.35(0.02) 1.34(0.06) 1.38(0.06) 1.44(0.10) 1.36(0.08) 1.38(0.05) 1.39(0.04) 1.39(0.04) 1.38(0.02) 1.34(0.05) 1.33(0.03) 1.35(0.05) 1.32(0.14) 1.29(0.44) 1.24(0.12) 1.20(0.09) 1.22(0.04) 1.21(0.09) 1.38(0.54) 1.43(0.73) 1.18(1.30) 1.21(0.17) 1.19(0.05) 1.22(0.07) 1.23(0.02) 1.23(0.04) 1.25(0.04) 1.26(0.02) 1.26(0.03) 1.26(0.02) 1.28(0.02) 1.28(0.02) 1.30(0.05) 1.29(0.03) 1.29(0.05) 1.29(0.06) 1.28(0.03) 1.29(0.04) 1.28(0.04) 1.26(0.04) 1.24(0.04) 1.24(0.02) 1.25(0.03) 1.26(0.02) 1.26(0.05) 1.27(0.04) 1.29(0.05) 1.29(0.03) 1.29(0.06) 1.31(0.05) 1.32(0.09) 1.31(0.57) 1.41(0.88) 1.43(1.99) 1.42(0.33) 1.46(0.07) 1.37(0.15) 1.27(0.18) 1.26(0.13) 1.32(0.10) 1.29(0.53) 1.31(0.27) 1.32(0.26) 1.26(0.10) 1.23(0.08) 1.20(0.03) 1.22(0.06) 1.24(0.04) 1.21(0.06) 1.24(0.10) 1.24(0.05) 1.27(0.07) 1.27(0.07) 1.25(0.04) 1.24(0.04) 1.26(0.04) 1.26(0.05) 1.25(0.05) 1.24(0.06) 1.29(0.08) 1.34(0.05) 1.38(0.06) 1.38(0.03) 1.37(0.04) 1.38(0.07) 1.38(0.02) 1.37(0.06) 1.39(0.04) 1.41(0.04) 1.40(0.06) 1.37(0.03) 1.35(0.04) 1.35(0.04) 1.35(0.05) 1.34(0.05) 1.33(0.06) 1.32(0.02) 1.31(0.04) 1.39(0.12) 1.29(0.87) 2.04(1.75) 1.21(2.53) 1.31(0.12) 1.24(0.26) 1.24(0.17) 1.25(0.09) 1.29(0.09) 1.28(0.09) 1.28(0.04) 1.25(0.08) 1.26(0.04) 1.25(0.03) 1.24(0.06) 1.28(0.05) 1.29(0.37) 1.29(0.50) 1.28(0.13) 1.34(0.20) 1.49(0.28) 1.60(0.22) 1.43(0.46) 1.32(0.68) 1.51(0.68)
++ Max displacement in automask = 2.04 (mm) at sub-brick 127
++ Max delta displ  in automask = 2.53 (mm) at sub-brick 128
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0202.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0202.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0202.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0202.r03.tshift+orig.BRIK is 2.300016 degrees from plumb.
++ Source dataset: ./pb01.tb0202.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 2.300016 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.1
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0202.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0202.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0202.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0202.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0202.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0202.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 2.300016 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0202
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0202+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0202+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1503152 voxels in source_automask+0
++ Zero-pad: zbot=3 ztop=2
++ Computing -autobox
++ 319052 voxels [69.0%] in weight mask
++ Number of points for matching = 149954
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.134874
   sp   = 0.32378
   mi   = -0.53112
   crM  = 0.0376219
   nmi  = 0.83961
   je   = 2.7803
   hel  = -0.107445
   crA  = 0.194067
   crU  = 0.200396
   lss  = 0.865126
   lpc  = 0.135443
   lpa  = 0.864557
   lpc+ = 0.265071
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.6
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0202+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0202+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 31.1 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0202.r01.blur pb02.tb0202.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0202.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0202.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0202.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0202.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0202.r02.blur pb02.tb0202.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0202.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0202.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0202.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0202.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0202.r03.blur pb02.tb0202.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0202.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0202.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0202.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0202.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0202.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0202.r01.blur+orig
++ Forming automask
 + Fixed clip level = 391.344299
 + Used gradual clip level = 351.727448 .. 426.358704
 + Number voxels above clip level = 57054
 + Clustering voxels ...
 + Largest cluster has 56862 voxels
 + Clustering voxels ...
 + Largest cluster has 56649 voxels
 + Filled    61 voxels in small holes; now have 56710 voxels
 + Clustering voxels ...
 + Largest cluster has 56704 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 369571 voxels
 + Mask now has 56704 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 360423 voxels
++ 65852 voxels in the mask [out of 426275: 15.45%]
++ first  10 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  29 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   3 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0202.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0202.r02.blur+orig
++ Forming automask
 + Fixed clip level = 394.399323
 + Used gradual clip level = 356.288757 .. 430.339508
 + Number voxels above clip level = 56903
 + Clustering voxels ...
 + Largest cluster has 56688 voxels
 + Clustering voxels ...
 + Largest cluster has 56456 voxels
 + Filled    60 voxels in small holes; now have 56516 voxels
 + Clustering voxels ...
 + Largest cluster has 56507 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 369768 voxels
 + Mask now has 56507 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 360836 voxels
++ 65439 voxels in the mask [out of 426275: 15.35%]
++ first  10 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  29 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   3 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0202.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0202.r03.blur+orig
++ Forming automask
 + Fixed clip level = 394.095886
 + Used gradual clip level = 349.530487 .. 428.359985
 + Number voxels above clip level = 57480
 + Clustering voxels ...
 + Largest cluster has 57266 voxels
 + Clustering voxels ...
 + Largest cluster has 57024 voxels
 + Filled    67 voxels in small holes; now have 57091 voxels
 + Clustering voxels ...
 + Largest cluster has 57088 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 369187 voxels
 + Mask now has 57088 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 360009 voxels
++ 66266 voxels in the mask [out of 426275: 15.55%]
++ first   9 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  29 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   3 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0202
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 66355 survived, 359920 were zero
++ writing result full_mask.tb0202...
3dresample -master full_mask.tb0202+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0202
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 59077 survived, 367198 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0202...
3dABoverlap -no_automask full_mask.tb0202+orig mask_anat.tb0202+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0202+orig.BRIK  B=./mask_anat.tb0202+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
66355        59077        68597        56835        9520         2242         14.3471      3.7950     0.8973     0.9939     0.8450
3ddot -dodice full_mask.tb0202+orig mask_anat.tb0202+orig
tee out.mask_ae_dice.txt
0.906228	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0202
total number of censored TRs (simple form) = 73
1deval -a motion_tb0202_censor.1D -b outcount_tb0202_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0202_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0202.r01.blur+orig.HEAD pb03.tb0202.r02.blur+orig.HEAD pb03.tb0202.r03.blur+orig.HEAD -censor censor_tb0202_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0202 -errts errts.tb0202 -bucket stats.tb0202
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0202.r01.blur+orig.HEAD pb03.tb0202.r02.blur+orig.HEAD pb03.tb0202.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 56747 voxels (out of 426275 = 13.3%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 377 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0202.r01.blur+orig.HEAD pb03.tb0202.r02.blur+orig.HEAD pb03.tb0202.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0202_REML -Rvar stats.tb0202_REMLvar \
 -Rfitts fitts.tb0202_REML -Rerrts errts.tb0202_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (377x24):  5.40453  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (377x6):  1.03912  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (377x18):  3.9362  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (377x6):  2.44587  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (377x12):  1.39368  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.50807e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.15 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.589
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.603
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.617
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.631
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.645
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.659
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.673
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.687
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.701
++ Job #0: processing voxels 0 to 42626; elapsed time=7.712
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #4 finished; elapsed time=18.227
++ Job #1 finished; elapsed time=18.228
++ Job #3 finished; elapsed time=18.270
9.++ Job #2 finished; elapsed time=18.300

++ Job #0 waiting for children to finish; elapsed time=18.303
++ Job #8 finished; elapsed time=18.354
++ Job #7 finished; elapsed time=18.381
++ Job #9 finished; elapsed time=18.389
++ Job #5 finished; elapsed time=18.438
++ Job #6 finished; elapsed time=18.454
++ Job #0 now finishing up; elapsed time=18.468
++ Smallest FDR q [0 Full_Fstat] = 1.46852e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 6.20382e-13
++ Smallest FDR q [3 uns1_Fstat] = 6.20189e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 5.92896e-13
++ Smallest FDR q [6 uns2_Fstat] = 5.92863e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 6.48062e-13
++ Smallest FDR q [9 uns3_Fstat] = 6.48031e-13
++ Smallest FDR q [11 str1#0_Tstat] = 1.94259e-12
++ Smallest FDR q [12 str1_Fstat] = 1.94215e-12
++ Smallest FDR q [14 str2#0_Tstat] = 5.39528e-13
++ Smallest FDR q [15 str2_Fstat] = 5.39528e-13
++ Smallest FDR q [17 str3#0_Tstat] = 5.28703e-13
++ Smallest FDR q [18 str3_Fstat] = 5.28627e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.76304e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.76224e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.13875e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.13838e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 1.10388e-07
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 1.10361e-07
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 9.39138e-06
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 9.39186e-06
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 4.34662e-07
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 4.34519e-07
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 6.85307e-08
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 6.8519e-08
++ Wrote bucket dataset into ./stats.tb0202+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0202+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0202+orig.BRIK
++ Program finished; elapsed time=38.494
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.778       0.830  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.766       0.827  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.712       0.783  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.519       0.589  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.505       0.588  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.464       0.543  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:      -0.433      -0.420  ( 6 vs. 16)  Run#2Pol#2  vs.  str2#0
  medium:      -0.405       0.000  ( 8 vs. 16)  Run#3Pol#0  vs.  str2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0202.r01.blur+orig.HEAD pb03.tb0202.r02.blur+orig.HEAD pb03.tb0202.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0202_REML -Rvar stats.tb0202_REMLvar -Rfitts fitts.tb0202_REML -Rerrts errts.tb0202_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 56747 voxels (out of 426275 = 13.3%)
++ -----  matrix condition (377x24):  5.40453  ++ VERY GOOD ++
 + masked off 252786 voxels for being all zero; 173489 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 313 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=16.77
 + X matrix: 46.994% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=377 cols=24; 109*1 cases; total CPU=0.00 Elapsed=16.79
 +  average case bandwidth = 11.30
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=54.41
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=100.76
++ Output dataset ./stats.tb0202_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0202_REML+orig.BRIK
++ Output dataset ./errts.tb0202_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0202_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 6.40399e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 1.19841e-10
++ Smallest FDR q [3 uns1_Fstat] = 1.1984e-10
++ Smallest FDR q [5 uns2#0_Tstat] = 1.22847e-07
++ Smallest FDR q [6 uns2_Fstat] = 1.22847e-07
++ Smallest FDR q [8 uns3#0_Tstat] = 1.00136e-07
++ Smallest FDR q [9 uns3_Fstat] = 1.00136e-07
++ Smallest FDR q [11 str1#0_Tstat] = 3.5905e-10
++ Smallest FDR q [12 str1_Fstat] = 3.59051e-10
++ Smallest FDR q [14 str2#0_Tstat] = 5.56107e-08
++ Smallest FDR q [15 str2_Fstat] = 5.56107e-08
++ Smallest FDR q [17 str3#0_Tstat] = 1.02949e-06
++ Smallest FDR q [18 str3_Fstat] = 1.02949e-06
++ Smallest FDR q [20 unstructured#0_Tstat] = 3.6582e-12
++ Smallest FDR q [21 unstructured_Fstat] = 3.6582e-12
++ Smallest FDR q [23 structured#0_Tstat] = 3.58374e-12
++ Smallest FDR q [24 structured_Fstat] = 3.58374e-12
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.277731 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.277731 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.885562 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.885562 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.632184 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.632184 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.750133 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.750133 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0202_REML+orig
++ Output dataset ./stats.tb0202_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=119.17
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0202 pb03.tb0202.r01.blur+orig.HEAD pb03.tb0202.r02.blur+orig.HEAD pb03.tb0202.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.2 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0202+orig[11,14..70,75..77,80..83,86,87,90..109,114..139,147..150,154..157,160..208,213..269,275..289,297..301,304..344,348..376,381..385,388..424,429..446]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0202_REML+orig[11,14..70,75..77,80..83,86,87,90..109,114..139,147..150,154..157,160..208,213..269,275..289,297..301,304..344,348..376,381..385,388..424,429..446]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0202+orig -expr c*a/b -prefix TSNR.tb0202
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0202_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0202+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 66355 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.359217
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0202.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 11,14..70,75..77,80..83,86,87,90..109,114..139,147..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0202+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0202+orig[11,14..70,75..77,80..83,86,87,90..109,114..139,147..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 66355
[7m*+ WARNING:[0m removed 282 voxels from mask because they are constant in time
++ detrending start: 9 baseline funcs, 116 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 33.35 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150,154..157,160..208,213..269,275..289,297..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0202+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0202+orig[150,154..157,160..208,213..269,275..289,297..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 66355
[7m*+ WARNING:[0m removed 282 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 129 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.02 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300,301,304..344,348..376,381..385,388..424,429..446 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0202+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0202+orig[300,301,304..344,348..376,381..385,388..424,429..446]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 66355
[7m*+ WARNING:[0m removed 282 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 132 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.83 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 11.4233 10.4306 10.912 10.9144
average errts FWHM blurs: 11.4233 10.4306 10.912 10.9144
echo 11.4233 10.4306 10.912 10.9144   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.432481 7.66727 13.9743 18.561
average errts ACF blurs: 0.432481 7.66727 13.9743 18.561
echo 0.432481 7.66727 13.9743 18.561   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 11,14..70,75..77,80..83,86,87,90..109,114..139,147..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0202+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0202_REML+orig[11,14..70,75..77,80..83,86,87,90..109,114..139,147..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 66355
[7m*+ WARNING:[0m removed 282 voxels from mask because they are constant in time
++ detrending start: 9 baseline funcs, 116 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.98 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150,154..157,160..208,213..269,275..289,297..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0202+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0202_REML+orig[150,154..157,160..208,213..269,275..289,297..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 66355
[7m*+ WARNING:[0m removed 282 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 129 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.93 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300,301,304..344,348..376,381..385,388..424,429..446 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0202+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0202_REML+orig[300,301,304..344,348..376,381..385,388..424,429..446]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 66355
[7m*+ WARNING:[0m removed 282 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 132 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.65 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 11.3422 10.3505 10.8633 10.8444
average err_reml FWHM blurs: 11.3422 10.3505 10.8633 10.8444
echo 11.3422 10.3505 10.8633 10.8444   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.424762 7.56492 14.0409 18.4557
average err_reml ACF blurs: 0.424762 7.56492 14.0409 18.4557
echo 0.424762 7.56492 14.0409 18.4557   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0202.1D
3dClustSim -both -mask full_mask.tb0202+orig -acf 0.424762 7.56492 14.0409 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 66355 voxels in mask (15.57% of total)
++ Kernel function radius = 47.16 mm
++ ACF(0.42,7.56,14.04) => FWHM=18.46 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.3 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 523.3 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0202+orig stats.tb0202_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0202+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0202_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0202 -dsets pb00.tb0202.r01.tcat+orig.HEAD pb00.tb0202.r02.tcat+orig.HEAD pb00.tb0202.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0202.r01.blur+orig.BRIK rm.pb03.tb0202.r01.blur+orig.HEAD rm.pb03.tb0202.r02.blur+orig.BRIK rm.pb03.tb0202.r02.blur+orig.HEAD rm.pb03.tb0202.r03.blur+orig.BRIK rm.pb03.tb0202.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0202.txt
./@ss_review_basic

subject ID                : tb0202
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0202+orig.HEAD
final stats dset          : stats.tb0202_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 51
average motion (per TR)   : 0.156879
average censored motion   : 0.0677515
max motion displacement   : 5.87711
max censored displacement : 2.02612
outlier limit             : 0.1
average outlier frac (TR) : 0.0185173
num TRs above out limit   : 25

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 116 129 132
num TRs per run (censored): 34 21 18
fraction censored per run : 0.226667 0.14 0.12
TRs total (uncensored)    : 450
TRs total                 : 377
degrees of freedom used   : 24
degrees of freedom left   : 353

TRs censored              : 73
censor fraction           : 0.162222
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 9 11 1 14 7 13
fraction TRs censored     : 0.132 0.162 0.015 0.126 0.063 0.117
ave mot per sresp (orig)  : 0.251938 0.124716 0.050440 0.138213 0.064664 0.102927
ave mot per sresp (cens)  : 0.093614 0.050438 0.046900 0.094584 0.044027 0.045553

TSNR average              : 196.935
global correlation (GCOR) : 0.359217
anat/EPI mask Dice coef   : 0.906228
maximum F-stat (masked)   : 21.4924
blur estimates (ACF)      : 0.424762 7.56492 14.0409
blur estimates (FWHM)     : 11.3422 10.3505 10.8633


cd ..
echo execution finished: `date`
date
execution finished: Wed Aug  9 00:22:14 EDT 2017
