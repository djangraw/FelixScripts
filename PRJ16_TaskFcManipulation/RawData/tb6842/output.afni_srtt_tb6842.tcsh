echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:53 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb6842
endif
set output_dir = tb6842.srtt
if ( -d tb6842.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb6842.srtt
mkdir tb6842.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb6842.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb6842.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb6842.srtt/pb00.tb6842.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.1 s
3dTcat -prefix tb6842.srtt/pb00.tb6842.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 3.0 s
3dTcat -prefix tb6842.srtt/pb00.tb6842.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.2 s
set tr_counts = ( 150 150 150 )
cd tb6842.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6842.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6842.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6842.r01.tcat+orig.BRIK is 24.300005 degrees from plumb.
++ 27781 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6842.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6842.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6842.r02.tcat+orig.BRIK is 24.300005 degrees from plumb.
++ 27781 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6842.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6842.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6842.r03.tcat+orig.BRIK is 24.300005 degrees from plumb.
++ 27651 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb6842.r01.tshift -tpattern alt+z2 pb00.tb6842.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6842.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6842.r01.tcat+orig.BRIK is 24.300005 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6842.r02.tshift -tpattern alt+z2 pb00.tb6842.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6842.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6842.r02.tcat+orig.BRIK is 24.300005 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6842.r03.tshift -tpattern alt+z2 pb00.tb6842.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6842.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6842.r03.tcat+orig.BRIK is 24.300005 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb6842.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 24.300005 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 371.606415
 + Used gradual clip level = 326.471405 .. 402.031189
 + Number voxels above clip level = 28316
 + Clustering voxels ...
 + Largest cluster has 27949 voxels
 + Clustering voxels ...
 + Largest cluster has 27326 voxels
 + Filled   312 voxels in small holes; now have 27638 voxels
 + Filled     2 voxels in large holes; now have 27640 voxels
 + Clustering voxels ...
 + Largest cluster has 27639 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 103433 voxels
 + Mask now has 27639 voxels
++ 27639 voxels in the mask [out of 131072: 21.09%]
++ first  14 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 908.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/908.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 24.300005 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 24.300005 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1577855 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 27639 voxels [16.9%] in weight mask
++ Number of points for matching = 27639
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.809 29.413 20.897 (index)
 + source center of mass = 87.704 186.835 181.205 (index)
 + source-target CM = -1.496 1.128 -4.651 (xyz)
 + center of mass shifts = -1.496 1.128 -4.651
++ shift param auto-range: -71.0..68.0 -68.4..70.6 -54.7..45.4
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.495888 .. 8.504112
 + Range param#2 [y-shift] = -8.871655 .. 11.128345
 + Range param#3 [z-shift] = -14.651154 .. 5.348846
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.495888 .. 38.504112
 + Range param#2 [y-shift] = -38.871655 .. 41.128345
 + Range param#3 [z-shift] = -44.651154 .. 35.348846
 + 12 free parameters
++ Normalized convergence radius = 0.000457
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1577855 [out of 20226096] voxels
 + base mask has 38081 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=79 usiz=175.5
 + - copying weight image
 + - using 27639 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24064 total points stored in 226 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--++--+..-+-.o.+*[#476=-0.0389398] *..+-$..
 + - best 45 costs found:
    0 v=-0.038940: -28.16 -25.54  22.02 -15.00 -15.00  15.00  [grid]
    1 v=-0.037303:  -1.50   1.13  -4.65   0.00   0.00   0.00  [grid]
    2 v=-0.035203: -28.16 -25.54  22.02  15.00 -15.00  30.00  [grid]
    3 v=-0.034492:  25.17 -25.54  22.02 -15.00 -15.00 -30.00  [grid]
    4 v=-0.034036:  25.63 -17.74  23.09  -5.55 -17.35 -23.42  [rand]
    5 v=-0.033536: -21.28  17.88  13.02  -2.96   2.59  18.65  [rand]
    6 v=-0.033325: -28.16  14.46  22.02 -15.00  15.00  15.00  [grid]
    7 v=-0.032371: -34.52  -3.89  32.16  11.98  -4.28  19.20  [rand]
    8 v=-0.032069:  11.92 -21.56  26.69  -4.37 -20.12 -15.12  [rand]
    9 v=-0.031297:  25.17  27.80  22.02 -30.00  15.00 -30.00  [grid]
   10 v=-0.030468: -14.92 -21.56  26.69   4.37 -20.12  15.12  [rand]
   11 v=-0.030118:  11.84 -25.54   8.68 -15.00 -30.00 -30.00  [grid]
   12 v=-0.029981:  25.17  14.46  22.02  15.00  15.00 -15.00  [grid]
   13 v=-0.029577:  25.17  14.46   8.68 -30.00  15.00 -30.00  [grid]
   14 v=-0.027486: -29.68  15.35 -18.14 -11.27  31.24  23.90  [rand]
   15 v=-0.027049:  11.84  14.46   8.68 -15.00  15.00 -30.00  [grid]
   16 v=-0.027031: -28.63 -17.74  23.09   5.55 -17.35  23.42  [rand]
   17 v=-0.026936:  31.53  -3.89  32.16 -11.98  -4.28 -19.20  [rand]
   18 v=-0.026840: -21.28 -15.62  13.02  -2.96  -2.59  18.65  [rand]
   19 v=-0.026394: -28.16  14.46   8.68  30.00  15.00  30.00  [grid]
   20 v=-0.026351:  12.53 -14.59  10.02  24.25 -37.55  -4.41  [rand]
   21 v=-0.026114:  25.17 -12.20  22.02 -30.00  30.00  15.00  [grid]
   22 v=-0.026038: -14.83  14.46   8.68  15.00  15.00  15.00  [grid]
   23 v=-0.025741:   4.32  15.32  24.98 -38.21  15.41 -13.51  [rand]
   24 v=-0.025667:  31.53  -3.89  32.16  11.98   4.28 -19.20  [rand]
   25 v=-0.025565: -11.82  29.94  10.36  30.67  17.79  20.52  [rand]
   26 v=-0.025377:   8.83  29.94  10.36 -30.67  17.79 -20.52  [rand]
   27 v=-0.025150: -36.13  23.38   9.65  17.65 -21.98  -4.20  [rand]
   28 v=-0.024943: -14.83  27.80 -17.98 -15.00  30.00  15.00  [grid]
   29 v=-0.024706: -28.16  27.80 -17.98 -15.00  15.00  15.00  [grid]
   30 v=-0.024619: -17.71  15.24 -39.78 -15.74  34.09   7.78  [rand]
   31 v=-0.024570: -14.83 -25.54   8.68  15.00 -15.00  30.00  [grid]
   32 v=-0.024474: -28.16  27.80   8.68 -30.00  30.00  15.00  [grid]
   33 v=-0.024363: -28.16 -12.20  22.02 -15.00  15.00  15.00  [grid]
   34 v=-0.024026: -14.83 -12.20 -31.32 -15.00  30.00  15.00  [grid]
   35 v=-0.023769:  16.84  27.27   1.40   6.51  20.18  -7.56  [rand]
   36 v=-0.023700: -28.16  27.80  22.02 -15.00  15.00  15.00  [grid]
   37 v=-0.023654:  11.84  14.46  22.02 -15.00 -15.00 -30.00  [grid]
   38 v=-0.023532: -27.57 -19.32  22.94   2.86 -40.29 -21.85  [rand]
   39 v=-0.023390: -29.68  15.35   8.83  11.27  31.24  23.90  [rand]
   40 v=-0.023030:  30.99  15.82   7.16 -11.16   9.40 -34.39  [rand]
   41 v=-0.023003:  31.53   6.15  32.16 -11.98   4.28 -19.20  [rand]
   42 v=-0.022808: -34.52  -3.89  32.16 -11.98  -4.28  19.20  [rand]
   43 v=-0.022631:  14.72 -12.98 -39.78  15.74  34.09  -7.78  [rand]
   44 v=-0.022581: -28.16 -25.54 -31.32 -15.00  15.00  30.00  [grid]
*[#8008=-0.0409078] *[#8015=-0.0413816] *[#8016=-0.0419552] *[#8021=-0.0424322] *[#8029=-0.304276] *[#8038=-0.337991] *[#8040=-0.349251] *[#8041=-0.378341] *[#8044=-0.380615] *[#8045=-0.397298] *[#8047=-0.399356] *[#8048=-0.413744] *[#8049=-0.415635] *[#8051=-0.430938]  + - costs of the above after a little optimization:
    0 v=-0.042432: -32.41 -25.37  21.36 -14.81 -15.23  15.24  [grid]
  * 1 v=-0.430938:  -0.74  -0.73  -1.15   0.43   0.62   0.66  [grid]
    2 v=-0.065755: -28.90 -26.03  17.63   6.34 -17.63  25.94  [grid]
    3 v=-0.056902:  25.14 -24.70  22.14 -14.63 -10.83 -30.39  [grid]
    4 v=-0.057515:  24.35 -21.91  22.12  -4.30 -16.08 -21.86  [rand]
    5 v=-0.037526: -21.27  17.75  13.06  -3.22   2.36  19.36  [rand]
    6 v=-0.045025: -27.90  14.33  21.93 -10.46  15.63  15.00  [grid]
    7 v=-0.036288: -33.49  -8.05  32.22  12.77  -3.51  19.07  [rand]
    8 v=-0.053153:  12.04 -21.60  26.04  -4.92 -16.31 -15.34  [rand]
    9 v=-0.037749:  24.97  27.28  22.31 -28.75  14.28 -29.86  [grid]
   10 v=-0.053720: -15.86 -20.70  24.56   4.39 -16.33  17.02  [rand]
   11 v=-0.039102:  16.03 -25.06   8.65 -15.06 -30.56 -30.62  [grid]
   12 v=-0.030707:  25.57  14.10  21.98  14.79  15.46 -15.02  [grid]
   13 v=-0.041669:  24.92  20.98   8.91 -28.29  15.81 -29.27  [grid]
   14 v=-0.032818: -28.90  14.75 -17.37 -12.78  35.71  23.45  [rand]
   15 v=-0.040329:  11.24  14.39   8.59 -14.12  12.39 -22.48  [grid]
   16 v=-0.060260: -26.58 -27.11  19.32   4.63 -18.28  22.27  [rand]
   17 v=-0.042314:  32.38  -8.72  32.43 -15.65  -3.33 -21.57  [rand]
   18 v=-0.037803: -16.90 -14.73  13.11  -2.13  -3.03  19.86  [rand]
   19 v=-0.036624: -24.83  14.45   7.72  28.32  15.03  29.11  [grid]
   20 v=-0.030135:  13.28 -15.21   9.38  23.12 -37.50  -4.64  [rand]
   21 v=-0.027183:  25.46 -12.13  22.05 -30.68  31.08  14.14  [grid]
   22 v=-0.039367: -11.15  12.30   8.89  14.59  12.80  16.25  [grid]
   23 v=-0.034018:   3.16  15.06  25.73 -38.35  21.80 -13.03  [rand]
   24 v=-0.039101:  31.00  -4.32  30.69  11.49   3.38 -14.79  [rand]
   25 v=-0.030543: -12.82  25.17  10.91  30.60  18.33  20.56  [rand]
   26 v=-0.031544:   9.93  26.45   8.94 -30.62  17.94 -21.10  [rand]
   27 v=-0.029033: -36.10  26.60   9.29  16.42 -23.13  -5.34  [rand]
   28 v=-0.040392: -17.52  33.54 -18.63 -15.38  31.41  15.65  [grid]
   29 v=-0.030817: -27.86  29.69 -17.90 -15.02  16.06  14.85  [grid]
   30 v=-0.048404: -18.10  18.07 -42.02 -14.09  33.26   5.46  [rand]
   31 v=-0.032954: -14.52 -26.35   8.52  12.72 -15.29  29.46  [grid]
   32 v=-0.029380: -29.41  27.36   9.92 -30.25  29.55  18.19  [grid]
   33 v=-0.030943: -32.00 -12.11  22.49 -14.66  14.52  15.33  [grid]
   34 v=-0.034949: -13.20 -10.67 -27.08 -15.03  29.03   9.23  [grid]
   35 v=-0.024813:  16.23  27.26   1.73   6.69  20.16  -7.39  [rand]
   36 v=-0.033997: -28.65  29.20  17.35 -21.98  13.34  11.60  [grid]
   37 v=-0.027892:  12.64  13.69  22.73 -15.22 -15.15 -30.02  [grid]
   38 v=-0.030151: -28.23 -15.26  23.12   2.90 -40.00 -21.21  [rand]
   39 v=-0.026622: -26.54  14.39   9.58  12.29  29.93  25.47  [rand]
   40 v=-0.054796:  33.34  12.64   3.18  -0.21   9.30 -33.60  [rand]
   41 v=-0.026923:  31.94   9.76  31.99 -12.25   4.11 -19.19  [rand]
   42 v=-0.026840: -34.67   0.03  32.13 -11.97  -4.44  19.57  [rand]
   43 v=-0.035101:  13.18  -7.32 -39.27  14.87  34.73  -9.41  [rand]
   44 v=-0.030175: -28.33 -25.41 -26.73 -16.71  13.51  27.27  [grid]
 + - save # 1 for twobest
 + - save # 2 for twobest
 + - skip #16 for twobest: too close to set # 2
 + - save # 4 for twobest
 + - save # 3 for twobest
 + - save #40 for twobest
 + - save #10 for twobest
 + - save # 8 for twobest
 + - save #30 for twobest
 + - save # 6 for twobest
 + - save # 0 for twobest
 + - save #17 for twobest
 + - save #13 for twobest
 + - save #28 for twobest
 + - save #15 for twobest
 + - save #22 for twobest
 + - save #11 for twobest
 + - save #24 for twobest
 + - save #18 for twobest
 + - save # 9 for twobest
 + - save # 5 for twobest
 + - save #19 for twobest
 + - save # 7 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=79 usiz=175.5
 + - retaining old weight image
 + - using 27639 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24059 total points stored in 242 'RHDD(13.7332)' bloks
*[#9369=-0.453336] *[#9377=-0.454688] *[#9390=-0.460087] *[#9391=-0.46983] *[#9394=-0.473553] *[#9395=-0.476171] *[#9396=-0.476491] *[#9399=-0.478929] *[#9402=-0.483157] *[#9403=-0.486336] *[#9406=-0.486983] *[#9410=-0.488024] *[#9411=-0.48811] *[#9413=-0.489497] *[#9414=-0.489994] *[#9423=-0.491762] *[#9428=-0.492918] *[#9431=-0.493752] *[#9432=-0.494371] *[#9433=-0.495842] *[#9440=-0.496437] *[#9441=-0.49702] *[#9444=-0.49808] *[#9447=-0.498198] *[#9448=-0.499276] *[#9450=-0.49933] *[#9453=-0.50025] *[#9456=-0.500819] *[#9463=-0.501623] *[#9466=-0.501833] 
 + - param set #1 has cost=-0.501833
 + -- Parameters = -0.5902 -0.6519 -0.2729 0.6286 -0.5950 0.5620 0.9954 1.0173 0.9961 0.0041 -0.0008 0.0002
 + - param set #2 has cost=-0.052575
 + -- Parameters = -29.2723 -25.8247 17.1981 6.2686 -17.4134 25.7666 1.0170 0.9998 1.0000 0.0001 -0.0002 0.0000
 + - param set #3 has cost=-0.065034
 + -- Parameters = 20.2684 -19.6784 18.1952 -5.1219 -13.4857 -20.5055 0.9940 1.0211 0.9958 0.0008 -0.0066 -0.0016
 + - param set #4 has cost=-0.048785
 + -- Parameters = 25.7084 -24.5208 21.3989 -15.0592 -10.2635 -29.9831 1.0023 1.0032 1.0185 0.0012 0.0012 0.0014
 + - param set #5 has cost=-0.056366
 + -- Parameters = 34.3061 13.4563 3.3013 1.5253 8.7562 -32.9317 1.0017 0.9980 0.9965 0.0077 -0.0000 0.0002
 + - param set #6 has cost=-0.102506
 + -- Parameters = -8.7265 -21.3588 13.9846 0.3592 -15.6312 5.6671 1.0242 0.9950 0.9811 -0.0339 0.0521 0.0096
 + - param set #7 has cost=-0.071959
 + -- Parameters = 14.3726 -18.4406 15.2618 -4.5915 -11.9084 -15.7205 1.0193 1.0218 0.9900 0.0052 -0.0030 0.0094
 + - param set #8 has cost=-0.046796
 + -- Parameters = -18.3620 17.1107 -44.1113 -12.6926 30.8432 11.0787 1.0039 0.9900 1.0039 -0.0066 0.0012 -0.0038
 + - param set #9 has cost=-0.032017
 + -- Parameters = -27.8448 14.2664 20.7577 -11.0247 15.9026 15.0318 1.0013 1.0019 1.0200 0.0013 0.0014 0.0023
 + - param set #10 has cost=-0.030665
 + -- Parameters = -34.7384 -22.7298 20.5383 -14.9147 -14.4277 12.3261 0.9840 0.9982 1.0006 0.0047 -0.0021 -0.0025
 + - param set #11 has cost=-0.033268
 + -- Parameters = 32.0703 -11.5428 32.1711 -15.8495 -3.6572 -21.6932 0.9998 1.0019 1.0067 0.0001 0.0009 -0.0006
 + - param set #12 has cost=-0.482360
 + -- Parameters = -0.3610 -1.2895 -0.7459 0.5866 -0.2505 0.3060 0.9960 1.0044 0.9887 -0.0041 -0.0013 0.0027
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.037 
 + --- dist(#3,#1) = 0.259 
 + --- dist(#4,#1) = 0.222 
 + --- dist(#5,#1) = 0.261 
 + --- dist(#6,#1) = 0.436 
 + --- dist(#7,#1) = 0.359 
 + --- dist(#8,#1) = 0.339 
 + --- dist(#9,#1) = 0.548 
 + --- dist(#10,#1) = 0.408 
 + --- dist(#11,#1) = 0.341 
 + --- dist(#12,#1) = 0.427 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=79 usiz=175.5
 + - retaining old weight image
 + - using 27639 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24127 total points stored in 249 'RHDD(13.5933)' bloks
*[#10356=-0.518086] *[#10363=-0.518641] *[#10364=-0.519504] *[#10378=-0.520243] *[#10379=-0.52289] *[#10380=-0.525225] *[#10384=-0.526868] *[#10393=-0.527512] *[#10394=-0.527592] *[#10395=-0.527627] *[#10398=-0.527631] *[#10401=-0.527741] *[#10409=-0.527974] *[#10412=-0.528091] *[#10417=-0.528195] *[#10418=-0.528196] *[#10422=-0.52824] *[#10424=-0.528259] *[#10434=-0.528358] *[#10435=-0.528613] 
 + - param set #1 has cost=-0.528613
 + -- Parameters = -0.6041 -0.3918 -0.2607 0.6326 -0.6205 0.5470 1.0006 1.0255 0.9966 0.0014 -0.0016 -0.0001
 + - param set #2 has cost=-0.528516
 + -- Parameters = -0.3641 -0.3855 -0.7966 0.6596 -0.9461 0.2880 1.0013 1.0274 0.9813 0.0012 0.0010 -0.0051
 + - param set #3 has cost=-0.088702
 + -- Parameters = -8.5652 -20.5225 12.2543 -0.1860 -14.8124 5.2259 1.0408 0.9941 0.9876 -0.0348 0.0550 0.0053
 + - param set #4 has cost=-0.070783
 + -- Parameters = 14.0604 -13.6150 12.6947 -3.1338 -10.2991 -14.4337 1.0199 1.0387 0.9839 -0.0048 0.0085 0.0013
 + - param set #5 has cost=-0.057199
 + -- Parameters = 20.8390 -12.7991 16.3034 -3.1852 -11.5300 -19.7148 0.9872 1.0799 0.9966 0.0120 -0.0031 0.0098
 + - param set #6 has cost=-0.047122
 + -- Parameters = 33.9985 14.9028 2.9860 2.0439 9.7701 -32.8906 0.9878 0.9968 0.9988 0.0066 0.0043 -0.0006
 + - param set #7 has cost=-0.044904
 + -- Parameters = -29.2229 -24.7790 16.5532 6.1001 -16.7977 25.7334 1.0182 1.0027 0.9959 -0.0028 0.0073 -0.0031
 + - param set #8 has cost=-0.041825
 + -- Parameters = 24.8884 -23.9608 21.1626 -15.2846 -9.4535 -29.7185 1.0171 1.0111 1.0196 0.0026 -0.0012 -0.0012
 + - param set #9 has cost=-0.042943
 + -- Parameters = -18.2537 17.1393 -44.2118 -12.7024 31.0041 10.9685 1.0056 0.9889 1.0038 -0.0075 0.0013 -0.0042
 + - param set #10 has cost=-0.027280
 + -- Parameters = 31.1934 -11.6218 32.3503 -15.9451 -3.6337 -20.8243 1.0037 1.0043 1.0062 -0.0003 0.0103 -0.0027
 + - param set #11 has cost=-0.027523
 + -- Parameters = -27.7374 14.0151 20.7860 -11.6532 15.7765 15.4670 1.0043 1.0045 1.0362 0.0032 0.0042 0.0033
 + - param set #12 has cost=-0.025709
 + -- Parameters = -34.6401 -22.7625 20.5708 -14.4525 -14.3777 12.4866 0.9830 0.9979 1.0010 0.0122 -0.0024 -0.0022
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0417 
 + --- dist(#3,#1) = 0.255 
 + --- dist(#4,#1) = 0.183 
 + --- dist(#5,#1) = 0.268 
 + --- dist(#6,#1) = 0.433 
 + --- dist(#7,#1) = 0.358 
 + --- dist(#8,#1) = 0.549 
 + --- dist(#9,#1) = 0.336 
 + --- dist(#10,#1) = 0.339 
 + --- dist(#11,#1) = 0.408 
 + --- dist(#12,#1) = 0.425 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=79 usiz=175.5
 + - retaining old weight image
 + - using 27639 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24444 total points stored in 260 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.506701
 + -- Parameters = -0.4831 -0.2777 -0.1167 0.7140 -0.8526 0.4578 1.0016 1.0301 0.9973 -0.0020 -0.0014 -0.0024
 + - param set #2 has cost=-0.504614
 + -- Parameters = -0.4497 -0.2037 -0.6027 0.7055 -1.0561 0.3978 1.0000 1.0341 0.9848 0.0026 0.0022 -0.0051
 + - param set #3 has cost=-0.091464
 + -- Parameters = -8.8985 -19.5960 10.6277 -1.4370 -14.3206 4.7058 1.0226 1.0035 0.9838 -0.0388 0.0418 -0.0027
 + - param set #4 has cost=-0.067260
 + -- Parameters = 14.5385 -12.6734 12.2192 -2.1805 -9.8750 -14.5164 1.0187 1.0397 0.9875 -0.0038 0.0144 -0.0016
 + - param set #5 has cost=-0.053822
 + -- Parameters = 20.8093 -12.8660 15.8351 -2.7705 -11.6736 -19.6125 0.9767 1.0788 0.9930 0.0102 -0.0031 0.0106
 + - param set #6 has cost=-0.040085
 + -- Parameters = 33.7974 14.9633 3.0107 2.1201 9.7458 -32.7763 0.9887 1.0008 1.0013 0.0072 0.0076 -0.0004
 + - param set #7 has cost=-0.038428
 + -- Parameters = -29.4545 -24.5238 16.2094 5.9290 -16.7420 25.6402 1.0203 1.0006 0.9911 -0.0073 0.0045 -0.0054
 + - param set #8 has cost=-0.040583
 + -- Parameters = -17.8207 17.0212 -44.5340 -12.3710 30.9602 10.2124 1.0058 0.9806 1.0038 -0.0070 0.0024 -0.0047
 + - param set #9 has cost=-0.034538
 + -- Parameters = 25.0491 -24.0012 21.0134 -15.2054 -9.5108 -29.7053 1.0175 1.0120 1.0200 0.0029 -0.0008 -0.0016
 + - param set #10 has cost=-0.024616
 + -- Parameters = -27.6863 14.1475 20.7739 -11.5312 15.7790 15.5847 1.0047 1.0043 1.0354 0.0033 0.0094 0.0030
 + - param set #11 has cost=-0.023426
 + -- Parameters = 31.3882 -11.6901 32.4079 -16.2094 -3.4998 -21.2212 1.0053 1.0037 1.0088 -0.0020 0.0165 -0.0004
 + - param set #12 has cost=-0.025111
 + -- Parameters = -34.2964 -22.3574 19.7104 -13.3553 -14.8007 12.1949 0.9899 0.9942 0.9960 0.0172 -0.0105 -0.0104
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.034 
 + --- dist(#3,#1) = 0.241 
 + --- dist(#4,#1) = 0.188 
 + --- dist(#5,#1) = 0.266 
 + --- dist(#6,#1) = 0.555 
 + --- dist(#7,#1) = 0.429 
 + --- dist(#8,#1) = 0.362 
 + --- dist(#9,#1) = 0.335 
 + --- dist(#10,#1) = 0.423 
 + --- dist(#11,#1) = 0.34 
 + --- dist(#12,#1) = 0.407 
 + - Total coarse refinement net CPU time = 0.0 s; 3071 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=79 usiz=175.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24194 total points stored in 257 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.491241 *
 + -- Parameters = -0.4831 -0.2777 -0.1167 0.7140 -0.8526 0.4578 1.0016 1.0301 0.9973 -0.0020 -0.0014 -0.0024
 + - cost(#2)=-0.486627  
 + -- Parameters = -0.4497 -0.2037 -0.6027 0.7055 -1.0561 0.3978 1.0000 1.0341 0.9848 0.0026 0.0022 -0.0051
 + - cost(#3)=-0.083182  
 + -- Parameters = -8.8985 -19.5960 10.6277 -1.4370 -14.3206 4.7058 1.0226 1.0035 0.9838 -0.0388 0.0418 -0.0027
 + - cost(#4)=-0.061048  
 + -- Parameters = 14.5385 -12.6734 12.2192 -2.1805 -9.8750 -14.5164 1.0187 1.0397 0.9875 -0.0038 0.0144 -0.0016
 + - cost(#5)=-0.049681  
 + -- Parameters = 20.8093 -12.8660 15.8351 -2.7705 -11.6736 -19.6125 0.9767 1.0788 0.9930 0.0102 -0.0031 0.0106
 + - cost(#6)=-0.037749  
 + -- Parameters = -17.8207 17.0212 -44.5340 -12.3710 30.9602 10.2124 1.0058 0.9806 1.0038 -0.0070 0.0024 -0.0047
 + - cost(#7)=-0.034212  
 + -- Parameters = 33.7974 14.9633 3.0107 2.1201 9.7458 -32.7763 0.9887 1.0008 1.0013 0.0072 0.0076 -0.0004
 + - cost(#8)=-0.035454  
 + -- Parameters = -29.4545 -24.5238 16.2094 5.9290 -16.7420 25.6402 1.0203 1.0006 0.9911 -0.0073 0.0045 -0.0054
 + - cost(#9)=-0.030402  
 + -- Parameters = 25.0491 -24.0012 21.0134 -15.2054 -9.5108 -29.7053 1.0175 1.0120 1.0200 0.0029 -0.0008 -0.0016
 + - cost(#10)=-0.023741  
 + -- Parameters = -34.2964 -22.3574 19.7104 -13.3553 -14.8007 12.1949 0.9899 0.9942 0.9960 0.0172 -0.0105 -0.0104
 + - cost(#11)=-0.022483  
 + -- Parameters = -27.6863 14.1475 20.7739 -11.5312 15.7790 15.5847 1.0047 1.0043 1.0354 0.0033 0.0094 0.0030
 + - cost(#12)=-0.022205  
 + -- Parameters = 31.3882 -11.6901 32.4079 -16.2094 -3.4998 -21.2212 1.0053 1.0037 1.0088 -0.0020 0.0165 -0.0004
 + - cost(#13)=-0.060241  
 + -- Parameters = -1.4959 1.1283 -4.6512 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.492381 *
 + -- Parameters = -0.4411 -0.2805 -0.0594 0.7055 -0.9238 0.4230 1.0037 1.0317 0.9990 -0.0023 -0.0017 -0.0029
 + - cost(#2)=-0.491203  
 + -- Parameters = -0.4095 -0.3722 -0.2707 0.7976 -1.1858 0.5187 1.0013 1.0339 0.9904 0.0020 -0.0045 -0.0058
 + - cost(#3)=-0.088430  
 + -- Parameters = -8.4520 -19.4008 9.8544 -1.6835 -14.1300 4.3475 1.0215 1.0148 0.9822 -0.0388 0.0263 -0.0110
 + - cost(#4)=-0.062506  
 + -- Parameters = 14.6098 -12.4332 11.6668 -2.1656 -9.8638 -14.6328 1.0066 1.0391 0.9922 -0.0016 0.0140 -0.0135
 + - cost(#5)=-0.050282  
 + -- Parameters = 20.5965 -12.4326 15.7735 -2.5685 -11.4860 -19.3192 0.9774 1.0801 0.9944 0.0038 -0.0037 0.0118
 + - cost(#6)=-0.038658  
 + -- Parameters = -17.4477 16.9496 -44.4911 -12.4378 31.0076 10.1539 1.0136 0.9817 1.0050 -0.0065 0.0030 -0.0053
 + - cost(#7)=-0.034876  
 + -- Parameters = 33.7440 14.9169 3.1510 1.7706 9.6897 -32.6687 0.9934 0.9988 1.0046 0.0071 0.0036 -0.0025
 + - cost(#8)=-0.036492  
 + -- Parameters = -29.4382 -24.4910 15.8081 5.9135 -16.6983 25.5171 1.0210 1.0008 0.9889 -0.0145 0.0043 -0.0053
 + - cost(#9)=-0.036998  
 + -- Parameters = 27.5141 -19.8769 19.6513 -13.4020 -7.0582 -30.7194 1.0290 1.0032 1.0194 -0.0045 -0.0026 0.0006
 + - cost(#10)=-0.025250  
 + -- Parameters = -34.0516 -22.7504 19.5811 -13.0263 -14.3637 11.8996 0.9882 0.9709 0.9932 0.0179 -0.0042 -0.0069
 + - cost(#11)=-0.022714  
 + -- Parameters = -27.6610 14.0648 20.9014 -11.5100 15.7302 15.4342 1.0039 1.0031 1.0366 0.0047 0.0095 0.0024
 + - cost(#12)=-0.023167  
 + -- Parameters = 31.5798 -11.5973 32.4197 -15.8620 -3.6113 -20.9693 1.0043 1.0060 1.0058 -0.0018 0.0215 0.0005
 + - cost(#13)=-0.492612 *
 + -- Parameters = -0.6318 -0.4251 0.1695 0.7319 -1.0884 0.6961 1.0040 1.0309 1.0042 -0.0021 -0.0079 -0.0052
 + - case #13 is now the best
 + - Initial  cost = -0.492612
 + - Initial fine Parameters = -0.6318 -0.4251 0.1695 0.7319 -1.0884 0.6961 1.0040 1.0309 1.0042 -0.0021 -0.0079 -0.0052
 + - Finalish cost = -0.496634 ; 438 funcs
 + - Final    cost = -0.496640 ; 121 funcs
 + Final fine fit Parameters:
       x-shift=-0.4014   y-shift=-0.7132   z-shift=-0.0023
       z-angle= 0.7445   x-angle=-1.8382   y-angle= 0.3864
       x-scale= 1.0052   y-scale= 1.0339   z-scale= 1.0029
     y/x-shear=-0.0015 z/x-shear=-0.0008 z/y-shear=-0.0210
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.4014 -0.7132 -0.0023 0.7445 -1.8382 0.3864 1.0052 1.0339 1.0029 -0.0015 -0.0008 -0.0210
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 21.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 24.300005 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0112 -0.9460 0.3825 220.6725 0.0115 0.4155 0.9278 27.7476 -1.0050 0.0128 0.0068 199.1586
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 19.4 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3487.210100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 69.2199 46.6252   ITER = 7/137
69.2199

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 933ms]
lev=0 0..171 0..213 0..166: [first cost=-0.70617] ... done [cost:-0.70617==>-0.77677]
lev=1 patch=129x161x125 [clock= 12m 29s 197ms]........:[cost=-0.79715]:........ done [cost:-0.77677==>-0.79955 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 20m 6s 185ms]......................... done [cost:-0.79955==>-0.85577 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 26m 12s 77ms].............. done [cost:-0.85577==>-0.91379 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 31m 13s 556ms]........... done [cost:-0.91379==>-0.96450 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 35m 2s 758ms].................. done [cost:-0.96450==>-1.03325 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 38m 37s 920ms]....................... done [cost:-1.03325==>-1.07656 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 42m 6s 18ms]............................ done [cost:-1.07656==>-1.15421 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 45m 48s 426ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6842/tb6842.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 12.3 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb6842.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 24.300005 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6842.r01.tshift+orig.BRIK is 24.300005 degrees from plumb.
++ Reading input dataset ./pb01.tb6842.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29829 voxels
 + 4815 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.364  pitch=-0.163  yaw=-0.049  dS=-0.231  dL=-0.405  dP=-0.288
++ Mean: roll=-0.191  pitch=+0.369  yaw=+0.045  dS=+0.248  dL=-0.206  dP=-0.203
++ Max : roll=+0.078  pitch=+0.557  yaw=+0.117  dS=+0.336  dL=+0.005  dP=+0.136
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.45(0.45) 0.26(0.21) 0.21(0.10) 0.19(0.10) 0.21(0.31) 0.65(0.50) 0.34(0.56) 0.40(0.22) 0.50(0.23) 0.58(0.09) 0.68(0.11) 0.67(0.05) 0.62(0.05) 0.60(0.08) 0.56(0.04) 0.58(0.05) 0.60(0.05) 0.63(0.03) 0.61(0.02) 0.60(0.02) 0.62(0.03) 0.65(0.03) 0.63(0.04) 0.62(0.03) 0.65(0.03) 0.66(0.01) 0.64(0.03) 0.67(0.04) 0.70(0.04) 0.72(0.02) 0.71(0.02) 0.71(0.02) 0.71(0.02) 0.73(0.02) 0.72(0.01) 0.74(0.02) 0.76(0.02) 0.76(0.02) 0.76(0.03) 0.74(0.03) 0.74(0.03) 0.72(0.05) 0.72(0.01) 0.75(0.04) 0.73(0.04) 0.78(0.06) 0.77(0.02) 0.76(0.02) 0.78(0.05) 0.76(0.03) 0.76(0.02) 0.76(0.04) 0.78(0.04) 0.78(0.04) 0.76(0.04) 0.75(0.06) 0.77(0.07) 0.74(0.06) 0.80(0.07) 0.87(0.07) 0.89(0.04) 0.92(0.09) 0.94(0.04) 0.95(0.04) 0.96(0.03) 0.94(0.05) 0.93(0.06) 0.88(0.05) 0.92(0.06) 0.96(0.06) 0.99(0.03) 1.01(0.03) 0.97(0.06) 0.96(0.03) 0.96(0.04) 0.96(0.03) 0.98(0.04) 0.96(0.04) 0.95(0.06) 0.94(0.06) 0.94(0.02) 0.96(0.07) 0.94(0.07) 0.94(0.01) 0.96(0.03) 0.97(0.05) 0.95(0.03) 0.94(0.02) 0.97(0.04) 1.00(0.05) 1.00(0.08) 0.98(0.03) 1.00(0.04) 0.98(0.02) 1.00(0.03) 0.99(0.01) 0.97(0.02) 0.97(0.04) 0.97(0.02) 1.01(0.04) 1.06(0.05) 1.04(0.03) 1.01(0.05) 1.00(0.02) 1.03(0.04) 1.07(0.05) 1.03(0.04) 1.03(0.03) 0.99(0.04) 1.00(0.05) 1.01(0.03) 1.03(0.05) 1.02(0.04) 1.00(0.05) 1.00(0.03) 1.01(0.04) 0.98(0.04) 1.01(0.05) 1.03(0.04) 1.03(0.02) 1.03(0.01) 1.01(0.03) 1.00(0.07) 1.00(0.03) 1.03(0.04) 1.03(0.05) 1.05(0.03) 1.08(0.03) 1.09(0.03) 1.12(0.04) 1.11(0.02) 1.12(0.04) 1.13(0.04) 1.13(0.02) 1.14(0.05) 1.12(0.05) 1.13(0.03) 1.16(0.03) 1.17(0.04) 1.19(0.07) 1.28(0.20) 1.15(0.15) 1.18(0.07) 1.21(0.05) 1.17(0.07) 1.19(0.07) 1.17(0.05) 1.15(0.08) 1.13(0.04)
++ Max displacement in automask = 1.28 (mm) at sub-brick 141
++ Max delta displ  in automask = 0.56 (mm) at sub-brick 7
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb6842.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6842.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6842.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6842.r01.tshift+orig.BRIK is 24.300005 degrees from plumb.
++ Source dataset: ./pb01.tb6842.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 24.300005 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb6842.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 24.300005 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6842.r02.tshift+orig.BRIK is 24.300005 degrees from plumb.
++ Reading input dataset ./pb01.tb6842.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29633 voxels
 + 4730 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.792  pitch=+0.221  yaw=-0.208  dS=-0.717  dL=-0.596  dP=+0.128
++ Mean: roll=-0.722  pitch=+0.320  yaw=-0.102  dS=-0.556  dL=-0.512  dP=+0.239
++ Max : roll=-0.612  pitch=+0.377  yaw=+0.013  dS=-0.394  dL=-0.474  dP=+0.374
++ Max displacements (mm) for each sub-brick:
 1.85(0.00) 1.89(0.08) 1.72(0.20) 1.75(0.09) 1.77(0.07) 1.73(0.05) 1.76(0.05) 1.75(0.06) 1.73(0.05) 1.73(0.05) 1.76(0.04) 1.76(0.04) 1.77(0.01) 1.76(0.06) 1.77(0.04) 1.78(0.05) 1.79(0.03) 1.81(0.06) 1.81(0.03) 1.82(0.03) 1.85(0.05) 1.83(0.03) 1.84(0.03) 1.85(0.05) 1.83(0.02) 1.83(0.05) 1.83(0.03) 1.85(0.04) 1.86(0.03) 1.88(0.03) 1.89(0.05) 1.88(0.07) 1.89(0.03) 1.91(0.06) 1.93(0.02) 1.93(0.05) 1.92(0.03) 1.93(0.03) 1.94(0.05) 1.95(0.05) 1.96(0.05) 1.95(0.04) 1.91(0.04) 1.90(0.03) 1.94(0.05) 1.94(0.04) 1.92(0.05) 1.90(0.04) 1.91(0.05) 1.91(0.03) 1.91(0.03) 1.94(0.09) 1.94(0.02) 1.97(0.08) 1.98(0.03) 1.98(0.04) 1.98(0.05) 1.99(0.02) 1.98(0.05) 2.00(0.03) 2.00(0.02) 2.03(0.06) 2.01(0.04) 1.99(0.04) 2.00(0.02) 1.99(0.02) 2.02(0.05) 2.01(0.05) 1.99(0.03) 1.99(0.03) 2.02(0.05) 2.01(0.04) 1.98(0.07) 1.96(0.04) 1.95(0.05) 1.98(0.05) 2.00(0.05) 1.99(0.02) 1.99(0.03) 2.00(0.03) 2.01(0.04) 1.99(0.04) 2.01(0.03) 2.02(0.03) 2.02(0.03) 2.04(0.03) 2.04(0.04) 2.05(0.04) 2.05(0.02) 2.04(0.05) 2.05(0.04) 2.05(0.03) 2.05(0.05) 2.06(0.04) 2.10(0.08) 2.12(0.04) 2.11(0.03) 2.13(0.05) 2.13(0.03) 2.13(0.02) 2.14(0.06) 2.13(0.02) 2.12(0.03) 2.11(0.02) 2.10(0.07) 2.11(0.04) 2.08(0.07) 2.08(0.02) 2.11(0.06) 2.11(0.03) 2.11(0.02) 2.11(0.05) 2.13(0.03) 2.14(0.04) 2.14(0.02) 2.15(0.03) 2.17(0.07) 2.18(0.03) 2.18(0.04) 2.20(0.03) 2.19(0.03) 2.17(0.02) 2.20(0.06) 2.20(0.03) 2.20(0.02) 2.20(0.02) 2.22(0.03) 2.22(0.02) 2.24(0.03) 2.22(0.03) 2.20(0.04) 2.20(0.03) 2.21(0.02) 2.23(0.03) 2.22(0.03) 2.20(0.05) 2.18(0.07) 2.10(0.11) 2.12(0.07) 2.14(0.03) 2.17(0.06) 2.22(0.17) 2.24(0.06) 2.23(0.07) 2.22(0.04) 2.24(0.06) 2.19(0.11) 2.05(0.16) 2.11(0.11) 2.11(0.04)
++ Max displacement in automask = 2.24 (mm) at sub-brick 145
++ Max delta displ  in automask = 0.20 (mm) at sub-brick 2
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb6842.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6842.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6842.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6842.r02.tshift+orig.BRIK is 24.300005 degrees from plumb.
++ Source dataset: ./pb01.tb6842.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 24.300005 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb6842.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 24.300005 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6842.r03.tshift+orig.BRIK is 24.300005 degrees from plumb.
++ Reading input dataset ./pb01.tb6842.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29768 voxels
 + 4825 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.968  pitch=-1.804  yaw=+0.196  dS=-0.723  dL=-0.886  dP=+0.263
++ Mean: roll=-0.774  pitch=-1.616  yaw=+0.239  dS=-0.558  dL=-0.815  dP=+0.335
++ Max : roll=-0.387  pitch=-1.435  yaw=+0.271  dS=-0.412  dL=-0.682  dP=+0.412
++ Max displacements (mm) for each sub-brick:
 3.15(0.00) 3.23(0.17) 3.20(0.08) 3.12(0.10) 3.15(0.17) 3.11(0.04) 3.10(0.06) 3.23(0.15) 3.19(0.05) 3.16(0.04) 3.18(0.04) 3.14(0.06) 3.12(0.06) 3.12(0.03) 3.15(0.05) 3.17(0.05) 3.18(0.01) 3.19(0.02) 3.21(0.03) 3.17(0.09) 3.18(0.03) 3.23(0.07) 3.30(0.07) 3.31(0.06) 3.28(0.03) 3.28(0.03) 3.29(0.02) 3.30(0.03) 3.35(0.08) 3.31(0.07) 3.27(0.04) 3.30(0.07) 3.30(0.03) 3.27(0.06) 3.30(0.04) 3.31(0.04) 3.30(0.06) 3.33(0.04) 3.32(0.07) 3.34(0.02) 3.34(0.06) 3.34(0.03) 3.34(0.04) 3.38(0.04) 3.37(0.01) 3.37(0.03) 3.35(0.03) 3.35(0.03) 3.34(0.04) 3.33(0.02) 3.31(0.05) 3.32(0.03) 3.33(0.02) 3.35(0.03) 3.33(0.04) 3.35(0.05) 3.35(0.04) 3.37(0.03) 3.39(0.04) 3.37(0.05) 3.34(0.04) 3.36(0.04) 3.35(0.04) 3.36(0.02) 3.34(0.03) 3.32(0.04) 3.33(0.02) 3.33(0.03) 3.32(0.03) 3.30(0.06) 3.27(0.04) 3.28(0.05) 3.30(0.03) 3.34(0.04) 3.32(0.05) 3.31(0.05) 3.31(0.04) 3.32(0.04) 3.35(0.04) 3.33(0.05) 3.30(0.03) 3.31(0.02) 3.30(0.03) 3.33(0.06) 3.34(0.05) 3.35(0.02) 3.32(0.04) 3.30(0.04) 3.30(0.02) 3.31(0.02) 3.35(0.04) 3.30(0.04) 3.34(0.04) 3.33(0.03) 3.33(0.03) 3.32(0.03) 3.32(0.04) 3.30(0.03) 3.29(0.04) 3.33(0.05) 3.31(0.04) 3.25(0.11) 3.28(0.03) 3.28(0.04) 3.25(0.05) 3.25(0.03) 3.24(0.03) 3.23(0.07) 3.29(0.09) 3.35(0.06) 3.30(0.05) 3.29(0.05) 3.28(0.04) 3.33(0.05) 3.33(0.05) 3.36(0.07) 3.34(0.03) 3.29(0.06) 3.31(0.03) 3.33(0.03) 3.31(0.03) 3.28(0.06) 3.29(0.03) 3.30(0.04) 3.30(0.04) 3.27(0.05) 3.25(0.04) 3.21(0.04) 3.26(0.07) 3.28(0.03) 3.27(0.02) 3.22(0.06) 3.20(0.02) 3.23(0.06) 3.23(0.03) 3.24(0.02) 3.22(0.03) 3.20(0.04) 3.26(0.07) 3.23(0.04) 3.22(0.03) 3.23(0.03) 3.25(0.07) 3.29(0.05) 3.31(0.05) 3.32(0.03) 3.39(0.09) 3.35(0.09) 3.33(0.04) 3.34(0.08)
++ Max displacement in automask = 3.39 (mm) at sub-brick 146
++ Max delta displ  in automask = 0.17 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb6842.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6842.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6842.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6842.r03.tshift+orig.BRIK is 24.300005 degrees from plumb.
++ Source dataset: ./pb01.tb6842.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.3
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 24.300005 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6842.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6842.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6842.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6842.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6842.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6842.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 24.300005 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb6842
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb6842+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb6842+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1450937 voxels in source_automask+0
++ Zero-pad: zbot=1 ztop=0
++ Computing -autobox
++ 303688 voxels [70.1%] in weight mask
++ Number of points for matching = 142733
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.11531
   sp   = 0.316969
   mi   = -0.558237
   crM  = 0.026818
   nmi  = 0.826657
   je   = 2.66218
   hel  = -0.114473
   crA  = 0.163765
   crU  = 0.164728
   lss  = 0.88469
   lpc  = 0.201197
   lpa  = 0.798803
   lpc+ = 0.314022
   ncd  = 0.99138
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.2
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb6842+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb6842+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 34.7 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6842.r01.blur pb02.tb6842.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6842.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb6842.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6842.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6842.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6842.r02.blur pb02.tb6842.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6842.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb6842.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6842.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6842.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6842.r03.blur pb02.tb6842.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6842.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb6842.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6842.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6842.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb6842.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6842.r01.blur+orig
++ Forming automask
 + Fixed clip level = 362.862885
 + Used gradual clip level = 293.108856 .. 394.735809
 + Number voxels above clip level = 52925
 + Clustering voxels ...
 + Largest cluster has 52551 voxels
 + Clustering voxels ...
 + Largest cluster has 52501 voxels
 + Filled    45 voxels in small holes; now have 52546 voxels
 + Clustering voxels ...
 + Largest cluster has 52546 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373729 voxels
 + Mask now has 52546 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365544 voxels
++ 60731 voxels in the mask [out of 426275: 14.25%]
++ first  18 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  18 y-planes are zero [from I]
++ last   19 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb6842.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6842.r02.blur+orig
++ Forming automask
 + Fixed clip level = 364.761597
 + Used gradual clip level = 294.700684 .. 396.625092
 + Number voxels above clip level = 52970
 + Clustering voxels ...
 + Largest cluster has 52598 voxels
 + Clustering voxels ...
 + Largest cluster has 52536 voxels
 + Filled    52 voxels in small holes; now have 52588 voxels
 + Clustering voxels ...
 + Largest cluster has 52587 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373688 voxels
 + Mask now has 52587 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365529 voxels
++ 60746 voxels in the mask [out of 426275: 14.25%]
++ first  18 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  18 y-planes are zero [from I]
++ last   19 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb6842.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6842.r03.blur+orig
++ Forming automask
 + Fixed clip level = 367.963318
 + Used gradual clip level = 295.817657 .. 399.252289
 + Number voxels above clip level = 52775
 + Clustering voxels ...
 + Largest cluster has 52379 voxels
 + Clustering voxels ...
 + Largest cluster has 52322 voxels
 + Filled    43 voxels in small holes; now have 52365 voxels
 + Clustering voxels ...
 + Largest cluster has 52365 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373910 voxels
 + Mask now has 52365 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365760 voxels
++ 60515 voxels in the mask [out of 426275: 14.20%]
++ first  18 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  18 y-planes are zero [from I]
++ last   19 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb6842
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 61042 survived, 365233 were zero
++ writing result full_mask.tb6842...
3dresample -master full_mask.tb6842+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb6842
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 56436 survived, 369839 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb6842...
3dABoverlap -no_automask full_mask.tb6842+orig mask_anat.tb6842+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb6842+orig.BRIK  B=./mask_anat.tb6842+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
61042        56436        63566        53912        7130         2524         11.6805      4.4723     0.8740     0.9805     0.9212
3ddot -dodice full_mask.tb6842+orig mask_anat.tb6842+orig
tee out.mask_ae_dice.txt
0.917823	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb6842
total number of censored TRs (simple form) = 5
1deval -a motion_tb6842_censor.1D -b outcount_tb6842_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb6842_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb6842.r01.blur+orig.HEAD pb03.tb6842.r02.blur+orig.HEAD pb03.tb6842.r03.blur+orig.HEAD -censor censor_tb6842_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb6842 -errts errts.tb6842 -bucket stats.tb6842
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb6842.r01.blur+orig.HEAD pb03.tb6842.r02.blur+orig.HEAD pb03.tb6842.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 52511 voxels (out of 426275 = 12.3%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 445 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb6842.r01.blur+orig.HEAD pb03.tb6842.r02.blur+orig.HEAD pb03.tb6842.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb6842_REML -Rvar stats.tb6842_REMLvar \
 -Rfitts fitts.tb6842_REML -Rerrts errts.tb6842_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (445x24):  6.01297  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (445x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (445x18):  5.88352  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (445x6):  2.84385  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (445x12):  1.11901  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.13959e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.31 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.955
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.971
++ Job #3: processing voxels 127881 to 170507; elapsed time=5.988
++ Job #4: processing voxels 170508 to 213134; elapsed time=6.007
++ Job #5: processing voxels 213135 to 255761; elapsed time=6.026
++ Job #6: processing voxels 255762 to 298388; elapsed time=6.045
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.075
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.095
++ Job #0: processing voxels 0 to 42626; elapsed time=6.111
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=6.114
0123456789.0123456789.0123456789.012++ Job #4 finished; elapsed time=32.602
34++ Job #2 finished; elapsed time=34.289
5++ Job #5 finished; elapsed time=35.031
6++ Job #8 finished; elapsed time=35.445
++ Job #1 finished; elapsed time=35.626
7++ Job #7 finished; elapsed time=35.768
89.01234++ Job #9 finished; elapsed time=38.615
++ Job #6 finished; elapsed time=38.647
567++ Job #3 finished; elapsed time=39.501
89.
++ Job #0 waiting for children to finish; elapsed time=39.772
++ Job #0 now finishing up; elapsed time=39.772
++ Smallest FDR q [0 Full_Fstat] = 5.23753e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 1.03705e-14
++ Smallest FDR q [3 uns1_Fstat] = 1.03665e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 1.25706e-13
++ Smallest FDR q [6 uns2_Fstat] = 1.25704e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 8.70794e-14
++ Smallest FDR q [9 uns3_Fstat] = 8.70851e-14
++ Smallest FDR q [11 str1#0_Tstat] = 1.30507e-14
++ Smallest FDR q [12 str1_Fstat] = 1.30479e-14
++ Smallest FDR q [14 str2#0_Tstat] = 2.56004e-13
++ Smallest FDR q [15 str2_Fstat] = 2.56017e-13
++ Smallest FDR q [17 str3#0_Tstat] = 1.31611e-13
++ Smallest FDR q [18 str3_Fstat] = 1.31626e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 6.95297e-15
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 6.95145e-15
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 8.40676e-15
++ Smallest FDR q [24 structured_GLT_Fstat] = 8.40467e-15
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 9.74107e-11
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 9.74089e-11
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 9.83243e-07
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 9.83334e-07
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 2.21956e-10
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 2.21912e-10
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.51236e-08
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.51234e-08
++ Wrote bucket dataset into ./stats.tb6842+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb6842+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb6842+orig.BRIK
++ Program finished; elapsed time=75.139
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.744       0.804  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.725       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.725       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.486       0.561  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.474       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.474       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb6842.r01.blur+orig.HEAD pb03.tb6842.r02.blur+orig.HEAD pb03.tb6842.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb6842_REML -Rvar stats.tb6842_REMLvar -Rfitts fitts.tb6842_REML -Rerrts errts.tb6842_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 52511 voxels (out of 426275 = 12.3%)
++ -----  matrix condition (445x24):  6.01297  ++ VERY GOOD ++
 + masked off 241768 voxels for being all zero; 184507 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 333 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=29.65
 + X matrix: 46.695% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=445 cols=24; 109*1 cases; total CPU=0.00 Elapsed=29.68
 +  average case bandwidth = 12.50
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=99.70
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=145.13
++ Output dataset ./stats.tb6842_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb6842_REML+orig.BRIK
++ Output dataset ./errts.tb6842_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb6842_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 8.68261e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 6.80792e-13
++ Smallest FDR q [3 uns1_Fstat] = 6.80792e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 1.19118e-09
++ Smallest FDR q [6 uns2_Fstat] = 1.19118e-09
++ Smallest FDR q [8 uns3#0_Tstat] = 3.10874e-12
++ Smallest FDR q [9 uns3_Fstat] = 3.10875e-12
++ Smallest FDR q [11 str1#0_Tstat] = 1.04924e-12
++ Smallest FDR q [12 str1_Fstat] = 1.04924e-12
++ Smallest FDR q [14 str2#0_Tstat] = 1.1245e-07
++ Smallest FDR q [15 str2_Fstat] = 1.1245e-07
++ Smallest FDR q [17 str3#0_Tstat] = 4.32119e-11
++ Smallest FDR q [18 str3_Fstat] = 4.32119e-11
++ Smallest FDR q [20 unstructured#0_Tstat] = 4.00623e-14
++ Smallest FDR q [21 unstructured_Fstat] = 4.00623e-14
++ Smallest FDR q [23 structured#0_Tstat] = 7.78109e-14
++ Smallest FDR q [24 structured_Fstat] = 7.78109e-14
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.0679923
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.0679923
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.915242 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.915241 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.24709 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.24709 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.182428 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.182429 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb6842_REML+orig
++ Output dataset ./stats.tb6842_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=200.35
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb6842 pb03.tb6842.r01.blur+orig.HEAD pb03.tb6842.r02.blur+orig.HEAD pb03.tb6842.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 55.5 s
3dTstat -mean -prefix rm.signal.all all_runs.tb6842+orig[2..4,8..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb6842_REML+orig[2..4,8..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb6842+orig -expr c*a/b -prefix TSNR.tb6842
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb6842_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb6842+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 61042 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.198532
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox

*** failure while reading from brick file ./rm.DP+orig.BRIK
*** desired 767295000 bytes but only got 603979776
*** Unix error message: Success
   THD_load_datablock
  3dTstat main
** Command line was:
3dTstat -sum -prefix corr_brain rm.DP+orig
[7m** FATAL ERROR:[0m Unable to compute output dataset!
** Program compile date = Jul 20 2017
