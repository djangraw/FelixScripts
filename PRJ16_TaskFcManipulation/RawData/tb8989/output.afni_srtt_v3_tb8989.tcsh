echo auto-generated by afni_proc.py, Wed Jan  3 09:36:20 2018
auto-generated by afni_proc.py, Wed Jan  3 09:36:20 2018
echo (version 6.02, December 12, 2017)
(version 6.02, December 12, 2017)
echo execution started: `date`
date
execution started: Wed Jan  3 09:36:23 EST 2018
afni -ver
Precompiled binary linux_openmp_64: Dec 22 2017 (Version AFNI_17.3.09)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   22 Dec 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb8989
endif
set output_dir = tb8989.srtt_v3
if ( -d tb8989.srtt_v3 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb8989.srtt_v3
mkdir tb8989.srtt_v3/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb8989.srtt_v3/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb8989.srtt_v3/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dTcat -prefix tb8989.srtt_v3/pb00.tb8989.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 0.9 s
3dTcat -prefix tb8989.srtt_v3/pb00.tb8989.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.0 s
3dTcat -prefix tb8989.srtt_v3/pb00.tb8989.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 3.1 s
set tr_counts = ( 150 150 150 )
cd tb8989.srtt_v3
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8989.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8989.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8989.r01.tcat+orig.BRIK is 0.500068 degrees from plumb.
++ 26033 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8989.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8989.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8989.r02.tcat+orig.BRIK is 0.500068 degrees from plumb.
++ 26189 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8989.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8989.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8989.r03.tcat+orig.BRIK is 0.500068 degrees from plumb.
++ 26195 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.tb8989.r01.despike pb00.tb8989.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8989.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8989.r01.tcat+orig.BRIK is 0.500068 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb8989.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #5
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 661ms

++ FINAL: 19353600 data points, 1033352 edits [5.339%], 211563 big edits [1.093%]
++ Output dataset ./pb01.tb8989.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb8989.r02.despike pb00.tb8989.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8989.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8989.r02.tcat+orig.BRIK is 0.500068 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb8989.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #3
++ start OpenMP thread #1
++ start OpenMP thread #2
++ start OpenMP thread #4
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  1s 624ms

++ FINAL: 19353600 data points, 1077476 edits [5.567%], 245963 big edits [1.271%]
++ Output dataset ./pb01.tb8989.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb8989.r03.despike pb00.tb8989.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8989.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8989.r03.tcat+orig.BRIK is 0.500068 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb8989.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #3
++ start OpenMP thread #4
++ start OpenMP thread #5
++ start OpenMP thread #1
........................................................
++ Elapsed despike time =  1s 598ms

++ FINAL: 19353600 data points, 774446 edits [4.002%], 65269 big edits [0.337%]
++ Output dataset ./pb01.tb8989.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.tb8989.r01.tshift -tpattern alt+z2 pb01.tb8989.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8989.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8989.r01.despike+orig.BRIK is 0.500068 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb8989.r02.tshift -tpattern alt+z2 pb01.tb8989.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8989.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8989.r02.despike+orig.BRIK is 0.500068 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb8989.r03.tshift -tpattern alt+z2 pb01.tb8989.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8989.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8989.r03.despike+orig.BRIK is 0.500068 degrees from plumb.
end
3dbucket -prefix vr_base pb02.tb8989.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 0.500068 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 425.250000
 + Used gradual clip level = 382.275696 .. 469.518829
 + Number voxels above clip level = 26840
 + Clustering voxels ...
 + Largest cluster has 26217 voxels
 + Clustering voxels ...
 + Largest cluster has 25539 voxels
 + Filled   304 voxels in small holes; now have 25843 voxels
 + Filled     6 voxels in large holes; now have 25849 voxels
 + Clustering voxels ...
 + Largest cluster has 25849 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 105221 voxels
 + Mask now has 25851 voxels
++ 25851 voxels in the mask [out of 131072: 19.72%]
++ first  14 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1034.863770 on /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1034.863770))'
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 0.500068 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 0.500068 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1424313 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 25851 voxels [16.6%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 25851
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.898 28.629 18.903 (index)
 + source center of mass = 86.056 125.515 160.147 (index)
 + source-target CM = -0.011 0.683 -4.696 (xyz)
 + center of mass shifts = -0.011 0.683 -4.696
++ shift param auto-range: -69.5..69.5 -68.8..70.2 -52.2..42.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.011368 .. 9.988632
 + Range param#2 [y-shift] = -9.316994 .. 10.683006
 + Range param#3 [z-shift] = -14.695854 .. 5.304146
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.011368 .. 39.988632
 + Range param#2 [y-shift] = -39.316994 .. 40.683006
 + Range param#3 [z-shift] = -44.695854 .. 35.304146
 + 12 free parameters
++ Normalized convergence radius = 0.000479
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1424313 [out of 11806256] voxels
 + base mask has 35963 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=79 usiz=183
 + - copying weight image
 + - using 25851 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 22293 total points stored in 213 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=0.00810411] **[#2=-0.0248474] *oo..-+o--*[#28=-0.0363319] *.++.o.-*[#188=-0.041686] *.o.-*[#1308=-0.0419714] *-.-$
 + - best 45 costs found:
    0 v=-0.041971: -13.34 -12.65  21.97 -15.00 -30.00  15.00  [grid]
    1 v=-0.041686: -13.34 -25.98   8.64 -15.00 -15.00 -15.00  [grid]
    2 v=-0.041367: -13.34 -12.65  21.97 -15.00 -15.00 -15.00  [grid]
    3 v=-0.040467: -13.34 -12.65  21.97 -30.00 -30.00 -15.00  [grid]
    4 v=-0.039283: -13.34 -12.65  21.97 -15.00 -30.00 -15.00  [grid]
    5 v=-0.037764: -13.34 -12.65  21.97 -30.00 -30.00  15.00  [grid]
    6 v=-0.036332: -13.34 -12.65   8.64 -15.00 -15.00  15.00  [grid]
    7 v=-0.035358: -13.34 -12.65  21.97 -15.00 -30.00  30.00  [grid]
    8 v=-0.035306:  13.32 -12.65  21.97  30.00 -15.00 -30.00  [grid]
    9 v=-0.035088: -31.85 -11.11  -1.95 -23.31   3.26  40.47  [rand]
   10 v=-0.034289: -13.34 -25.98  21.97 -15.00 -30.00 -15.00  [grid]
   11 v=-0.034189: -13.34 -25.98   8.64 -15.00 -30.00  15.00  [grid]
   12 v=-0.033251:  -6.00  -2.72  19.83 -29.81   4.26 -23.54  [rand]
   13 v=-0.033077: -23.55  -7.86  11.27 -26.66 -31.62 -32.06  [rand]
   14 v=-0.032438: -16.15  -8.78  19.65 -20.99 -15.73 -16.09  [rand]
   15 v=-0.032309: -13.34 -12.65  21.97  15.00 -15.00  30.00  [grid]
   16 v=-0.032233:  -8.65 -19.75  12.78 -25.20 -18.50  13.54  [rand]
   17 v=-0.031537: -13.34 -12.65  21.97 -30.00 -15.00  30.00  [grid]
   18 v=-0.031451: -13.34 -25.98  21.97 -15.00 -30.00  30.00  [grid]
   19 v=-0.031028: -13.34 -25.98  21.97 -15.00 -30.00 -30.00  [grid]
   20 v=-0.030175:  31.83 -11.11  -1.95  23.31   3.26 -40.47  [rand]
   21 v=-0.030003: -14.95 -23.41  25.23 -19.13 -33.53 -22.48  [rand]
   22 v=-0.029869:  -6.00   4.09  19.83 -29.81   4.26 -23.54  [rand]
   23 v=-0.029296:  13.32 -12.65  21.97  15.00 -30.00 -15.00  [grid]
   24 v=-0.029293: -13.34 -25.98  21.97 -30.00 -30.00 -15.00  [grid]
   25 v=-0.029182: -13.34  14.02  21.97 -30.00 -15.00  30.00  [grid]
   26 v=-0.029048: -13.34 -12.65  21.97 -30.00 -30.00  30.00  [grid]
   27 v=-0.029013:   5.33  30.44   8.98 -22.21   7.92  40.02  [rand]
   28 v=-0.028961: -34.34 -15.90   3.91 -16.34  -8.64  40.54  [rand]
   29 v=-0.028643:  -6.00  -2.72  19.83 -29.81   4.26  23.54  [rand]
   30 v=-0.028229: -13.34 -25.98  21.97 -15.00 -15.00 -30.00  [grid]
   31 v=-0.027886: -32.50 -14.01   7.11 -11.16  -9.40  34.39  [rand]
   32 v=-0.027825: -13.34 -25.98   8.64 -30.00 -30.00  15.00  [grid]
   33 v=-0.027733:  34.85 -29.87  11.08 -11.68 -29.04 -39.38  [rand]
   34 v=-0.027725:  31.83 -11.11  -7.44  23.31  -3.26 -40.47  [rand]
   35 v=-0.027458: -13.34 -25.98  21.97  30.00 -30.00  30.00  [grid]
   36 v=-0.027449:  34.84 -34.99   9.55 -40.22  24.26 -41.52  [rand]
   37 v=-0.027419:  36.79 -32.41  15.50 -39.82  23.12  -9.72  [rand]
   38 v=-0.027371:  35.41  30.19  -7.80 -13.33   5.58 -13.04  [rand]
   39 v=-0.027313:  13.32 -12.65   8.64  15.00 -15.00 -15.00  [grid]
   40 v=-0.027248:  -4.09   6.91   3.10   4.32  22.85 -18.95  [rand]
   41 v=-0.027120: -13.34 -25.98  21.97 -30.00  15.00 -30.00  [grid]
   42 v=-0.027056: -24.70  -3.93  11.69  -8.97  18.72  30.56  [rand]
   43 v=-0.027054: -13.34 -12.65  21.97 -15.00 -15.00 -30.00  [grid]
   44 v=-0.026737: -32.50  15.37   7.11 -11.16   9.40  34.39  [rand]
*[#8002=-0.0486332] *[#8005=-0.04967] *[#8012=-0.0540574] *[#8013=-0.059133] *[#8015=-0.059774] *[#8016=-0.0599256] *[#8018=-0.0610905] *[#8019=-0.0620297] *[#8021=-0.0638364] *[#8022=-0.0649227] *[#8025=-0.0654044] *[#8026=-0.0655171] *[#8029=-0.0659285] *[#8030=-0.0661048] *[#8362=-0.0667062] *[#8425=-0.0675511] *[#8426=-0.0686635] *[#8427=-0.0691984] *[#8433=-0.0694888] *[#8434=-0.0701323] *[#8437=-0.070246] *[#8439=-0.0703956]  + - costs of the above after a little optimization:
    0 v=-0.066105: -10.87 -13.02  20.67 -10.89 -30.48  13.62  [grid]
    1 v=-0.048783: -13.20 -22.06  10.56 -15.59 -15.08 -14.12  [grid]
    2 v=-0.054969: -12.10 -17.73  17.91 -14.54 -19.23 -14.58  [grid]
    3 v=-0.046527: -11.83  -8.70  21.49 -28.38 -29.67 -14.08  [grid]
    4 v=-0.059535: -13.32 -12.79  20.06 -13.43 -23.59 -14.76  [grid]
    5 v=-0.043330: -13.11 -12.60  20.68 -30.99 -31.62  14.84  [grid]
    6 v=-0.053976:  -8.88 -16.35   5.38 -11.79 -17.34   8.54  [grid]
    7 v=-0.040497: -13.26 -17.63  23.13 -15.44 -28.73  29.83  [grid]
    8 v=-0.045023:  10.28 -13.48  18.26  27.39  -9.92 -32.77  [grid]
    9 v=-0.046204: -32.06 -10.18   1.21 -23.85   3.23  40.28  [rand]
   10 v=-0.066706:  -8.79 -18.33  23.46 -13.20 -34.01  -0.36  [grid]
  *11 v=-0.070396:  -9.84 -24.07  11.14 -13.51 -29.66   3.53  [grid]
   12 v=-0.045240:  -3.37  -2.32  19.77 -25.72   3.86 -26.20  [rand]
   13 v=-0.040922: -22.61  -8.67  11.35 -28.60 -31.80 -33.37  [rand]
   14 v=-0.049113: -14.28 -12.36  20.50 -19.49 -16.22 -14.16  [rand]
   15 v=-0.039952: -14.42 -12.69  21.80  15.79  -9.47  30.17  [grid]
   16 v=-0.036379:  -9.51 -15.83  12.80 -24.86 -18.16  13.08  [rand]
   17 v=-0.046691: -11.81 -12.51  28.31 -28.69 -13.44  28.05  [grid]
   18 v=-0.038238: -11.68 -23.09  20.97 -13.24 -29.12  28.14  [grid]
   19 v=-0.061712: -12.95 -29.23  13.33 -16.96 -28.88  -9.72  [grid]
   20 v=-0.050090:  31.01  -7.11   3.41  24.15   6.75 -40.33  [rand]
   21 v=-0.033656: -14.69 -19.13  24.24 -18.90 -33.44 -22.04  [rand]
   22 v=-0.038039:  -6.24   0.04  17.59 -28.38   5.96 -24.39  [rand]
   23 v=-0.059102:   8.79 -12.89  19.88   7.70 -28.18  -8.80  [grid]
   24 v=-0.046177: -15.69 -23.99  19.19 -31.34 -31.83 -13.11  [grid]
   25 v=-0.032157: -12.10  13.74  21.93 -30.73 -14.55  30.57  [grid]
   26 v=-0.033379: -13.33 -11.98  22.01 -30.06 -29.40  34.49  [grid]
   27 v=-0.030460:   5.14  31.07   9.07 -22.26   7.72  40.54  [rand]
   28 v=-0.041774: -35.30 -10.92   4.94 -16.75  -5.70  41.51  [rand]
   29 v=-0.065737:  -9.79   2.48   5.45 -29.01   2.38  26.10  [rand]
   30 v=-0.030319: -13.85 -26.14  22.00 -14.68 -15.58 -30.17  [grid]
   31 v=-0.040696: -34.23 -12.04   5.54  -6.31  -7.26  36.81  [rand]
   32 v=-0.045391: -12.68 -24.47  10.41 -20.09 -28.75  12.49  [grid]
   33 v=-0.043097:  34.85 -29.52  12.61 -12.99 -35.30 -31.02  [rand]
   34 v=-0.030597:  32.36  -9.01  -7.76  24.40  -4.23 -41.30  [rand]
   35 v=-0.029849: -13.40 -26.33  22.05  30.28 -29.96  34.06  [grid]
   36 v=-0.031984:  34.81 -35.47  10.01 -39.32  24.55 -37.12  [rand]
   37 v=-0.033166:  36.42 -38.08  15.94 -39.22  22.95  -9.44  [rand]
   38 v=-0.037169:  38.38  32.58  -6.74 -17.01   5.25 -14.62  [rand]
   39 v=-0.039410:  12.26 -14.97  10.01  15.92 -15.90  -9.48  [grid]
   40 v=-0.033353:  -4.35   6.57   3.31   4.57  22.14 -13.83  [rand]
   41 v=-0.029584: -12.55 -26.36  20.67 -30.58  13.39 -30.18  [grid]
   42 v=-0.049646: -23.03  -2.63   8.81  -8.60  11.09  32.34  [rand]
   43 v=-0.031887:  -9.01 -13.00  21.45 -14.17 -14.52 -29.96  [grid]
   44 v=-0.034060: -28.74  15.91   6.93 -11.32   9.11  34.05  [rand]
 + - save #11 for twobest
 + - save #10 for twobest
 + - save # 0 for twobest
 + - save #29 for twobest
 + - save #19 for twobest
 + - save # 4 for twobest
 + - save #23 for twobest
 + - save # 2 for twobest
 + - save # 6 for twobest
 + - save #20 for twobest
 + - save #42 for twobest
 + - save #14 for twobest
 + - save # 1 for twobest
 + - save #17 for twobest
 + - save # 3 for twobest
 + - save # 9 for twobest
 + - save #24 for twobest
 + - save #32 for twobest
 + - save #12 for twobest
 + - save # 8 for twobest
 + - save # 5 for twobest
 + - save #33 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=79 usiz=183
 + - retaining old weight image
 + - using 25851 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22984 total points stored in 237 'RHDD(13.7332)' bloks
 + - param set #1 has cost=-0.055141
 + -- Parameters = -9.1640 -24.0157 10.8718 -14.1378 -28.4960 3.1906 1.0021 1.0007 1.0026 0.0104 0.0003 -0.0012
 + - param set #2 has cost=-0.048027
 + -- Parameters = -8.8922 -17.9057 22.9114 -13.2104 -34.2271 3.4400 0.9984 0.9999 0.9982 0.0000 -0.0001 -0.0010
 + - param set #3 has cost=-0.058315
 + -- Parameters = -9.8317 -12.4240 21.3315 -11.6165 -32.9472 9.6516 0.9922 0.9996 0.9928 -0.0016 -0.0017 -0.0000
 + - param set #4 has cost=-0.050328
 + -- Parameters = -9.3925 -0.2650 5.7859 -28.4232 3.2818 25.6206 1.0021 1.0029 1.0034 -0.0005 0.0002 0.0008
 + - param set #5 has cost=-0.050642
 + -- Parameters = -12.7462 -29.3508 12.7836 -17.4376 -29.2302 -9.9737 1.0179 0.9969 0.9984 -0.0015 -0.0000 -0.0012
*[#9821=-0.0715606] *[#9825=-0.0739028] *[#9828=-0.0751234] *[#9832=-0.0751334] *[#9833=-0.075364] *[#9837=-0.0754693] *[#9838=-0.075478] *[#9840=-0.075729] *[#9841=-0.0757593] *[#9845=-0.0758251] *[#9846=-0.0760014] *[#9849=-0.0760971] *[#9850=-0.076264] *[#9859=-0.0763192] *[#9862=-0.076544] 
 + - param set #6 has cost=-0.076544
 + -- Parameters = -9.2044 -8.1967 17.8470 -9.8585 -24.7078 -6.7032 1.0596 0.9659 0.9760 -0.0393 -0.0011 -0.0232
 + - param set #7 has cost=-0.048130
 + -- Parameters = 8.3594 -12.5734 19.0559 7.4420 -27.4309 -8.0641 1.0214 1.0016 1.0004 0.0009 0.0009 0.0007
 + - param set #8 has cost=-0.041792
 + -- Parameters = -12.7462 -17.7078 17.8649 -14.8890 -19.4926 -14.6638 1.0183 0.9999 1.0000 0.0004 -0.0001 -0.0003
 + - param set #9 has cost=-0.051152
 + -- Parameters = -6.0119 -17.9938 4.8622 -11.8562 -17.1779 5.9681 0.9957 0.9996 0.9986 0.0026 0.0004 -0.0043
 + - param set #10 has cost=-0.041252
 + -- Parameters = 30.0478 -7.7640 3.3964 23.6948 11.6674 -39.9846 0.9957 0.9966 0.9972 -0.0046 -0.0019 -0.0014
 + - param set #11 has cost=-0.043643
 + -- Parameters = -24.9639 -1.5438 7.5951 -7.0828 10.3556 30.2638 1.0009 1.0009 0.9976 0.0019 -0.0009 0.0036
*[#10188=-0.0950017] *[#10203=-0.1178] *[#10206=-0.206642] *[#10208=-0.208576] *[#10210=-0.210042] *[#10211=-0.220626] *[#10214=-0.222262] *[#10217=-0.228068] *[#10218=-0.236946] *[#10219=-0.245445] *[#10220=-0.24783] *[#10223=-0.262353] *[#10224=-0.265271] *[#10226=-0.27499] *[#10227=-0.284413] *[#10228=-0.296895] *[#10229=-0.302014] *[#10233=-0.304419] *[#10234=-0.305532] *[#10236=-0.305859] *[#10237=-0.307445] *[#10238=-0.309624] *[#10243=-0.309828] *[#10251=-0.311063] *[#10252=-0.312092] *[#10257=-0.312464] *[#10260=-0.312871] *[#10262=-0.313271] *[#10270=-0.313634] *[#10271=-0.313863] *[#10274=-0.314369] *[#10275=-0.314385] *[#10276=-0.314918] 
 + - param set #12 has cost=-0.314918
 + -- Parameters = -0.3810 -1.6733 1.1855 -1.1325 -2.4160 0.2407 0.9979 0.9985 0.9853 0.0036 -0.0039 -0.0014
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.248 
 + --- dist(#3,#1) = 0.339 
 + --- dist(#4,#1) = 0.29 
 + --- dist(#5,#1) = 0.204 
 + --- dist(#6,#1) = 0.346 
 + --- dist(#7,#1) = 0.303 
 + --- dist(#8,#1) = 0.278 
 + --- dist(#9,#1) = 0.353 
 + --- dist(#10,#1) = 0.334 
 + --- dist(#11,#1) = 0.208 
 + --- dist(#12,#1) = 0.447 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=79 usiz=183
 + - retaining old weight image
 + - using 25851 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22771 total points stored in 237 'RHDD(13.5933)' bloks
*[#10285=-0.325273] *[#10296=-0.32528] *[#10305=-0.325339] *[#10308=-0.325786] *[#10309=-0.325833] *[#10311=-0.32603] *[#10318=-0.326077] *[#10322=-0.326159] *[#10323=-0.326174] *[#10324=-0.326284] *[#10325=-0.326293] *[#10327=-0.326423] *[#10330=-0.326587] *[#10333=-0.326699] *[#10334=-0.32687] *[#10335=-0.326904] *[#10338=-0.327031] *[#10339=-0.327036] *[#10341=-0.327258] *[#10342=-0.327301] *[#10345=-0.327324] *[#10346=-0.327372] *[#10349=-0.327833] *[#10350=-0.328155] *[#10351=-0.328257] *[#10356=-0.328511] *[#10361=-0.328826] *[#10364=-0.328845] *[#10365=-0.329008] *[#10366=-0.329258] *[#10367=-0.329532] *[#10370=-0.329536] *[#10371=-0.329689] *[#10372=-0.329706] *[#10374=-0.329757] *[#10377=-0.329878] *[#10378=-0.329949] 
 + - param set #1 has cost=-0.329949
 + -- Parameters = -0.4460 -1.3761 0.9703 -1.1798 -2.7815 0.1102 0.9972 1.0034 0.9837 -0.0014 0.0000 -0.0105
 + - param set #2 has cost=-0.064080
 + -- Parameters = -9.2778 -7.9629 17.7946 -9.9897 -25.2255 -6.9723 1.0579 0.9808 0.9759 -0.0405 -0.0034 -0.0222
 + - param set #3 has cost=-0.051210
 + -- Parameters = -9.6898 -11.4704 22.6482 -10.5930 -33.3405 8.6154 0.9861 0.9949 0.9822 -0.0097 -0.0033 0.0078
 + - param set #4 has cost=-0.048040
 + -- Parameters = -8.9862 -23.6585 10.4950 -13.8884 -28.2257 3.2216 1.0039 1.0072 1.0097 0.0087 0.0022 -0.0017
 + - param set #5 has cost=-0.047001
 + -- Parameters = -5.8634 -17.4556 4.4531 -11.3081 -17.3454 4.7828 0.9838 1.0046 0.9957 0.0177 -0.0056 -0.0107
 + - param set #6 has cost=-0.040926
 + -- Parameters = -12.6616 -28.4446 12.7038 -17.7435 -26.2566 -10.0186 1.0196 0.9945 0.9978 -0.0015 0.0012 -0.0010
 + - param set #7 has cost=-0.039403
 + -- Parameters = -9.4955 0.1093 6.1701 -28.7976 3.5034 25.2428 0.9908 1.0013 0.9884 -0.0056 0.0005 -0.0005
 + - param set #8 has cost=-0.040471
 + -- Parameters = 8.3552 -12.1327 19.0127 7.2544 -27.4253 -8.4203 1.0236 1.0049 0.9960 0.0053 0.0004 0.0001
 + - param set #9 has cost=-0.040676
 + -- Parameters = -8.7233 -17.8133 23.2607 -12.9545 -34.2839 3.8880 0.9986 0.9998 0.9938 0.0061 0.0006 -0.0010
 + - param set #10 has cost=-0.035877
 + -- Parameters = -24.9497 -1.6063 7.8723 -7.2345 10.2919 30.3825 1.0017 0.9967 0.9894 0.0009 -0.0008 0.0027
 + - param set #11 has cost=-0.043231
 + -- Parameters = -9.4136 -13.0645 18.3702 -12.6300 -20.5886 -14.3184 1.0239 1.0036 1.0030 -0.0004 -0.0013 -0.0047
 + - param set #12 has cost=-0.035388
 + -- Parameters = 29.8588 -8.8916 3.3386 23.6580 11.1949 -40.8093 0.9970 1.0015 1.0005 -0.0015 -0.0018 -0.0051
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.249 
 + --- dist(#3,#1) = 0.34 
 + --- dist(#4,#1) = 0.283 
 + --- dist(#5,#1) = 0.201 
 + --- dist(#6,#1) = 0.217 
 + --- dist(#7,#1) = 0.338 
 + --- dist(#8,#1) = 0.35 
 + --- dist(#9,#1) = 0.274 
 + --- dist(#10,#1) = 0.307 
 + --- dist(#11,#1) = 0.336 
 + --- dist(#12,#1) = 0.455 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=79 usiz=183
 + - retaining old weight image
 + - using 25851 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23050 total points stored in 247 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.305286
 + -- Parameters = -0.4378 -1.1173 0.9932 -1.1023 -3.0336 0.0668 0.9968 1.0043 0.9842 -0.0036 0.0026 -0.0149
 + - param set #2 has cost=-0.057045
 + -- Parameters = -8.4352 -7.6493 17.1650 -9.5270 -25.2348 -5.9251 1.0509 0.9860 0.9756 -0.0422 -0.0061 -0.0225
 + - param set #3 has cost=-0.047801
 + -- Parameters = -9.6782 -11.1944 22.7488 -11.0583 -33.4713 8.4998 0.9860 0.9879 0.9757 -0.0101 -0.0036 0.0075
 + - param set #4 has cost=-0.037609
 + -- Parameters = -9.2291 -23.6513 10.5116 -13.8993 -28.3037 3.1306 1.0031 1.0079 1.0092 0.0089 0.0035 -0.0017
 + - param set #5 has cost=-0.042359
 + -- Parameters = -6.0360 -17.7684 4.6758 -11.3560 -17.3568 4.5869 0.9824 1.0040 0.9932 0.0222 -0.0069 -0.0104
 + - param set #6 has cost=-0.040318
 + -- Parameters = -9.1127 -12.1585 19.0181 -12.3241 -21.3141 -13.7044 1.0265 1.0042 0.9943 -0.0103 0.0042 0.0009
 + - param set #7 has cost=-0.033800
 + -- Parameters = -12.9578 -28.4846 13.1781 -18.2333 -24.0723 -10.4432 1.0201 0.9928 0.9974 -0.0012 0.0015 0.0009
 + - param set #8 has cost=-0.044862
 + -- Parameters = -10.3345 -15.0816 24.1518 -12.5680 -34.5392 3.8270 0.9975 0.9983 0.9341 0.0413 0.0102 -0.0268
 + - param set #9 has cost=-0.036442
 + -- Parameters = 8.5849 -12.6598 18.1648 7.1328 -26.1228 -7.7272 1.0151 1.0061 0.9964 0.0048 -0.0063 -0.0012
 + - param set #10 has cost=-0.029493
 + -- Parameters = -9.3532 0.0899 6.2519 -28.5137 3.3831 25.2293 0.9889 1.0007 0.9837 -0.0059 0.0048 -0.0018
 + - param set #11 has cost=-0.027154
 + -- Parameters = -24.9677 -1.6585 7.8698 -7.2754 10.1914 30.3440 1.0096 0.9968 0.9899 0.0006 -0.0010 0.0028
 + - param set #12 has cost=-0.028425
 + -- Parameters = 29.8465 -8.7595 3.2253 23.5815 11.2914 -40.9674 0.9974 1.0013 1.0004 0.0034 -0.0020 -0.0057
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.247 
 + --- dist(#3,#1) = 0.338 
 + --- dist(#4,#1) = 0.35 
 + --- dist(#5,#1) = 0.208 
 + --- dist(#6,#1) = 0.225 
 + --- dist(#7,#1) = 0.282 
 + --- dist(#8,#1) = 0.257 
 + --- dist(#9,#1) = 0.342 
 + --- dist(#10,#1) = 0.305 
 + --- dist(#11,#1) = 0.456 
 + --- dist(#12,#1) = 0.336 
 + - Total coarse refinement net CPU time = 0.0 s; 2938 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=79 usiz=183
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 22915 total points stored in 246 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.308345 *
 + -- Parameters = -0.4378 -1.1173 0.9932 -1.1023 -3.0336 0.0668 0.9968 1.0043 0.9842 -0.0036 0.0026 -0.0149
 + - cost(#2)=-0.053101  
 + -- Parameters = -8.4352 -7.6493 17.1650 -9.5270 -25.2348 -5.9251 1.0509 0.9860 0.9756 -0.0422 -0.0061 -0.0225
 + - cost(#3)=-0.045181  
 + -- Parameters = -9.6782 -11.1944 22.7488 -11.0583 -33.4713 8.4998 0.9860 0.9879 0.9757 -0.0101 -0.0036 0.0075
 + - cost(#4)=-0.043537  
 + -- Parameters = -10.3345 -15.0816 24.1518 -12.5680 -34.5392 3.8270 0.9975 0.9983 0.9341 0.0413 0.0102 -0.0268
 + - cost(#5)=-0.038808  
 + -- Parameters = -6.0360 -17.7684 4.6758 -11.3560 -17.3568 4.5869 0.9824 1.0040 0.9932 0.0222 -0.0069 -0.0104
 + - cost(#6)=-0.037870  
 + -- Parameters = -9.1127 -12.1585 19.0181 -12.3241 -21.3141 -13.7044 1.0265 1.0042 0.9943 -0.0103 0.0042 0.0009
 + - cost(#7)=-0.035184  
 + -- Parameters = -9.2291 -23.6513 10.5116 -13.8993 -28.3037 3.1306 1.0031 1.0079 1.0092 0.0089 0.0035 -0.0017
 + - cost(#8)=-0.037404  
 + -- Parameters = 8.5849 -12.6598 18.1648 7.1328 -26.1228 -7.7272 1.0151 1.0061 0.9964 0.0048 -0.0063 -0.0012
 + - cost(#9)=-0.032126  
 + -- Parameters = -12.9578 -28.4846 13.1781 -18.2333 -24.0723 -10.4432 1.0201 0.9928 0.9974 -0.0012 0.0015 0.0009
 + - cost(#10)=-0.024959  
 + -- Parameters = -9.3532 0.0899 6.2519 -28.5137 3.3831 25.2293 0.9889 1.0007 0.9837 -0.0059 0.0048 -0.0018
 + - cost(#11)=-0.024966  
 + -- Parameters = 29.8465 -8.7595 3.2253 23.5815 11.2914 -40.9674 0.9974 1.0013 1.0004 0.0034 -0.0020 -0.0057
 + - cost(#12)=-0.025059  
 + -- Parameters = -24.9677 -1.6585 7.8698 -7.2754 10.1914 30.3440 1.0096 0.9968 0.9899 0.0006 -0.0010 0.0028
 + - cost(#13)=-0.024967  
 + -- Parameters = -0.0114 0.6830 -4.6959 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.310335 *
 + -- Parameters = -0.4100 -0.8089 1.0100 -1.0644 -3.3032 0.0602 1.0012 1.0081 0.9868 -0.0048 -0.0035 -0.0173
 + - cost(#2)=-0.056364  
 + -- Parameters = -8.0141 -7.3529 17.5385 -8.9640 -25.4094 -5.8643 1.0308 1.0087 0.9628 -0.0471 -0.0067 -0.0209
 + - cost(#3)=-0.045421  
 + -- Parameters = -9.6966 -11.2740 22.6862 -11.0111 -33.5027 8.5623 0.9874 0.9874 0.9779 -0.0097 -0.0025 0.0106
 + - cost(#4)=-0.045370  
 + -- Parameters = -10.3176 -15.1163 24.1512 -12.6587 -34.5994 3.8606 0.9840 0.9980 0.9292 0.0414 0.0097 -0.0275
 + - cost(#5)=-0.039692  
 + -- Parameters = -5.6450 -17.4700 4.4218 -11.1821 -17.0945 5.8758 0.9833 0.9999 0.9931 0.0258 -0.0079 -0.0099
 + - cost(#6)=-0.039331  
 + -- Parameters = -9.0228 -11.8135 18.7535 -12.3315 -21.6167 -13.7396 1.0329 1.0019 1.0026 -0.0105 0.0042 -0.0020
 + - cost(#7)=-0.036278  
 + -- Parameters = -9.5824 -23.2264 10.6564 -14.6733 -28.4933 3.3304 1.0045 1.0098 1.0083 0.0090 0.0024 0.0039
 + - cost(#8)=-0.038417  
 + -- Parameters = 8.9912 -12.2825 17.9419 7.3470 -26.4312 -6.9877 1.0141 1.0022 0.9941 0.0059 -0.0100 -0.0037
 + - cost(#9)=-0.032549  
 + -- Parameters = -12.9431 -28.5065 13.1755 -18.2756 -24.0814 -10.4027 1.0153 0.9925 0.9976 -0.0010 0.0019 0.0007
 + - cost(#10)=-0.027275  
 + -- Parameters = -8.7432 1.6070 6.4708 -28.5484 3.6842 26.8811 0.9925 1.0043 0.9818 -0.0142 0.0194 0.0073
 + - cost(#11)=-0.026203  
 + -- Parameters = 29.8757 -8.5203 2.9420 23.4451 11.1715 -40.7458 0.9991 1.0038 1.0111 0.0047 -0.0007 -0.0057
 + - cost(#12)=-0.025449  
 + -- Parameters = -24.9677 -1.6585 7.8698 -7.2754 10.1914 30.3440 1.0096 0.9968 0.9838 0.0006 -0.0010 0.0028
 + - cost(#13)=-0.303765  
 + -- Parameters = -0.3790 -1.6129 0.8177 -1.0143 -2.1379 0.1114 1.0025 1.0083 0.9976 0.0012 -0.0029 0.0064
 + - case #1 is now the best
 + - Initial  cost = -0.310335
 + - Initial fine Parameters = -0.4100 -0.8089 1.0100 -1.0644 -3.3032 0.0602 1.0012 1.0081 0.9868 -0.0048 -0.0035 -0.0173
 + - Finalish cost = -0.311766 ; 236 funcs
 + - Final    cost = -0.312172 ; 409 funcs
 + Final fine fit Parameters:
       x-shift=-0.3020   y-shift=-0.1549   z-shift= 0.8256
       z-angle=-1.0935   x-angle=-4.1450   y-angle= 0.2755
       x-scale= 1.0012   y-scale= 1.0122   z-scale= 0.9921
     y/x-shear=-0.0049 z/x-shear=-0.0090 z/y-shear=-0.0352
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.3020 -0.1549 0.8256 -1.0935 -4.1450 0.2755 1.0012 1.0122 0.9921 -0.0049 -0.0090 -0.0352
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 24.4
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 0.500068 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0144 -1.0091 -0.0818 225.1115 -0.0035 -0.0450 0.9915 107.3311 -1.0010 -0.0195 0.0048 201.4662
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.3
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base MNI152_T1_2009c+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 29.9 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3754.760100 ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 139.726 57.6016   ITER = 12/137
139.726

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=0 xtop=0  ybot=1 ytop=2  zbot=15 ztop=0 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 193 x 232 x 208 volume ; autobbox = 19..173 21..211 17..179 [clock= 12s 527ms]
lev=0 0..192 0..231 0..199: [first cost=-0.74616] ... done [cost:-0.74616==>-0.83292]
lev=1 patch=145x175x157 [clock= 30m 52s 237ms]........:[cost=-0.87324]:........ done [cost:-0.83292==>-0.87807 ; 16 patches optimized, 0 skipped]
lev=2 patch=109x131x117 [clock= 52m 34s 659ms]..................... done [cost:-0.87807==>-0.94463 ; 21 patches optimized, 6 skipped]
lev=3 patch=81x99x89 [clock= 1h 5m 54s 475ms].................. done [cost:-0.94463==>-1.01682 ; 41 patches optimized, 23 skipped]
lev=4 patch=61x73x67 [clock= 1h 18m 50s 456ms]....... done [cost:-1.01682==>-1.06940 ; 73 patches optimized, 52 skipped]
lev=5 patch=47x55x49 [clock= 1h 28m 29s 290ms]................. done [cost:-1.06940==>-1.14921 ; 193 patches optimized, 150 skipped]
lev=6 patch=35x41x37 [clock= 1h 39m 4s 113ms]..................... done [cost:-1.14921==>-1.18540 ; 451 patches optimized, 359 skipped]
lev=7 patch=25x25x25 [clock= 1h 49m 45s 623ms]............................... done [cost:-1.18540==>-1.30428 ; 1528 patches optimized, 1384 skipped]
++ ========== total number of parameters 'optimized' = 56049
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 2h 1m 35s 289ms
#++ Applying warps to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8989/tb8989.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 26.9 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_T1_2009c+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
if ( ! -f Sag3DMPRAGEs002a1001_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.tb8989.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 0.500068 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb8989.r01.tshift+orig.BRIK is 0.500068 degrees from plumb.
++ Reading input dataset ./pb02.tb8989.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28539 voxels
 + 4987 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.037  pitch=-0.329  yaw=-0.517  dS=-0.671  dL=-0.018  dP=-2.248
++ Mean: roll=+0.154  pitch=+2.129  yaw=-0.188  dS=-0.121  dL=+0.219  dP=-0.875
++ Max : roll=+0.693  pitch=+4.359  yaw=+0.065  dS=+0.883  dL=+0.474  dP=+0.000
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.72(0.72) 0.61(0.12) 0.51(0.11) 0.18(0.44) 0.20(0.10) 0.29(0.10) 0.33(0.11) 0.27(0.06) 0.35(0.13) 0.47(0.15) 0.45(0.04) 0.47(0.04) 0.52(0.09) 0.60(0.09) 0.61(0.07) 0.59(0.03) 0.66(0.08) 0.72(0.06) 0.69(0.09) 0.63(0.06) 0.67(0.04) 0.72(0.06) 0.72(0.05) 0.77(0.05) 0.78(0.05) 0.80(0.03) 0.85(0.07) 0.91(0.06) 0.94(0.03) 0.97(0.06) 0.96(0.03) 1.00(0.06) 1.03(0.03) 1.04(0.04) 1.09(0.05) 1.14(0.06) 1.23(0.09) 1.31(0.09) 1.34(0.03) 1.36(0.03) 1.43(0.06) 1.56(0.13) 1.57(0.03) 1.61(0.04) 1.63(0.03) 1.68(0.06) 1.65(0.06) 2.20(0.93) 2.76(0.56) 2.85(0.10) 2.90(0.06) 3.00(0.10) 3.09(0.08) 3.14(0.08) 3.20(0.06) 3.30(0.11) 3.25(0.06) 3.20(0.05) 3.30(0.10) 3.32(0.03) 3.34(0.02) 3.33(0.04) 3.32(0.04) 3.39(0.06) 3.44(0.06) 3.48(0.03) 3.48(0.03) 3.40(0.09) 3.39(0.03) 3.42(0.04) 3.31(0.13) 2.99(0.46) 2.82(0.48) 2.88(0.37) 3.00(0.14) 2.98(0.08) 2.82(0.17) 2.97(0.15) 3.11(0.16) 3.26(0.16) 3.32(0.08) 3.33(0.12) 3.45(0.12) 5.59(2.18) 6.59(1.04) 6.39(0.20) 6.45(0.10) 6.44(0.05) 6.34(0.11) 6.44(0.11) 6.39(0.06) 6.40(0.03) 6.39(0.02) 6.34(0.06) 6.38(0.04) 6.40(0.03) 6.43(0.06) 6.46(0.13) 6.51(0.06) 6.50(0.03) 6.68(0.19) 6.77(0.12) 6.78(0.03) 6.85(0.07) 6.75(0.10) 6.78(0.04) 6.86(0.09) 6.80(0.07) 6.83(0.04) 6.88(0.06) 6.95(0.07) 6.97(0.08) 7.01(0.07) 7.40(0.78) 7.57(0.84) 7.22(0.66) 7.21(0.18) 6.82(0.42) 6.72(0.14) 6.81(0.10) 6.83(0.04) 6.75(0.08) 6.61(0.17) 5.35(2.08) 5.38(0.83) 5.32(0.20) 5.10(0.25) 5.05(0.07) 5.03(0.08) 5.04(0.04) 4.99(0.06) 4.99(0.10) 5.21(0.48) 5.53(0.66) 5.63(0.28) 5.73(0.28) 5.77(0.15) 5.76(0.07) 5.78(0.06) 5.75(0.04) 5.74(0.03) 5.75(0.02) 5.76(0.05) 5.74(0.04) 5.73(0.09) 5.71(0.12) 5.72(0.04) 5.74(0.08) 5.78(0.09)
++ Max displacement in automask = 7.57 (mm) at sub-brick 115
++ Max delta displ  in automask = 2.18 (mm) at sub-brick 84
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.tb8989.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb8989.r01.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb8989.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb8989.r01.tshift+orig.BRIK is 0.500068 degrees from plumb.
++ opened source dataset 'pb02.tb8989.r01.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 489.2 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 0.500068 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.tb8989.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 0.500068 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb8989.r02.tshift+orig.BRIK is 0.500068 degrees from plumb.
++ Reading input dataset ./pb02.tb8989.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28255 voxels
 + 4750 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.614  pitch=+3.102  yaw=-0.860  dS=-1.155  dL=+0.287  dP=-5.140
++ Mean: roll=+0.912  pitch=+4.571  yaw=-0.379  dS=-0.517  dL=+1.106  dP=-4.513
++ Max : roll=+1.231  pitch=+6.974  yaw=+0.155  dS=+0.473  dL=+1.928  dP=-4.182
++ Max displacements (mm) for each sub-brick:
 10.39(0.00) 9.13(1.57) 9.21(0.08) 9.19(0.02) 9.22(0.06) 9.18(0.09) 9.20(0.04) 9.15(0.05) 9.10(0.09) 9.13(0.12) 9.17(0.06) 9.22(0.09) 9.26(0.08) 9.30(0.08) 9.37(0.08) 9.36(0.06) 10.03(0.82) 10.67(0.84) 10.33(0.46) 10.43(0.13) 10.42(0.07) 10.50(0.12) 10.55(0.06) 10.60(0.08) 11.38(0.91) 13.22(1.94) 12.85(0.49) 13.01(0.16) 13.01(0.04) 12.99(0.07) 12.94(0.06) 12.90(0.09) 12.87(0.07) 12.76(0.26) 12.53(0.28) 12.47(0.16) 12.44(0.07) 12.60(0.18) 12.57(0.06) 12.47(0.12) 12.40(0.08) 12.40(0.04) 12.35(0.07) 12.26(0.09) 12.30(0.05) 12.30(0.02) 12.61(0.33) 12.90(0.34) 13.01(0.13) 13.01(0.07) 13.13(0.13) 13.11(0.04) 13.10(0.02) 13.10(0.04) 13.14(0.05) 13.22(0.08) 13.22(0.02) 13.13(0.11) 13.13(0.04) 13.12(0.04) 13.04(0.10) 13.03(0.04) 12.76(0.30) 9.99(3.37) 9.12(1.28) 8.95(0.18) 8.74(0.27) 8.72(0.10) 8.69(0.06) 8.67(0.06) 8.72(0.06) 8.46(0.40) 8.38(0.45) 8.38(0.48) 8.38(0.22) 8.41(0.17) 8.53(0.29) 8.51(0.15) 8.51(0.11) 8.49(0.12) 8.50(0.07) 8.48(0.09) 8.45(0.20) 8.40(0.16) 8.38(0.08) 8.40(0.10) 8.42(0.06) 8.36(0.13) 8.11(0.62) 7.90(0.52) 8.03(0.34) 8.06(0.14) 8.12(0.19) 8.21(0.29) 8.23(0.05) 8.19(0.17) 8.09(0.19) 8.08(0.17) 8.11(0.15) 8.11(0.11) 8.14(0.07) 8.13(0.05) 8.17(0.06) 8.15(0.09) 8.15(0.04) 8.15(0.04) 8.16(0.08) 8.17(0.07) 8.16(0.04) 8.15(0.10) 8.16(0.05) 8.13(0.05) 8.16(0.07) 8.14(0.04) 8.18(0.06) 8.08(0.21) 7.95(0.51) 7.94(0.12) 7.96(0.08) 7.97(0.11) 7.93(0.09) 7.92(0.05) 7.92(0.08) 7.94(0.05) 7.97(0.07) 7.98(0.05) 8.05(0.08) 8.06(0.04) 8.15(0.10) 8.15(0.05) 8.79(0.78) 9.71(1.17) 9.51(0.29) 9.52(0.05) 9.45(0.73) 8.82(1.16) 8.23(0.79) 7.85(0.64) 7.90(0.09) 7.87(0.09) 7.86(0.06) 7.81(0.08) 7.75(0.11) 7.74(0.16) 7.66(0.16) 7.62(0.10) 7.63(0.07) 7.65(0.03) 7.65(0.03) 7.66(0.05)
++ Max displacement in automask = 13.22 (mm) at sub-brick 55
++ Max delta displ  in automask = 3.37 (mm) at sub-brick 63
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.tb8989.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb8989.r02.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb8989.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb8989.r02.tshift+orig.BRIK is 0.500068 degrees from plumb.
++ opened source dataset 'pb02.tb8989.r02.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 484.0 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 0.500068 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.tb8989.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 0.500068 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb8989.r03.tshift+orig.BRIK is 0.500068 degrees from plumb.
++ Reading input dataset ./pb02.tb8989.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28361 voxels
 + 4958 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+1.066  pitch=+4.691  yaw=-0.463  dS=-1.601  dL=+1.356  dP=-5.278
++ Mean: roll=+1.212  pitch=+5.319  yaw=-0.283  dS=-1.246  dL=+1.435  dP=-5.067
++ Max : roll=+1.268  pitch=+5.757  yaw=-0.181  dS=-0.968  dL=+1.490  dP=-4.841
++ Max displacements (mm) for each sub-brick:
 10.86(0.00) 10.85(0.09) 10.77(0.10) 10.80(0.08) 10.70(0.13) 10.57(0.19) 10.61(0.09) 10.65(0.06) 10.77(0.15) 10.73(0.10) 10.65(0.13) 10.64(0.07) 10.64(0.03) 10.62(0.05) 10.52(0.14) 10.44(0.08) 10.56(0.13) 10.56(0.10) 10.59(0.03) 10.62(0.04) 10.72(0.14) 10.85(0.13) 10.97(0.38) 10.98(0.12) 10.86(0.26) 10.91(0.12) 11.13(0.30) 11.18(0.13) 11.19(0.04) 11.24(0.07) 11.24(0.02) 11.28(0.07) 11.24(0.11) 11.25(0.12) 11.25(0.04) 11.21(0.06) 11.24(0.06) 11.24(0.03) 11.31(0.10) 11.37(0.07) 11.41(0.08) 11.52(0.11) 11.52(0.05) 11.56(0.06) 11.64(0.09) 11.67(0.04) 11.70(0.05) 11.69(0.03) 11.76(0.10) 11.88(0.15) 11.95(0.09) 11.90(0.11) 11.89(0.02) 11.95(0.08) 11.89(0.06) 11.89(0.03) 11.88(0.03) 11.86(0.05) 11.75(0.17) 11.71(0.05) 11.68(0.05) 11.60(0.09) 11.57(0.10) 11.54(0.16) 11.45(0.10) 11.31(0.16) 11.39(0.08) 11.50(0.17) 11.62(0.16) 11.76(0.20) 11.71(0.08) 11.69(0.03) 11.72(0.03) 11.70(0.02) 11.65(0.09) 11.49(0.20) 11.47(0.12) 11.48(0.06) 11.44(0.08) 11.45(0.06) 11.15(0.31) 11.11(0.17) 11.17(0.10) 11.25(0.19) 11.25(0.06) 11.23(0.05) 11.23(0.05) 11.25(0.05) 11.25(0.03) 11.17(0.11) 11.17(0.07) 11.22(0.10) 11.24(0.06) 11.29(0.08) 11.35(0.06) 11.37(0.03) 11.40(0.05) 11.45(0.09) 11.45(0.07) 11.48(0.07) 11.49(0.04) 11.53(0.05) 11.47(0.08) 11.25(0.37) 10.99(0.42) 10.85(0.29) 10.91(0.16) 11.10(0.28) 11.30(0.22) 11.35(0.07) 11.41(0.13) 11.57(0.17) 11.61(0.06) 11.61(0.05) 11.66(0.08) 11.66(0.04) 11.72(0.07) 11.73(0.03) 11.72(0.06) 11.76(0.06) 11.77(0.05) 11.80(0.05) 11.98(0.23) 12.12(0.17) 12.12(0.03) 12.13(0.04) 12.12(0.03) 12.18(0.10) 12.20(0.03) 12.20(0.02) 12.20(0.04) 12.22(0.06) 12.27(0.04) 12.27(0.03) 12.14(0.18) 12.17(0.10) 12.25(0.14) 12.25(0.09) 12.28(0.06) 12.27(0.05) 12.26(0.08) 12.19(0.09) 12.18(0.02) 12.25(0.10) 12.23(0.03) 12.21(0.04) 12.21(0.03) 12.18(0.08) 12.15(0.05) 12.01(0.17)
++ Max displacement in automask = 12.28 (mm) at sub-brick 138
++ Max delta displ  in automask = 0.42 (mm) at sub-brick 104
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.tb8989.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb8989.r03.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb8989.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb8989.r03.tshift+orig.BRIK is 0.500068 degrees from plumb.
++ opened source dataset 'pb02.tb8989.r03.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 482.2 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 0.500068 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb8989.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8989.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb8989.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8989.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb8989.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8989.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source vr_base+orig -nwarp anat.un.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 0.500068 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 12.6 sec
3dcopy Sag3DMPRAGEs002a1001_ns+tlrc anat_final.tb8989
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.tb8989+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb8989+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets
++ 1863179 voxels in source_automask+0
++ Zero-pad: xbot=3 xtop=3
++ Zero-pad: ybot=3 ytop=4
++ Computing -autobox
++ 341496 voxels [91.8%] in weight mask
++ Number of points for matching = 160503
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.134853
   sp   = 0.282557
   mi   = -0.599117
   crM  = 0.0338976
   nmi  = 0.841647
   je   = 3.1843
   hel  = -0.12444
   crA  = 0.184211
   crU  = 0.178215
   lss  = 0.865147
   lpc  = 0.166036
   lpa  = 0.833964
   lpc+ = 0.279507
   ncd  = 0.89584
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.1
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb8989+tlrc -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb8989+tlrc'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 27.7 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb8989.r01.blur pb03.tb8989.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb8989.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb8989.r02.blur pb03.tb8989.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb8989.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb8989.r03.blur pb03.tb8989.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb8989.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb04.tb8989.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb8989.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 414.143372
 + Used gradual clip level = 377.253784 .. 456.639130
 + Number voxels above clip level = 69462
 + Clustering voxels ...
 + Largest cluster has 68841 voxels
 + Clustering voxels ...
 + Largest cluster has 68549 voxels
 + Filled    80 voxels in small holes; now have 68629 voxels
 + Clustering voxels ...
 + Largest cluster has 68627 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242669 voxels
 + Mask now has 68627 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 232597 voxels
++ 78699 voxels in the mask [out of 311296: 25.28%]
++ first   5 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   6 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   6 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb04.tb8989.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb8989.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 412.490875
 + Used gradual clip level = 377.798737 .. 447.584229
 + Number voxels above clip level = 69829
 + Clustering voxels ...
 + Largest cluster has 69377 voxels
 + Clustering voxels ...
 + Largest cluster has 68819 voxels
 + Filled    75 voxels in small holes; now have 68894 voxels
 + Clustering voxels ...
 + Largest cluster has 68894 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242402 voxels
 + Mask now has 68894 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 232832 voxels
++ 78464 voxels in the mask [out of 311296: 25.21%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   6 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   6 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb04.tb8989.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb8989.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 412.012634
 + Used gradual clip level = 377.854858 .. 446.739227
 + Number voxels above clip level = 69852
 + Clustering voxels ...
 + Largest cluster has 69002 voxels
 + Clustering voxels ...
 + Largest cluster has 68962 voxels
 + Filled    79 voxels in small holes; now have 69041 voxels
 + Clustering voxels ...
 + Largest cluster has 69041 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242255 voxels
 + Mask now has 69041 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 232647 voxels
++ 78649 voxels in the mask [out of 311296: 25.27%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   6 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.tb8989
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 79827 survived, 231469 were zero
++ writing result full_mask.tb8989...
3dresample -master full_mask.tb8989+tlrc -input Sag3DMPRAGEs002a1001_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.tb8989
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 98625 survived, 212671 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb8989...
3dABoverlap -no_automask full_mask.tb8989+tlrc mask_anat.tb8989+tlrc
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#A=./full_mask.tb8989+tlrc.BRIK  B=./mask_anat.tb8989+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
79827        98625        99822        78630        1197         19995         1.4995     20.2738     1.1071     1.0016     1.3088
3ddot -dodice full_mask.tb8989+tlrc mask_anat.tb8989+tlrc
tee out.mask_ae_dice.txt
0.881245	
3dresample -master full_mask.tb8989+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71790 survived, 239506 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb04.tb8989.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.tb8989.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb8989.r01.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb8989.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.tb8989.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.tb8989.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb8989.r02.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb8989.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.tb8989.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.tb8989.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb8989.r03.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb8989.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb8989
total number of censored TRs (simple form) = 47
1deval -a motion_tb8989_censor.1D -b outcount_tb8989_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb8989_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb05.tb8989.r01.scale+tlrc.HEAD pb05.tb8989.r02.scale+tlrc.HEAD pb05.tb8989.r03.scale+tlrc.HEAD -censor censor_tb8989_combined_2.1D -polort 3 -local_times -num_stimts 18 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll_01 -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch_01 -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw_01 -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS_01 -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL_01 -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP_01 -stim_file 13 motion_deriv.1D[0] -stim_base 13 -stim_label 13 roll_02 -stim_file 14 motion_deriv.1D[1] -stim_base 14 -stim_label 14 pitch_02 -stim_file 15 motion_deriv.1D[2] -stim_base 15 -stim_label 15 yaw_02 -stim_file 16 motion_deriv.1D[3] -stim_base 16 -stim_label 16 dS_02 -stim_file 17 motion_deriv.1D[4] -stim_base 17 -stim_label 17 dL_02 -stim_file 18 motion_deriv.1D[5] -stim_base 18 -stim_label 18 dP_02 -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +uns1 -str1 -glt_label 4 unstructured-structured BL1 -gltsym SYM: +uns2 -str2 -glt_label 5 unstructured-structured BL2 -gltsym SYM: +uns3 -str3 -glt_label 6 unstructured-structured BL3 -gltsym SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3 -glt_label 7 task -gltsym SYM: +uns1 +str1 -glt_label 8 task BL1 -gltsym SYM: +uns2 +str2 -glt_label 9 task BL2 -gltsym SYM: +uns3 +str3 -glt_label 10 task BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb8989 -errts errts.tb8989 -bucket stats.tb8989
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 596,852 bytes (about 597 thousand [kilo])
++ loading dataset pb05.tb8989.r01.scale+tlrc.HEAD pb05.tb8989.r02.scale+tlrc.HEAD pb05.tb8989.r03.scale+tlrc.HEAD
++ current memory malloc-ated = 561,233,701 bytes (about 561 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 221489 voxels (out of 311296 = 71.2%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 -str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 -str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 +str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 396 (after)
 + Number of parameters:  30 [24 baseline ; 6 signal]
++ total shared memory needed = 1,181,679,616 bytes (about 1.2 billion [giga])
++ current memory malloc-ated = 561,588,601 bytes (about 562 million [mega])
++ mmap() memory allocated: 1,181,679,616 bytes (about 1.2 billion [giga])
++ Memory required for output bricks = 1,181,679,616 bytes (about 1.2 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.tb8989.r01.scale+tlrc.HEAD pb05.tb8989.r02.scale+tlrc.HEAD pb05.tb8989.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.tb8989_REML -Rvar stats.tb8989_REMLvar \
 -Rfitts fitts.tb8989_REML -Rerrts errts.tb8989_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (396x30):  5.12002  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (396x6):  1.0366  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (396x24):  4.8002  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (396x12):  3.32727  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (396x12):  1.087  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.41828e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.38 s
++ Voxels in dataset: 311296
++ Voxels per job:    31129
++ Job #1: processing voxels 31129 to 62257; elapsed time=6.675
++ Job #2: processing voxels 62258 to 93386; elapsed time=6.696
++ Job #3: processing voxels 93387 to 124515; elapsed time=6.719
++ Job #4: processing voxels 124516 to 155644; elapsed time=6.743
++ Job #5: processing voxels 155645 to 186773; elapsed time=6.786
++ Job #6: processing voxels 186774 to 217902; elapsed time=6.820
++ Job #7: processing voxels 217903 to 249031; elapsed time=6.854
++ Job #8: processing voxels 249032 to 280160; elapsed time=6.878
++ Job #0: processing voxels 0 to 31128; elapsed time=6.918
++ voxel loop:++ Job #9: processing voxels 280161 to 311295; elapsed time=6.921
0123456789.0123456789.0123456789.0123456789.0123456789.
++ Job #0 waiting for children to finish; elapsed time=70.120
++ Job #5 finished; elapsed time=70.367
++ Job #4 finished; elapsed time=70.437
++ Job #6 finished; elapsed time=70.587
++ Job #7 finished; elapsed time=71.019
++ Job #2 finished; elapsed time=71.212
++ Job #3 finished; elapsed time=71.265
++ Job #1 finished; elapsed time=71.380
++ Job #9 finished; elapsed time=71.746
++ Job #8 finished; elapsed time=72.044
++ Job #0 now finishing up; elapsed time=72.058
++ Smallest FDR q [0 Full_Fstat] = 4.34102e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 1.60726e-12
++ Smallest FDR q [3 uns1_Fstat] = 1.60731e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 3.2166e-14
++ Smallest FDR q [6 uns2_Fstat] = 3.21621e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 5.01943e-14
++ Smallest FDR q [9 uns3_Fstat] = 5.01928e-14
++ Smallest FDR q [11 str1#0_Tstat] = 4.22366e-13
++ Smallest FDR q [12 str1_Fstat] = 4.22372e-13
++ Smallest FDR q [14 str2#0_Tstat] = 8.4195e-14
++ Smallest FDR q [15 str2_Fstat] = 8.41962e-14
++ Smallest FDR q [17 str3#0_Tstat] = 3.786e-14
++ Smallest FDR q [18 str3_Fstat] = 3.78629e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 4.78964e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 4.78946e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 5.28827e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 5.28783e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 2.99321e-13
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 2.9933e-13
++ Smallest FDR q [29 unstructured-structured BL1_GLT#0_Tstat] = 3.24464e-13
++ Smallest FDR q [30 unstructured-structured BL1_GLT_Fstat] = 3.2446e-13
++ Smallest FDR q [32 unstructured-structured BL2_GLT#0_Tstat] = 4.51588e-14
++ Smallest FDR q [33 unstructured-structured BL2_GLT_Fstat] = 4.51627e-14
++ Smallest FDR q [35 unstructured-structured BL3_GLT#0_Tstat] = 5.33254e-11
++ Smallest FDR q [36 unstructured-structured BL3_GLT_Fstat] = 5.33254e-11
++ Smallest FDR q [38 task_GLT#0_Tstat] = 4.49159e-14
++ Smallest FDR q [39 task_GLT_Fstat] = 4.49134e-14
++ Smallest FDR q [41 task BL1_GLT#0_Tstat] = 8.4379e-13
++ Smallest FDR q [42 task BL1_GLT_Fstat] = 8.43787e-13
++ Smallest FDR q [44 task BL2_GLT#0_Tstat] = 4.7428e-14
++ Smallest FDR q [45 task BL2_GLT_Fstat] = 4.74254e-14
++ Smallest FDR q [47 task BL3_GLT#0_Tstat] = 3.80795e-14
++ Smallest FDR q [48 task BL3_GLT_Fstat] = 3.80783e-14
++ Wrote bucket dataset into ./stats.tb8989+tlrc.BRIK
 + created 33 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb8989+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.tb8989+tlrc.BRIK
++ Program finished; elapsed time=141.853
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.729       0.788  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.714       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.693       0.758  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.520       0.592  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.463       0.531  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.462       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:      -0.418      -0.382  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb05.tb8989.r01.scale+tlrc.HEAD pb05.tb8989.r02.scale+tlrc.HEAD pb05.tb8989.r03.scale+tlrc.HEAD -fout -tout -Rbuck stats.tb8989_REML -Rvar stats.tb8989_REMLvar -Rfitts fitts.tb8989_REML -Rerrts errts.tb8989_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 311296 voxels
++ FDR automask has 221489 voxels (out of 311296 = 71.2%)
++ -----  matrix condition (396x30):  5.12002  ++ VERY GOOD ++
 + masked off 89795 voxels for being all zero; 221501 left in mask
++ Converting input dataset to vector image
 +  dataset = 560 million [mega] bytes
 +  vectim  = 400 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=13.83
 + X matrix: 57.298% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=396 cols=30; 109*1 cases; total CPU=0.00 Elapsed=13.88
 +  average case bandwidth = 11.37
++ REML voxel loop: [6 threads]0123456789.0123456789.0123456789.012345
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=167.83
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=256.58
++ Output dataset ./stats.tb8989_REMLvar+tlrc.BRIK
++ Output dataset ./fitts.tb8989_REML+tlrc.BRIK
++ Output dataset ./errts.tb8989_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.tb8989_REML+tlrc
++ Smallest FDR q [0 Full_Fstat] = 9.15048e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 0.000889745
++ Smallest FDR q [3 uns1_Fstat] = 0.000889744
++ Smallest FDR q [5 uns2#0_Tstat] = 2.85555e-10
++ Smallest FDR q [6 uns2_Fstat] = 2.85554e-10
++ Smallest FDR q [8 uns3#0_Tstat] = 2.47237e-12
++ Smallest FDR q [9 uns3_Fstat] = 2.47237e-12
++ Smallest FDR q [11 str1#0_Tstat] = 9.82818e-05
++ Smallest FDR q [12 str1_Fstat] = 9.82819e-05
++ Smallest FDR q [14 str2#0_Tstat] = 1.65799e-07
++ Smallest FDR q [15 str2_Fstat] = 1.65799e-07
++ Smallest FDR q [17 str3#0_Tstat] = 8.86765e-12
++ Smallest FDR q [18 str3_Fstat] = 8.86765e-12
++ Smallest FDR q [20 unstructured#0_Tstat] = 8.7869e-11
++ Smallest FDR q [21 unstructured_Fstat] = 8.7869e-11
++ Smallest FDR q [23 structured#0_Tstat] = 1.97818e-10
++ Smallest FDR q [24 structured_Fstat] = 1.97818e-10
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 6.00573e-05
++ Smallest FDR q [27 unstructured-structured_Fstat] = 6.00574e-05
++ Smallest FDR q [29 unstructured-structured_BL1#0_Tstat] = 4.67456e-06
++ Smallest FDR q [30 unstructured-structured_BL1_Fstat] = 4.67456e-06
++ Smallest FDR q [32 unstructured-structured_BL2#0_Tstat] = 1.78152e-10
++ Smallest FDR q [33 unstructured-structured_BL2_Fstat] = 1.78152e-10
[7m*+ WARNING:[0m Smallest FDR q [35 unstructured-structured_BL3#0_Tstat] = 0.101336 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 unstructured-structured_BL3_Fstat] = 0.101336 ==> few true single voxel detections
++ Smallest FDR q [38 task#0_Tstat] = 5.78873e-11
++ Smallest FDR q [39 task_Fstat] = 5.78873e-11
++ Smallest FDR q [41 task_BL1#0_Tstat] = 0.000380976
++ Smallest FDR q [42 task_BL1_Fstat] = 0.000380976
++ Smallest FDR q [44 task_BL2#0_Tstat] = 4.865e-08
++ Smallest FDR q [45 task_BL2_Fstat] = 4.865e-08
++ Smallest FDR q [47 task_BL3#0_Tstat] = 2.62288e-12
++ Smallest FDR q [48 task_BL3_Fstat] = 2.62288e-12
 + Added 33 FDR curves to dataset stats.tb8989_REML+tlrc
++ Output dataset ./stats.tb8989_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=329.41
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb8989 pb05.tb8989.r01.scale+tlrc.HEAD pb05.tb8989.r02.scale+tlrc.HEAD pb05.tb8989.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 12.3 s
3dTstat -mean -prefix rm.signal.all all_runs.tb8989+tlrc[2..46,50..70,74..82,86..112,117..122,132,135..149,152..164,168..172,176..211,215..220,224..236,240..264,267..278,288..449]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb8989_REML+tlrc[2..46,50..70,74..82,86..112,117..122,132,135..149,152..164,168..172,176..211,215..220,224..236,240..264,267..278,288..449]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -c full_mask.tb8989+tlrc -expr c*a/b -prefix TSNR.tb8989
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.tb8989+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.tb8989_REML+tlrc
++ 3dTnorm: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.tb8989+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
+++ 79827 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.160106
3dcalc -a rm.errts.unit+tlrc -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+tlrc.BRIK
3dTstat -sum -prefix corr_brain rm.DP+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+tlrc.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb8989.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 2..46,50..70,74..82,86..112,117..122,132,135..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8989+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb8989+tlrc[2..46,50..70,74..82,86..112,117..122,132,135..149]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 79827
[7m*+ WARNING:[0m removed 481 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 124 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 24.33 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 152..164,168..172,176..211,215..220,224..236,240..264,267..278,288..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8989+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb8989+tlrc[152..164,168..172,176..211,215..220,224..236,240..264,267..278,288..299]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 79827
[7m*+ WARNING:[0m removed 481 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 122 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 25.80 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8989+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb8989+tlrc[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 79827
[7m*+ WARNING:[0m removed 481 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 26.10 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 0 0 0 0
average errts FWHM blurs: 0 0 0 0
echo 0 0 0 0   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.5288 4.78627 12.729 12.8465
average errts ACF blurs: 0.5288 4.78627 12.729 12.8465
echo 0.5288 4.78627 12.729 12.8465   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 2..46,50..70,74..82,86..112,117..122,132,135..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8989+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb8989_REML+tlrc[2..46,50..70,74..82,86..112,117..122,132,135..149]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 79827
[7m*+ WARNING:[0m removed 481 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 124 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 24.29 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 152..164,168..172,176..211,215..220,224..236,240..264,267..278,288..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8989+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb8989_REML+tlrc[152..164,168..172,176..211,215..220,224..236,240..264,267..278,288..299]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 79827
[7m*+ WARNING:[0m removed 481 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 122 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 25.72 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8989+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb8989_REML+tlrc[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 79827
[7m*+ WARNING:[0m removed 481 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 26.05 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 0 0 0 0
average err_reml FWHM blurs: 0 0 0 0
echo 0 0 0 0   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.527985 4.7901 12.6407 12.8332
average err_reml ACF blurs: 0.527985 4.7901 12.6407 12.8332
echo 0.527985 4.7901 12.6407 12.8332   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb8989.1D
3dClustSim -both -mask full_mask.tb8989+tlrc -acf 0.527985 4.7901 12.6407 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 79827 voxels in mask (25.64% of total)
++ Kernel function radius = 39.96 mm
++ ACF(0.53,4.79,12.64) => FWHM=12.82 => 64x76x64 pads to 96x120x96
 + Kernel image dimensions 47 x 59 x 47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 1052.9 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb8989+tlrc stats.tb8989_REML+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb8989+tlrc
 + atrcopy
++ applying attributes
++ Processing AFNI dataset stats.tb8989_REML+tlrc
 + atrcopy
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb8989 -dsets pb00.tb8989.r01.tcat+orig.HEAD pb00.tb8989.r02.tcat+orig.HEAD pb00.tb8989.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+tlrc.BRIK rm.DP+tlrc.HEAD rm.epi.1.r01+tlrc.BRIK.gz rm.epi.1.r01+tlrc.HEAD rm.epi.1.r02+tlrc.BRIK.gz rm.epi.1.r02+tlrc.HEAD rm.epi.1.r03+tlrc.BRIK.gz rm.epi.1.r03+tlrc.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+tlrc.BRIK.gz rm.epi.mean+tlrc.HEAD rm.epi.min.r01+tlrc.BRIK.gz rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.BRIK.gz rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.BRIK.gz rm.epi.min.r03+tlrc.HEAD rm.epi.nomask.r01+tlrc.BRIK rm.epi.nomask.r01+tlrc.HEAD rm.epi.nomask.r02+tlrc.BRIK rm.epi.nomask.r02+tlrc.HEAD rm.epi.nomask.r03+tlrc.BRIK rm.epi.nomask.r03+tlrc.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK.gz rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.BRIK.gz rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.BRIK.gz rm.mask_r03+tlrc.HEAD rm.mean_r01+tlrc.BRIK rm.mean_r01+tlrc.HEAD rm.mean_r02+tlrc.BRIK rm.mean_r02+tlrc.HEAD rm.mean_r03+tlrc.BRIK rm.mean_r03+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.resam.anat+tlrc.BRIK rm.resam.anat+tlrc.HEAD rm.resam.group+tlrc.BRIK rm.resam.group+tlrc.HEAD rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb8989.txt
./@ss_review_basic

subject ID                : tb8989
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb8989+tlrc.HEAD
final stats dset          : stats.tb8989_REML+tlrc.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 31
average motion (per TR)   : 0.0982066
average censored motion   : 0.059735
max motion displacement   : 9.04328
max censored displacement : 8.96204
outlier limit             : 0.1
average outlier frac (TR) : 0.0148203
num TRs above out limit   : 22

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 124 122 150
num TRs per run (censored): 26 28 0
fraction censored per run : 0.173333 0.186667 0
TRs total (uncensored)    : 450
TRs total                 : 396
degrees of freedom used   : 30
degrees of freedom left   : 366

TRs censored              : 54
censor fraction           : 0.120000
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 3 16 0 24 23 0
fraction TRs censored     : 0.044 0.235 0.000 0.216 0.207 0.000
ave mot per sresp (orig)  : 0.050515 0.177616 0.065979 0.112087 0.148333 0.061699
ave mot per sresp (cens)  : 0.042538 0.070594 0.065979 0.052606 0.070826 0.061699

TSNR average              : 204.745
global correlation (GCOR) : 0.160106
anat/EPI mask Dice coef   : 0.881245
maximum F-stat (masked)   : 13.9368
blur estimates (ACF)      : 0.527985 4.7901 12.6407
blur estimates (FWHM)     : 0 0 0


cd ..
echo execution finished: `date`
date
execution finished: Wed Jan  3 12:52:00 EST 2018
