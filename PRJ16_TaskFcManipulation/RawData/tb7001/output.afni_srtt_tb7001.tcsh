echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:53 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb7001
endif
set output_dir = tb7001.srtt
if ( -d tb7001.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb7001.srtt
mkdir tb7001.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb7001.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb7001.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb7001.srtt/pb00.tb7001.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.1 s
3dTcat -prefix tb7001.srtt/pb00.tb7001.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.5 s
3dTcat -prefix tb7001.srtt/pb00.tb7001.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.2 s
set tr_counts = ( 150 150 150 )
cd tb7001.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7001.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7001.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7001.r01.tcat+orig.BRIK is 12.699996 degrees from plumb.
++ 29676 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7001.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7001.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7001.r02.tcat+orig.BRIK is 12.699996 degrees from plumb.
++ 29682 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7001.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7001.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7001.r03.tcat+orig.BRIK is 12.699996 degrees from plumb.
++ 29651 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb7001.r01.tshift -tpattern alt+z2 pb00.tb7001.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7001.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7001.r01.tcat+orig.BRIK is 12.699996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb7001.r02.tshift -tpattern alt+z2 pb00.tb7001.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7001.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7001.r02.tcat+orig.BRIK is 12.699996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb7001.r03.tshift -tpattern alt+z2 pb00.tb7001.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7001.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7001.r03.tcat+orig.BRIK is 12.699996 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb7001.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.699996 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 388.024811
 + Used gradual clip level = 351.035400 .. 438.038910
 + Number voxels above clip level = 30061
 + Clustering voxels ...
 + Largest cluster has 29778 voxels
 + Clustering voxels ...
 + Largest cluster has 29335 voxels
 + Filled   325 voxels in small holes; now have 29660 voxels
 + Filled     1 voxels in large holes; now have 29661 voxels
 + Clustering voxels ...
 + Largest cluster has 29661 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 101411 voxels
 + Mask now has 29661 voxels
++ 29661 voxels in the mask [out of 131072: 22.63%]
++ first  12 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 971.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/971.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 12.699996 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.699996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1497227 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 29661 voxels [18.1%] in weight mask
++ Number of points for matching = 29661
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.005 28.958 21.340 (index)
 + source center of mass = 86.140 167.224 164.015 (index)
 + source-target CM = -1.935 0.247 -7.086 (xyz)
 + center of mass shifts = -1.935 0.247 -7.086
++ shift param auto-range: -71.5..67.6 -69.3..69.8 -57.2..43.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.934906 .. 8.065094
 + Range param#2 [y-shift] = -9.753395 .. 10.246605
 + Range param#3 [z-shift] = -17.086304 .. 2.913696
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.934906 .. 38.065094
 + Range param#2 [y-shift] = -39.753395 .. 40.246605
 + Range param#3 [z-shift] = -47.086304 .. 32.913696
 + 12 free parameters
++ Normalized convergence radius = 0.000449
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1497227 [out of 16587824] voxels
 + base mask has 40635 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=69 usiz=196.5
 + - copying weight image
 + - using 29661 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 25820 total points stored in 243 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo-..o*[#10=-0.0232592] *-.--o*[#28=-0.0369139] *.o*[#92=-0.0524334] *o-.-oo$+*[#4240=-0.0554448] *.+
 + - best 45 costs found:
    0 v=-0.055445: -17.92 -19.25 -12.81 -20.53   3.14  10.08  [rand]
    1 v=-0.052433: -28.60 -13.09   6.25 -15.00 -15.00  15.00  [grid]
    2 v=-0.043654:   2.14   6.47   0.71  -4.32 -22.85 -18.95  [rand]
    3 v=-0.040467: -15.27  26.91 -20.42 -15.00  30.00  15.00  [grid]
    4 v=-0.040331: -17.92  19.74  -1.36 -20.53   3.14  10.08  [rand]
    5 v=-0.039460: -17.92 -19.25 -12.81 -20.53  -3.14  10.08  [rand]
    6 v=-0.039030: -15.96 -15.47   7.58 -24.25 -37.55   4.41  [rand]
    7 v=-0.038788:  11.40 -13.09   6.25  15.00 -30.00 -15.00  [grid]
    8 v=-0.038600:  24.73 -13.09   6.25  15.00 -15.00 -15.00  [grid]
    9 v=-0.038204:  19.04 -28.14  25.16   3.65 -28.33 -14.78  [rand]
   10 v=-0.038074:  11.49 -22.44  24.25  -4.37 -20.12 -15.12  [rand]
   11 v=-0.036914: -15.27 -13.09   6.25 -15.00 -15.00  15.00  [grid]
   12 v=-0.035431: -17.92  19.74  -1.36 -20.53  -3.14  10.08  [rand]
   13 v=-0.035063: -24.79 -23.33   3.33  -5.91 -29.74  29.45  [rand]
   14 v=-0.034606: -29.07 -18.62  20.65  -5.55 -17.35  23.42  [rand]
   15 v=-0.034401: -15.27 -26.42   6.25  15.00 -30.00  30.00  [grid]
   16 v=-0.032731:  -6.01  -5.98   0.71   4.32 -22.85  18.95  [rand]
   17 v=-0.032699: -15.27 -13.09   6.25 -15.00 -30.00  15.00  [grid]
   18 v=-0.031460: -10.58 -20.19  10.39 -25.20 -18.50 -13.54  [rand]
   19 v=-0.031436:  11.40 -26.42   6.25 -30.00 -30.00 -15.00  [grid]
   20 v=-0.031070: -22.91 -28.14  25.16  -3.65 -28.33  14.78  [rand]
   21 v=-0.031043:   2.14   6.47   0.71   4.32 -22.85 -18.95  [rand]
   22 v=-0.030190:  11.40 -26.42   6.25  15.00 -30.00 -15.00  [grid]
   23 v=-0.029346: -33.77  12.04  -4.34  23.31   3.26  40.47  [rand]
   24 v=-0.029156:  11.40 -26.42  19.58 -15.00 -15.00 -30.00  [grid]
   25 v=-0.029098: -15.96 -15.47   7.58 -24.25 -37.55  -4.41  [rand]
   26 v=-0.028954: -18.79 -18.34   7.37 -19.57 -37.09  16.59  [rand]
   27 v=-0.028868: -15.35 -22.44  24.25  -4.37 -20.12  15.12  [rand]
   28 v=-0.028862:   2.14  -5.98   0.71  -4.32 -22.85 -18.95  [rand]
   29 v=-0.028535: -15.27  13.58 -33.75 -15.00  30.00  15.00  [grid]
   30 v=-0.028315:  11.40  26.91  19.58 -30.00  30.00 -15.00  [grid]
   31 v=-0.028062:  11.40 -26.42  19.58 -15.00 -30.00 -30.00  [grid]
   32 v=-0.028023: -28.60 -26.42   6.25 -15.00 -30.00  15.00  [grid]
   33 v=-0.027734: -28.60 -26.42   6.25 -15.00 -30.00  30.00  [grid]
   34 v=-0.027275: -28.24 -25.71  10.71 -15.82 -17.65  37.25  [rand]
   35 v=-0.027263:  -6.01   6.47   0.71   4.32 -22.85  18.95  [rand]
   36 v=-0.027192:  11.40 -26.42   6.25 -15.00 -30.00 -30.00  [grid]
   37 v=-0.027075: -15.96 -15.47 -21.75 -24.25  37.55  -4.41  [rand]
   38 v=-0.027072: -15.27 -13.09   6.25  30.00 -30.00  15.00  [grid]
   39 v=-0.026958: -28.60 -13.09  19.58 -30.00 -30.00  30.00  [grid]
   40 v=-0.026410:  -6.01   6.47   0.71  -4.32 -22.85 -18.95  [rand]
   41 v=-0.026301: -15.27 -26.42   6.25 -15.00 -30.00  15.00  [grid]
   42 v=-0.026279:  11.40  13.58 -33.75  15.00  30.00 -15.00  [grid]
   43 v=-0.026092:  11.40 -13.09  19.58  15.00 -15.00  15.00  [grid]
   44 v=-0.025680: -15.27  13.58 -20.42 -15.00  30.00  15.00  [grid]
*[#8011=-0.0567778] *[#8012=-0.0586853] *[#8014=-0.0616754] *[#8015=-0.0631108] *[#8017=-0.0638488] *[#8018=-0.0667002] *[#8019=-0.067032] *[#8021=-0.0671459] *[#8023=-0.0673771] *[#8025=-0.0680451] *[#8026=-0.0683132] *[#8161=-0.0859354] *[#8168=-0.0885217] *[#8172=-0.0914161] *[#8174=-0.091828] *[#8175=-0.0930819] *[#8178=-0.0945502] *[#8181=-0.096037] *[#8184=-0.0964684] *[#8185=-0.0975284] *[#8186=-0.100119] *[#8187=-0.101701] *[#8189=-0.102206] *[#8190=-0.103781] *[#8193=-0.104623] *[#8194=-0.106209] *[#8195=-0.106947] *[#8196=-0.108423] *[#8197=-0.109538] *[#8200=-0.111917] *[#8201=-0.114541] *[#8202=-0.117985] *[#8203=-0.123471] *[#8204=-0.129607] *[#8206=-0.130905] *[#8207=-0.132433] *[#8208=-0.134922] *[#8209=-0.134976] *[#8212=-0.135679] *[#8215=-0.137458] *[#8216=-0.13886] *[#8217=-0.139336] *[#8218=-0.139463] *[#8223=-0.142253] *[#8224=-0.14627] *[#8500=-0.148482] *[#8502=-0.153457] *[#8503=-0.156376] *[#8508=-0.157053] *[#8511=-0.160861] *[#8512=-0.165252] *[#8513=-0.172363] *[#8514=-0.184707] *[#8516=-0.186205] *[#8521=-0.195769] *[#8522=-0.200861] *[#8525=-0.201824] *[#8527=-0.203173] *[#8528=-0.210086] *[#8531=-0.214711] *[#8532=-0.216642] *[#8533=-0.217926] *[#8534=-0.218153] *[#8536=-0.225024] *[#8537=-0.237071] *[#8538=-0.253256] *[#9982=-0.25857] *[#9983=-0.276504] *[#9985=-0.29479] *[#9987=-0.300679] *[#9988=-0.330417] *[#9989=-0.359061]  + - costs of the above after a little optimization:
    0 v=-0.068313: -18.88 -19.51 -13.19 -19.69   1.50   8.68  [rand]
    1 v=-0.065055: -26.99 -15.65   4.42 -15.08 -14.21  14.55  [grid]
    2 v=-0.054689:   0.85   5.64   0.89  -7.83 -24.91 -19.64  [rand]
    3 v=-0.058777: -15.44  32.87 -17.58 -17.23  27.44  12.50  [grid]
    4 v=-0.146270:  -4.22   7.38  -0.75  -5.56   2.53   0.68  [rand]
    5 v=-0.081850: -16.58 -17.33 -11.68 -15.68  -0.92   9.75  [rand]
    6 v=-0.055300: -18.10 -15.64   9.19 -24.21 -27.74   4.94  [rand]
    7 v=-0.044614:  11.06 -12.95  10.03  14.39 -29.11 -14.90  [grid]
    8 v=-0.070351:  19.13 -13.03   6.35  13.61 -14.14 -12.73  [grid]
    9 v=-0.059791:  19.33 -27.54  19.43   0.86 -29.38 -18.26  [rand]
   10 v=-0.051956:  10.00 -23.26  22.28  -5.91 -23.14 -18.14  [rand]
   11 v=-0.253256:  -3.68  -7.55   2.32  -3.97  -5.05  -1.63  [grid]
   12 v=-0.047322: -16.12  18.80  -3.56 -19.75  -3.44  11.13  [rand]
   13 v=-0.066712: -25.72 -31.30   7.33  -5.94 -29.31  23.42  [rand]
   14 v=-0.037561: -28.70 -15.12  20.55  -5.28 -17.12  23.26  [rand]
   15 v=-0.081224: -17.74 -27.75  12.02   1.97 -27.44  20.52  [grid]
   16 v=-0.108292:  -4.03  -8.71   7.85   0.22 -16.11   4.47  [rand]
   17 v=-0.072303: -16.01 -19.17   5.01 -13.80 -19.42   8.52  [grid]
   18 v=-0.131348:  -0.04 -20.81  11.78  -4.12 -21.10  -6.71  [rand]
   19 v=-0.040554:  11.55 -27.36   5.59 -35.60 -32.20 -14.86  [grid]
   20 v=-0.074576: -19.32 -28.45  15.75  -3.69 -27.46  14.25  [rand]
   21 v=-0.049452:  -0.59   2.37   0.03   0.08 -24.10 -17.12  [rand]
   22 v=-0.068513:   8.29 -26.83   9.73  17.86 -29.64   1.98  [grid]
   23 v=-0.051302: -31.43   6.65  -3.83  28.74   6.00  43.10  [rand]
   24 v=-0.037378:  10.66 -29.72  19.02 -15.79 -15.84 -30.53  [grid]
   25 v=-0.038436: -12.91 -14.71   4.74 -24.78 -37.14  -6.06  [rand]
   26 v=-0.059871: -16.65 -21.63  12.45 -11.64 -30.59   9.96  [rand]
   27 v=-0.057919: -21.13 -22.22  19.44  -7.01 -25.03  13.65  [rand]
   28 v=-0.053925:  -0.13  -5.64   6.13  -9.09 -23.65 -16.78  [rand]
   29 v=-0.071226: -14.77   7.68 -29.09 -17.65  29.64  13.51  [grid]
   30 v=-0.035554:  12.71  25.04  19.30 -30.48  30.47 -14.97  [grid]
   31 v=-0.042836:  10.57 -26.14  19.63 -14.15 -23.61 -29.35  [grid]
   32 v=-0.049588: -24.22 -25.58   6.75 -14.32 -27.99  16.70  [grid]
   33 v=-0.068162: -25.12 -29.65   7.34  -5.77 -28.36  23.11  [grid]
   34 v=-0.033361: -28.13 -26.10  10.90 -11.59 -17.43  37.42  [rand]
   35 v=-0.062466:  -0.52  -0.60   2.50   4.34 -21.67   8.51  [rand]
   36 v=-0.079730:   3.78 -35.30   8.22  -9.95 -27.94 -23.27  [grid]
   37 v=-0.031318: -16.22 -15.58 -19.12 -23.15  38.65  -4.17  [rand]
   38 v=-0.035680: -16.17 -13.03   7.00  34.50 -30.52  14.06  [grid]
   39 v=-0.032147: -24.00  -9.93  16.48 -32.85 -28.02  29.57  [grid]
   40 v=-0.058734:  -1.47   4.71   1.54  -9.01 -26.68 -17.51  [rand]
   41 v=-0.083186: -15.36 -29.54   5.66 -11.16 -24.48   7.83  [grid]
   42 v=-0.051625:  13.83  11.11 -28.34  16.60  31.36  -8.86  [grid]
  *43 v=-0.359061:  -1.22  -3.45   2.81  -0.95  -5.95   1.14  [grid]
   44 v=-0.075127:  -9.91  13.29 -24.12 -12.96  29.27   7.31  [grid]
 + - save #43 for twobest
 + - save #11 for twobest
 + - save # 4 for twobest
 + - save #18 for twobest
 + - save #16 for twobest
 + - save #41 for twobest
 + - save # 5 for twobest
 + - save #15 for twobest
 + - save #36 for twobest
 + - save #44 for twobest
 + - save #20 for twobest
 + - save #17 for twobest
 + - save #29 for twobest
 + - save # 8 for twobest
 + - save #22 for twobest
 + - skip # 0 for twobest: too close to set # 5
 + - save #33 for twobest
 + - skip #13 for twobest: too close to set #33
 + - save # 1 for twobest
 + - save #35 for twobest
 + - save #26 for twobest
 + - save # 9 for twobest
 + - save # 3 for twobest
 + - save #40 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=69 usiz=196.5
 + - retaining old weight image
 + - using 29661 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26067 total points stored in 265 'RHDD(13.7332)' bloks
*[#10067=-0.415261] *[#10068=-0.4167] *[#10070=-0.42636] *[#10075=-0.428994] *[#10078=-0.461407] *[#10079=-0.522082] *[#10081=-0.554018] *[#10082=-0.602135] *[#10085=-0.60929] *[#10089=-0.616836] *[#10090=-0.626092] *[#10091=-0.633175] *[#10092=-0.637889] *[#10093=-0.641632] *[#10094=-0.647538] *[#10095=-0.648807] *[#10096=-0.657173] *[#10099=-0.660189] *[#10100=-0.668361] *[#10101=-0.671652] *[#10104=-0.674806] *[#10105=-0.676195] *[#10109=-0.677394] *[#10110=-0.677591] *[#10111=-0.683839] *[#10116=-0.68601] *[#10121=-0.686436] *[#10130=-0.688462] *[#10131=-0.688543] 
 + - param set #1 has cost=-0.688543
 + -- Parameters = -0.6610 -1.7711 -0.7712 0.0933 -2.2145 0.2318 0.9918 1.0040 1.0103 -0.0023 -0.0011 -0.0037
*[#10203=-0.691449] *[#10206=-0.693029] *[#10209=-0.694628] *[#10212=-0.694649] *[#10214=-0.696236] *[#10216=-0.697596] *[#10227=-0.697825] 
 + - param set #2 has cost=-0.697825
 + -- Parameters = -0.6620 -1.7463 -0.8422 0.3438 -1.6952 -0.0958 1.0101 1.0044 1.0113 0.0072 0.0042 0.0031
 + - param set #3 has cost=-0.677070
 + -- Parameters = -0.7402 -1.2711 -0.8339 -0.1727 -2.1826 0.4641 0.9886 1.0245 1.0000 -0.0064 -0.0035 0.0014
 + - param set #4 has cost=-0.092190
 + -- Parameters = -1.1673 -21.2001 8.9622 -4.5629 -19.9378 -5.9964 1.0000 1.0072 1.0052 0.0001 -0.0000 0.0138
 + - param set #5 has cost=-0.239423
 + -- Parameters = -4.0062 -8.0330 0.8699 -3.6994 -6.4078 0.4900 1.0003 0.9830 0.9875 -0.0020 0.0094 -0.0189
 + - param set #6 has cost=-0.082265
 + -- Parameters = -10.0119 -20.9530 7.1058 -7.0089 -22.1829 7.1180 1.0216 1.0537 1.0100 0.0174 0.0051 0.0075
 + - param set #7 has cost=-0.075206
 + -- Parameters = -16.4121 -17.0705 -11.5351 -15.4562 -1.0237 9.7333 1.0020 1.0010 1.0006 0.0107 0.0002 -0.0011
 + - param set #8 has cost=-0.055662
 + -- Parameters = -16.1751 -28.0408 12.4100 1.5274 -28.1021 19.8150 1.0041 1.0056 1.0008 0.0033 0.0041 0.0094
 + - param set #9 has cost=-0.070037
 + -- Parameters = 3.0634 -35.8629 7.2436 -11.5047 -30.5900 -20.1461 0.9982 0.9966 1.0005 -0.0007 0.0031 0.0049
 + - param set #10 has cost=-0.072305
 + -- Parameters = -9.6992 13.2151 -23.6766 -12.8559 29.5407 7.4226 1.0219 1.0013 0.9988 -0.0011 -0.0021 -0.0029
 + - param set #11 has cost=-0.053908
 + -- Parameters = -18.7523 -28.4653 14.1786 -5.4032 -27.9066 13.0937 1.0123 0.9954 0.9994 0.0043 0.0009 0.0038
 + - param set #12 has cost=-0.652557
 + -- Parameters = -0.5891 -1.6895 -1.2909 0.7506 -1.3364 0.9628 1.0072 1.0047 0.9756 0.0251 -0.0226 0.0115
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.05 
 + --- dist(#3,#1) = 0.0614 
 + --- dist(#4,#1) = 0.121 
 + --- dist(#5,#1) = 0.0994 
 + --- dist(#6,#1) = 0.243 
 + --- dist(#7,#1) = 0.24 
 + --- dist(#8,#1) = 0.197 
 + --- dist(#9,#1) = 0.347 
 + --- dist(#10,#1) = 0.426 
 + --- dist(#11,#1) = 0.329 
 + --- dist(#12,#1) = 0.334 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=69 usiz=196.5
 + - retaining old weight image
 + - using 29661 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26386 total points stored in 275 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.688248
 + -- Parameters = -0.5822 -1.5894 -0.9705 0.2399 -2.0605 -0.0377 1.0029 1.0107 1.0019 0.0023 0.0034 -0.0013
 + - param set #2 has cost=-0.689833
 + -- Parameters = -0.6628 -1.7262 -0.9401 0.2417 -2.3447 0.2452 1.0090 1.0091 1.0020 -0.0009 -0.0045 -0.0075
 + - param set #3 has cost=-0.687747
 + -- Parameters = -0.6436 -1.6818 -0.9600 0.1695 -2.1535 0.0872 1.0076 1.0117 1.0012 -0.0038 -0.0025 -0.0030
 + - param set #4 has cost=-0.679768
 + -- Parameters = -0.7513 -1.6015 -0.9785 0.4140 -1.7397 0.6544 1.0099 1.0105 1.0006 0.0054 -0.0118 0.0043
 + - param set #5 has cost=-0.630559
 + -- Parameters = -0.3619 -2.2663 -1.0685 0.0334 -2.9056 -0.8652 1.0007 0.9880 0.9926 -0.0009 0.0170 -0.0197
 + - param set #6 has cost=-0.090891
 + -- Parameters = -1.2267 -20.2167 4.4427 -3.1318 -19.3337 -3.2391 1.0012 1.0459 0.9270 -0.0138 -0.0071 0.0075
 + - param set #7 has cost=-0.090881
 + -- Parameters = -7.6449 -19.3181 6.1363 -1.9981 -19.8358 8.4156 1.0143 1.0529 0.9985 0.0165 0.0056 0.0032
 + - param set #8 has cost=-0.063150
 + -- Parameters = -15.5801 -17.1884 -11.1308 -15.5713 -0.7544 9.6348 1.0261 1.0001 1.0089 0.0180 0.0005 -0.0080
 + - param set #9 has cost=-0.058835
 + -- Parameters = -9.6550 13.2361 -23.3005 -12.9175 29.6158 6.9773 1.0172 0.9893 0.9895 -0.0025 0.0109 0.0057
 + - param set #10 has cost=-0.058627
 + -- Parameters = 2.9519 -35.9975 7.3322 -11.3985 -30.5486 -20.0462 0.9959 0.9955 0.9966 -0.0011 0.0031 0.0032
 + - param set #11 has cost=-0.043645
 + -- Parameters = -15.9687 -27.6462 12.6107 1.4587 -27.7131 19.7861 1.0038 1.0052 1.0005 0.0034 0.0034 0.0164
 + - param set #12 has cost=-0.049272
 + -- Parameters = -15.7429 -28.7590 13.3382 -6.7770 -28.5328 9.1440 1.0250 0.9987 0.9983 0.0059 -0.0033 0.0146
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0355 
 + --- dist(#3,#1) = 0.0206 
 + --- dist(#4,#1) = 0.0533 
 + --- dist(#5,#1) = 0.0967 
 + --- dist(#6,#1) = 0.231 
 + --- dist(#7,#1) = 0.22 
 + --- dist(#8,#1) = 0.193 
 + --- dist(#9,#1) = 0.355 
 + --- dist(#10,#1) = 0.428 
 + --- dist(#11,#1) = 0.338 
 + --- dist(#12,#1) = 0.324 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=69 usiz=196.5
 + - retaining old weight image
 + - using 29661 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26808 total points stored in 288 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.648501
 + -- Parameters = -0.6283 -1.6671 -0.9966 0.2436 -2.3917 0.1113 1.0087 1.0112 1.0016 -0.0009 -0.0025 -0.0085
 + - param set #2 has cost=-0.647751
 + -- Parameters = -0.5566 -1.6254 -0.9869 0.2570 -2.1022 -0.0334 1.0081 1.0109 1.0010 0.0000 0.0011 -0.0027
 + - param set #3 has cost=-0.647757
 + -- Parameters = -0.6175 -1.5771 -1.0006 0.2435 -2.1318 0.0876 1.0076 1.0122 1.0009 0.0004 -0.0018 -0.0032
 + - param set #4 has cost=-0.646254
 + -- Parameters = -0.6260 -1.5576 -1.0193 0.2198 -1.9324 0.0900 1.0066 1.0116 1.0005 0.0007 -0.0029 0.0004
 + - param set #5 has cost=-0.641728
 + -- Parameters = -0.4697 -1.7872 -1.1111 0.3797 -3.0803 -0.3694 1.0071 1.0113 0.9967 0.0021 0.0111 -0.0221
 + - param set #6 has cost=-0.098437
 + -- Parameters = -1.3887 -18.9494 3.5016 -2.9056 -18.4478 -1.8608 0.9777 1.0332 0.9357 -0.0067 -0.0002 -0.0434
 + - param set #7 has cost=-0.096013
 + -- Parameters = -4.7388 -17.6356 5.1587 -2.1816 -19.2874 4.5241 0.9701 1.0634 0.9506 0.0381 -0.0002 -0.0137
 + - param set #8 has cost=-0.053175
 + -- Parameters = -15.1684 -17.1764 -11.0034 -15.4319 -0.6586 9.2157 1.0117 1.0029 1.0055 0.0211 -0.0003 -0.0093
 + - param set #9 has cost=-0.049273
 + -- Parameters = -9.6971 12.8459 -22.8958 -12.9907 29.2664 7.2463 1.0146 0.9797 0.9933 -0.0028 0.0106 0.0056
 + - param set #10 has cost=-0.047824
 + -- Parameters = 3.0307 -35.9685 7.2139 -11.2148 -30.6845 -19.9571 0.9958 0.9976 0.9940 -0.0027 0.0119 0.0001
 + - param set #11 has cost=-0.050987
 + -- Parameters = -12.2612 -28.8339 13.6478 -7.0730 -28.3393 5.6333 1.0286 1.0012 1.0015 0.0106 -0.0049 0.0155
 + - param set #12 has cost=-0.037086
 + -- Parameters = -14.7175 -27.4106 12.9430 1.6768 -28.4290 18.3299 1.0021 1.0068 0.9883 0.0023 -0.0009 0.0199
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0239 
 + --- dist(#3,#1) = 0.0262 
 + --- dist(#4,#1) = 0.0403 
 + --- dist(#5,#1) = 0.0613 
 + --- dist(#6,#1) = 0.216 
 + --- dist(#7,#1) = 0.2 
 + --- dist(#8,#1) = 0.194 
 + --- dist(#9,#1) = 0.34 
 + --- dist(#10,#1) = 0.352 
 + --- dist(#11,#1) = 0.429 
 + --- dist(#12,#1) = 0.322 
 + - Total coarse refinement net CPU time = 0.0 s; 3270 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=69 usiz=196.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 26797 total points stored in 289 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.619927 *
 + -- Parameters = -0.6283 -1.6671 -0.9966 0.2436 -2.3917 0.1113 1.0087 1.0112 1.0016 -0.0009 -0.0025 -0.0085
 + - cost(#2)=-0.619335  
 + -- Parameters = -0.6175 -1.5771 -1.0006 0.2435 -2.1318 0.0876 1.0076 1.0122 1.0009 0.0004 -0.0018 -0.0032
 + - cost(#3)=-0.619407  
 + -- Parameters = -0.5566 -1.6254 -0.9869 0.2570 -2.1022 -0.0334 1.0081 1.0109 1.0010 0.0000 0.0011 -0.0027
 + - cost(#4)=-0.617639  
 + -- Parameters = -0.6260 -1.5576 -1.0193 0.2198 -1.9324 0.0900 1.0066 1.0116 1.0005 0.0007 -0.0029 0.0004
 + - cost(#5)=-0.613275  
 + -- Parameters = -0.4697 -1.7872 -1.1111 0.3797 -3.0803 -0.3694 1.0071 1.0113 0.9967 0.0021 0.0111 -0.0221
 + - cost(#6)=-0.095667  
 + -- Parameters = -1.3887 -18.9494 3.5016 -2.9056 -18.4478 -1.8608 0.9777 1.0332 0.9357 -0.0067 -0.0002 -0.0434
 + - cost(#7)=-0.092758  
 + -- Parameters = -4.7388 -17.6356 5.1587 -2.1816 -19.2874 4.5241 0.9701 1.0634 0.9506 0.0381 -0.0002 -0.0137
 + - cost(#8)=-0.047350  
 + -- Parameters = -15.1684 -17.1764 -11.0034 -15.4319 -0.6586 9.2157 1.0117 1.0029 1.0055 0.0211 -0.0003 -0.0093
 + - cost(#9)=-0.047966  
 + -- Parameters = -12.2612 -28.8339 13.6478 -7.0730 -28.3393 5.6333 1.0286 1.0012 1.0015 0.0106 -0.0049 0.0155
 + - cost(#10)=-0.041790  
 + -- Parameters = -9.6971 12.8459 -22.8958 -12.9907 29.2664 7.2463 1.0146 0.9797 0.9933 -0.0028 0.0106 0.0056
 + - cost(#11)=-0.045200  
 + -- Parameters = 3.0307 -35.9685 7.2139 -11.2148 -30.6845 -19.9571 0.9958 0.9976 0.9940 -0.0027 0.0119 0.0001
 + - cost(#12)=-0.031195  
 + -- Parameters = -14.7175 -27.4106 12.9430 1.6768 -28.4290 18.3299 1.0021 1.0068 0.9883 0.0023 -0.0009 0.0199
 + - cost(#13)=-0.039110  
 + -- Parameters = -1.9349 0.2466 -7.0863 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.620344 *
 + -- Parameters = -0.6354 -1.6600 -0.9574 0.2327 -2.4010 0.0741 1.0081 1.0116 1.0013 -0.0007 -0.0019 -0.0086
 + - cost(#2)=-0.620033  
 + -- Parameters = -0.6061 -1.6056 -0.9483 0.2510 -2.2145 0.0440 1.0074 1.0131 1.0009 0.0006 -0.0009 -0.0043
 + - cost(#3)=-0.619945  
 + -- Parameters = -0.5900 -1.6304 -0.9799 0.2453 -2.1169 -0.0724 1.0073 1.0115 1.0010 -0.0003 0.0013 -0.0033
 + - cost(#4)=-0.619979  
 + -- Parameters = -0.6149 -1.6088 -0.9238 0.2358 -2.1950 0.0099 1.0071 1.0128 1.0023 -0.0001 -0.0002 -0.0040
 + - cost(#5)=-0.617887  
 + -- Parameters = -0.5857 -1.8096 -0.9989 0.2485 -2.9864 -0.1654 1.0087 1.0118 1.0010 -0.0005 0.0039 -0.0202
 + - cost(#6)=-0.105773  
 + -- Parameters = -2.3806 -16.9051 1.7766 -2.5295 -16.2438 -0.0234 0.9893 1.0448 0.9346 -0.0079 0.0010 -0.0458
 + - cost(#7)=-0.106826  
 + -- Parameters = -4.4754 -18.6068 1.2216 -2.3428 -18.3778 3.7782 0.9739 1.0471 0.9151 0.0881 0.0394 -0.0584
 + - cost(#8)=-0.052054  
 + -- Parameters = -14.9425 -17.1845 -10.3779 -14.8396 0.0808 8.9650 1.0266 1.0113 1.0317 0.0439 -0.0085 -0.0018
 + - cost(#9)=-0.051035  
 + -- Parameters = -12.0644 -28.2396 13.6305 -6.4143 -28.4603 5.9628 1.0169 1.0083 0.9908 0.0101 0.0031 0.0102
 + - cost(#10)=-0.044916  
 + -- Parameters = -10.0790 11.9239 -21.7723 -12.9428 29.2666 6.9490 1.0262 0.9639 0.9954 -0.0027 0.0166 0.0355
 + - cost(#11)=-0.045647  
 + -- Parameters = 2.8826 -35.9182 7.0751 -11.3184 -30.5989 -20.1360 0.9921 0.9975 0.9930 0.0024 0.0129 0.0002
 + - cost(#12)=-0.031880  
 + -- Parameters = -14.6750 -27.3572 12.8914 1.4941 -28.2853 18.3463 0.9909 1.0043 0.9891 0.0017 -0.0011 0.0210
 + - cost(#13)=-0.619453  
 + -- Parameters = -0.5743 -1.7061 -0.9158 0.2781 -2.5288 -0.0753 1.0057 1.0114 1.0031 0.0015 0.0025 -0.0109
 + - case #1 is now the best
 + - Initial  cost = -0.620344
 + - Initial fine Parameters = -0.6354 -1.6600 -0.9574 0.2327 -2.4010 0.0741 1.0081 1.0116 1.0013 -0.0007 -0.0019 -0.0086
 + - Finalish cost = -0.620471 ; 131 funcs
 + - Final    cost = -0.620593 ; 275 funcs
 + Final fine fit Parameters:
       x-shift=-0.5951   y-shift=-1.6651   z-shift=-0.9657
       z-angle= 0.2549   x-angle=-2.4018   y-angle=-0.0497
       x-scale= 1.0077   y-scale= 1.0119   z-scale= 1.0008
     y/x-shear=-0.0004 z/x-shear= 0.0008 z/y-shear=-0.0085
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.5951 -1.6651 -0.9657 0.2549 -2.4018 -0.0497 1.0077 1.0119 1.0008 -0.0004 0.0008 -0.0085
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 23.7
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.699996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0048 -0.9936 0.1785 232.0223 0.0009 0.1897 0.9851 51.7716 -1.0077 0.0045 -0.0009 199.2757
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 17.0 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3468.670100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 67.1861 48.2733   ITER = 6/137
67.1861

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 558ms]
lev=0 0..171 0..213 0..166: [first cost=-0.70833] ... done [cost:-0.70833==>-0.76489]
lev=1 patch=129x161x125 [clock= 14m 28s 557ms]........:[cost=-0.78955]:........ done [cost:-0.76489==>-0.79185 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 21m 21s 164ms]......................... done [cost:-0.79185==>-0.85597 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 27m 59s 718ms].............. done [cost:-0.85597==>-0.91496 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 32m 52s 476ms].............. done [cost:-0.91496==>-0.97404 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 36m 38s 836ms]............. done [cost:-0.97404==>-1.03529 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 40m 15s 531ms]..................... done [cost:-1.03529==>-1.09237 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 43m 46s 722ms]...................... done [cost:-1.09237==>-1.17235 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 47m 29s 966ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7001/tb7001.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.1 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb7001.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.699996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7001.r01.tshift+orig.BRIK is 12.699996 degrees from plumb.
++ Reading input dataset ./pb01.tb7001.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31401 voxels
 + 4990 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.194  pitch=-0.041  yaw=-0.446  dS=-0.665  dL=-0.124  dP=-0.182
++ Mean: roll=+0.018  pitch=+0.170  yaw=-0.230  dS=-0.395  dL=+0.089  dP=-0.071
++ Max : roll=+0.127  pitch=+0.350  yaw=+0.171  dS=+0.174  dL=+0.172  dP=+0.113
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.32(0.32) 0.40(0.16) 0.41(0.16) 0.41(0.08) 0.45(0.09) 0.47(0.08) 0.43(0.08) 0.46(0.08) 0.40(0.08) 0.48(0.14) 0.40(0.28) 0.34(0.11) 0.26(0.07) 0.22(0.06) 0.23(0.06) 0.30(0.09) 0.26(0.08) 0.23(0.03) 0.27(0.05) 0.25(0.05) 0.28(0.06) 0.33(0.05) 0.35(0.06) 0.38(0.06) 0.39(0.07) 0.46(0.09) 0.48(0.03) 0.49(0.06) 0.53(0.06) 0.55(0.05) 0.60(0.06) 0.61(0.03) 0.64(0.05) 0.66(0.03) 0.68(0.05) 0.69(0.03) 0.68(0.03) 0.67(0.05) 0.66(0.06) 0.67(0.07) 0.67(0.05) 0.68(0.04) 0.73(0.05) 0.78(0.06) 0.78(0.03) 0.75(0.05) 0.72(0.06) 0.75(0.05) 0.77(0.03) 0.79(0.03) 0.76(0.05) 0.72(0.05) 0.80(0.13) 0.80(0.07) 0.80(0.07) 0.81(0.06) 0.82(0.05) 0.85(0.09) 0.83(0.04) 0.84(0.03) 0.84(0.06) 0.86(0.04) 0.87(0.02) 0.88(0.05) 0.89(0.04) 0.90(0.04) 0.93(0.06) 0.94(0.05) 0.94(0.02) 0.96(0.05) 0.96(0.05) 0.95(0.07) 1.01(0.06) 0.99(0.02) 1.02(0.04) 1.02(0.08) 1.04(0.05) 1.05(0.09) 1.06(0.05) 1.08(0.04) 1.09(0.04) 1.11(0.04) 1.12(0.09) 1.02(0.14) 1.02(0.07) 1.05(0.05) 1.04(0.06) 1.02(0.07) 1.01(0.04) 1.05(0.05) 1.04(0.07) 1.09(0.06) 1.10(0.03) 1.09(0.04) 1.10(0.08) 1.12(0.04) 1.11(0.10) 1.05(0.11) 1.09(0.06) 1.03(0.12) 1.11(0.13) 1.08(0.08) 1.11(0.06) 1.13(0.06) 1.15(0.04) 1.18(0.08) 1.18(0.04) 1.20(0.04) 1.21(0.03) 1.23(0.04) 1.22(0.02) 1.24(0.03) 1.26(0.04) 1.25(0.02) 1.26(0.04) 1.22(0.06) 1.20(0.08) 1.22(0.04) 1.23(0.06) 1.25(0.11) 1.30(0.16) 1.24(0.14) 1.27(0.07) 1.27(0.04) 1.26(0.04) 1.23(0.03) 1.24(0.03) 1.24(0.06) 1.26(0.04) 1.28(0.06) 1.28(0.07) 1.30(0.06) 1.32(0.04) 1.30(0.04) 1.31(0.04) 1.26(0.06) 1.26(0.10) 1.26(0.03) 1.23(0.04) 1.25(0.05) 1.16(0.20) 1.02(0.18) 0.86(0.25) 0.88(0.07) 0.78(0.18) 0.61(0.35) 0.68(0.18) 0.77(0.26) 0.80(0.28)
++ Max displacement in automask = 1.32 (mm) at sub-brick 133
++ Max delta displ  in automask = 0.35 (mm) at sub-brick 146
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb7001.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7001.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7001.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7001.r01.tshift+orig.BRIK is 12.699996 degrees from plumb.
++ Source dataset: ./pb01.tb7001.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.699996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb7001.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.699996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7001.r02.tshift+orig.BRIK is 12.699996 degrees from plumb.
++ Reading input dataset ./pb01.tb7001.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31330 voxels
 + 4976 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.116  pitch=-0.991  yaw=-0.040  dS=-0.321  dL=-0.073  dP=-0.289
++ Mean: roll=-0.072  pitch=-0.657  yaw=+0.093  dS=-0.090  dL=+0.017  dP=-0.226
++ Max : roll=-0.035  pitch=-0.331  yaw=+0.175  dS=+0.432  dL=+0.120  dP=-0.143
++ Max displacements (mm) for each sub-brick:
 1.70(0.00) 1.63(0.25) 1.82(0.21) 1.90(0.14) 1.97(0.11) 1.94(0.08) 1.86(0.11) 1.96(0.15) 1.96(0.18) 1.70(0.28) 1.60(0.10) 1.52(0.09) 1.53(0.10) 1.56(0.06) 1.56(0.05) 1.58(0.05) 1.58(0.06) 1.56(0.07) 1.53(0.04) 1.52(0.02) 1.47(0.05) 1.47(0.03) 1.47(0.03) 1.46(0.02) 1.47(0.04) 1.41(0.06) 1.46(0.06) 1.46(0.03) 1.45(0.05) 1.44(0.02) 1.43(0.03) 1.47(0.05) 1.49(0.06) 1.45(0.04) 1.47(0.02) 1.52(0.08) 1.52(0.04) 1.52(0.03) 1.49(0.07) 1.46(0.03) 1.46(0.02) 1.38(0.10) 1.42(0.12) 1.37(0.11) 1.37(0.05) 1.34(0.08) 1.32(0.05) 1.31(0.07) 1.32(0.06) 1.31(0.12) 1.32(0.13) 1.30(0.13) 1.29(0.11) 1.33(0.06) 1.36(0.05) 1.35(0.07) 1.37(0.04) 1.38(0.05) 1.37(0.02) 1.32(0.08) 1.30(0.04) 1.32(0.06) 1.35(0.05) 1.35(0.04) 1.31(0.08) 1.28(0.06) 1.30(0.06) 1.35(0.10) 1.35(0.02) 1.33(0.05) 1.33(0.06) 1.34(0.04) 1.35(0.05) 1.33(0.04) 1.31(0.06) 1.32(0.05) 1.32(0.03) 1.31(0.03) 1.32(0.04) 1.29(0.05) 1.30(0.06) 1.32(0.05) 1.32(0.04) 1.32(0.04) 1.23(0.11) 1.27(0.08) 1.28(0.04) 1.30(0.03) 1.25(0.05) 1.21(0.06) 1.25(0.07) 1.25(0.04) 1.25(0.07) 1.31(0.17) 1.22(0.10) 1.18(0.10) 1.29(0.13) 1.24(0.13) 1.17(0.17) 1.18(0.04) 1.10(0.10) 1.10(0.06) 1.13(0.05) 1.15(0.06) 1.18(0.07) 1.13(0.11) 1.10(0.05) 1.15(0.15) 1.14(0.16) 1.08(0.08) 1.08(0.08) 1.06(0.05) 1.06(0.06) 1.08(0.05) 1.09(0.03) 1.10(0.06) 1.02(0.12) 1.04(0.07) 1.05(0.06) 1.03(0.04) 1.03(0.03) 1.05(0.03) 1.04(0.03) 1.02(0.03) 1.04(0.05) 1.04(0.04) 1.03(0.08) 1.01(0.06) 1.00(0.03) 1.03(0.05) 1.02(0.06) 0.94(0.12) 0.90(0.15) 0.94(0.06) 0.94(0.08) 0.93(0.06) 0.91(0.03) 0.94(0.05) 0.94(0.08) 0.96(0.04) 0.94(0.08) 1.00(0.31) 1.02(0.30) 1.12(0.28) 1.08(0.10) 0.99(0.12) 0.94(0.06) 0.98(0.10) 1.08(0.11) 1.10(0.04)
++ Max displacement in automask = 1.97 (mm) at sub-brick 4
++ Max delta displ  in automask = 0.31 (mm) at sub-brick 141
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb7001.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7001.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7001.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7001.r02.tshift+orig.BRIK is 12.699996 degrees from plumb.
++ Source dataset: ./pb01.tb7001.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.699996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.5
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb7001.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.699996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7001.r03.tshift+orig.BRIK is 12.699996 degrees from plumb.
++ Reading input dataset ./pb01.tb7001.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31295 voxels
 + 4939 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.544  pitch=-1.124  yaw=+0.001  dS=-0.787  dL=-0.348  dP=-0.462
++ Mean: roll=-0.225  pitch=-0.679  yaw=+0.160  dS=-0.434  dL=-0.136  dP=-0.163
++ Max : roll=-0.010  pitch=+0.092  yaw=+0.252  dS=-0.025  dL=+0.004  dP=-0.068
++ Max displacements (mm) for each sub-brick:
 1.80(0.00) 1.59(0.24) 1.62(0.07) 1.65(0.08) 1.66(0.05) 1.67(0.10) 1.81(0.15) 1.51(0.64) 1.64(0.35) 1.61(0.12) 1.60(0.12) 1.58(0.14) 1.62(0.10) 1.66(0.07) 1.68(0.05) 1.66(0.04) 1.67(0.04) 1.70(0.03) 1.72(0.04) 1.70(0.05) 1.75(0.05) 1.74(0.02) 1.77(0.04) 1.75(0.06) 1.73(0.04) 1.76(0.05) 1.77(0.01) 1.79(0.03) 1.79(0.02) 1.80(0.03) 1.82(0.03) 1.82(0.09) 1.82(0.04) 1.82(0.02) 1.81(0.04) 1.81(0.04) 1.81(0.03) 1.83(0.05) 1.84(0.04) 1.82(0.02) 1.82(0.02) 1.79(0.08) 1.79(0.07) 1.78(0.04) 1.78(0.06) 1.80(0.05) 1.75(0.08) 1.76(0.03) 1.77(0.04) 1.76(0.04) 1.78(0.04) 1.79(0.04) 1.79(0.04) 1.77(0.04) 1.76(0.05) 1.76(0.05) 1.75(0.04) 1.76(0.03) 1.72(0.07) 1.77(0.07) 1.74(0.11) 1.67(0.10) 1.66(0.04) 1.69(0.05) 1.68(0.06) 1.67(0.04) 1.65(0.05) 1.67(0.04) 1.70(0.06) 1.71(0.07) 1.68(0.08) 1.68(0.03) 1.68(0.04) 1.67(0.05) 1.67(0.03) 1.66(0.08) 1.65(0.05) 1.67(0.07) 1.69(0.04) 1.70(0.03) 1.67(0.04) 1.66(0.04) 1.68(0.04) 1.66(0.03) 1.64(0.05) 1.69(0.06) 1.65(0.05) 1.65(0.02) 1.62(0.09) 1.62(0.02) 1.64(0.04) 1.65(0.05) 1.67(0.03) 1.69(0.02) 1.62(0.14) 1.65(0.17) 1.62(0.13) 1.65(0.04) 1.64(0.04) 1.66(0.04) 1.69(0.05) 1.63(0.10) 1.66(0.03) 1.63(0.12) 1.58(0.07) 1.59(0.08) 1.63(0.09) 1.63(0.03) 1.65(0.02) 1.64(0.04) 1.61(0.03) 1.62(0.08) 1.62(0.05) 1.59(0.04) 1.60(0.08) 1.61(0.07) 1.55(0.12) 1.57(0.06) 1.57(0.03) 1.58(0.02) 1.58(0.04) 1.56(0.02) 1.59(0.04) 1.60(0.08) 1.58(0.07) 1.58(0.03) 1.57(0.05) 1.60(0.03) 1.43(0.27) 1.47(0.60) 1.52(0.06) 1.56(0.06) 1.53(0.06) 1.55(0.05) 1.59(0.06) 1.61(0.04) 1.58(0.08) 1.55(0.08) 1.58(0.04) 1.62(0.04) 1.62(0.03) 1.58(0.11) 1.43(0.28) 1.13(0.45) 1.14(0.09) 1.17(0.08) 1.19(0.17) 1.17(0.37) 1.03(0.34) 0.95(0.27)
++ Max displacement in automask = 1.84 (mm) at sub-brick 38
++ Max delta displ  in automask = 0.64 (mm) at sub-brick 7
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb7001.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7001.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7001.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7001.r03.tshift+orig.BRIK is 12.699996 degrees from plumb.
++ Source dataset: ./pb01.tb7001.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.699996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7001.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7001.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7001.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7001.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7001.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7001.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.699996 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb7001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb7001+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb7001+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1369007 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 284684 voxels [66.8%] in weight mask
++ Number of points for matching = 133801
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.14937
   sp   = 0.321307
   mi   = -0.551297
   crM  = 0.033272
   nmi  = 0.833998
   je   = 2.76973
   hel  = -0.111858
   crA  = 0.18297
   crU  = 0.197327
   lss  = 0.85063
   lpc  = 0.0463602
   lpa  = 0.95364
   lpc+ = 0.177065
   ncd  = 0.989516
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.9
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb7001+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb7001+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 40.2 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7001.r01.blur pb02.tb7001.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7001.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb7001.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7001.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7001.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7001.r02.blur pb02.tb7001.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7001.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb7001.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7001.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7001.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7001.r03.blur pb02.tb7001.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7001.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb7001.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7001.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7001.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb7001.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7001.r01.blur+orig
++ Forming automask
 + Fixed clip level = 379.799011
 + Used gradual clip level = 329.593964 .. 427.400513
 + Number voxels above clip level = 54354
 + Clustering voxels ...
 + Largest cluster has 54271 voxels
 + Clustering voxels ...
 + Largest cluster has 54234 voxels
 + Filled    27 voxels in small holes; now have 54261 voxels
 + Clustering voxels ...
 + Largest cluster has 54261 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 372014 voxels
 + Mask now has 54261 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 363595 voxels
++ 62680 voxels in the mask [out of 426275: 14.70%]
++ first  16 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  22 y-planes are zero [from I]
++ last   18 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb7001.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7001.r02.blur+orig
++ Forming automask
 + Fixed clip level = 380.394073
 + Used gradual clip level = 329.830658 .. 428.039337
 + Number voxels above clip level = 54248
 + Clustering voxels ...
 + Largest cluster has 54160 voxels
 + Clustering voxels ...
 + Largest cluster has 54135 voxels
 + Filled    25 voxels in small holes; now have 54160 voxels
 + Clustering voxels ...
 + Largest cluster has 54160 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 372115 voxels
 + Mask now has 54160 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 363761 voxels
++ 62514 voxels in the mask [out of 426275: 14.67%]
++ first  16 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  22 y-planes are zero [from I]
++ last   18 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb7001.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7001.r03.blur+orig
++ Forming automask
 + Fixed clip level = 381.020660
 + Used gradual clip level = 330.391907 .. 429.042786
 + Number voxels above clip level = 54293
 + Clustering voxels ...
 + Largest cluster has 54198 voxels
 + Clustering voxels ...
 + Largest cluster has 54172 voxels
 + Filled    28 voxels in small holes; now have 54200 voxels
 + Clustering voxels ...
 + Largest cluster has 54200 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 372075 voxels
 + Mask now has 54200 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 363740 voxels
++ 62535 voxels in the mask [out of 426275: 14.67%]
++ first  16 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  22 y-planes are zero [from I]
++ last   18 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb7001
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 62858 survived, 363417 were zero
++ writing result full_mask.tb7001...
3dresample -master full_mask.tb7001+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb7001
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 54341 survived, 371934 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb7001...
3dABoverlap -no_automask full_mask.tb7001+orig mask_anat.tb7001+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb7001+orig.BRIK  B=./mask_anat.tb7001+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
62858        54341        64235        52964        9894         1377         15.7402      2.5340     0.8736     0.9171     0.9125
3ddot -dodice full_mask.tb7001+orig mask_anat.tb7001+orig
tee out.mask_ae_dice.txt
0.90383	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb7001
total number of censored TRs (simple form) = 6
1deval -a motion_tb7001_censor.1D -b outcount_tb7001_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb7001_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb7001.r01.blur+orig.HEAD pb03.tb7001.r02.blur+orig.HEAD pb03.tb7001.r03.blur+orig.HEAD -censor censor_tb7001_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb7001 -errts errts.tb7001 -bucket stats.tb7001
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb7001.r01.blur+orig.HEAD pb03.tb7001.r02.blur+orig.HEAD pb03.tb7001.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 54230 voxels (out of 426275 = 12.7%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 441 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb7001.r01.blur+orig.HEAD pb03.tb7001.r02.blur+orig.HEAD pb03.tb7001.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb7001_REML -Rvar stats.tb7001_REMLvar \
 -Rfitts fitts.tb7001_REML -Rerrts errts.tb7001_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (441x24):  4.56892  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (441x6):  1.03453  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (441x18):  4.17571  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (441x6):  2.78904  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (441x12):  1.08208  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.64803e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.26 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=28.683
++ Job #2: processing voxels 85254 to 127880; elapsed time=28.701
++ Job #3: processing voxels 127881 to 170507; elapsed time=28.719
++ Job #4: processing voxels 170508 to 213134; elapsed time=28.738
++ Job #5: processing voxels 213135 to 255761; elapsed time=28.758
++ Job #6: processing voxels 255762 to 298388; elapsed time=28.778
++ Job #7: processing voxels 298389 to 341015; elapsed time=28.806
++ Job #8: processing voxels 341016 to 383642; elapsed time=28.826
++ Job #9: processing voxels 383643 to 426274; elapsed time=28.846
++ Job #0: processing voxels 0 to 42626; elapsed time=28.848
++ voxel loop:0123456789.0123456789.0123++ Job #1 finished; elapsed time=47.979
456789.01++ Job #2 finished; elapsed time=55.055
234++ Job #8 finished; elapsed time=57.444
5++ Job #4 finished; elapsed time=57.838
++ Job #7 finished; elapsed time=57.900
6++ Job #5 finished; elapsed time=58.197
789.0123++ Job #3 finished; elapsed time=60.873
++ Job #9 finished; elapsed time=60.962
456789.
++ Job #0 waiting for children to finish; elapsed time=62.350
++ Job #6 finished; elapsed time=62.423
++ Job #0 now finishing up; elapsed time=62.434
++ Smallest FDR q [0 Full_Fstat] = 1.11441e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 7.82837e-14
++ Smallest FDR q [3 uns1_Fstat] = 7.8267e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 4.61167e-13
++ Smallest FDR q [6 uns2_Fstat] = 4.61044e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 4.94931e-13
++ Smallest FDR q [9 uns3_Fstat] = 4.94838e-13
++ Smallest FDR q [11 str1#0_Tstat] = 2.32758e-13
++ Smallest FDR q [12 str1_Fstat] = 2.32709e-13
++ Smallest FDR q [14 str2#0_Tstat] = 1.82497e-12
++ Smallest FDR q [15 str2_Fstat] = 1.82424e-12
++ Smallest FDR q [17 str3#0_Tstat] = 2.03063e-12
++ Smallest FDR q [18 str3_Fstat] = 2.03022e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 9.87744e-15
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 9.87399e-15
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.86182e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.86098e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 2.73281e-06
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 2.73232e-06
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.100068 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.100083 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 0.000225629
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 0.000225576
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 3.29135e-05
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 3.29136e-05
++ Wrote bucket dataset into ./stats.tb7001+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb7001+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb7001+orig.BRIK
++ Program finished; elapsed time=90.391
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.737       0.799  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.735       0.799  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.724       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.488       0.563  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.480       0.557  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.473       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:      -0.403      -0.374  (10 vs. 17)  Run#3Pol#2  vs.  str3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb7001.r01.blur+orig.HEAD pb03.tb7001.r02.blur+orig.HEAD pb03.tb7001.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb7001_REML -Rvar stats.tb7001_REMLvar -Rfitts fitts.tb7001_REML -Rerrts errts.tb7001_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 54230 voxels (out of 426275 = 12.7%)
++ -----  matrix condition (441x24):  4.56892  ++ VERY GOOD ++
 + masked off 243417 voxels for being all zero; 182858 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 330 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=30.80
 + X matrix: 46.693% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=441 cols=24; 109*1 cases; total CPU=0.00 Elapsed=30.83
 +  average case bandwidth = 12.43
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=97.32
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=142.30
++ Output dataset ./stats.tb7001_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb7001_REML+orig.BRIK
++ Output dataset ./errts.tb7001_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb7001_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.11304e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 3.66079e-12
++ Smallest FDR q [3 uns1_Fstat] = 3.6608e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 5.68886e-11
++ Smallest FDR q [6 uns2_Fstat] = 5.68884e-11
++ Smallest FDR q [8 uns3#0_Tstat] = 7.56731e-09
++ Smallest FDR q [9 uns3_Fstat] = 7.56731e-09
++ Smallest FDR q [11 str1#0_Tstat] = 4.23339e-11
++ Smallest FDR q [12 str1_Fstat] = 4.23339e-11
++ Smallest FDR q [14 str2#0_Tstat] = 2.58777e-07
++ Smallest FDR q [15 str2_Fstat] = 2.58776e-07
++ Smallest FDR q [17 str3#0_Tstat] = 8.86368e-08
++ Smallest FDR q [18 str3_Fstat] = 8.86368e-08
++ Smallest FDR q [20 unstructured#0_Tstat] = 4.61152e-14
++ Smallest FDR q [21 unstructured_Fstat] = 4.61152e-14
++ Smallest FDR q [23 structured#0_Tstat] = 1.57099e-13
++ Smallest FDR q [24 structured_Fstat] = 1.57099e-13
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.144706 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.144706 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999821 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999821 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.736695 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.736695 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.914679 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.914679 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb7001_REML+orig
++ Output dataset ./stats.tb7001_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=171.61
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb7001 pb03.tb7001.r01.blur+orig.HEAD pb03.tb7001.r02.blur+orig.HEAD pb03.tb7001.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 19.8 s
3dTstat -mean -prefix rm.signal.all all_runs.tb7001+orig[0..145,147,150..305,308..427,430..445,448,449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb7001_REML+orig[0..145,147,150..305,308..427,430..445,448,449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb7001+orig -expr c*a/b -prefix TSNR.tb7001
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb7001_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb7001+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 62858 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.144784
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
** Can't read ANY data from file 'rm.DP+orig.HEAD'
[7m** FATAL ERROR:[0m Can't open dataset rm.DP+orig
** Program compile date = Jul 20 2017
