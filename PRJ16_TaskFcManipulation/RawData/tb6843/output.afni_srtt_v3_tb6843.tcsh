echo auto-generated by afni_proc.py, Tue Jan  2 15:41:00 2018
auto-generated by afni_proc.py, Tue Jan  2 15:41:00 2018
echo (version 6.02, December 12, 2017)
(version 6.02, December 12, 2017)
echo execution started: `date`
date
execution started: Tue Jan  2 15:41:01 EST 2018
afni -ver
Precompiled binary linux_openmp_64: Dec 22 2017 (Version AFNI_17.3.09)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   22 Dec 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb6843
endif
set output_dir = tb6843.srtt_v3
if ( -d tb6843.srtt_v3 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb6843.srtt_v3
mkdir tb6843.srtt_v3/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb6843.srtt_v3/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb6843.srtt_v3/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dTcat -prefix tb6843.srtt_v3/pb00.tb6843.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.0 s
3dTcat -prefix tb6843.srtt_v3/pb00.tb6843.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 2.2 s
3dTcat -prefix tb6843.srtt_v3/pb00.tb6843.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.5 s
set tr_counts = ( 150 150 150 )
cd tb6843.srtt_v3
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6843.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6843.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6843.r01.tcat+orig.BRIK is 0.799908 degrees from plumb.
++ 22069 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6843.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6843.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6843.r02.tcat+orig.BRIK is 0.799908 degrees from plumb.
++ 22271 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6843.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6843.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6843.r03.tcat+orig.BRIK is 0.799908 degrees from plumb.
++ 22281 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.tb6843.r01.despike pb00.tb6843.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6843.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6843.r01.tcat+orig.BRIK is 0.799908 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb6843.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #0
++ start OpenMP thread #4
++ start OpenMP thread #2
++ start OpenMP thread #3
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  1s 720ms

++ FINAL: 19353600 data points, 747616 edits [3.863%], 72440 big edits [0.374%]
++ Output dataset ./pb01.tb6843.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb6843.r02.despike pb00.tb6843.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6843.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6843.r02.tcat+orig.BRIK is 0.799908 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb6843.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #4
++ start OpenMP thread #1
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #3
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  1s 652ms

++ FINAL: 19353600 data points, 779727 edits [4.029%], 80343 big edits [0.415%]
++ Output dataset ./pb01.tb6843.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb6843.r03.despike pb00.tb6843.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6843.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6843.r03.tcat+orig.BRIK is 0.799908 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb6843.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #4
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #2
++ start OpenMP thread #3
........................................................
++ Elapsed despike time =  1s 670ms

++ FINAL: 19353600 data points, 766923 edits [3.963%], 66491 big edits [0.344%]
++ Output dataset ./pb01.tb6843.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.tb6843.r01.tshift -tpattern alt+z2 pb01.tb6843.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6843.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6843.r01.despike+orig.BRIK is 0.799908 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb6843.r02.tshift -tpattern alt+z2 pb01.tb6843.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6843.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6843.r02.despike+orig.BRIK is 0.799908 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb6843.r03.tshift -tpattern alt+z2 pb01.tb6843.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6843.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6843.r03.despike+orig.BRIK is 0.799908 degrees from plumb.
end
3dbucket -prefix vr_base pb02.tb6843.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 0.799908 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 406.234314
 + Used gradual clip level = 377.224060 .. 442.058167
 + Number voxels above clip level = 22369
 + Clustering voxels ...
 + Largest cluster has 22113 voxels
 + Clustering voxels ...
 + Largest cluster has 21821 voxels
 + Filled   230 voxels in small holes; now have 22051 voxels
 + Clustering voxels ...
 + Largest cluster has 22051 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 109021 voxels
 + Mask now has 22051 voxels
++ 22051 voxels in the mask [out of 131072: 16.82%]
++ first  15 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first  10 y-planes are zero [from A]
++ last    8 y-planes are zero [from P]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 987.329773 on /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/987.329773))'
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 0.799908 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 0.799908 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1236953 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 22051 voxels [13.8%] in weight mask
++ Number of points for matching = 22051
++ Local correlation: blok type = 'RHDD(13.3771)'
++ base center of mass = 31.598 33.717 20.198 (index)
 + source center of mass = 84.468 136.734 139.181 (index)
 + source-target CM = -1.113 -0.206 -5.722 (xyz)
 + center of mass shifts = -1.113 -0.206 -5.722
++ shift param auto-range: -70.6..68.4 -69.7..69.3 -54.5..43.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.113014 .. 8.886986
 + Range param#2 [y-shift] = -10.205673 .. 9.794327
 + Range param#3 [z-shift] = -15.722244 .. 4.277756
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.113014 .. 38.886986
 + Range param#2 [y-shift] = -40.205673 .. 39.794327
 + Range param#3 [z-shift] = -45.722244 .. 34.277756
 + 12 free parameters
++ Normalized convergence radius = 0.000497
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1236953 [out of 11897600] voxels
 + base mask has 30989 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=67 usiz=190.5
 + - copying weight image
 + - using 22051 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 19071 total points stored in 177 'RHDD(13.9625)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.00105419] *oo+.o*[#10=-0.00453596] *-*[#19=-0.010746] *+.+oo-*[#60=-0.0161859] **[#64=-0.0186645] *.-++....*[#304=-0.0190695] *+*[#796=-0.0257888] *+o-ooo*[#1537=-0.0298854] *.o-*[#2844=-0.0319924] **[#3507=-0.0359238] *+--$
 + - best 45 costs found:
    0 v=-0.035924:  12.22 -26.87  20.94  15.00 -30.00 -30.00  [grid]
    1 v=-0.031992: -14.45 -13.54  20.94 -30.00 -15.00  30.00  [grid]
    2 v=-0.031881: -14.45 -13.54  20.94 -30.00 -30.00  30.00  [grid]
    3 v=-0.031193:  12.22 -26.87  20.94  30.00 -30.00 -30.00  [grid]
    4 v=-0.030121: -14.45 -26.87  20.94 -30.00 -30.00  30.00  [grid]
    5 v=-0.029885:  12.22  13.13   7.61  30.00  30.00  15.00  [grid]
    6 v=-0.028274: -35.44  16.38 -14.32 -16.34   8.64  40.54  [rand]
    7 v=-0.027517:  -8.17 -20.02  30.03 -25.15 -27.05  27.90  [rand]
    8 v=-0.027049:  12.22 -26.87  20.94  30.00 -30.00 -15.00  [grid]
    9 v=-0.026799: -14.45  26.46  20.94 -30.00 -30.00 -30.00  [grid]
   10 v=-0.025969:  23.58  -4.81  10.66   8.97  18.72 -30.56  [rand]
   11 v=-0.025863:  21.21  29.43 -12.72   8.73  38.75 -33.73  [rand]
   12 v=-0.025789: -14.45 -13.54  20.94 -30.00 -15.00  15.00  [grid]
   13 v=-0.024750: -14.27  37.68 -42.92  14.03  -8.39 -25.20  [rand]
   14 v=-0.024453: -14.45 -13.54   7.61 -15.00 -15.00 -30.00  [grid]
   15 v=-0.024440:  30.73 -12.00  -8.46  23.31  -3.26 -40.47  [rand]
   16 v=-0.024189:  18.38 -16.88  -3.12  30.54 -19.59 -20.03  [rand]
   17 v=-0.024177: -27.78 -13.54 -32.39 -30.00  15.00 -30.00  [grid]
   18 v=-0.023976:  -6.07  10.98  17.51 -35.24  13.60  30.23  [rand]
   19 v=-0.023546:  31.37 -14.90 -17.53  11.16   9.40 -34.39  [rand]
   20 v=-0.023366: -14.45  26.46  20.94 -15.00 -30.00 -15.00  [grid]
   21 v=-0.023262:  17.63 -36.60  27.33  24.90  -4.74 -17.23  [rand]
   22 v=-0.023164:  12.22  26.46 -32.39 -30.00 -15.00  30.00  [grid]
   23 v=-0.023154:  12.22 -26.87  20.94  15.00 -30.00 -15.00  [grid]
   24 v=-0.022888:  12.22 -13.54   7.61  15.00 -30.00  30.00  [grid]
   25 v=-0.022746: -27.78  13.13 -32.39 -30.00 -15.00 -30.00  [grid]
   26 v=-0.022542:  31.37 -14.90   6.09  11.16   9.40 -34.39  [rand]
   27 v=-0.022502:  33.21 -16.79   2.88  16.34   8.64 -40.54  [rand]
   28 v=-0.022447:  12.22 -26.87   7.61  30.00 -30.00  15.00  [grid]
   29 v=-0.022430: -14.45  13.13   7.61 -15.00  15.00  30.00  [grid]
   30 v=-0.022363:  14.18 -21.09  24.67  14.56 -29.40 -15.92  [rand]
   31 v=-0.021858:  25.55  26.46   7.61  15.00  30.00  15.00  [grid]
   32 v=-0.021767:  21.74  23.37 -16.14   5.91  29.74 -29.45  [rand]
   33 v=-0.021612:  31.37  14.49 -17.53  11.16   9.40 -34.39  [rand]
   34 v=-0.021234: -14.45  13.13   7.61 -30.00  15.00  30.00  [grid]
   35 v=-0.021202:  12.22  26.46 -32.39 -15.00 -15.00  30.00  [grid]
   36 v=-0.021121:  31.37  14.49   6.09 -11.16  -9.40 -34.39  [rand]
   37 v=-0.021094:  13.82 -24.30  24.20  19.13 -33.53 -22.48  [rand]
   38 v=-0.020881:  12.22 -26.87   7.61  15.00 -30.00  30.00  [grid]
   39 v=-0.020741:   7.53  20.23  11.75 -25.20  18.50 -13.54  [rand]
   40 v=-0.020591:  25.55  26.46 -19.06  15.00 -30.00 -30.00  [grid]
   41 v=-0.020547:  -7.10  -3.61  18.81 -29.81  -4.26  23.54  [rand]
   42 v=-0.020363: -12.71   4.35  -1.83 -24.53 -29.49 -26.10  [rand]
   43 v=-0.020272:  -7.10  -3.61  18.81 -29.81   4.26  23.54  [rand]
   44 v=-0.020146: -27.78  26.46  20.94 -15.00  30.00 -30.00  [grid]
*[#8005=-0.0389635] *[#8010=-0.0418104] *[#8011=-0.0421936] *[#8014=-0.043835] *[#8016=-0.0440971] *[#8019=-0.0449872] *[#8021=-0.0456879] *[#8023=-0.0470236] *[#8028=-0.0475435] *[#8183=-0.0492912] *[#8184=-0.0495561] *[#8188=-0.0502944] *[#8189=-0.0512273] *[#9042=-0.0520662] *[#9043=-0.0521411] *[#9044=-0.0532572] *[#9049=-0.0533013] *[#9053=-0.0551396]  + - costs of the above after a little optimization:
    0 v=-0.047543:  10.39 -31.25  19.54  19.72 -34.53 -29.30  [grid]
    1 v=-0.039479: -14.51 -13.70  21.35 -30.19 -15.36  34.15  [grid]
    2 v=-0.045477: -14.56 -14.33  26.56 -27.24 -27.20  31.07  [grid]
    3 v=-0.039279:   7.88 -27.54  20.04  29.92 -29.67 -31.04  [grid]
    4 v=-0.046219: -14.51 -22.25  18.92 -28.18 -27.75  31.99  [grid]
    5 v=-0.031005:  11.58  13.31   7.80  34.14  29.31  14.66  [grid]
    6 v=-0.051227: -37.82   8.64 -12.24 -15.51   4.17  38.75  [rand]
    7 v=-0.040889:  -8.41 -14.01  30.51 -25.94 -26.00  27.99  [rand]
    8 v=-0.041788:   9.90 -28.43  20.94  26.33 -31.30 -17.48  [grid]
    9 v=-0.037695: -15.06  22.68  19.22 -29.63 -30.58 -33.01  [grid]
   10 v=-0.027694:  24.11  -5.60   8.71   7.40  15.35 -31.38  [rand]
   11 v=-0.038060:  21.07  33.49 -13.49   9.44  38.92 -34.14  [rand]
   12 v=-0.037943: -11.89 -12.22  20.83 -34.26 -15.66  15.67  [grid]
   13 v=-0.041971: -13.45  35.84 -45.48  14.57  -0.36 -19.29  [rand]
   14 v=-0.031029: -13.41 -13.71   6.96 -11.17 -15.47 -29.53  [grid]
   15 v=-0.033325:  31.35  -9.54  -9.39  26.67  -6.96 -40.86  [rand]
   16 v=-0.037972:  18.94 -21.78  -3.26  31.86 -19.39 -18.11  [rand]
   17 v=-0.036782: -26.83  -8.90 -33.89 -28.54  11.87 -29.11  [grid]
   18 v=-0.030081:  -4.69  13.43  16.53 -35.91  13.37  29.88  [rand]
   19 v=-0.031399:  31.01 -14.41 -17.79  11.49  18.51 -35.28  [rand]
   20 v=-0.028517: -14.09  25.90  19.79 -16.21 -29.90 -15.65  [grid]
   21 v=-0.031861:  13.94 -37.15  26.87  25.33  -4.80 -17.41  [rand]
   22 v=-0.031952:  12.33  25.68 -33.23 -31.13 -15.35  33.72  [grid]
   23 v=-0.040540:  11.63 -24.71  19.19  14.33 -35.92 -19.37  [grid]
   24 v=-0.047789:   7.10 -20.33   6.35  11.93 -30.83  23.92  [grid]
   25 v=-0.026890: -28.85  12.84 -31.46 -30.52 -15.42 -29.75  [grid]
   26 v=-0.035991:  27.58 -16.42   6.01  10.50  10.81 -35.34  [rand]
   27 v=-0.031616:  27.50 -17.16   4.53  16.91   8.85 -40.08  [rand]
   28 v=-0.043820:   7.36 -26.77   7.47  25.25 -31.39  11.94  [grid]
   29 v=-0.030332: -12.85  15.83   6.76 -15.44  15.07  30.16  [grid]
   30 v=-0.041326:  13.89 -22.33  22.62   5.66 -30.85 -22.08  [rand]
   31 v=-0.025491:  26.15  30.40   7.50  15.11  30.14  14.78  [grid]
   32 v=-0.027643:  21.77  27.37 -16.15   6.32  30.14 -29.72  [rand]
  *33 v=-0.055140:  31.58   1.42 -17.31   8.57  12.04 -33.91  [rand]
   34 v=-0.034212:  -6.46  13.16   8.86 -29.45  16.78  31.19  [grid]
   35 v=-0.036905:  13.39  24.75 -36.90 -16.10 -16.34  29.35  [grid]
   36 v=-0.029193:  30.53  16.11   4.73 -11.48 -12.15 -37.26  [rand]
   37 v=-0.040622:   7.03 -26.58  16.29  24.46 -36.44 -20.71  [rand]
   38 v=-0.039552:  11.01 -24.43   6.49  19.60 -32.69  27.50  [grid]
   39 v=-0.029417:   6.21  20.86  10.49 -25.20  25.25 -18.56  [rand]
   40 v=-0.029081:  28.06  24.41 -19.22  15.98 -30.53 -36.48  [grid]
   41 v=-0.023684:  -7.10  -3.61  18.81 -25.31  -4.26  23.54  [rand]
   42 v=-0.046123: -10.72   4.58   0.26 -15.57 -33.49 -28.79  [rand]
   43 v=-0.034724:  -7.12  -5.21  15.18 -31.97   1.50  28.34  [rand]
   44 v=-0.022522: -27.43  26.49  20.68 -14.88  30.19 -29.82  [grid]
 + - save #33 for twobest
 + - save # 6 for twobest
 + - save #24 for twobest
 + - save # 0 for twobest
 + - save # 4 for twobest
 + - save #42 for twobest
 + - save # 2 for twobest
 + - save #28 for twobest
 + - save #13 for twobest
 + - save # 8 for twobest
 + - save #30 for twobest
 + - save # 7 for twobest
 + - save #37 for twobest
 + - save #23 for twobest
 + - save #38 for twobest
 + - save # 1 for twobest
 + - save # 3 for twobest
 + - save #11 for twobest
 + - save #16 for twobest
 + - save #12 for twobest
 + - save # 9 for twobest
 + - save #35 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=67 usiz=190.5
 + - retaining old weight image
 + - using 22051 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 19130 total points stored in 192 'RHDD(13.7342)' bloks
 + - param set #1 has cost=-0.046650
 + -- Parameters = 32.1854 5.2742 -17.0239 8.2544 12.6542 -34.0942 0.9999 1.0041 0.9991 0.0005 -0.0003 0.0003
 + - param set #2 has cost=-0.042964
 + -- Parameters = -38.3378 8.5956 -12.7177 -13.4318 4.0357 38.7077 1.0034 0.9982 1.0011 0.0007 -0.0003 0.0001
 + - param set #3 has cost=-0.044318
 + -- Parameters = 7.2516 -20.3755 6.2547 11.4465 -30.4781 24.6389 1.0010 1.0018 1.0026 0.0128 0.0014 0.0015
 + - param set #4 has cost=-0.033945
 + -- Parameters = 11.6822 -32.8018 17.7765 18.4006 -35.3648 -30.8898 0.9955 0.9934 0.9998 0.0080 -0.0048 -0.0062
 + - param set #5 has cost=-0.034904
 + -- Parameters = -14.6214 -21.9114 19.5044 -28.1744 -28.0667 31.9885 1.0001 1.0012 1.0152 -0.0003 0.0009 -0.0005
 + - param set #6 has cost=-0.034606
 + -- Parameters = -10.4257 4.9228 1.2157 -19.2848 -32.6399 -28.4947 1.0074 0.9913 0.9930 0.0071 0.0008 -0.0062
 + - param set #7 has cost=-0.037486
 + -- Parameters = -13.2827 -12.4276 29.9214 -29.8182 -27.4938 26.7646 0.9821 0.9929 0.9699 0.0112 0.0324 -0.0066
 + - param set #8 has cost=-0.045935
 + -- Parameters = 7.0823 -24.8652 7.5928 24.7152 -31.6891 11.1155 1.0178 1.0007 0.9965 -0.0007 -0.0017 -0.0010
 + - param set #9 has cost=-0.030706
 + -- Parameters = -13.7693 35.8041 -45.6513 14.3535 -0.0904 -19.6420 1.0067 0.9985 0.9951 0.0003 -0.0013 0.0091
 + - param set #10 has cost=-0.035810
 + -- Parameters = 11.6955 -31.2888 20.6230 26.4368 -33.1890 -19.4833 0.9930 1.0026 1.0074 -0.0006 0.0050 0.0096
 + - param set #11 has cost=-0.034582
 + -- Parameters = 14.4085 -18.6170 21.9783 5.2818 -32.1539 -21.8601 1.0000 0.9988 0.9960 0.0002 0.0016 0.0015
*[#10195=-0.292188] *[#10209=-0.45046] *[#10222=-0.490194] *[#10223=-0.514596] *[#10232=-0.517792] *[#10233=-0.523019] *[#10235=-0.525369] *[#10236=-0.534225] *[#10238=-0.535137] *[#10239=-0.549406] *[#10240=-0.569001] *[#10241=-0.579287] *[#10245=-0.581435] *[#10248=-0.584025] *[#10255=-0.584668] *[#10259=-0.584754] *[#10261=-0.585117] 
 + - param set #12 has cost=-0.585117
 + -- Parameters = -0.8075 -0.3359 0.1550 -0.4368 -0.9581 1.1435 1.0028 1.0057 1.0079 -0.0103 0.0005 0.0003
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.412 
 + --- dist(#3,#1) = 0.341 
 + --- dist(#4,#1) = 0.328 
 + --- dist(#5,#1) = 0.469 
 + --- dist(#6,#1) = 0.372 
 + --- dist(#7,#1) = 0.387 
 + --- dist(#8,#1) = 0.343 
 + --- dist(#9,#1) = 0.352 
 + --- dist(#10,#1) = 0.347 
 + --- dist(#11,#1) = 0.406 
 + --- dist(#12,#1) = 0.573 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=67 usiz=190.5
 + - retaining old weight image
 + - using 22051 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 19325 total points stored in 201 'RHDD(13.5942)' bloks
*[#10264=-0.592968] *[#10272=-0.595027] *[#10296=-0.595401] *[#10297=-0.595566] *[#10298=-0.595733] *[#10301=-0.595783] *[#10302=-0.595996] *[#10303=-0.596058] *[#10304=-0.596134] *[#10305=-0.596263] *[#10308=-0.59667] *[#10309=-0.597241] *[#10310=-0.597528] *[#10311=-0.597962] *[#10312=-0.598162] *[#10313=-0.598376] *[#10314=-0.598801] *[#10315=-0.599133] *[#10322=-0.599411] *[#10328=-0.599671] *[#10333=-0.599701] 
 + - param set #1 has cost=-0.599701
 + -- Parameters = -0.7928 -0.1982 0.4674 -0.3227 -1.0203 1.1616 1.0048 1.0166 0.9980 -0.0079 -0.0021 0.0029
 + - param set #2 has cost=-0.034914
 + -- Parameters = 32.8770 6.4999 -17.5023 8.9889 12.2131 -35.1251 0.9852 1.0006 0.9915 0.0045 0.0085 -0.0018
 + - param set #3 has cost=-0.038205
 + -- Parameters = 6.7228 -24.9443 7.7494 24.4996 -31.8640 10.9066 1.0190 1.0106 0.9988 0.0019 -0.0018 -0.0006
 + - param set #4 has cost=-0.038470
 + -- Parameters = 7.2933 -20.5818 5.9628 11.7186 -30.2115 25.1232 0.9996 0.9989 1.0026 0.0121 -0.0007 -0.0009
 + - param set #5 has cost=-0.039228
 + -- Parameters = -38.2201 8.6420 -12.4844 -13.5566 3.9808 38.6557 1.0156 0.9983 1.0017 0.0010 -0.0000 0.0005
 + - param set #6 has cost=-0.029179
 + -- Parameters = -13.3991 -12.5671 30.0164 -29.8977 -27.6261 26.3386 0.9936 0.9935 0.9707 0.0118 0.0322 -0.0072
 + - param set #7 has cost=-0.029810
 + -- Parameters = 11.7815 -31.5733 20.3882 26.5323 -32.8769 -19.4403 0.9933 1.0030 1.0126 0.0074 0.0048 0.0102
 + - param set #8 has cost=-0.031509
 + -- Parameters = -14.5254 -21.9100 19.4621 -28.4194 -28.1168 31.8967 1.0017 1.0024 1.0139 -0.0003 0.0073 -0.0001
 + - param set #9 has cost=-0.027983
 + -- Parameters = -9.3502 4.5946 2.4768 -19.5981 -36.1868 -29.6864 1.0132 0.9807 0.9894 0.0090 -0.0005 -0.0064
 + - param set #10 has cost=-0.026799
 + -- Parameters = 14.4434 -18.5789 22.0165 5.3384 -31.9225 -21.9484 1.0005 0.9981 0.9980 -0.0007 0.0020 0.0086
 + - param set #11 has cost=-0.035834
 + -- Parameters = 10.3749 -32.7692 17.7181 16.4931 -34.3684 -32.9805 0.9499 0.9916 0.9633 0.0336 -0.0130 -0.0130
 + - param set #12 has cost=-0.025121
 + -- Parameters = -13.6274 35.6897 -45.6960 14.1022 -0.3307 -20.2353 1.0118 0.9963 1.0028 -0.0002 -0.0017 0.0085
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.468 
 + --- dist(#3,#1) = 0.324 
 + --- dist(#4,#1) = 0.343 
 + --- dist(#5,#1) = 0.407 
 + --- dist(#6,#1) = 0.421 
 + --- dist(#7,#1) = 0.342 
 + --- dist(#8,#1) = 0.392 
 + --- dist(#9,#1) = 0.369 
 + --- dist(#10,#1) = 0.391 
 + --- dist(#11,#1) = 0.343 
 + --- dist(#12,#1) = 0.577 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=67 usiz=190.5
 + - retaining old weight image
 + - using 22051 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 19397 total points stored in 206 'RHDD(13.5088)' bloks
 + - param set #1 has cost=-0.577972
 + -- Parameters = -0.7746 -0.1288 0.4329 -0.1695 -1.3346 1.1503 1.0046 1.0082 0.9955 -0.0012 0.0015 -0.0042
 + - param set #2 has cost=-0.035489
 + -- Parameters = -38.3183 8.6540 -12.4773 -13.4659 3.9578 38.6433 1.0232 0.9978 1.0012 0.0007 -0.0003 0.0003
 + - param set #3 has cost=-0.035600
 + -- Parameters = 7.0706 -19.1002 6.3826 11.2843 -30.3015 24.7588 0.9999 0.9862 0.9972 0.0210 -0.0012 0.0083
 + - param set #4 has cost=-0.032940
 + -- Parameters = 6.7991 -25.0787 7.6913 24.4815 -31.7620 11.0393 1.0195 1.0097 0.9990 0.0066 -0.0032 0.0002
 + - param set #5 has cost=-0.030514
 + -- Parameters = 10.3918 -32.7722 17.7205 16.4636 -34.3632 -33.0353 0.9496 0.9918 0.9635 0.0337 -0.0133 -0.0085
 + - param set #6 has cost=-0.029407
 + -- Parameters = 32.8420 6.7138 -16.9594 9.5416 12.2172 -35.9210 0.9774 1.0026 0.9896 0.0021 0.0078 -0.0024
 + - param set #7 has cost=-0.027589
 + -- Parameters = -14.4170 -22.0245 19.6537 -28.3446 -28.2371 32.0464 1.0060 1.0010 1.0097 0.0002 0.0056 -0.0058
 + - param set #8 has cost=-0.022066
 + -- Parameters = 11.9854 -31.6566 20.3407 26.5535 -33.3080 -19.6803 0.9932 1.0032 1.0159 0.0121 0.0043 0.0101
 + - param set #9 has cost=-0.022644
 + -- Parameters = -13.4685 -12.6134 30.0333 -30.0126 -27.9435 26.1998 0.9938 0.9925 0.9703 0.0121 0.0327 -0.0072
 + - param set #10 has cost=-0.024748
 + -- Parameters = -8.7496 5.1910 1.4959 -18.9203 -35.5170 -30.1168 1.0173 0.9819 0.9902 0.0072 -0.0021 -0.0051
 + - param set #11 has cost=-0.020529
 + -- Parameters = 14.2381 -18.0625 22.2097 5.2603 -32.8172 -22.0465 0.9987 0.9989 1.0070 -0.0014 0.0014 0.0077
 + - param set #12 has cost=-0.019397
 + -- Parameters = -13.6262 35.6319 -45.7202 14.2150 -0.2243 -20.2434 1.0117 0.9964 1.0099 -0.0004 -0.0015 0.0088
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.322 
 + --- dist(#3,#1) = 0.469 
 + --- dist(#4,#1) = 0.338 
 + --- dist(#5,#1) = 0.408 
 + --- dist(#6,#1) = 0.42 
 + --- dist(#7,#1) = 0.343 
 + --- dist(#8,#1) = 0.38 
 + --- dist(#9,#1) = 0.37 
 + --- dist(#10,#1) = 0.394 
 + --- dist(#11,#1) = 0.35 
 + --- dist(#12,#1) = 0.577 
 + - Total coarse refinement net CPU time = 0.0 s; 2760 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=67 usiz=190.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 19454 total points stored in 209 'RHDD(13.4261)' bloks
 + - cost(#1)=-0.562996 *
 + -- Parameters = -0.7746 -0.1288 0.4329 -0.1695 -1.3346 1.1503 1.0046 1.0082 0.9955 -0.0012 0.0015 -0.0042
 + - cost(#2)=-0.034506  
 + -- Parameters = 7.0706 -19.1002 6.3826 11.2843 -30.3015 24.7588 0.9999 0.9862 0.9972 0.0210 -0.0012 0.0083
 + - cost(#3)=-0.033527  
 + -- Parameters = -38.3183 8.6540 -12.4773 -13.4659 3.9578 38.6433 1.0232 0.9978 1.0012 0.0007 -0.0003 0.0003
 + - cost(#4)=-0.033394  
 + -- Parameters = 6.7991 -25.0787 7.6913 24.4815 -31.7620 11.0393 1.0195 1.0097 0.9990 0.0066 -0.0032 0.0002
 + - cost(#5)=-0.028674  
 + -- Parameters = 10.3918 -32.7722 17.7205 16.4636 -34.3632 -33.0353 0.9496 0.9918 0.9635 0.0337 -0.0133 -0.0085
 + - cost(#6)=-0.027315  
 + -- Parameters = 32.8420 6.7138 -16.9594 9.5416 12.2172 -35.9210 0.9774 1.0026 0.9896 0.0021 0.0078 -0.0024
 + - cost(#7)=-0.023241  
 + -- Parameters = -14.4170 -22.0245 19.6537 -28.3446 -28.2371 32.0464 1.0060 1.0010 1.0097 0.0002 0.0056 -0.0058
 + - cost(#8)=-0.021843  
 + -- Parameters = -8.7496 5.1910 1.4959 -18.9203 -35.5170 -30.1168 1.0173 0.9819 0.9902 0.0072 -0.0021 -0.0051
 + - cost(#9)=-0.018399  
 + -- Parameters = -13.4685 -12.6134 30.0333 -30.0126 -27.9435 26.1998 0.9938 0.9925 0.9703 0.0121 0.0327 -0.0072
 + - cost(#10)=-0.020012  
 + -- Parameters = 11.9854 -31.6566 20.3407 26.5535 -33.3080 -19.6803 0.9932 1.0032 1.0159 0.0121 0.0043 0.0101
 + - cost(#11)=-0.020352  
 + -- Parameters = 14.2381 -18.0625 22.2097 5.2603 -32.8172 -22.0465 0.9987 0.9989 1.0070 -0.0014 0.0014 0.0077
 + - cost(#12)=-0.015971  
 + -- Parameters = -13.6262 35.6319 -45.7202 14.2150 -0.2243 -20.2434 1.0117 0.9964 1.0099 -0.0004 -0.0015 0.0088
 + - cost(#13)=-0.026965  
 + -- Parameters = -1.1130 -0.2057 -5.7222 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.564748 *
 + -- Parameters = -0.7588 -0.1003 0.4323 -0.1843 -1.3867 1.2995 1.0054 1.0094 0.9962 0.0017 0.0013 -0.0061
 + - cost(#2)=-0.036115  
 + -- Parameters = 6.3066 -19.1317 6.0586 10.3131 -30.6269 23.3402 0.9932 0.9752 0.9997 0.0231 -0.0075 -0.0008
 + - cost(#3)=-0.034130  
 + -- Parameters = -38.2797 8.6512 -12.6921 -13.5637 4.1443 38.6428 1.0241 0.9984 1.0009 0.0004 0.0001 0.0053
 + - cost(#4)=-0.039310  
 + -- Parameters = 5.9302 -24.9396 7.6907 21.5391 -31.5408 9.9304 1.0283 1.0110 1.0047 0.0092 -0.0064 -0.0001
 + - cost(#5)=-0.030081  
 + -- Parameters = 10.7942 -32.5743 18.0328 16.2720 -34.9030 -33.3490 0.9500 0.9937 0.9653 0.0333 -0.0139 -0.0026
 + - cost(#6)=-0.027794  
 + -- Parameters = 32.9076 6.9413 -16.8798 9.8451 12.2360 -36.2382 0.9782 1.0021 0.9889 0.0007 0.0085 0.0001
 + - cost(#7)=-0.025087  
 + -- Parameters = -13.9616 -22.8375 19.9341 -27.4042 -28.4323 32.1306 1.0168 0.9759 1.0088 0.0041 0.0132 -0.0113
 + - cost(#8)=-0.023045  
 + -- Parameters = -8.2546 5.1890 1.8470 -18.4928 -35.6611 -29.6466 1.0180 0.9812 1.0018 0.0069 -0.0044 -0.0052
 + - cost(#9)=-0.018451  
 + -- Parameters = -13.4638 -12.5878 29.9822 -30.0168 -27.9439 26.2039 0.9938 0.9926 0.9706 0.0119 0.0327 -0.0036
 + - cost(#10)=-0.020926  
 + -- Parameters = 11.7914 -31.7290 20.1865 26.4633 -31.8330 -20.1703 0.9891 1.0009 1.0117 0.0120 0.0062 0.0118
 + - cost(#11)=-0.021318  
 + -- Parameters = 14.2430 -17.7379 22.2050 5.0655 -33.0298 -22.2101 0.9994 1.0104 1.0062 -0.0068 0.0031 0.0054
 + - cost(#12)=-0.016312  
 + -- Parameters = -13.6740 35.6534 -45.7219 14.3268 -0.2312 -20.2416 1.0117 0.9962 1.0096 -0.0002 0.0025 0.0087
 + - cost(#13)=-0.563182  
 + -- Parameters = -0.6674 -0.1257 0.4995 -0.0945 -1.2883 1.4714 1.0045 1.0142 0.9941 0.0057 -0.0029 -0.0032
 + - case #1 is now the best
 + - Initial  cost = -0.564748
 + - Initial fine Parameters = -0.7588 -0.1003 0.4323 -0.1843 -1.3867 1.2995 1.0054 1.0094 0.9962 0.0017 0.0013 -0.0061
 + - Finalish cost = -0.565840 ; 333 funcs
 + - Final    cost = -0.566472 ; 293 funcs
 + Final fine fit Parameters:
       x-shift=-0.7072   y-shift= 0.1180   z-shift= 0.4379
       z-angle=-0.1496   x-angle=-1.9511   y-angle= 1.4461
       x-scale= 1.0052   y-scale= 1.0099   z-scale= 0.9944
     y/x-shear= 0.0021 z/x-shear=-0.0021 z/y-shear=-0.0171
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.7072 0.1180 0.4379 -0.1496 -1.9511 1.4461 1.0052 1.0099 0.9944 0.0021 -0.0021 -0.0171
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.5
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 0.799908 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Right handed (RAI); source=Left handed (AIL)
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0044 1.0089 -0.0483 19.0578 0.0231 0.0306 0.9936 71.2099 -1.0049 0.0035 0.0254 198.5447
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.2
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base MNI152_T1_2009c+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 23.1 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3123.720100 ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 123.19 55.9818   ITER = 5/137
123.19

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=0 xtop=0  ybot=1 ytop=2  zbot=15 ztop=0 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 193 x 232 x 208 volume ; autobbox = 19..173 21..211 17..179 [clock= 11s 925ms]
lev=0 0..192 0..231 0..199: [first cost=-0.71881] ... done [cost:-0.71881==>-0.81020]
lev=1 patch=145x175x157 [clock= 31m 2s 54ms]........:[cost=-0.84108]:........ done [cost:-0.81020==>-0.84402 ; 16 patches optimized, 0 skipped]
lev=2 patch=109x131x117 [clock= 51m 30s 561ms]..................... done [cost:-0.84402==>-0.90836 ; 21 patches optimized, 6 skipped]
lev=3 patch=81x99x89 [clock= 1h 5m 1s 222ms].............. done [cost:-0.90836==>-0.98592 ; 41 patches optimized, 23 skipped]
lev=4 patch=61x73x67 [clock= 1h 18m 11s 998ms]............. done [cost:-0.98592==>-1.05392 ; 73 patches optimized, 52 skipped]
lev=5 patch=47x55x49 [clock= 1h 28m 10s 66ms]....... done [cost:-1.05392==>-1.12023 ; 193 patches optimized, 150 skipped]
lev=6 patch=35x41x37 [clock= 1h 38m 30s 169ms].................. done [cost:-1.12023==>-1.18016 ; 451 patches optimized, 359 skipped]
lev=7 patch=25x25x25 [clock= 1h 48m 47s 291ms]................................... done [cost:-1.18016==>-1.26302 ; 1528 patches optimized, 1384 skipped]
++ ========== total number of parameters 'optimized' = 56049
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 2h 0m 40s 809ms
#++ Applying warps to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6843/tb6843.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 22.4 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_T1_2009c+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
if ( ! -f Sag3DMPRAGEs002a1001_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.tb6843.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 0.799908 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb6843.r01.tshift+orig.BRIK is 0.799908 degrees from plumb.
++ Reading input dataset ./pb02.tb6843.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 23582 voxels
 + 4031 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.410  pitch=-0.000  yaw=-0.531  dS=-0.542  dL=-0.835  dP=-0.325
++ Mean: roll=-0.184  pitch=+0.314  yaw=-0.242  dS=-0.179  dL=-0.385  dP=+0.005
++ Max : roll=-0.000  pitch=+0.864  yaw=-0.000  dS=+0.027  dL=-0.000  dP=+0.103
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.09(0.09) 0.06(0.04) 0.10(0.04) 0.14(0.04) 0.10(0.07) 0.14(0.05) 0.10(0.06) 0.14(0.06) 0.14(0.08) 0.17(0.11) 0.18(0.03) 0.23(0.06) 0.23(0.13) 0.30(0.09) 0.28(0.06) 0.31(0.04) 0.35(0.06) 0.34(0.06) 0.39(0.06) 0.39(0.02) 0.41(0.04) 0.45(0.06) 0.43(0.03) 0.43(0.04) 0.47(0.07) 0.43(0.05) 0.47(0.04) 0.46(0.03) 0.43(0.05) 0.46(0.04) 0.47(0.03) 0.48(0.03) 0.50(0.04) 0.49(0.03) 0.49(0.02) 0.49(0.02) 0.51(0.05) 0.55(0.05) 0.53(0.04) 0.60(0.09) 0.60(0.02) 0.58(0.04) 0.59(0.01) 0.57(0.05) 0.62(0.07) 0.60(0.04) 0.60(0.03) 0.62(0.03) 0.62(0.01) 0.65(0.03) 0.67(0.05) 0.63(0.05) 0.67(0.04) 0.68(0.05) 0.65(0.08) 0.69(0.05) 0.68(0.01) 0.71(0.03) 0.75(0.09) 0.75(0.04) 0.77(0.03) 0.74(0.04) 0.74(0.08) 0.60(0.15) 0.59(0.04) 0.65(0.06) 0.62(0.06) 0.68(0.06) 0.65(0.04) 0.66(0.04) 0.72(0.08) 0.70(0.09) 0.73(0.08) 0.70(0.04) 0.75(0.05) 0.75(0.04) 0.77(0.03) 0.81(0.04) 0.82(0.02) 0.83(0.04) 0.86(0.03) 0.88(0.04) 0.91(0.03) 0.87(0.07) 0.89(0.06) 0.99(0.10) 0.99(0.04) 1.07(0.10) 1.10(0.07) 1.14(0.06) 1.11(0.04) 1.14(0.05) 1.17(0.04) 1.18(0.04) 1.21(0.05) 1.20(0.05) 1.20(0.07) 1.24(0.05) 1.25(0.04) 1.28(0.03) 1.29(0.03) 1.30(0.04) 1.34(0.05) 1.32(0.04) 1.35(0.04) 1.37(0.05) 1.36(0.06) 1.38(0.03) 1.39(0.02) 1.37(0.05) 1.43(0.07) 1.40(0.03) 1.39(0.02) 1.46(0.08) 1.43(0.08) 1.49(0.07) 1.50(0.04) 1.50(0.03) 1.50(0.03) 1.52(0.03) 1.54(0.04) 1.53(0.03) 1.55(0.03) 1.60(0.08) 1.60(0.07) 1.64(0.06) 1.70(0.15) 1.72(0.09) 1.55(0.27) 1.63(0.24) 1.74(0.15) 1.84(0.13) 1.95(0.12) 1.98(0.09) 2.06(0.13) 2.05(0.06) 2.11(0.07) 2.09(0.05) 2.13(0.07) 2.05(0.09) 2.12(0.08) 2.12(0.06) 2.04(0.13) 2.14(0.15) 2.19(0.17) 1.86(0.44) 1.66(0.40) 1.59(0.08) 1.67(0.09)
++ Max displacement in automask = 2.19 (mm) at sub-brick 145
++ Max delta displ  in automask = 0.44 (mm) at sub-brick 146
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.tb6843.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb6843.r01.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb6843.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb6843.r01.tshift+orig.BRIK is 0.799908 degrees from plumb.
++ opened source dataset 'pb02.tb6843.r01.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 450.3 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 0.799908 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.tb6843.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 0.799908 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb6843.r02.tshift+orig.BRIK is 0.799908 degrees from plumb.
++ Reading input dataset ./pb02.tb6843.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 23755 voxels
 + 4043 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.326  pitch=+0.910  yaw=-1.214  dS=-1.264  dL=-1.256  dP=-1.125
++ Mean: roll=-0.236  pitch=+1.304  yaw=-0.921  dS=-1.099  dL=-1.044  dP=-0.760
++ Max : roll=-0.076  pitch=+1.811  yaw=-0.579  dS=-1.003  dL=-0.665  dP=-0.548
++ Max displacements (mm) for each sub-brick:
 3.05(0.00) 3.16(0.20) 3.24(0.12) 3.08(0.22) 2.84(0.37) 2.98(0.29) 2.91(0.16) 2.84(0.11) 2.82(0.12) 2.96(0.18) 2.99(0.10) 3.02(0.07) 3.01(0.04) 3.08(0.09) 3.06(0.04) 3.13(0.10) 3.12(0.03) 3.18(0.07) 3.13(0.07) 3.20(0.09) 3.18(0.03) 3.21(0.05) 3.20(0.03) 3.19(0.05) 3.22(0.04) 3.20(0.05) 3.23(0.04) 3.23(0.03) 3.23(0.06) 3.30(0.09) 3.28(0.06) 3.32(0.04) 3.29(0.03) 3.33(0.04) 3.34(0.01) 3.32(0.05) 3.33(0.04) 3.31(0.03) 3.36(0.08) 3.35(0.03) 3.36(0.06) 3.42(0.12) 3.43(0.03) 3.43(0.04) 3.42(0.03) 3.39(0.05) 3.43(0.07) 3.42(0.09) 3.47(0.08) 3.48(0.03) 3.48(0.07) 3.52(0.07) 3.52(0.03) 3.55(0.03) 3.55(0.03) 3.52(0.09) 3.56(0.07) 3.58(0.03) 3.63(0.06) 3.63(0.02) 3.74(0.13) 3.62(0.35) 3.13(0.63) 3.18(0.18) 3.20(0.11) 3.29(0.12) 3.36(0.08) 3.37(0.10) 3.34(0.09) 3.36(0.08) 3.43(0.17) 3.49(0.15) 3.47(0.09) 3.54(0.10) 3.52(0.06) 3.59(0.11) 3.60(0.08) 3.62(0.06) 3.59(0.05) 3.57(0.06) 3.59(0.05) 3.59(0.04) 3.66(0.10) 3.64(0.04) 3.66(0.06) 3.71(0.08) 3.67(0.07) 3.60(0.16) 3.67(0.10) 3.76(0.13) 3.74(0.08) 3.79(0.09) 3.77(0.07) 3.82(0.07) 3.84(0.03) 3.82(0.03) 3.88(0.06) 3.84(0.05) 3.88(0.08) 3.89(0.05) 3.89(0.05) 3.92(0.06) 3.89(0.05) 3.93(0.05) 3.89(0.06) 3.92(0.04) 3.84(0.09) 3.78(0.07) 3.84(0.10) 3.86(0.06) 3.88(0.05) 3.88(0.06) 3.93(0.08) 3.90(0.07) 3.84(0.33) 3.82(0.11) 3.91(0.16) 3.90(0.07) 3.90(0.08) 3.89(0.05) 3.84(0.11) 3.77(0.13) 3.74(0.11) 3.77(0.19) 3.78(0.13) 3.84(0.09) 3.83(0.09) 3.89(0.10) 3.96(0.12) 3.79(0.24) 3.52(0.31) 3.48(0.20) 3.56(0.20) 4.41(0.89) 4.36(0.19) 4.25(0.17) 4.33(0.15) 4.33(0.14) 4.36(0.06) 4.33(0.07) 4.23(0.12) 4.15(0.18) 4.20(0.10) 4.21(0.08) 4.21(0.06) 4.22(0.06) 4.21(0.12) 4.22(0.09) 4.15(0.15) 4.17(0.09)
++ Max displacement in automask = 4.41 (mm) at sub-brick 133
++ Max delta displ  in automask = 0.89 (mm) at sub-brick 133
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.tb6843.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb6843.r02.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb6843.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb6843.r02.tshift+orig.BRIK is 0.799908 degrees from plumb.
++ opened source dataset 'pb02.tb6843.r02.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 463.4 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 0.799908 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.tb6843.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 0.799908 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb6843.r03.tshift+orig.BRIK is 0.799908 degrees from plumb.
++ Reading input dataset ./pb02.tb6843.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 23678 voxels
 + 4009 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.187  pitch=+1.371  yaw=-1.117  dS=-1.844  dL=-1.237  dP=-1.881
++ Mean: roll=-0.070  pitch=+1.697  yaw=-0.784  dS=-1.590  dL=-1.117  dP=-1.750
++ Max : roll=+0.080  pitch=+2.165  yaw=-0.568  dS=-1.330  dL=-0.951  dP=-1.615
++ Max displacements (mm) for each sub-brick:
 4.98(0.00) 4.81(0.23) 4.58(0.34) 4.56(0.19) 4.62(0.14) 4.58(0.17) 4.63(0.11) 4.58(0.13) 4.64(0.16) 4.64(0.07) 4.62(0.13) 4.71(0.13) 4.76(0.08) 4.79(0.11) 4.84(0.08) 4.88(0.05) 4.91(0.05) 4.95(0.05) 4.96(0.06) 4.83(0.31) 4.92(0.21) 4.96(0.13) 5.07(0.15) 5.14(0.09) 5.21(0.11) 5.16(0.09) 5.20(0.10) 5.19(0.22) 5.25(0.13) 5.23(0.04) 5.28(0.08) 5.28(0.04) 5.33(0.08) 5.30(0.04) 5.30(0.06) 5.27(0.07) 5.28(0.08) 5.34(0.07) 5.34(0.03) 5.38(0.07) 5.37(0.09) 5.30(0.20) 5.23(0.13) 5.36(0.15) 5.09(0.31) 4.92(0.22) 4.96(0.10) 4.86(0.11) 4.90(0.14) 4.90(0.10) 5.01(0.20) 4.80(0.32) 4.68(0.23) 4.69(0.05) 4.69(0.04) 4.64(0.09) 4.72(0.09) 4.73(0.06) 4.64(0.14) 4.68(0.16) 4.63(0.13) 4.58(0.13) 4.61(0.05) 4.65(0.07) 4.65(0.11) 4.77(0.17) 4.81(0.19) 4.87(0.18) 4.69(0.30) 4.60(0.14) 4.67(0.15) 4.66(0.07) 4.67(0.10) 4.68(0.07) 4.67(0.07) 4.70(0.06) 4.77(0.12) 4.81(0.09) 4.86(0.09) 4.92(0.10) 4.94(0.03) 4.90(0.07) 4.75(0.16) 4.69(0.17) 4.50(0.27) 4.45(0.06) 4.39(0.08) 4.38(0.04) 4.40(0.06) 4.41(0.07) 4.41(0.09) 4.40(0.07) 4.38(0.05) 4.43(0.07) 4.43(0.03) 4.45(0.03) 4.50(0.06) 4.48(0.06) 4.46(0.07) 4.41(0.05) 4.42(0.08) 4.37(0.14) 4.35(0.19) 4.32(0.09) 4.35(0.05) 4.36(0.06) 4.37(0.07) 4.36(0.05) 4.42(0.08) 4.46(0.05) 4.48(0.02) 4.42(0.07) 4.64(0.29) 4.42(0.30) 4.45(0.05) 4.44(0.11) 4.49(0.15) 4.51(0.13) 4.62(0.16) 4.60(0.05) 4.59(0.05) 4.60(0.06) 4.61(0.04) 4.67(0.07) 4.67(0.07) 4.70(0.07) 4.67(0.05) 4.72(0.10) 4.71(0.06) 4.73(0.06) 4.74(0.06) 4.79(0.06) 4.65(0.25) 4.62(0.11) 4.70(0.11) 4.83(0.25) 4.76(0.34) 4.69(0.19) 4.81(0.18) 4.76(0.12) 4.84(0.14) 4.78(0.13) 4.63(0.19) 4.63(0.06) 4.45(0.24) 4.42(0.10) 4.45(0.08) 4.46(0.06) 4.47(0.10) 4.39(0.15)
++ Max displacement in automask = 5.38 (mm) at sub-brick 39
++ Max delta displ  in automask = 0.34 (mm) at sub-brick 2
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.tb6843.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb6843.r03.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb6843.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb6843.r03.tshift+orig.BRIK is 0.799908 degrees from plumb.
++ opened source dataset 'pb02.tb6843.r03.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 463.2 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 0.799908 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb6843.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6843.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb6843.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6843.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb6843.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6843.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source vr_base+orig -nwarp anat.un.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 0.799908 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 11.6 sec
3dcopy Sag3DMPRAGEs002a1001_ns+tlrc anat_final.tb6843
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.tb6843+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb6843+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets
++ 1848275 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=1
++ Zero-pad: ybot=0 ytop=4
++ Zero-pad: zbot=3 ztop=0
++ Computing -autobox
++ 315315 voxels [90.5%] in weight mask
++ Number of points for matching = 148198
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.136685
   sp   = 0.258987
   mi   = -0.612694
   crM  = 0.0337656
   nmi  = 0.839898
   je   = 3.21417
   hel  = -0.12597
   crA  = 0.183755
   crU  = 0.183363
   lss  = 0.863315
   lpc  = 0.155009
   lpa  = 0.844991
   lpc+ = 0.277159
   ncd  = 0.889055
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.3
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb6843+tlrc -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb6843+tlrc'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 24.1 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb6843.r01.blur pb03.tb6843.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb6843.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb6843.r02.blur pb03.tb6843.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb6843.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb6843.r03.blur pb03.tb6843.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb6843.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb04.tb6843.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb6843.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 399.978210
 + Used gradual clip level = 367.648712 .. 429.917419
 + Number voxels above clip level = 64918
 + Clustering voxels ...
 + Largest cluster has 64817 voxels
 + Clustering voxels ...
 + Largest cluster has 64723 voxels
 + Filled    78 voxels in small holes; now have 64801 voxels
 + Clustering voxels ...
 + Largest cluster has 64801 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 246495 voxels
 + Mask now has 64801 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 236994 voxels
++ 74302 voxels in the mask [out of 311296: 23.87%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   6 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb04.tb6843.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb6843.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 400.765778
 + Used gradual clip level = 368.246674 .. 430.864594
 + Number voxels above clip level = 65282
 + Clustering voxels ...
 + Largest cluster has 65144 voxels
 + Clustering voxels ...
 + Largest cluster has 65068 voxels
 + Filled    78 voxels in small holes; now have 65146 voxels
 + Clustering voxels ...
 + Largest cluster has 65146 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 246150 voxels
 + Mask now has 65146 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 236617 voxels
++ 74679 voxels in the mask [out of 311296: 23.99%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb04.tb6843.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb6843.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 402.141571
 + Used gradual clip level = 370.107635 .. 433.000000
 + Number voxels above clip level = 65268
 + Clustering voxels ...
 + Largest cluster has 65138 voxels
 + Clustering voxels ...
 + Largest cluster has 65054 voxels
 + Filled    59 voxels in small holes; now have 65113 voxels
 + Clustering voxels ...
 + Largest cluster has 65112 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 246170 voxels
 + Mask now has 65126 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 236629 voxels
++ 74667 voxels in the mask [out of 311296: 23.99%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   6 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.tb6843
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 75014 survived, 236282 were zero
++ writing result full_mask.tb6843...
3dresample -master full_mask.tb6843+tlrc -input Sag3DMPRAGEs002a1001_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.tb6843
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 98805 survived, 212491 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb6843...
3dABoverlap -no_automask full_mask.tb6843+tlrc mask_anat.tb6843+tlrc
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#A=./full_mask.tb6843+tlrc.BRIK  B=./mask_anat.tb6843+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
75014        98805        98959        74860        154          23945         0.2053     24.2346     1.1361     1.0501     1.3369
3ddot -dodice full_mask.tb6843+tlrc mask_anat.tb6843+tlrc
tee out.mask_ae_dice.txt
0.861356	
3dresample -master full_mask.tb6843+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71790 survived, 239506 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb04.tb6843.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.tb6843.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb6843.r01.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb6843.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.tb6843.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.tb6843.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb6843.r02.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb6843.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.tb6843.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.tb6843.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb6843.r03.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb6843.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb6843
total number of censored TRs (simple form) = 6
1deval -a motion_tb6843_censor.1D -b outcount_tb6843_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb6843_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb05.tb6843.r01.scale+tlrc.HEAD pb05.tb6843.r02.scale+tlrc.HEAD pb05.tb6843.r03.scale+tlrc.HEAD -censor censor_tb6843_combined_2.1D -polort 3 -local_times -num_stimts 18 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll_01 -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch_01 -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw_01 -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS_01 -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL_01 -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP_01 -stim_file 13 motion_deriv.1D[0] -stim_base 13 -stim_label 13 roll_02 -stim_file 14 motion_deriv.1D[1] -stim_base 14 -stim_label 14 pitch_02 -stim_file 15 motion_deriv.1D[2] -stim_base 15 -stim_label 15 yaw_02 -stim_file 16 motion_deriv.1D[3] -stim_base 16 -stim_label 16 dS_02 -stim_file 17 motion_deriv.1D[4] -stim_base 17 -stim_label 17 dL_02 -stim_file 18 motion_deriv.1D[5] -stim_base 18 -stim_label 18 dP_02 -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +uns1 -str1 -glt_label 4 unstructured-structured BL1 -gltsym SYM: +uns2 -str2 -glt_label 5 unstructured-structured BL2 -gltsym SYM: +uns3 -str3 -glt_label 6 unstructured-structured BL3 -gltsym SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3 -glt_label 7 task -gltsym SYM: +uns1 +str1 -glt_label 8 task BL1 -gltsym SYM: +uns2 +str2 -glt_label 9 task BL2 -gltsym SYM: +uns3 +str3 -glt_label 10 task BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb6843 -errts errts.tb6843 -bucket stats.tb6843
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 596,852 bytes (about 597 thousand [kilo])
++ loading dataset pb05.tb6843.r01.scale+tlrc.HEAD pb05.tb6843.r02.scale+tlrc.HEAD pb05.tb6843.r03.scale+tlrc.HEAD
++ current memory malloc-ated = 561,233,701 bytes (about 561 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 271969 voxels (out of 311296 = 87.4%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 -str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 -str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 +str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 441 (after)
 + Number of parameters:  30 [24 baseline ; 6 signal]
++ total shared memory needed = 1,181,679,616 bytes (about 1.2 billion [giga])
++ current memory malloc-ated = 561,588,601 bytes (about 562 million [mega])
++ mmap() memory allocated: 1,181,679,616 bytes (about 1.2 billion [giga])
++ Memory required for output bricks = 1,181,679,616 bytes (about 1.2 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.tb6843.r01.scale+tlrc.HEAD pb05.tb6843.r02.scale+tlrc.HEAD pb05.tb6843.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.tb6843_REML -Rvar stats.tb6843_REMLvar \
 -Rfitts fitts.tb6843_REML -Rerrts errts.tb6843_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (441x30):  5.11048  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (441x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (441x24):  3.687  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (441x12):  2.61167  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (441x12):  1.11624  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.32362e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.56 s
++ Voxels in dataset: 311296
++ Voxels per job:    31129
++ Job #1: processing voxels 31129 to 62257; elapsed time=8.763
++ Job #2: processing voxels 62258 to 93386; elapsed time=8.784
++ Job #3: processing voxels 93387 to 124515; elapsed time=8.808
++ Job #4: processing voxels 124516 to 155644; elapsed time=8.832
++ Job #5: processing voxels 155645 to 186773; elapsed time=8.877
++ Job #6: processing voxels 186774 to 217902; elapsed time=8.911
++ Job #7: processing voxels 217903 to 249031; elapsed time=8.946
++ Job #8: processing voxels 249032 to 280160; elapsed time=8.969
++ Job #0: processing voxels 0 to 31128; elapsed time=9.010
++ voxel loop:++ Job #9: processing voxels 280161 to 311295; elapsed time=9.011
0123456789.0123456789.0123456789.0123456789.0123456++ Job #9 finished; elapsed time=80.777
++ Job #8 finished; elapsed time=80.791
++ Job #1 finished; elapsed time=80.985
7++ Job #3 finished; elapsed time=82.362
8++ Job #7 finished; elapsed time=82.630
++ Job #2 finished; elapsed time=82.747
++ Job #4 finished; elapsed time=82.973
++ Job #6 finished; elapsed time=83.026
9.
++ Job #0 waiting for children to finish; elapsed time=83.146
++ Job #5 finished; elapsed time=83.424
++ Job #0 now finishing up; elapsed time=83.438
++ Smallest FDR q [0 Full_Fstat] = 1.02211e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 7.66905e-12
++ Smallest FDR q [3 uns1_Fstat] = 7.66905e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 1.15418e-11
++ Smallest FDR q [6 uns2_Fstat] = 1.15424e-11
++ Smallest FDR q [8 uns3#0_Tstat] = 2.45936e-12
++ Smallest FDR q [9 uns3_Fstat] = 2.45934e-12
++ Smallest FDR q [11 str1#0_Tstat] = 1.71326e-11
++ Smallest FDR q [12 str1_Fstat] = 1.7133e-11
++ Smallest FDR q [14 str2#0_Tstat] = 7.31122e-12
++ Smallest FDR q [15 str2_Fstat] = 7.31083e-12
++ Smallest FDR q [17 str3#0_Tstat] = 1.34592e-12
++ Smallest FDR q [18 str3_Fstat] = 1.34589e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.05745e-12
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.05747e-12
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 7.23152e-13
++ Smallest FDR q [24 structured_GLT_Fstat] = 7.23099e-13
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 7.99839e-13
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 7.99875e-13
++ Smallest FDR q [29 unstructured-structured BL1_GLT#0_Tstat] = 1.98867e-10
++ Smallest FDR q [30 unstructured-structured BL1_GLT_Fstat] = 1.98867e-10
++ Smallest FDR q [32 unstructured-structured BL2_GLT#0_Tstat] = 3.91152e-11
++ Smallest FDR q [33 unstructured-structured BL2_GLT_Fstat] = 3.91143e-11
++ Smallest FDR q [35 unstructured-structured BL3_GLT#0_Tstat] = 2.21583e-11
++ Smallest FDR q [36 unstructured-structured BL3_GLT_Fstat] = 2.21585e-11
++ Smallest FDR q [38 task_GLT#0_Tstat] = 8.68614e-13
++ Smallest FDR q [39 task_GLT_Fstat] = 8.68584e-13
++ Smallest FDR q [41 task BL1_GLT#0_Tstat] = 9.62972e-12
++ Smallest FDR q [42 task BL1_GLT_Fstat] = 9.63042e-12
++ Smallest FDR q [44 task BL2_GLT#0_Tstat] = 8.40209e-12
++ Smallest FDR q [45 task BL2_GLT_Fstat] = 8.40218e-12
++ Smallest FDR q [47 task BL3_GLT#0_Tstat] = 1.74423e-12
++ Smallest FDR q [48 task BL3_GLT_Fstat] = 1.74417e-12
++ Wrote bucket dataset into ./stats.tb6843+tlrc.BRIK
 + created 33 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb6843+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.tb6843+tlrc.BRIK
++ Program finished; elapsed time=179.036
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.739       0.802  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.727       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.724       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.483       0.559  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.473       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.463       0.538  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:      -0.402      -0.359  ( 6 vs. 16)  Run#2Pol#2  vs.  str2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb05.tb6843.r01.scale+tlrc.HEAD pb05.tb6843.r02.scale+tlrc.HEAD pb05.tb6843.r03.scale+tlrc.HEAD -fout -tout -Rbuck stats.tb6843_REML -Rvar stats.tb6843_REMLvar -Rfitts fitts.tb6843_REML -Rerrts errts.tb6843_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 311296 voxels
++ FDR automask has 271969 voxels (out of 311296 = 87.4%)
++ -----  matrix condition (441x30):  5.11048  ++ VERY GOOD ++
 + masked off 58441 voxels for being all zero; 252855 left in mask
++ Converting input dataset to vector image
 +  dataset = 560 million [mega] bytes
 +  vectim  = 456 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=13.35
 + X matrix: 57.302% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=441 cols=30; 109*1 cases; total CPU=0.00 Elapsed=13.40
 +  average case bandwidth = 12.40
++ REML voxel loop: [6 threads]0123456789.0123456789.0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=204.43
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=309.11
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./stats.tb6843_REMLvar+tlrc.BRIK
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./fitts.tb6843_REML+tlrc.BRIK
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./errts.tb6843_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.tb6843_REML+tlrc
++ Smallest FDR q [0 Full_Fstat] = 6.02348e-11
++ Smallest FDR q [2 uns1#0_Tstat] = 3.92369e-05
++ Smallest FDR q [3 uns1_Fstat] = 3.9237e-05
++ Smallest FDR q [5 uns2#0_Tstat] = 7.23643e-06
++ Smallest FDR q [6 uns2_Fstat] = 7.23641e-06
++ Smallest FDR q [8 uns3#0_Tstat] = 5.07129e-10
++ Smallest FDR q [9 uns3_Fstat] = 5.0713e-10
++ Smallest FDR q [11 str1#0_Tstat] = 0.000825028
++ Smallest FDR q [12 str1_Fstat] = 0.000825028
++ Smallest FDR q [14 str2#0_Tstat] = 9.90438e-06
++ Smallest FDR q [15 str2_Fstat] = 9.90438e-06
++ Smallest FDR q [17 str3#0_Tstat] = 6.20749e-10
++ Smallest FDR q [18 str3_Fstat] = 6.20747e-10
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.1309e-10
++ Smallest FDR q [21 unstructured_Fstat] = 1.1309e-10
++ Smallest FDR q [23 structured#0_Tstat] = 1.04046e-10
++ Smallest FDR q [24 structured_Fstat] = 1.04046e-10
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 9.86467e-06
++ Smallest FDR q [27 unstructured-structured_Fstat] = 9.86467e-06
++ Smallest FDR q [29 unstructured-structured_BL1#0_Tstat] = 0.00472911
++ Smallest FDR q [30 unstructured-structured_BL1_Fstat] = 0.00472911
++ Smallest FDR q [32 unstructured-structured_BL2#0_Tstat] = 0.00121036
++ Smallest FDR q [33 unstructured-structured_BL2_Fstat] = 0.00121036
++ Smallest FDR q [35 unstructured-structured_BL3#0_Tstat] = 0.000149899
++ Smallest FDR q [36 unstructured-structured_BL3_Fstat] = 0.0001499
++ Smallest FDR q [38 task#0_Tstat] = 1.077e-10
++ Smallest FDR q [39 task_Fstat] = 1.077e-10
++ Smallest FDR q [41 task_BL1#0_Tstat] = 0.000162738
++ Smallest FDR q [42 task_BL1_Fstat] = 0.000162738
++ Smallest FDR q [44 task_BL2#0_Tstat] = 1.4032e-06
++ Smallest FDR q [45 task_BL2_Fstat] = 1.4032e-06
++ Smallest FDR q [47 task_BL3#0_Tstat] = 5.16555e-09
++ Smallest FDR q [48 task_BL3_Fstat] = 5.16554e-09
 + Added 33 FDR curves to dataset stats.tb6843_REML+tlrc
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./stats.tb6843_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=837.49
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb6843 pb05.tb6843.r01.scale+tlrc.HEAD pb05.tb6843.r02.scale+tlrc.HEAD pb05.tb6843.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ elapsed time = 82.6 s
3dTstat -mean -prefix rm.signal.all all_runs.tb6843+tlrc[0..145,150..210,213..280,284..449]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
** Can't read ANY data from file 'all_runs.tb6843+tlrc.HEAD'
[7m** FATAL ERROR:[0m Can't open dataset all_runs.tb6843+tlrc[0..145,150..210,213..280,284..449]
** Program compile date = Dec 22 2017
