echo auto-generated by afni_proc.py, Tue Aug  8 17:28:22 2017
auto-generated by afni_proc.py, Tue Aug  8 17:28:22 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Tue Aug  8 17:28:23 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0065
endif
set output_dir = tb0065.srtt
if ( -d tb0065.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0065.srtt
mkdir tb0065.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0065.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0065.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0065.srtt/pb00.tb0065.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0065.srtt/pb00.tb0065.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.7 s
3dTcat -prefix tb0065.srtt/pb00.tb0065.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.7 s
set tr_counts = ( 150 150 150 )
cd tb0065.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0065.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0065.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0065.r01.tcat+orig.BRIK is 5.600002 degrees from plumb.
++ 27031 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0065.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0065.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0065.r02.tcat+orig.BRIK is 5.600002 degrees from plumb.
++ 27072 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0065.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0065.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0065.r03.tcat+orig.BRIK is 5.600002 degrees from plumb.
++ 27144 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0065.r01.tshift -tpattern alt+z2 pb00.tb0065.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0065.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0065.r01.tcat+orig.BRIK is 5.600002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0065.r02.tshift -tpattern alt+z2 pb00.tb0065.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0065.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0065.r02.tcat+orig.BRIK is 5.600002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0065.r03.tshift -tpattern alt+z2 pb00.tb0065.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0065.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0065.r03.tcat+orig.BRIK is 5.600002 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0065.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 5.600002 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 385.555206
 + Used gradual clip level = 339.042297 .. 418.478699
 + Number voxels above clip level = 27541
 + Clustering voxels ...
 + Largest cluster has 26999 voxels
 + Clustering voxels ...
 + Largest cluster has 26694 voxels
 + Filled   237 voxels in small holes; now have 26931 voxels
 + Filled     1 voxels in large holes; now have 26932 voxels
 + Clustering voxels ...
 + Largest cluster has 26932 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 104140 voxels
 + Mask now has 26932 voxels
++ 26932 voxels in the mask [out of 131072: 20.55%]
++ first  16 x-planes are zero [from R]
++ last   11 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 922.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/922.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 5.600002 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1356318 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 26932 voxels [16.9%] in weight mask
++ Number of points for matching = 26932
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 34.515 28.689 20.372 (index)
 + source center of mass = 86.324 145.885 148.112 (index)
 + source-target CM = -0.538 -0.453 -6.202 (xyz)
 + center of mass shifts = -0.538 -0.453 -6.202
++ shift param auto-range: -70.1..69.0 -70.0..69.1 -55.0..42.6
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.537575 .. 9.462425
 + Range param#2 [y-shift] = -10.452858 .. 9.547142
 + Range param#3 [z-shift] = -16.201958 .. 3.798042
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.537575 .. 39.462425
 + Range param#2 [y-shift] = -40.452858 .. 39.547142
 + Range param#3 [z-shift] = -46.201958 .. 33.798042
 + 12 free parameters
++ Normalized convergence radius = 0.000460
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1356318 [out of 13798400] voxels
 + base mask has 37410 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=61 usiz=181
 + - copying weight image
 + - using 26932 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 22706 total points stored in 210 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.00902514] **[#2=-0.0169044] *--.o*[#11=-0.0214977] *.-*[#28=-0.0283649] *-+-+-o++ooo.o*[#3100=-0.0302403] *+$o*[#6238=-0.0345835] **[#7388=-0.0409469] *
 + - best 45 costs found:
    0 v=-0.040947:  -5.49 -11.64  17.03 -35.24 -13.60  30.23  [rand]
    1 v=-0.034584: -35.40  30.10 -21.97 -11.68 -29.04  39.38  [rand]
    2 v=-0.030240: -13.87 -13.79   7.13 -15.00 -30.00  30.00  [grid]
    3 v=-0.029001:  -9.18  19.98  11.27  25.20  18.50  13.54  [rand]
    4 v=-0.028365: -13.87 -13.79   7.13 -15.00 -15.00  15.00  [grid]
    5 v=-0.027707:  12.80 -27.12  20.46  30.00 -30.00 -30.00  [grid]
    6 v=-0.027594: -16.68  -9.92  18.15  20.99 -15.73  16.09  [rand]
    7 v=-0.027314:   4.42  10.73  17.03  35.24  13.60 -30.23  [rand]
    8 v=-0.026997: -13.87  12.88   7.13  15.00  15.00  30.00  [grid]
    9 v=-0.026609:  12.80 -13.79  20.46  15.00 -30.00  15.00  [grid]
   10 v=-0.026360: -34.86 -17.04 -14.80 -16.34  -8.64  40.54  [rand]
   11 v=-0.026105:  -7.59  19.36  29.55 -25.15 -27.05  27.90  [rand]
   12 v=-0.025641:  12.80 -13.79   7.13  15.00 -30.00 -15.00  [grid]
   13 v=-0.025621: -13.87 -13.79   7.13 -15.00 -30.00  15.00  [grid]
   14 v=-0.025356: -32.38 -12.25  -3.46 -23.31  -3.26  40.47  [rand]
   15 v=-0.024887: -14.74  -9.91  -1.36 -15.99 -13.53  29.93  [rand]
   16 v=-0.024862:   6.51 -20.27  29.55  25.15 -27.05 -27.90  [rand]
   17 v=-0.024213: -13.87 -13.79   7.13 -30.00 -30.00  15.00  [grid]
   18 v=-0.024193: -33.02  14.24   5.61 -11.16   9.40  34.39  [rand]
   19 v=-0.023677:  12.80  12.88   7.13  30.00  15.00 -30.00  [grid]
   20 v=-0.023642:  23.81  29.24   6.82 -28.68  38.91 -32.36  [rand]
   21 v=-0.023377:  12.80 -27.12  20.46  15.00 -30.00 -30.00  [grid]
   22 v=-0.023059: -13.87  12.88   7.13 -30.00 -15.00  15.00  [grid]
   23 v=-0.022577:  26.13  12.88  20.46 -30.00  30.00 -30.00  [grid]
   24 v=-0.022536:  12.80  12.88  20.46 -30.00  15.00 -15.00  [grid]
   25 v=-0.022455:  12.80  12.88   7.13 -30.00  15.00 -30.00  [grid]
   26 v=-0.022440: -14.74   9.00  -1.36  15.99  13.53  29.93  [rand]
   27 v=-0.022354: -20.03  16.22  -3.60 -30.54  19.59  20.03  [rand]
   28 v=-0.022317:  12.80 -13.79  20.46  30.00 -30.00 -30.00  [grid]
   29 v=-0.022282:  -4.62  -6.68   1.59  -4.32 -22.85  18.95  [rand]
   30 v=-0.022278:  15.61   9.01  18.15 -20.99  15.73 -16.09  [rand]
   31 v=-0.022236: -33.02  14.24 -18.01 -11.16   9.40  34.39  [rand]
   32 v=-0.022059: -13.87 -13.79  20.46 -30.00 -15.00  30.00  [grid]
   33 v=-0.021988:  12.80  12.88   7.13 -30.00  15.00 -15.00  [grid]
   34 v=-0.021848: -15.48  23.64 -36.12  19.13 -33.53 -22.48  [rand]
   35 v=-0.021767:   4.42  10.73  17.03 -35.24  13.60  30.23  [rand]
   36 v=-0.021714: -32.38  11.34  -3.46 -23.31   3.26  40.47  [rand]
   37 v=-0.021558: -13.87  26.21 -32.87  30.00 -30.00 -15.00  [grid]
   38 v=-0.021511: -10.86 -29.27 -21.21 -30.67 -17.79 -20.52  [rand]
   39 v=-0.021498:  12.80 -13.79   7.13 -15.00  15.00  15.00  [grid]
   40 v=-0.021407: -12.14   4.11  -2.31 -24.53 -29.49 -26.10  [rand]
   41 v=-0.021254: -34.86 -17.04   2.40 -16.34  -8.64  40.54  [rand]
   42 v=-0.021237:  -6.35 -14.64  23.43 -38.21 -15.41  13.51  [rand]
   43 v=-0.021153:  -6.52  -3.86  18.33  29.81   4.26  23.54  [rand]
   44 v=-0.020981: -20.03  16.22  -8.80 -30.54  19.59  20.03  [rand]
*[#8007=-0.0413482] *[#8008=-0.0430079] *[#8011=-0.0477581] *[#8017=-0.0478944] *[#8018=-0.0485449] *[#8021=-0.0498313] *[#8024=-0.0499599] *[#8025=-0.0503821] *[#8026=-0.0505868] *[#8031=-0.0511881] *[#8950=-0.0575727] *[#8953=-0.0586601] *[#8954=-0.0673824] *[#8961=-0.079429] *[#8964=-0.0812936] *[#8965=-0.0831342] *[#8968=-0.0882768] *[#8969=-0.0980357] *[#8970=-0.101951] *[#8971=-0.112181] *[#8973=-0.113324] *[#8974=-0.116942] *[#8975=-0.118954] *[#8977=-0.121207] *[#8978=-0.123434] *[#8979=-0.125939] *[#8980=-0.129744] *[#8981=-0.137483] *[#8983=-0.137801] *[#8986=-0.143334] *[#8987=-0.147662] *[#8988=-0.152376] *[#8991=-0.1564] *[#8992=-0.160874] *[#8993=-0.176774] *[#8994=-0.238604] *[#9001=-0.266934] *[#9002=-0.318997] *[#9004=-0.329914] *[#9005=-0.364771] *[#9007=-0.376535] *[#9012=-0.376606] *[#9014=-0.392287] *[#9016=-0.398448] *[#9017=-0.400108] *[#9019=-0.400151] *[#9023=-0.402788]  + - costs of the above after a little optimization:
    0 v=-0.051188:  -7.97 -14.06  16.47 -36.18 -14.41  31.75  [rand]
    1 v=-0.038109: -35.47  30.56 -24.05 -11.29 -30.86  39.48  [rand]
    2 v=-0.041942: -12.09 -14.42   3.40 -15.62 -25.97  27.15  [grid]
    3 v=-0.039060:  -8.59  17.88  10.73  25.20  15.31  14.05  [rand]
    4 v=-0.046509: -12.90 -12.87   6.01 -11.45 -20.42  12.63  [grid]
    5 v=-0.035069:   9.47 -26.15  20.71  29.97 -30.97 -29.55  [grid]
    6 v=-0.036167: -18.38  -7.37  19.18  21.95 -10.81  17.56  [rand]
    7 v=-0.045481:   5.62   8.61  10.27  37.44  14.50 -28.08  [rand]
    8 v=-0.038851: -14.42  12.33   4.57  14.44  12.20  36.78  [grid]
    9 v=-0.030189:  11.77 -13.10  21.32  15.11 -30.27  14.79  [grid]
   10 v=-0.044034: -38.76 -18.76 -17.41 -15.55 -11.99  39.59  [rand]
   11 v=-0.037889:  -8.14  21.90  27.59 -26.55 -30.48  32.79  [rand]
   12 v=-0.038201:  10.58 -14.18   9.33  16.54 -28.80  -6.83  [grid]
   13 v=-0.039236: -13.37 -14.84   6.25 -15.97 -24.35  13.95  [grid]
   14 v=-0.032020: -34.53 -12.48  -1.00 -20.98  -5.49  44.51  [rand]
   15 v=-0.033879: -14.58  -6.74  -1.32 -16.24 -13.19  29.47  [rand]
   16 v=-0.047813:   8.11 -18.09  24.71  26.58 -26.68 -27.39  [rand]
   17 v=-0.040160: -10.85 -14.46   5.05 -25.34 -35.17  18.31  [grid]
   18 v=-0.034323: -32.94   9.99   5.60 -11.17   9.37  34.42  [rand]
   19 v=-0.044450:  11.44  13.09   4.74  27.91   9.49 -19.66  [grid]
   20 v=-0.030980:  23.51  32.17   7.65 -28.45  39.25 -32.00  [rand]
   21 v=-0.036585:  11.97 -26.57  25.44  13.98 -29.37 -33.57  [grid]
   22 v=-0.039377: -13.54   8.90   7.47 -29.30 -14.46  15.65  [grid]
   23 v=-0.030676:  26.72  12.50  20.19 -24.69  28.56 -31.35  [grid]
   24 v=-0.029644:  11.86   8.54  19.49 -29.06  14.57 -12.94  [grid]
   25 v=-0.028568:   7.90  12.30   6.24 -32.51  15.08 -33.26  [grid]
   26 v=-0.036857: -12.84  10.61   3.90  17.03  12.50  32.68  [rand]
   27 v=-0.032467: -18.86  17.91  -5.65 -30.33  16.95  20.65  [rand]
   28 v=-0.031665:  11.85 -13.72  22.77  30.34 -24.59 -29.03  [grid]
  *29 v=-0.402788:  -0.20  -0.73  -0.20   0.17  -1.58   0.15  [rand]
   30 v=-0.030420:  14.91   9.06  15.42 -21.42  13.67 -17.85  [rand]
   31 v=-0.032269: -32.22  14.38 -12.92  -9.92   8.96  35.08  [rand]
   32 v=-0.045565:  -6.08 -14.65  20.93 -34.98 -15.27  25.94  [grid]
   33 v=-0.029267:  13.51  12.19   6.51 -32.02  17.82 -14.58  [grid]
   34 v=-0.030643: -15.28  25.07 -36.17  18.51 -32.19 -17.55  [rand]
   35 v=-0.035388:   3.37  11.96  11.37 -33.48  15.39  40.89  [rand]
   36 v=-0.040381: -31.60  -2.54   1.11 -21.35   5.37  39.56  [rand]
   37 v=-0.025646: -13.75  26.10 -36.23  28.85 -31.09 -16.46  [grid]
   38 v=-0.037994: -13.06 -29.32 -17.82 -29.18 -15.87 -19.92  [rand]
   39 v=-0.023708:  12.99 -13.48   6.46 -16.84  14.39  14.55  [grid]
   40 v=-0.034660:  -8.15   3.94  -1.68 -22.77 -31.37 -26.55  [rand]
   41 v=-0.028749: -39.94 -16.61   0.34 -14.42  -7.80  42.58  [rand]
   42 v=-0.048083:  -5.44 -13.25  22.68 -34.37 -13.68  21.64  [rand]
   43 v=-0.028409: -10.37  -2.68  17.04  29.40   1.04  21.80  [rand]
   44 v=-0.034097: -17.01  15.84  -2.54 -31.07  11.98  17.66  [rand]
 + - save #29 for twobest
 + - save # 0 for twobest
 + - save #42 for twobest
 + - save #16 for twobest
 + - save # 4 for twobest
 + - skip #32 for twobest: too close to set #42
 + - save # 7 for twobest
 + - save #19 for twobest
 + - save #10 for twobest
 + - save # 2 for twobest
 + - save #36 for twobest
 + - save #17 for twobest
 + - save #22 for twobest
 + - save #13 for twobest
 + - save # 3 for twobest
 + - save # 8 for twobest
 + - save #12 for twobest
 + - save # 1 for twobest
 + - save #38 for twobest
 + - save #11 for twobest
 + - skip #26 for twobest: too close to set # 8
 + - save #21 for twobest
 + - save # 6 for twobest
 + - save #35 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=61 usiz=181
 + - retaining old weight image
 + - using 26932 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23087 total points stored in 232 'RHDD(13.7332)' bloks
*[#9563=-0.409458] *[#9571=-0.415531] *[#9584=-0.415797] *[#9585=-0.41723] *[#9588=-0.418175] *[#9592=-0.418585] *[#9599=-0.419013] *[#9601=-0.419419] *[#9602=-0.419779] *[#9603=-0.419924] *[#9619=-0.4201] *[#9620=-0.420102] 
 + - param set #1 has cost=-0.420102
 + -- Parameters = 0.0140 -0.5177 -0.2289 0.2446 -1.7967 0.3383 1.0015 1.0137 0.9981 -0.0004 0.0007 0.0001
 + - param set #2 has cost=-0.026830
 + -- Parameters = -8.1503 -13.7338 16.6428 -36.4338 -14.8498 31.7810 0.9993 0.9997 0.9996 0.0109 0.0006 -0.0004
 + - param set #3 has cost=-0.036291
 + -- Parameters = -5.3014 -12.6845 23.0532 -34.2596 -13.2664 21.4717 0.9973 1.0016 1.0187 -0.0009 -0.0023 0.0006
 + - param set #4 has cost=-0.032971
 + -- Parameters = 10.2605 -18.8340 25.2462 27.7161 -27.3850 -29.5117 1.0021 1.0043 0.9975 0.0088 0.0011 -0.0076
 + - param set #5 has cost=-0.043750
 + -- Parameters = -12.0592 -12.1048 6.3075 -11.6976 -20.6206 13.2999 0.9969 0.9976 0.9974 0.0076 -0.0016 -0.0016
 + - param set #6 has cost=-0.036489
 + -- Parameters = 5.1544 7.6292 7.6695 37.9882 14.4183 -27.3772 0.9976 1.0018 1.0010 -0.0002 -0.0003 -0.0004
 + - param set #7 has cost=-0.071132
 + -- Parameters = 6.4636 3.9872 4.4130 11.9654 1.2422 -13.8295 1.0688 1.0021 1.0592 0.0262 0.0564 0.0545
 + - param set #8 has cost=-0.039530
 + -- Parameters = -38.7485 -19.6543 -17.3434 -14.9324 -12.5651 39.0596 1.0026 1.0175 1.0000 0.0010 0.0004 0.0006
 + - param set #9 has cost=-0.035047
 + -- Parameters = -11.5860 -15.5753 2.0652 -15.6293 -25.3894 27.0994 1.0025 1.0049 1.0212 0.0039 0.0029 0.0027
 + - param set #10 has cost=-0.037490
 + -- Parameters = -32.4453 -1.2927 1.7899 -20.5187 5.9866 43.5779 1.0226 1.0050 0.9995 -0.0113 -0.0118 -0.0004
 + - param set #11 has cost=-0.039756
 + -- Parameters = -9.3332 -18.0241 2.5619 -22.1382 -28.9886 18.6726 0.9530 1.0189 0.9861 -0.0260 0.0321 0.0317
 + - param set #12 has cost=-0.419902
 + -- Parameters = 0.1073 -0.4246 -0.2860 0.1604 -1.8603 0.2747 0.9976 1.0105 1.0004 -0.0034 0.0060 -0.0018
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0241 
 + --- dist(#3,#1) = 0.251 
 + --- dist(#4,#1) = 0.209 
 + --- dist(#5,#1) = 0.302 
 + --- dist(#6,#1) = 0.485 
 + --- dist(#7,#1) = 0.48 
 + --- dist(#8,#1) = 0.419 
 + --- dist(#9,#1) = 0.383 
 + --- dist(#10,#1) = 0.297 
 + --- dist(#11,#1) = 0.332 
 + --- dist(#12,#1) = 0.408 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=61 usiz=181
 + - retaining old weight image
 + - using 26932 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23588 total points stored in 245 'RHDD(13.5933)' bloks
*[#10458=-0.428371] *[#10477=-0.429273] *[#10481=-0.429445] *[#10482=-0.429746] *[#10487=-0.429864] *[#10488=-0.429972] *[#10489=-0.429977] *[#10491=-0.430113] *[#10495=-0.430195] *[#10496=-0.430285] *[#10500=-0.430295] *[#10501=-0.430424] *[#10508=-0.430459] *[#10516=-0.430514] 
 + - param set #1 has cost=-0.430514
 + -- Parameters = 0.0014 -0.3682 -0.2493 0.2414 -1.9721 0.3200 1.0023 1.0093 0.9957 -0.0040 0.0009 -0.0050
*[#10564=-0.430769] *[#10566=-0.430875] *[#10567=-0.43092] *[#10570=-0.430941] *[#10573=-0.43097] *[#10584=-0.431331] *[#10585=-0.43142] *[#10587=-0.431447] *[#10588=-0.431462] *[#10596=-0.431513] *[#10601=-0.431629] *[#10606=-0.431684] *[#10607=-0.431713] *[#10608=-0.431722] *[#10616=-0.431751] *[#10617=-0.431797] *[#10618=-0.431804] 
 + - param set #2 has cost=-0.431804
 + -- Parameters = -0.0910 -0.3418 -0.1970 0.1073 -1.9699 0.1408 1.0015 1.0097 0.9936 -0.0077 0.0051 -0.0061
 + - param set #3 has cost=-0.147491
 + -- Parameters = 2.8569 1.6893 2.9395 4.4799 -1.5938 -6.8999 1.0055 1.0104 1.0721 -0.0143 0.1083 0.0598
 + - param set #4 has cost=-0.036301
 + -- Parameters = -11.9916 -12.3443 5.4624 -11.8810 -20.5251 12.1205 0.9962 0.9850 0.9894 0.0136 -0.0043 -0.0021
 + - param set #5 has cost=-0.029565
 + -- Parameters = -9.2214 -18.1255 2.4882 -22.0480 -29.0886 18.4806 0.9541 1.0298 0.9854 -0.0263 0.0323 0.0313
 + - param set #6 has cost=-0.032087
 + -- Parameters = -38.9257 -17.0729 -17.2619 -15.0709 -12.3759 39.1650 1.0020 1.0176 1.0000 0.0013 0.0004 0.0004
 + - param set #7 has cost=-0.031203
 + -- Parameters = -32.7007 -1.4862 2.0095 -20.3143 6.1447 43.6453 1.0203 1.0052 1.0112 -0.0117 -0.0122 -0.0003
 + - param set #8 has cost=-0.024042
 + -- Parameters = 5.0411 7.8659 7.8541 38.0566 13.9701 -27.5448 0.9901 1.0028 1.0024 -0.0048 -0.0023 -0.0015
 + - param set #9 has cost=-0.031670
 + -- Parameters = -5.3456 -12.2663 22.6856 -35.4687 -13.1584 21.4214 0.9882 0.9976 1.0184 0.0105 -0.0037 -0.0002
 + - param set #10 has cost=-0.027916
 + -- Parameters = -11.4952 -16.1403 1.5423 -16.1598 -25.7104 25.3846 0.9979 0.9967 1.0316 0.0157 -0.0033 -0.0019
 + - param set #11 has cost=-0.028648
 + -- Parameters = 11.0848 -18.9643 26.1520 27.0761 -26.8853 -28.7634 1.0276 0.9981 0.9839 0.0059 0.0015 -0.0169
 + - param set #12 has cost=-0.020293
 + -- Parameters = -7.8304 -14.4840 16.3662 -35.3698 -14.2528 31.2739 0.9971 0.9917 0.9956 0.0087 -0.0016 -0.0029
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0187 XXX
 + --- dist(#3,#1) = 0.206 
 + --- dist(#4,#1) = 0.485 
 + --- dist(#5,#1) = 0.395 
 + --- dist(#6,#1) = 0.483 
 + --- dist(#7,#1) = 0.301 
 + --- dist(#8,#1) = 0.329 
 + --- dist(#9,#1) = 0.28 
 + --- dist(#10,#1) = 0.422 
 + --- dist(#11,#1) = 0.394 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=61 usiz=181
 + - retaining old weight image
 + - using 26932 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23851 total points stored in 255 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.417304
 + -- Parameters = -0.0869 -0.3157 -0.2777 0.1321 -2.0517 -0.0061 1.0034 1.0084 0.9949 -0.0092 0.0050 -0.0093
 + - param set #2 has cost=-0.272551
 + -- Parameters = -0.6924 -1.7340 -0.3903 0.7617 0.6314 -2.7133 0.9617 1.0425 0.9727 0.0303 0.0803 0.0632
 + - param set #3 has cost=-0.033160
 + -- Parameters = -11.4512 -11.7451 6.4404 -11.3891 -20.9426 12.1996 0.9989 0.9770 0.9728 0.0112 -0.0029 -0.0052
 + - param set #4 has cost=-0.028150
 + -- Parameters = -38.9171 -17.1272 -17.3559 -15.1136 -12.2489 39.1358 1.0022 1.0195 1.0083 0.0014 0.0003 0.0003
 + - param set #5 has cost=-0.024161
 + -- Parameters = -5.3096 -12.8094 23.1173 -34.0885 -13.0365 21.5512 0.9869 0.9968 1.0194 0.0116 -0.0033 0.0033
 + - param set #6 has cost=-0.026022
 + -- Parameters = -32.7254 -1.4691 2.0546 -20.3922 6.2105 43.5490 1.0200 1.0050 1.0109 -0.0113 -0.0119 0.0042
 + - param set #7 has cost=-0.022649
 + -- Parameters = -8.8758 -18.3317 2.2834 -21.3612 -29.6417 18.1985 0.9556 1.0276 0.9987 -0.0261 0.0262 0.0401
 + - param set #8 has cost=-0.023490
 + -- Parameters = 10.9927 -18.9704 26.1155 27.0103 -26.7518 -28.7153 1.0345 0.9976 0.9845 0.0062 0.0020 -0.0159
 + - param set #9 has cost=-0.021284
 + -- Parameters = -11.0947 -15.9048 1.4333 -16.4427 -25.5681 25.5547 0.9950 1.0006 1.0312 0.0151 -0.0035 -0.0016
 + - param set #10 has cost=-0.022346
 + -- Parameters = 5.4641 7.9265 7.7205 38.2122 13.9176 -27.3518 0.9799 1.0053 1.0014 -0.0047 -0.0029 -0.0020
 + - param set #11 has cost=-0.017116
 + -- Parameters = -8.1530 -14.5843 16.1851 -35.4417 -14.2452 31.2993 0.9970 0.9913 0.9958 0.0088 -0.0009 -0.0030
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.339 
 + --- dist(#3,#1) = 0.21 
 + --- dist(#4,#1) = 0.485 
 + --- dist(#5,#1) = 0.484 
 + --- dist(#6,#1) = 0.38 
 + --- dist(#7,#1) = 0.33 
 + --- dist(#8,#1) = 0.307 
 + --- dist(#9,#1) = 0.423 
 + --- dist(#10,#1) = 0.284 
 + --- dist(#11,#1) = 0.395 
 + - Total coarse refinement net CPU time = 0.0 s; 2748 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=61 usiz=181
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 23814 total points stored in 255 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.413687 *
 + -- Parameters = -0.0869 -0.3157 -0.2777 0.1321 -2.0517 -0.0061 1.0034 1.0084 0.9949 -0.0092 0.0050 -0.0093
 + - cost(#2)=-0.264775  
 + -- Parameters = -0.6924 -1.7340 -0.3903 0.7617 0.6314 -2.7133 0.9617 1.0425 0.9727 0.0303 0.0803 0.0632
 + - cost(#3)=-0.030786  
 + -- Parameters = -11.4512 -11.7451 6.4404 -11.3891 -20.9426 12.1996 0.9989 0.9770 0.9728 0.0112 -0.0029 -0.0052
 + - cost(#4)=-0.025548  
 + -- Parameters = -38.9171 -17.1272 -17.3559 -15.1136 -12.2489 39.1358 1.0022 1.0195 1.0083 0.0014 0.0003 0.0003
 + - cost(#5)=-0.025306  
 + -- Parameters = -32.7254 -1.4691 2.0546 -20.3922 6.2105 43.5490 1.0200 1.0050 1.0109 -0.0113 -0.0119 0.0042
 + - cost(#6)=-0.024548  
 + -- Parameters = -5.3096 -12.8094 23.1173 -34.0885 -13.0365 21.5512 0.9869 0.9968 1.0194 0.0116 -0.0033 0.0033
 + - cost(#7)=-0.022219  
 + -- Parameters = 10.9927 -18.9704 26.1155 27.0103 -26.7518 -28.7153 1.0345 0.9976 0.9845 0.0062 0.0020 -0.0159
 + - cost(#8)=-0.018855  
 + -- Parameters = -8.8758 -18.3317 2.2834 -21.3612 -29.6417 18.1985 0.9556 1.0276 0.9987 -0.0261 0.0262 0.0401
 + - cost(#9)=-0.020606  
 + -- Parameters = 5.4641 7.9265 7.7205 38.2122 13.9176 -27.3518 0.9799 1.0053 1.0014 -0.0047 -0.0029 -0.0020
 + - cost(#10)=-0.017611  
 + -- Parameters = -11.0947 -15.9048 1.4333 -16.4427 -25.5681 25.5547 0.9950 1.0006 1.0312 0.0151 -0.0035 -0.0016
 + - cost(#11)=-0.015001  
 + -- Parameters = -8.1530 -14.5843 16.1851 -35.4417 -14.2452 31.2993 0.9970 0.9913 0.9958 0.0088 -0.0009 -0.0030
 + - cost(#12)=-0.028881  
 + -- Parameters = -0.5376 -0.4529 -6.2020 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.414793 *
 + -- Parameters = -0.1141 -0.1673 -0.2754 0.1376 -2.2393 -0.0558 1.0031 1.0104 0.9949 -0.0097 0.0050 -0.0140
 + - cost(#2)=-0.343752  
 + -- Parameters = -1.2634 -1.0166 -0.2112 0.1760 -0.3581 -2.8012 1.0079 1.0244 0.9871 0.0027 0.0794 0.0297
 + - cost(#3)=-0.031871  
 + -- Parameters = -11.5370 -11.9087 6.4836 -11.4073 -21.0779 12.1949 0.9956 0.9742 0.9665 0.0098 -0.0019 -0.0063
 + - cost(#4)=-0.025949  
 + -- Parameters = -38.9093 -17.2424 -17.5058 -15.1502 -12.2840 39.0829 1.0024 1.0199 1.0085 0.0016 0.0002 -0.0039
 + - cost(#5)=-0.025856  
 + -- Parameters = -32.7631 -1.5790 2.1093 -20.4921 6.2199 43.4548 1.0193 1.0061 1.0096 -0.0103 -0.0144 0.0044
 + - cost(#6)=-0.025622  
 + -- Parameters = -5.2894 -12.7312 22.8884 -34.0468 -13.2890 21.6724 0.9906 0.9972 1.0288 0.0121 -0.0042 0.0040
 + - cost(#7)=-0.023613  
 + -- Parameters = 10.9512 -19.1797 26.3352 26.9581 -26.6244 -28.6376 1.0292 0.9945 0.9729 0.0054 0.0011 -0.0141
 + - cost(#8)=-0.021060  
 + -- Parameters = -8.7538 -19.8713 0.5028 -21.2341 -29.8899 18.4636 0.9570 1.0192 0.9921 -0.0253 0.0235 0.0413
 + - cost(#9)=-0.021133  
 + -- Parameters = 5.5823 7.9524 7.5247 38.3011 13.9973 -27.1925 0.9751 1.0073 1.0043 -0.0090 -0.0044 -0.0036
 + - cost(#10)=-0.021542  
 + -- Parameters = -10.0486 -16.9630 0.4514 -16.4125 -25.7346 24.6355 0.9967 1.0017 1.0344 0.0140 -0.0041 -0.0026
 + - cost(#11)=-0.015924  
 + -- Parameters = -8.5073 -14.4435 16.3420 -35.6232 -14.4637 30.9003 0.9977 0.9851 0.9954 0.0104 0.0004 -0.0022
 + - cost(#12)=-0.409868  
 + -- Parameters = -0.1773 -0.4361 -0.2491 0.2827 -1.8548 -0.2909 1.0002 1.0165 0.9922 0.0008 0.0138 -0.0064
 + - case #1 is now the best
 + - Initial  cost = -0.414793
 + - Initial fine Parameters = -0.1141 -0.1673 -0.2754 0.1376 -2.2393 -0.0558 1.0031 1.0104 0.9949 -0.0097 0.0050 -0.0140
 + - Finalish cost = -0.414991 ; 214 funcs
 + - Final    cost = -0.414993 ; 120 funcs
 + Final fine fit Parameters:
       x-shift=-0.1135   y-shift=-0.1305   z-shift=-0.2542
       z-angle= 0.1230   x-angle=-2.3104   y-angle=-0.0729
       x-scale= 1.0025   y-scale= 1.0094   z-scale= 0.9940
     y/x-shear=-0.0101 z/x-shear= 0.0064 z/y-shear=-0.0158
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.1135 -0.1305 -0.2542 0.1230 -2.3104 -0.0729 1.0025 1.0094 0.9940 -0.0101 0.0064 -0.0158
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.7
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0128 -1.0014 -0.1375 243.0880 0.0039 -0.1225 0.9851 88.2625 -1.0025 0.0022 -0.0013 208.2676
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 14.8 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3785.080100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 66.2634 46.63   ITER = 6/137
66.2634

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 57ms]
lev=0 0..171 0..213 0..166: [first cost=-0.70349] ... done [cost:-0.70349==>-0.76257]
lev=1 patch=129x161x125 [clock= 12m 31s 758ms]........:[cost=-0.78880]:........ done [cost:-0.76257==>-0.79210 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 17m 9s 880ms]......................... done [cost:-0.79210==>-0.85524 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 20m 43s 734ms]........ done [cost:-0.85524==>-0.91259 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 23m 29s 295ms]......... done [cost:-0.91259==>-0.94707 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 25m 32s 966ms].................... done [cost:-0.94707==>-1.03084 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 27m 42s 841ms]........................... done [cost:-1.03084==>-1.05498 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 30m 1s 264ms].............................................. done [cost:-1.05498==>-1.15210 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 32m 33s 154ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0065/tb0065.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 6.9 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0065.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.600002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0065.r01.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Reading input dataset ./pb01.tb0065.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28660 voxels
 + 4642 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.141  pitch=-0.096  yaw=-0.000  dS=-0.207  dL=-0.082  dP=-0.151
++ Mean: roll=-0.050  pitch=-0.045  yaw=+0.053  dS=-0.088  dL=-0.036  dP=-0.089
++ Max : roll=+0.017  pitch=+0.077  yaw=+0.159  dS=+0.092  dL=+0.017  dP=+0.043
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.03(0.03) 0.07(0.05) 0.07(0.08) 0.11(0.10) 0.15(0.09) 0.18(0.29) 0.12(0.08) 0.12(0.03) 0.11(0.03) 0.06(0.07) 0.09(0.04) 0.12(0.06) 0.13(0.03) 0.11(0.03) 0.10(0.01) 0.11(0.02) 0.10(0.02) 0.10(0.01) 0.11(0.02) 0.10(0.03) 0.10(0.02) 0.12(0.03) 0.11(0.05) 0.13(0.03) 0.15(0.03) 0.15(0.03) 0.14(0.03) 0.14(0.02) 0.14(0.02) 0.13(0.02) 0.13(0.03) 0.12(0.03) 0.15(0.03) 0.16(0.04) 0.19(0.05) 0.16(0.03) 0.14(0.03) 0.15(0.01) 0.15(0.02) 0.20(0.05) 0.20(0.03) 0.21(0.03) 0.20(0.03) 0.20(0.02) 0.19(0.02) 0.18(0.03) 0.21(0.03) 0.23(0.02) 0.21(0.03) 0.20(0.01) 0.21(0.02) 0.20(0.03) 0.18(0.03) 0.18(0.02) 0.18(0.02) 0.19(0.03) 0.22(0.04) 0.23(0.03) 0.21(0.03) 0.21(0.02) 0.22(0.02) 0.21(0.02) 0.18(0.02) 0.19(0.04) 0.22(0.03) 0.23(0.07) 0.24(0.04) 0.23(0.06) 0.26(0.04) 0.28(0.05) 0.28(0.04) 0.30(0.06) 0.29(0.03) 0.28(0.02) 0.28(0.02) 0.26(0.03) 0.25(0.04) 0.26(0.02) 0.27(0.02) 0.27(0.03) 0.27(0.04) 0.27(0.03) 0.29(0.03) 0.29(0.04) 0.28(0.02) 0.28(0.02) 0.29(0.02) 0.29(0.02) 0.28(0.02) 0.29(0.02) 0.28(0.01) 0.28(0.03) 0.29(0.02) 0.29(0.02) 0.30(0.03) 0.31(0.01) 0.32(0.03) 0.33(0.02) 0.31(0.02) 0.30(0.02) 0.31(0.02) 0.32(0.02) 0.32(0.02) 0.33(0.02) 0.33(0.02) 0.35(0.03) 0.33(0.04) 0.33(0.02) 0.35(0.05) 0.35(0.02) 0.34(0.03) 0.35(0.01) 0.35(0.01) 0.34(0.02) 0.32(0.03) 0.30(0.02) 0.32(0.02) 0.34(0.02) 0.35(0.03) 0.37(0.04) 0.36(0.03) 0.35(0.04) 0.35(0.02) 0.36(0.04) 0.36(0.02) 0.37(0.02) 0.38(0.01) 0.38(0.02) 0.37(0.03) 0.38(0.02) 0.41(0.03) 0.42(0.02) 0.40(0.02) 0.41(0.02) 0.39(0.02) 0.39(0.02) 0.42(0.04) 0.42(0.01) 0.41(0.03) 0.39(0.02) 0.45(0.08) 0.49(0.04) 0.47(0.05) 0.47(0.03) 0.51(0.06) 0.53(0.05) 0.49(0.06) 0.49(0.04) 0.48(0.05)
++ Max displacement in automask = 0.53 (mm) at sub-brick 146
++ Max delta displ  in automask = 0.29 (mm) at sub-brick 6
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0065.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0065.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0065.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0065.r01.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./pb01.tb0065.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.600002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.0
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0065.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.600002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0065.r02.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Reading input dataset ./pb01.tb0065.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28995 voxels
 + 4822 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.342  pitch=+0.182  yaw=+0.232  dS=-0.651  dL=-0.168  dP=-0.456
++ Mean: roll=-0.294  pitch=+0.219  yaw=+0.307  dS=-0.549  dL=-0.134  dP=-0.386
++ Max : roll=-0.192  pitch=+0.383  yaw=+0.365  dS=-0.474  dL=-0.085  dP=-0.313
++ Max displacements (mm) for each sub-brick:
 1.35(0.00) 1.45(0.16) 1.40(0.08) 1.40(0.04) 1.31(0.14) 1.23(0.12) 1.24(0.02) 1.24(0.04) 1.24(0.05) 1.27(0.05) 1.25(0.03) 1.25(0.04) 1.26(0.03) 1.25(0.03) 1.25(0.03) 1.25(0.02) 1.27(0.04) 1.29(0.04) 1.30(0.02) 1.27(0.04) 1.26(0.03) 1.26(0.03) 1.26(0.02) 1.26(0.03) 1.27(0.02) 1.27(0.03) 1.28(0.02) 1.29(0.03) 1.29(0.02) 1.30(0.02) 1.29(0.04) 1.30(0.02) 1.30(0.02) 1.28(0.03) 1.30(0.03) 1.32(0.03) 1.33(0.01) 1.32(0.03) 1.33(0.02) 1.33(0.02) 1.30(0.08) 1.32(0.11) 1.33(0.05) 1.33(0.05) 1.31(0.05) 1.30(0.05) 1.31(0.03) 1.35(0.05) 1.36(0.03) 1.32(0.06) 1.33(0.03) 1.36(0.03) 1.34(0.03) 1.34(0.02) 1.35(0.03) 1.35(0.03) 1.38(0.03) 1.38(0.02) 1.38(0.03) 1.38(0.07) 1.37(0.05) 1.36(0.03) 1.36(0.03) 1.35(0.03) 1.37(0.04) 1.40(0.03) 1.37(0.04) 1.36(0.04) 1.36(0.01) 1.38(0.04) 1.39(0.02) 1.41(0.04) 1.41(0.02) 1.38(0.04) 1.38(0.02) 1.39(0.03) 1.39(0.03) 1.37(0.03) 1.37(0.02) 1.38(0.04) 1.39(0.01) 1.40(0.03) 1.41(0.02) 1.41(0.03) 1.43(0.05) 1.43(0.03) 1.40(0.04) 1.40(0.01) 1.39(0.02) 1.40(0.03) 1.42(0.08) 1.39(0.04) 1.39(0.04) 1.40(0.02) 1.41(0.02) 1.39(0.02) 1.42(0.03) 1.44(0.03) 1.42(0.02) 1.44(0.03) 1.48(0.06) 1.47(0.04) 1.45(0.04) 1.42(0.04) 1.42(0.01) 1.42(0.03) 1.43(0.02) 1.48(0.06) 1.47(0.07) 1.46(0.03) 1.45(0.08) 1.45(0.01) 1.44(0.04) 1.44(0.01) 1.48(0.04) 1.48(0.02) 1.47(0.03) 1.49(0.02) 1.48(0.02) 1.48(0.03) 1.50(0.02) 1.50(0.04) 1.49(0.02) 1.49(0.03) 1.47(0.02) 1.47(0.03) 1.48(0.07) 1.49(0.08) 1.49(0.04) 1.50(0.04) 1.49(0.05) 1.47(0.04) 1.46(0.02) 1.50(0.04) 1.52(0.04) 1.49(0.06) 1.47(0.03) 1.47(0.04) 1.47(0.01) 1.46(0.03) 1.46(0.01) 1.45(0.05) 1.44(0.03) 1.45(0.08) 1.47(0.04) 1.48(0.07) 1.50(0.02) 1.46(0.06) 1.46(0.08) 1.43(0.08)
++ Max displacement in automask = 1.52 (mm) at sub-brick 134
++ Max delta displ  in automask = 0.16 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0065.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0065.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0065.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0065.r02.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./pb01.tb0065.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.600002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0065.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.600002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0065.r03.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Reading input dataset ./pb01.tb0065.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28966 voxels
 + 4740 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.341  pitch=+0.691  yaw=+0.189  dS=-1.499  dL=-0.252  dP=-0.659
++ Mean: roll=-0.243  pitch=+0.835  yaw=+0.233  dS=-1.398  dL=-0.221  dP=-0.616
++ Max : roll=-0.213  pitch=+0.945  yaw=+0.355  dS=-1.323  dL=-0.163  dP=-0.536
++ Max displacements (mm) for each sub-brick:
 2.86(0.00) 3.03(0.19) 3.00(0.05) 2.96(0.05) 2.91(0.08) 2.79(0.14) 2.68(0.17) 2.76(0.10) 2.76(0.04) 2.74(0.06) 2.77(0.04) 2.75(0.04) 2.75(0.06) 2.77(0.03) 2.78(0.05) 2.80(0.04) 2.81(0.02) 2.79(0.03) 2.79(0.02) 2.80(0.03) 2.81(0.03) 2.83(0.03) 2.81(0.03) 2.81(0.02) 2.83(0.02) 2.81(0.03) 2.80(0.02) 2.78(0.02) 2.81(0.04) 2.83(0.03) 2.83(0.03) 2.87(0.04) 2.87(0.05) 2.86(0.03) 2.85(0.03) 2.85(0.03) 2.81(0.06) 2.84(0.05) 2.87(0.04) 2.87(0.01) 2.86(0.04) 2.86(0.02) 2.85(0.04) 2.88(0.03) 2.90(0.03) 2.92(0.04) 2.90(0.04) 2.88(0.03) 2.90(0.02) 2.89(0.02) 2.90(0.02) 2.90(0.03) 2.90(0.04) 2.92(0.03) 2.91(0.05) 2.89(0.02) 2.93(0.04) 2.91(0.03) 2.89(0.04) 2.89(0.05) 2.89(0.02) 2.92(0.04) 2.94(0.02) 2.94(0.01) 2.92(0.03) 2.92(0.03) 2.92(0.02) 2.92(0.01) 2.94(0.04) 2.97(0.04) 2.94(0.06) 2.96(0.02) 2.94(0.06) 2.97(0.03) 2.99(0.03) 2.99(0.03) 2.97(0.04) 3.01(0.04) 3.03(0.03) 2.99(0.05) 3.00(0.01) 3.02(0.05) 3.05(0.06) 3.04(0.03) 3.04(0.03) 3.05(0.07) 3.04(0.03) 3.02(0.04) 3.04(0.03) 3.02(0.03) 3.03(0.02) 3.01(0.02) 3.00(0.02) 3.02(0.03) 3.03(0.03) 3.05(0.04) 3.07(0.03) 3.04(0.04) 3.05(0.01) 3.05(0.03) 3.07(0.03) 3.06(0.03) 3.06(0.03) 3.04(0.04) 3.06(0.03) 3.06(0.05) 3.08(0.03) 3.11(0.04) 3.11(0.01) 3.09(0.05) 3.07(0.04) 3.09(0.04) 3.11(0.02) 3.10(0.04) 3.11(0.02) 3.09(0.03) 3.09(0.02) 3.12(0.03) 3.09(0.05) 3.11(0.02) 3.13(0.03) 3.13(0.02) 3.11(0.03) 3.10(0.03) 3.11(0.03) 3.12(0.02) 3.10(0.04) 3.11(0.04) 3.15(0.04) 3.19(0.05) 3.20(0.03) 3.20(0.04) 3.20(0.03) 3.18(0.04) 3.18(0.04) 3.20(0.03) 3.19(0.05) 3.19(0.02) 3.19(0.04) 3.20(0.01) 3.22(0.05) 3.21(0.03) 3.22(0.10) 3.20(0.05) 3.23(0.06) 3.31(0.14) 3.30(0.02) 3.25(0.13) 3.22(0.06) 3.17(0.05)
++ Max displacement in automask = 3.31 (mm) at sub-brick 145
++ Max delta displ  in automask = 0.19 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0065.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0065.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0065.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0065.r03.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./pb01.tb0065.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.600002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.5
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0065.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0065.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0065.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0065.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0065.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0065.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0065
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0065+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0065+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1239555 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 285195 voxels [66.9%] in weight mask
++ Number of points for matching = 134041
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.151588
   sp   = 0.350691
   mi   = -0.485501
   crM  = 0.0450856
   nmi  = 0.841502
   je   = 2.57765
   hel  = -0.0952796
   crA  = 0.212654
   crU  = 0.224318
   lss  = 0.848412
   lpc  = 0.069134
   lpa  = 0.930866
   lpc+ = 0.222997
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.9
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0065+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0065+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 29.0 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0065.r01.blur pb02.tb0065.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0065.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0065.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0065.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0065.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0065.r02.blur pb02.tb0065.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0065.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0065.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0065.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0065.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0065.r03.blur pb02.tb0065.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0065.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0065.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0065.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0065.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0065.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0065.r01.blur+orig
++ Forming automask
 + Fixed clip level = 375.357788
 + Used gradual clip level = 337.836945 .. 411.241425
 + Number voxels above clip level = 48782
 + Clustering voxels ...
 + Largest cluster has 48773 voxels
 + Clustering voxels ...
 + Largest cluster has 48742 voxels
 + Filled    28 voxels in small holes; now have 48770 voxels
 + Clustering voxels ...
 + Largest cluster has 48770 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 377505 voxels
 + Mask now has 48770 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 369685 voxels
++ 56590 voxels in the mask [out of 426275: 13.28%]
++ first  10 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  24 y-planes are zero [from I]
++ last   17 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0065.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0065.r02.blur+orig
++ Forming automask
 + Fixed clip level = 374.279419
 + Used gradual clip level = 336.193665 .. 411.286835
 + Number voxels above clip level = 48918
 + Clustering voxels ...
 + Largest cluster has 48899 voxels
 + Clustering voxels ...
 + Largest cluster has 48864 voxels
 + Filled    32 voxels in small holes; now have 48896 voxels
 + Clustering voxels ...
 + Largest cluster has 48896 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 377379 voxels
 + Mask now has 48896 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 369532 voxels
++ 56743 voxels in the mask [out of 426275: 13.31%]
++ first  10 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  24 y-planes are zero [from I]
++ last   17 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0065.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0065.r03.blur+orig
++ Forming automask
 + Fixed clip level = 374.235504
 + Used gradual clip level = 334.485168 .. 412.103302
 + Number voxels above clip level = 48974
 + Clustering voxels ...
 + Largest cluster has 48960 voxels
 + Clustering voxels ...
 + Largest cluster has 48919 voxels
 + Filled    27 voxels in small holes; now have 48946 voxels
 + Clustering voxels ...
 + Largest cluster has 48946 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 377329 voxels
 + Mask now has 48946 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 369494 voxels
++ 56781 voxels in the mask [out of 426275: 13.32%]
++ first  10 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  25 y-planes are zero [from I]
++ last   17 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0065
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 56976 survived, 369299 were zero
++ writing result full_mask.tb0065...
3dresample -master full_mask.tb0065+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0065
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 49183 survived, 377092 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0065...
3dABoverlap -no_automask full_mask.tb0065+orig mask_anat.tb0065+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0065+orig.BRIK  B=./mask_anat.tb0065+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
56976        49183        59170        46989        9987         2194         17.5284      4.4609     0.8253     0.9188     0.9382
3ddot -dodice full_mask.tb0065+orig mask_anat.tb0065+orig
tee out.mask_ae_dice.txt
0.885257	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0065
total number of censored TRs (simple form) = 0
1deval -a motion_tb0065_censor.1D -b outcount_tb0065_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0065_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0065.r01.blur+orig.HEAD pb03.tb0065.r02.blur+orig.HEAD pb03.tb0065.r03.blur+orig.HEAD -censor censor_tb0065_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0065 -errts errts.tb0065 -bucket stats.tb0065
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0065.r01.blur+orig.HEAD pb03.tb0065.r02.blur+orig.HEAD pb03.tb0065.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 48874 voxels (out of 426275 = 11.5%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (no censoring)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0065.r01.blur+orig.HEAD pb03.tb0065.r02.blur+orig.HEAD pb03.tb0065.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0065_REML -Rvar stats.tb0065_REMLvar \
 -Rfitts fitts.tb0065_REML -Rerrts errts.tb0065_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (450x24):  4.41277  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (450x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (450x18):  3.64192  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (450x6):  2.73341  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (450x12):  1.01522  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.12755e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.39 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.441
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.455
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.469
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.484
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.498
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.512
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.526
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.540
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.554
++ Job #0: processing voxels 0 to 42626; elapsed time=7.564
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #3 finished; elapsed time=19.558
++ Job #2 finished; elapsed time=19.593
9.++ Job #4 finished; elapsed time=19.604

++ Job #0 waiting for children to finish; elapsed time=19.605
++ Job #1 finished; elapsed time=19.626
++ Job #7 finished; elapsed time=19.660
++ Job #6 finished; elapsed time=19.700
++ Job #8 finished; elapsed time=19.700
++ Job #9 finished; elapsed time=19.842
++ Job #5 finished; elapsed time=19.844
++ Job #0 now finishing up; elapsed time=19.860
++ Smallest FDR q [0 Full_Fstat] = 5.90085e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 2.15529e-14
++ Smallest FDR q [3 uns1_Fstat] = 2.15494e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 5.53879e-14
++ Smallest FDR q [6 uns2_Fstat] = 5.53746e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 5.82002e-14
++ Smallest FDR q [9 uns3_Fstat] = 5.81924e-14
++ Smallest FDR q [11 str1#0_Tstat] = 2.73177e-14
++ Smallest FDR q [12 str1_Fstat] = 2.73121e-14
++ Smallest FDR q [14 str2#0_Tstat] = 6.12729e-14
++ Smallest FDR q [15 str2_Fstat] = 6.12702e-14
++ Smallest FDR q [17 str3#0_Tstat] = 5.14098e-14
++ Smallest FDR q [18 str3_Fstat] = 5.13981e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 7.44706e-15
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 7.4438e-15
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 6.76398e-15
++ Smallest FDR q [24 structured_GLT_Fstat] = 6.76046e-15
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 8.31805e-07
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 8.31919e-07
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.235778 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.235159 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 0.00174623
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 0.00174613
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 0.00029089
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 0.000290906
++ Wrote bucket dataset into ./stats.tb0065+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0065+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0065+orig.BRIK
++ Program finished; elapsed time=35.868
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.726       0.791  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.726       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.726       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.475       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.475       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0065.r01.blur+orig.HEAD pb03.tb0065.r02.blur+orig.HEAD pb03.tb0065.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0065_REML -Rvar stats.tb0065_REMLvar -Rfitts fitts.tb0065_REML -Rerrts errts.tb0065_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 48874 voxels (out of 426275 = 11.5%)
++ -----  matrix condition (450x24):  4.41277  ++ VERY GOOD ++
 + masked off 244423 voxels for being all zero; 181852 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 328 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=7.85
 + X matrix: 46.639% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=450 cols=24; 109*1 cases; total CPU=0.00 Elapsed=7.88
 +  average case bandwidth = 12.53
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=52.67
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=101.14
++ Output dataset ./stats.tb0065_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0065_REML+orig.BRIK
++ Output dataset ./errts.tb0065_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0065_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.98156e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 5.74466e-12
++ Smallest FDR q [3 uns1_Fstat] = 5.74466e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 3.37526e-08
++ Smallest FDR q [6 uns2_Fstat] = 3.37527e-08
++ Smallest FDR q [8 uns3#0_Tstat] = 1.68292e-09
++ Smallest FDR q [9 uns3_Fstat] = 1.68292e-09
++ Smallest FDR q [11 str1#0_Tstat] = 1.19568e-10
++ Smallest FDR q [12 str1_Fstat] = 1.19568e-10
++ Smallest FDR q [14 str2#0_Tstat] = 5.17854e-08
++ Smallest FDR q [15 str2_Fstat] = 5.17854e-08
++ Smallest FDR q [17 str3#0_Tstat] = 2.56094e-08
++ Smallest FDR q [18 str3_Fstat] = 2.56094e-08
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.00701e-13
++ Smallest FDR q [21 unstructured_Fstat] = 1.00701e-13
++ Smallest FDR q [23 structured#0_Tstat] = 1.21693e-13
++ Smallest FDR q [24 structured_Fstat] = 1.21693e-13
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.53528 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.53528 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999817 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999817 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999756 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999756 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.999896 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.999896 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0065_REML+orig
++ Output dataset ./stats.tb0065_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=117.79
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0065 pb03.tb0065.r01.blur+orig.HEAD pb03.tb0065.r02.blur+orig.HEAD pb03.tb0065.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.0 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0065+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0065_REML+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0065+orig -expr c*a/b -prefix TSNR.tb0065
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0065_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0065+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 56976 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.15216
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0065.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0065+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0065+orig[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56976
[7m*+ WARNING:[0m removed 109 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.26 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0065+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0065+orig[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56976
[7m*+ WARNING:[0m removed 109 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.86 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0065+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0065+orig[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56976
[7m*+ WARNING:[0m removed 109 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.25 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 10.2134 9.57504 10.0219 9.93312
average errts FWHM blurs: 10.2134 9.57504 10.0219 9.93312
echo 10.2134 9.57504 10.0219 9.93312   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.513191 7.18047 12.6843 17.1187
average errts ACF blurs: 0.513191 7.18047 12.6843 17.1187
echo 0.513191 7.18047 12.6843 17.1187   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0065+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0065_REML+orig[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56976
[7m*+ WARNING:[0m removed 109 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.20 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0065+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0065_REML+orig[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56976
[7m*+ WARNING:[0m removed 109 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.76 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0065+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0065_REML+orig[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56976
[7m*+ WARNING:[0m removed 109 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.14 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 10.1893 9.5456 9.98648 9.90346
average err_reml FWHM blurs: 10.1893 9.5456 9.98648 9.90346
echo 10.1893 9.5456 9.98648 9.90346   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.506815 7.12996 12.7192 17.0565
average err_reml ACF blurs: 0.506815 7.12996 12.7192 17.0565
echo 0.506815 7.12996 12.7192 17.0565   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0065.1D
3dClustSim -both -mask full_mask.tb0065+orig -acf 0.506815 7.12996 12.7192 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 56976 voxels in mask (13.37% of total)
++ Kernel function radius = 40.77 mm
++ ACF(0.51,7.13,12.72) => FWHM=17.06 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 478.9 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0065+orig stats.tb0065_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0065+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0065_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0065 -dsets pb00.tb0065.r01.tcat+orig.HEAD pb00.tb0065.r02.tcat+orig.HEAD pb00.tb0065.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0065.r01.blur+orig.BRIK rm.pb03.tb0065.r01.blur+orig.HEAD rm.pb03.tb0065.r02.blur+orig.BRIK rm.pb03.tb0065.r02.blur+orig.HEAD rm.pb03.tb0065.r03.blur+orig.BRIK rm.pb03.tb0065.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0065.txt
./@ss_review_basic

subject ID                : tb0065
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0065+orig.HEAD
final stats dset          : stats.tb0065_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 0
average motion (per TR)   : 0.0260736
average censored motion   : 0.0260736
max motion displacement   : 1.98169
max censored displacement : 1.98169
outlier limit             : 0.1
average outlier frac (TR) : 0.00155824
num TRs above out limit   : 0

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 150 150 150
num TRs per run (censored): 0 0 0
fraction censored per run : 0 0 0
TRs total (uncensored)    : 450
TRs total                 : 450
degrees of freedom used   : 24
degrees of freedom left   : 426

TRs censored              : 0
censor fraction           : 0.000000
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 0 0 0 0 0 0
fraction TRs censored     : 0.000 0.000 0.000 0.000 0.000 0.000
ave mot per sresp (orig)  : 0.020753 0.025662 0.026821 0.019955 0.024888 0.024023
ave mot per sresp (cens)  : 0.020753 0.025662 0.026821 0.019955 0.024888 0.024023

TSNR average              : 318.89
global correlation (GCOR) : 0.15216
anat/EPI mask Dice coef   : 0.885257
maximum F-stat (masked)   : 23.6629
blur estimates (ACF)      : 0.506815 7.12996 12.7192
blur estimates (FWHM)     : 10.1893 9.5456 9.98648


cd ..
echo execution finished: `date`
date
execution finished: Tue Aug  8 18:20:31 EDT 2017
