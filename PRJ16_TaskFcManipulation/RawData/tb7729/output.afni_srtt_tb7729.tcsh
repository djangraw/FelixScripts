echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb7729
endif
set output_dir = tb7729.srtt
if ( -d tb7729.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb7729.srtt
mkdir tb7729.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb7729.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb7729.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb7729.srtt/pb00.tb7729.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.8 s
3dTcat -prefix tb7729.srtt/pb00.tb7729.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.9 s
3dTcat -prefix tb7729.srtt/pb00.tb7729.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.8 s
set tr_counts = ( 150 150 150 )
cd tb7729.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7729.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7729.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7729.r01.tcat+orig.BRIK is 9.099994 degrees from plumb.
++ 25102 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7729.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7729.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7729.r02.tcat+orig.BRIK is 9.099994 degrees from plumb.
++ 25154 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7729.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7729.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7729.r03.tcat+orig.BRIK is 9.099994 degrees from plumb.
++ 25075 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb7729.r01.tshift -tpattern alt+z2 pb00.tb7729.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7729.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7729.r01.tcat+orig.BRIK is 9.099994 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb7729.r02.tshift -tpattern alt+z2 pb00.tb7729.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7729.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7729.r02.tcat+orig.BRIK is 9.099994 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb7729.r03.tshift -tpattern alt+z2 pb00.tb7729.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7729.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7729.r03.tcat+orig.BRIK is 9.099994 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb7729.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 9.099994 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 395.101196
 + Used gradual clip level = 358.562805 .. 435.078796
 + Number voxels above clip level = 25874
 + Clustering voxels ...
 + Largest cluster has 25578 voxels
 + Clustering voxels ...
 + Largest cluster has 24809 voxels
 + Filled   236 voxels in small holes; now have 25045 voxels
 + Clustering voxels ...
 + Largest cluster has 25045 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 106027 voxels
 + Mask now has 25045 voxels
++ 25045 voxels in the mask [out of 131072: 19.11%]
++ first  14 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 963.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/963.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 9.099994 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 9.099994 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1328199 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 25045 voxels [15.7%] in weight mask
++ Number of points for matching = 25045
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.068 28.582 20.152 (index)
 + source center of mass = 86.190 160.964 178.923 (index)
 + source-target CM = -0.462 -0.752 -6.518 (xyz)
 + center of mass shifts = -0.462 -0.752 -6.518
++ shift param auto-range: -70.0..69.1 -70.3..68.8 -55.3..42.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.462440 .. 9.537560
 + Range param#2 [y-shift] = -10.751976 .. 9.248024
 + Range param#3 [z-shift] = -16.517662 .. 3.482338
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.462440 .. 39.537560
 + Range param#2 [y-shift] = -40.751976 .. 39.248024
 + Range param#3 [z-shift] = -46.517662 .. 33.482338
 + 12 free parameters
++ Normalized convergence radius = 0.000472
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1328199 [out of 15212736] voxels
 + base mask has 34949 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=67 usiz=186
 + - copying weight image
 + - using 25045 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 21690 total points stored in 205 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#o*[#2=-0.0328519] *--+o.-+*[#28=-0.0421955] *-.+.o.+$+...-.
 + - best 45 costs found:
    0 v=-0.042196: -13.80 -14.09   6.82 -15.00 -15.00  15.00  [grid]
    1 v=-0.038892: -13.80 -27.42   6.82 -15.00 -30.00  15.00  [grid]
    2 v=-0.038711: -10.29 -25.51   4.87  -3.10 -34.36   2.55  [rand]
    3 v=-0.037006:   3.62  -6.98   1.28  -4.32 -22.85 -18.95  [rand]
    4 v=-0.035212:  34.39 -36.43   7.73  40.22 -24.26 -41.52  [rand]
    5 v=-0.035204: -27.13 -27.42  20.15 -15.00 -15.00  30.00  [grid]
    6 v=-0.035019:  19.03  15.92  -9.12  30.54 -19.59 -20.03  [rand]
    7 v=-0.034589:  23.74   9.59  -1.99  27.51 -29.30 -27.65  [rand]
    8 v=-0.033226:   9.86 -29.56   8.49 -30.67 -17.79 -20.52  [rand]
    9 v=-0.033189: -10.29 -25.51   4.87  -3.10 -34.36  -2.55  [rand]
   10 v=-0.032852: -13.80  12.58   6.82  15.00  15.00  15.00  [grid]
   11 v=-0.032068: -13.80 -14.09   6.82  30.00 -15.00  15.00  [grid]
   12 v=-0.030905:  -9.10  19.68  10.95 -25.20  18.50  13.54  [rand]
   13 v=-0.030556:   3.62   5.47   1.28   4.32 -22.85 -18.95  [rand]
   14 v=-0.029935: -27.13 -14.09  20.15 -15.00 -15.00  30.00  [grid]
   15 v=-0.029332: -16.45 -20.24 -12.24 -20.53  -3.14  10.08  [rand]
   16 v=-0.029256: -13.80  12.58   6.82 -15.00  15.00  15.00  [grid]
   17 v=-0.029135:  -4.54   5.47   1.28  -4.32  22.85 -18.95  [rand]
   18 v=-0.029090:   3.62   5.47   1.28  -4.32 -22.85 -18.95  [rand]
   19 v=-0.028941:  11.14   3.81  -2.62  24.53 -29.49 -26.10  [rand]
   20 v=-0.028833: -32.30  11.04  -3.78 -23.31   3.26  40.47  [rand]
   21 v=-0.028754: -13.80 -27.42   6.82  30.00 -30.00  15.00  [grid]
   22 v=-0.028465:   5.35 -14.94  23.12  38.21 -15.41 -13.51  [rand]
   23 v=-0.028410: -27.13 -14.09  20.15 -30.00 -15.00  30.00  [grid]
   24 v=-0.028069: -10.29 -25.51   4.87   3.10 -34.36   2.55  [rand]
   25 v=-0.027749: -14.49 -16.47   8.15 -24.25 -37.55   4.41  [rand]
   26 v=-0.027708:  26.20  12.58   6.82 -15.00  15.00 -30.00  [grid]
   27 v=-0.027338: -24.66   9.59  -1.99 -27.51 -29.30  27.65  [rand]
   28 v=-0.027255:  19.03  15.92  -3.92  30.54 -19.59 -20.03  [rand]
   29 v=-0.026772: -13.80 -14.09   6.82 -30.00 -15.00  15.00  [grid]
   30 v=-0.026765: -29.48 -27.89  27.09  -7.44 -27.42  25.63  [rand]
   31 v=-0.026718: -27.13 -14.09   6.82 -15.00 -15.00  15.00  [grid]
   32 v=-0.026595: -27.13  12.58   6.82  30.00  15.00  30.00  [grid]
   33 v=-0.026405: -13.80  12.58   6.82  30.00  15.00  15.00  [grid]
   34 v=-0.026317: -27.13 -27.42  20.15 -30.00 -15.00  30.00  [grid]
   35 v=-0.026312: -35.32 -36.43   7.73 -40.22 -24.26  41.52  [rand]
   36 v=-0.026156:  26.20 -14.09  20.15  30.00 -15.00 -30.00  [grid]
   37 v=-0.026106: -32.30  11.04  -9.26 -23.31   3.26  40.47  [rand]
   38 v=-0.026042:  23.74   9.59 -11.04  27.51 -29.30 -27.65  [rand]
   39 v=-0.025485: -27.13 -14.09  20.15 -30.00 -30.00  30.00  [grid]
   40 v=-0.025334: -32.30  11.04  -3.78  23.31   3.26  40.47  [rand]
   41 v=-0.025015: -12.06   3.81 -10.41  24.53 -29.49  26.10  [rand]
   42 v=-0.024983: -21.44 -29.13  25.73  -3.65 -28.33  14.78  [rand]
   43 v=-0.024862:   8.18  19.68  10.95  25.20  18.50 -13.54  [rand]
   44 v=-0.024816: -13.80 -14.09   6.82  30.00 -30.00  15.00  [grid]
*[#8005=-0.0553301] *[#8010=-0.0828906] *[#8012=-0.0885053] *[#8020=-0.090865] *[#8021=-0.0915504] *[#8023=-0.0932039] *[#8024=-0.0949002] *[#8027=-0.0960362] *[#8030=-0.0963697] *[#8031=-0.0969081] *[#8036=-0.0977004]  + - costs of the above after a little optimization:
  * 0 v=-0.097700: -13.41 -13.78   6.47  -8.69 -15.96   8.79  [grid]
    1 v=-0.083987: -15.85 -26.27   5.90 -11.03 -27.20  10.32  [grid]
    2 v=-0.084749:  -8.16 -28.46   7.93  -8.60 -27.38   1.88  [rand]
    3 v=-0.061250:   1.02  -5.17  -2.08  -5.68 -24.41 -23.16  [rand]
    4 v=-0.046626:  34.34 -37.12   6.69  35.18 -25.53 -44.99  [rand]
    5 v=-0.037242: -27.22 -26.78  19.10 -16.38 -16.55  29.46  [grid]
    6 v=-0.039858:  14.39  16.13  -8.19  31.03 -19.27 -17.96  [rand]
    7 v=-0.041075:  21.43   8.40  -3.22  27.41 -29.46 -26.32  [rand]
    8 v=-0.041636:   7.78 -29.97   8.33 -31.55 -17.89 -21.28  [rand]
    9 v=-0.051851:  -5.88 -26.54   5.05  -2.80 -33.97  -4.04  [rand]
   10 v=-0.048272: -12.78  11.75   6.66  25.42  12.35   9.34  [grid]
   11 v=-0.038360: -12.52 -14.15   4.62  30.24 -16.09  14.65  [grid]
   12 v=-0.047895:  -4.13  18.03   9.08 -26.90  17.12  10.61  [rand]
   13 v=-0.060950:  -0.35   0.04  -1.52   2.06 -26.95 -18.90  [rand]
   14 v=-0.044561: -25.54 -13.89  19.05 -13.44  -8.55  30.14  [grid]
   15 v=-0.034513: -15.67 -19.64 -12.86 -19.94  -0.50  10.55  [rand]
   16 v=-0.041891: -11.43  18.34   6.81 -14.41  12.95  14.51  [grid]
   17 v=-0.031209:  -4.83   6.03   1.88  -5.33  22.92 -18.21  [rand]
   18 v=-0.037387:   3.11   4.24   0.62  -3.19 -23.69 -14.94  [rand]
   19 v=-0.033897:   8.32   2.98  -2.73  24.55 -29.81 -26.20  [rand]
   20 v=-0.031490: -32.30   6.85  -3.32 -23.12   3.52  40.32  [rand]
   21 v=-0.050542: -11.68 -24.87   4.44  29.45 -31.74  13.30  [grid]
   22 v=-0.036482:   6.59 -14.49  22.99  42.08 -16.39 -13.86  [rand]
   23 v=-0.040215: -26.65 -16.20  20.06 -17.14 -11.77  29.62  [grid]
   24 v=-0.087055:  -3.68 -31.58   4.53  -4.72 -29.19  -2.02  [rand]
   25 v=-0.050085: -11.99 -16.93   5.75 -26.53 -25.93   2.86  [rand]
   26 v=-0.038673:  25.98  11.32   6.75 -17.64  14.83 -33.05  [grid]
   27 v=-0.034752: -21.24   9.50  -1.77 -27.35 -29.45  28.01  [rand]
   28 v=-0.031483:  18.57  20.24  -3.71  30.45 -19.68 -20.06  [rand]
   29 v=-0.038914: -15.03 -14.59   3.14 -33.31 -14.88  11.79  [grid]
   30 v=-0.033205: -28.82 -26.91  24.34  -7.80 -29.64  23.01  [rand]
   31 v=-0.081548: -17.01 -12.66   4.41 -11.46 -13.79  11.53  [grid]
   32 v=-0.035581: -27.22   9.34   6.08  30.72  14.40  30.32  [grid]
   33 v=-0.050076: -14.74  11.40   7.34  26.64  12.95  11.97  [grid]
   34 v=-0.034657: -28.31 -26.96  21.08 -23.75 -15.05  30.58  [grid]
   35 v=-0.037870: -34.93 -31.19  10.39 -42.30 -22.57  40.33  [rand]
   36 v=-0.033826:  26.03 -14.72  20.03  30.68 -11.07 -29.79  [grid]
   37 v=-0.035866: -33.27  11.11  -9.35 -22.88   3.82  44.94  [rand]
   38 v=-0.029144:  24.31   7.63  -9.87  29.09 -24.55 -26.48  [rand]
   39 v=-0.037810: -27.18 -13.35  20.65 -29.82 -23.53  29.35  [grid]
   40 v=-0.040109: -30.76   8.90  -6.67  28.85   4.26  42.36  [rand]
   41 v=-0.044635:  -6.35   4.57 -11.95  23.68 -29.29  17.83  [rand]
   42 v=-0.038349: -20.89 -22.93  27.08  -6.28 -33.23  15.69  [rand]
   43 v=-0.060810:   7.36  16.38   4.21  37.81  10.92 -11.35  [rand]
   44 v=-0.037593: -13.21 -20.78   5.03  28.39 -28.56  16.38  [grid]
 + - save # 0 for twobest
 + - save #24 for twobest
 + - save # 2 for twobest
 + - save # 1 for twobest
 + - skip #31 for twobest: too close to set # 0
 + - save # 3 for twobest
 + - save #13 for twobest
 + - save #43 for twobest
 + - save # 9 for twobest
 + - save #21 for twobest
 + - save #25 for twobest
 + - save #33 for twobest
 + - skip #10 for twobest: too close to set #33
 + - save #12 for twobest
 + - save # 4 for twobest
 + - save #41 for twobest
 + - save #14 for twobest
 + - save #16 for twobest
 + - save # 8 for twobest
 + - save # 7 for twobest
 + - skip #23 for twobest: too close to set #14
 + - save #40 for twobest
 + - save # 6 for twobest
 + - save #29 for twobest
 + - save #26 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=67 usiz=186
 + - retaining old weight image
 + - using 25045 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 21759 total points stored in 220 'RHDD(13.7332)' bloks
*[#9678=-0.0985199] *[#9679=-0.0996233] *[#9681=-0.100046] *[#9682=-0.100175] *[#9683=-0.100669] *[#9684=-0.101373] *[#9687=-0.101832] *[#9688=-0.10219] *[#9690=-0.102736] *[#9691=-0.103637] *[#9692=-0.105431] *[#9693=-0.109134] *[#9694=-0.109425] *[#9696=-0.112962] *[#9697=-0.11594] *[#9702=-0.116259] *[#9703=-0.116405] *[#9705=-0.117737] *[#9706=-0.118561] *[#9707=-0.119097] *[#9709=-0.119738] *[#9710=-0.120856] *[#9711=-0.122667] *[#9712=-0.123991] *[#9714=-0.124216] *[#9715=-0.124771] *[#9717=-0.125222] *[#9720=-0.125653] *[#9721=-0.125877] *[#9722=-0.125971] *[#9724=-0.12708] *[#9725=-0.129221] *[#9727=-0.130091] *[#9729=-0.1304] *[#9730=-0.130781] *[#9731=-0.130812] *[#9732=-0.131025] *[#9734=-0.131319] *[#9736=-0.131404] *[#9737=-0.131788] *[#9738=-0.132115] *[#9739=-0.132489] *[#9740=-0.13295] *[#9743=-0.13327] *[#9744=-0.133788] *[#9745=-0.134517] 
 + - param set #1 has cost=-0.134517
 + -- Parameters = -7.6632 -11.9911 5.0166 -6.5147 -13.4230 3.7302 0.9993 1.0084 1.0292 0.0025 0.0125 0.0092
 + - param set #2 has cost=-0.080140
 + -- Parameters = -4.4352 -31.2973 4.4461 -4.8639 -31.4634 -4.2023 1.0035 1.0043 1.0030 -0.0007 0.0022 0.0110
 + - param set #3 has cost=-0.111750
 + -- Parameters = -7.1955 -14.8549 7.2601 -7.2333 -19.1879 0.0964 1.0189 1.0264 0.9720 -0.1031 0.0170 0.0192
 + - param set #4 has cost=-0.077874
 + -- Parameters = -15.9084 -26.1578 5.7058 -10.6559 -26.9950 10.2865 1.0179 1.0038 1.0009 0.0005 0.0016 -0.0006
 + - param set #5 has cost=-0.052774
 + -- Parameters = 1.7514 -4.5141 -1.7793 -6.4208 -24.0922 -22.8473 1.0027 1.0002 1.0012 0.0105 -0.0010 -0.0010
 + - param set #6 has cost=-0.054883
 + -- Parameters = -0.1938 -1.9982 -2.4947 -6.8459 -26.1423 -20.5300 1.0205 1.0115 0.9923 0.0039 -0.0033 -0.0025
 + - param set #7 has cost=-0.046145
 + -- Parameters = 6.4469 15.4739 3.3386 38.3987 11.2782 -11.1887 1.0022 0.9997 1.0019 0.0025 0.0020 0.0092
 + - param set #8 has cost=-0.079438
 + -- Parameters = -3.1779 -31.0376 5.5940 -5.7059 -31.8297 -6.3236 0.9950 1.0101 0.9887 0.0257 -0.0011 -0.0057
 + - param set #9 has cost=-0.036115
 + -- Parameters = -11.5959 -24.9467 4.4638 29.5784 -32.1271 13.8853 0.9989 0.9979 0.9970 0.0016 0.0099 -0.0001
 + - param set #10 has cost=-0.039486
 + -- Parameters = -11.7695 -16.5516 5.5503 -26.8120 -26.0457 2.3889 0.9980 0.9984 1.0007 -0.0001 0.0016 0.0004
 + - param set #11 has cost=-0.032776
 + -- Parameters = -14.7154 11.3951 7.3086 26.5813 12.8985 11.9978 0.9998 0.9996 1.0002 0.0007 0.0003 -0.0002
*[#10455=-0.202144] *[#10470=-0.240592] *[#10473=-0.347242] *[#10474=-0.393042] *[#10478=-0.407994] *[#10479=-0.418528] *[#10481=-0.420825] *[#10488=-0.428014] *[#10489=-0.430653] *[#10490=-0.435155] *[#10491=-0.443478] *[#10492=-0.457158] *[#10493=-0.458644] *[#10497=-0.462448] *[#10502=-0.462613] *[#10504=-0.467867] *[#10505=-0.471064] *[#10508=-0.474403] *[#10509=-0.47601] *[#10511=-0.477108] *[#10512=-0.478903] *[#10514=-0.479778] *[#10516=-0.481886] *[#10519=-0.483916] *[#10524=-0.484337] *[#10527=-0.484446] *[#10533=-0.484569] 
 + - param set #12 has cost=-0.484569
 + -- Parameters = 0.0426 -3.3616 -1.4024 0.4036 -2.9982 0.2716 1.0017 1.0113 1.0040 0.0019 0.0025 0.0052
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.116 
 + --- dist(#3,#1) = 0.473 
 + --- dist(#4,#1) = 0.349 
 + --- dist(#5,#1) = 0.346 
 + --- dist(#6,#1) = 0.285 
 + --- dist(#7,#1) = 0.257 
 + --- dist(#8,#1) = 0.257 
 + --- dist(#9,#1) = 0.422 
 + --- dist(#10,#1) = 0.302 
 + --- dist(#11,#1) = 0.324 
 + --- dist(#12,#1) = 0.291 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=67 usiz=186
 + - retaining old weight image
 + - using 25045 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 21955 total points stored in 228 'RHDD(13.5933)' bloks
*[#10535=-0.500341] *[#10554=-0.504812] *[#10556=-0.506329] *[#10559=-0.506848] *[#10561=-0.506898] *[#10562=-0.507302] *[#10565=-0.507695] *[#10569=-0.508243] *[#10570=-0.508697] *[#10575=-0.508813] *[#10576=-0.509012] *[#10577=-0.509331] *[#10578=-0.509549] *[#10579=-0.509808] *[#10580=-0.509971] *[#10583=-0.510282] *[#10584=-0.510649] *[#10585=-0.511053] *[#10588=-0.511589] *[#10589=-0.511848] *[#10590=-0.512187] *[#10591=-0.512415] *[#10592=-0.51252] *[#10593=-0.512672] *[#10594=-0.512981] *[#10595=-0.51344] *[#10596=-0.514164] *[#10597=-0.514582] *[#10599=-0.51473] *[#10600=-0.515926] *[#10603=-0.516068] *[#10604=-0.516652] *[#10605=-0.517018] *[#10606=-0.518425] *[#10615=-0.51872] *[#10618=-0.518863] *[#10619=-0.51904] *[#10623=-0.519142] *[#10624=-0.519578] *[#10625=-0.519822] *[#10626=-0.519829] *[#10627=-0.519886] *[#10628=-0.520201] *[#10629=-0.520347] *[#10630=-0.520605] *[#10631=-0.520844] *[#10632=-0.521061] 
 + - param set #1 has cost=-0.521061
 + -- Parameters = 0.0599 -3.0506 -1.4658 0.2348 -4.3813 0.4504 1.0002 1.0239 0.9885 0.0055 -0.0014 -0.0180
 + - param set #2 has cost=-0.125106
 + -- Parameters = -6.0041 -11.0310 4.6498 -5.0192 -13.3665 3.0782 1.0041 1.0256 1.0221 0.0184 0.0244 0.0069
 + - param set #3 has cost=-0.096959
 + -- Parameters = -7.0251 -13.7988 6.4049 -6.7022 -18.1396 0.6026 1.0141 1.0274 0.9529 -0.1034 0.0282 0.0141
 + - param set #4 has cost=-0.062610
 + -- Parameters = -3.6178 -31.2432 5.2428 -5.7045 -31.3142 -3.5932 1.0055 1.0201 1.0034 -0.0039 0.0023 0.0104
 + - param set #5 has cost=-0.064541
 + -- Parameters = -3.4723 -31.5610 4.8028 -6.3266 -31.6781 -5.0230 0.9808 1.0177 0.9973 0.0186 -0.0081 -0.0093
 + - param set #6 has cost=-0.062786
 + -- Parameters = -15.9885 -26.0775 5.6556 -10.6914 -27.0049 10.2697 1.0192 1.0038 1.0006 0.0007 0.0017 -0.0008
 + - param set #7 has cost=-0.046161
 + -- Parameters = 0.2297 -2.0156 -2.4537 -6.7576 -26.3574 -19.9412 1.0285 1.0088 1.0001 0.0071 -0.0086 0.0082
 + - param set #8 has cost=-0.046408
 + -- Parameters = 1.8752 -4.2810 -2.4542 -8.8937 -24.1071 -23.9365 1.0069 1.0052 1.0080 0.0119 -0.0011 -0.0019
 + - param set #9 has cost=-0.038885
 + -- Parameters = 6.2898 15.5341 2.8637 38.3978 11.2703 -11.2721 1.0023 0.9986 1.0086 0.0044 0.0030 0.0071
 + - param set #10 has cost=-0.033938
 + -- Parameters = -12.5904 -15.3192 8.1637 -26.4245 -26.1711 2.5832 0.9979 0.9960 0.9928 -0.0013 0.0061 0.0010
 + - param set #11 has cost=-0.026944
 + -- Parameters = -11.6203 -24.7831 4.2682 29.4697 -32.0179 13.8238 0.9981 0.9979 0.9967 0.0010 0.0098 -0.0001
 + - param set #12 has cost=-0.025351
 + -- Parameters = -14.7106 11.4418 7.2894 26.5677 12.8604 11.9721 0.9997 0.9995 1.0004 0.0007 0.0008 -0.0003
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.116 
 + --- dist(#3,#1) = 0.49 
 + --- dist(#4,#1) = 0.356 
 + --- dist(#5,#1) = 0.288 
 + --- dist(#6,#1) = 0.352 
 + --- dist(#7,#1) = 0.271 
 + --- dist(#8,#1) = 0.244 
 + --- dist(#9,#1) = 0.424 
 + --- dist(#10,#1) = 0.296 
 + --- dist(#11,#1) = 0.325 
 + --- dist(#12,#1) = 0.293 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=67 usiz=186
 + - retaining old weight image
 + - using 25045 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 21989 total points stored in 234 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.515633
 + -- Parameters = 0.0843 -3.3906 -1.5810 0.3592 -4.7459 0.3906 1.0018 1.0085 0.9977 0.0021 0.0001 -0.0316
 + - param set #2 has cost=-0.125265
 + -- Parameters = -5.2399 -10.3058 2.5599 -4.4092 -10.3355 2.8527 0.9787 0.9904 1.0171 0.0189 0.0193 0.0041
 + - param set #3 has cost=-0.095941
 + -- Parameters = -6.8239 -13.0144 6.0103 -6.9568 -17.6915 1.6016 0.9898 0.9977 0.9682 -0.0959 0.0295 -0.0168
 + - param set #4 has cost=-0.059285
 + -- Parameters = -3.1283 -31.5918 5.1791 -6.7116 -31.6105 -4.6118 0.9814 1.0200 0.9841 -0.0004 -0.0175 -0.0090
 + - param set #5 has cost=-0.053350
 + -- Parameters = -15.6161 -24.5938 5.5614 -10.3669 -27.4204 10.0295 1.0476 0.9986 0.9945 -0.0032 0.0009 0.0026
 + - param set #6 has cost=-0.055914
 + -- Parameters = -3.5149 -31.2834 5.3978 -5.6458 -31.1130 -3.4591 0.9992 1.0200 1.0050 -0.0048 0.0021 0.0094
 + - param set #7 has cost=-0.041311
 + -- Parameters = 2.0861 -4.3904 -2.2731 -8.7893 -24.1869 -23.9604 1.0110 1.0045 1.0171 0.0116 -0.0060 -0.0064
 + - param set #8 has cost=-0.037282
 + -- Parameters = 0.3285 -2.1245 -2.0063 -6.6668 -26.3913 -19.8215 1.0268 1.0083 1.0060 0.0073 -0.0089 0.0077
 + - param set #9 has cost=-0.031207
 + -- Parameters = 6.3695 15.4642 2.7890 38.4739 11.3003 -11.2141 1.0022 0.9990 1.0083 0.0042 0.0033 0.0072
 + - param set #10 has cost=-0.040008
 + -- Parameters = -13.7844 -12.2740 9.1195 -24.5094 -26.5065 2.6543 0.9989 0.9959 0.9846 -0.0030 0.0040 -0.0038
 + - param set #11 has cost=-0.026498
 + -- Parameters = -10.8370 -25.1802 3.1175 30.2673 -31.6946 14.3557 0.9971 0.9983 0.9964 0.0002 0.0116 -0.0033
 + - param set #12 has cost=-0.023012
 + -- Parameters = -14.5353 11.2333 6.6338 27.0347 10.6278 11.8052 0.9916 0.9989 1.0030 -0.0019 0.0005 -0.0010
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.161 
 + --- dist(#3,#1) = 0.441 
 + --- dist(#4,#1) = 0.353 
 + --- dist(#5,#1) = 0.349 
 + --- dist(#6,#1) = 0.265 
 + --- dist(#7,#1) = 0.271 
 + --- dist(#8,#1) = 0.276 
 + --- dist(#9,#1) = 0.241 
 + --- dist(#10,#1) = 0.423 
 + --- dist(#11,#1) = 0.332 
 + --- dist(#12,#1) = 0.296 
 + - Total coarse refinement net CPU time = 0.0 s; 2980 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=67 usiz=186
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 21913 total points stored in 233 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.488382 *
 + -- Parameters = 0.0843 -3.3906 -1.5810 0.3592 -4.7459 0.3906 1.0018 1.0085 0.9977 0.0021 0.0001 -0.0316
 + - cost(#2)=-0.112661  
 + -- Parameters = -5.2399 -10.3058 2.5599 -4.4092 -10.3355 2.8527 0.9787 0.9904 1.0171 0.0189 0.0193 0.0041
 + - cost(#3)=-0.088786  
 + -- Parameters = -6.8239 -13.0144 6.0103 -6.9568 -17.6915 1.6016 0.9898 0.9977 0.9682 -0.0959 0.0295 -0.0168
 + - cost(#4)=-0.054995  
 + -- Parameters = -3.1283 -31.5918 5.1791 -6.7116 -31.6105 -4.6118 0.9814 1.0200 0.9841 -0.0004 -0.0175 -0.0090
 + - cost(#5)=-0.052020  
 + -- Parameters = -3.5149 -31.2834 5.3978 -5.6458 -31.1130 -3.4591 0.9992 1.0200 1.0050 -0.0048 0.0021 0.0094
 + - cost(#6)=-0.048665  
 + -- Parameters = -15.6161 -24.5938 5.5614 -10.3669 -27.4204 10.0295 1.0476 0.9986 0.9945 -0.0032 0.0009 0.0026
 + - cost(#7)=-0.036381  
 + -- Parameters = 2.0861 -4.3904 -2.2731 -8.7893 -24.1869 -23.9604 1.0110 1.0045 1.0171 0.0116 -0.0060 -0.0064
 + - cost(#8)=-0.035139  
 + -- Parameters = -13.7844 -12.2740 9.1195 -24.5094 -26.5065 2.6543 0.9989 0.9959 0.9846 -0.0030 0.0040 -0.0038
 + - cost(#9)=-0.034077  
 + -- Parameters = 0.3285 -2.1245 -2.0063 -6.6668 -26.3913 -19.8215 1.0268 1.0083 1.0060 0.0073 -0.0089 0.0077
 + - cost(#10)=-0.028660  
 + -- Parameters = 6.3695 15.4642 2.7890 38.4739 11.3003 -11.2141 1.0022 0.9990 1.0083 0.0042 0.0033 0.0072
 + - cost(#11)=-0.021420  
 + -- Parameters = -10.8370 -25.1802 3.1175 30.2673 -31.6946 14.3557 0.9971 0.9983 0.9964 0.0002 0.0116 -0.0033
 + - cost(#12)=-0.019821  
 + -- Parameters = -14.5353 11.2333 6.6338 27.0347 10.6278 11.8052 0.9916 0.9989 1.0030 -0.0019 0.0005 -0.0010
 + - cost(#13)=-0.067854  
 + -- Parameters = -0.4624 -0.7520 -6.5177 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.491511 *
 + -- Parameters = 0.0768 -3.3542 -1.4975 0.3408 -5.1540 0.2246 1.0021 1.0091 0.9964 0.0007 0.0023 -0.0381
 + - cost(#2)=-0.389156  
 + -- Parameters = -0.1477 -3.2533 -0.8472 -0.5853 -5.6520 -0.0776 0.9831 1.0456 1.0291 -0.0242 0.0075 -0.0396
 + - cost(#3)=-0.090994  
 + -- Parameters = -6.7886 -12.3122 5.6386 -6.6711 -16.9200 2.0980 0.9936 0.9989 0.9732 -0.0925 0.0303 -0.0128
 + - cost(#4)=-0.055953  
 + -- Parameters = -3.1990 -31.4311 5.3518 -6.6132 -31.8219 -4.4062 0.9876 1.0271 0.9854 -0.0043 -0.0147 -0.0108
 + - cost(#5)=-0.054968  
 + -- Parameters = -3.7848 -31.1621 5.9748 -5.9572 -30.8091 -2.8352 1.0052 1.0126 0.9822 -0.0114 -0.0146 0.0161
 + - cost(#6)=-0.056124  
 + -- Parameters = -13.0801 -20.5082 8.7187 -9.3764 -27.4571 8.3700 1.0410 1.0090 0.9938 -0.0100 0.0053 0.0055
 + - cost(#7)=-0.037719  
 + -- Parameters = 2.6377 -3.6594 -2.0410 -9.5320 -23.6982 -23.9999 1.0233 1.0070 1.0251 0.0137 -0.0038 -0.0086
 + - cost(#8)=-0.037913  
 + -- Parameters = -13.9286 -11.5845 8.5259 -24.3248 -25.1696 2.1609 1.0059 0.9981 0.9706 0.0006 0.0066 -0.0071
 + - cost(#9)=-0.034659  
 + -- Parameters = 0.1767 -2.1898 -2.1776 -6.4860 -26.3424 -19.6523 1.0258 1.0076 1.0069 0.0075 -0.0081 0.0031
 + - cost(#10)=-0.029704  
 + -- Parameters = 5.4904 16.6438 2.2079 38.1049 12.1123 -11.1204 1.0044 0.9981 1.0076 0.0065 0.0037 0.0086
 + - cost(#11)=-0.022195  
 + -- Parameters = -10.5766 -24.9890 3.0630 30.5074 -31.4366 14.4634 0.9965 1.0007 0.9955 0.0010 0.0126 0.0014
 + - cost(#12)=-0.028245  
 + -- Parameters = -10.5311 11.5431 5.8473 27.1250 11.2305 4.6349 0.9782 0.9893 1.0390 0.0004 0.0002 0.0121
 + - cost(#13)=-0.476297  
 + -- Parameters = 0.0166 -3.1983 -1.2602 0.3717 -3.6615 0.3587 1.0026 1.0088 1.0153 0.0027 0.0022 -0.0115
 + - case #1 is now the best
 + - Initial  cost = -0.491511
 + - Initial fine Parameters = 0.0768 -3.3542 -1.4975 0.3408 -5.1540 0.2246 1.0021 1.0091 0.9964 0.0007 0.0023 -0.0381
 + - Finalish cost = -0.493502 ; 429 funcs
 + - Final    cost = -0.493505 ; 126 funcs
 + Final fine fit Parameters:
       x-shift= 0.0643   y-shift=-3.4264   z-shift=-1.5480
       z-angle= 0.3810   x-angle=-5.7575   y-angle= 0.3053
       x-scale= 1.0027   y-scale= 1.0091   z-scale= 0.9962
     y/x-shear= 0.0028 z/x-shear= 0.0011 z/y-shear=-0.0507
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.0643 -3.4264 -1.5480 0.3810 -5.7575 0.3053 1.0027 1.0091 0.9962 0.0028 0.0011 -0.0507
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 20.4
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 9.099994 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0029 -0.9991 0.0576 242.9267 0.0066 0.1104 0.9998 83.8917 -1.0027 0.0061 0.0053 199.0411
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 16.7 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2598.140100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 90.776 47.4404   ITER = 9/137
90.776

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 825ms]
lev=0 0..171 0..213 0..166: [first cost=-0.64481] ... done [cost:-0.64481==>-0.70893]
lev=1 patch=129x161x125 [clock= 13m 49s 250ms]........:[cost=-0.73972]:........ done [cost:-0.70893==>-0.74353 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 22m 37s 618ms]......................... done [cost:-0.74353==>-0.81848 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 29m 10s 276ms]................ done [cost:-0.81848==>-0.87614 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 34m 22s 723ms]........... done [cost:-0.87614==>-0.92199 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 38m 16s 253ms]................. done [cost:-0.92199==>-0.98816 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 41m 51s 573ms].................... done [cost:-0.98816==>-1.02873 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 45m 25s 537ms].......................................... done [cost:-1.02873==>-1.10815 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 49m 7s 216ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7729/tb7729.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.1 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb7729.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 9.099994 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7729.r01.tshift+orig.BRIK is 9.099994 degrees from plumb.
++ Reading input dataset ./pb01.tb7729.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 26847 voxels
 + 4546 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.135  pitch=-2.905  yaw=-0.896  dS=-0.114  dL=-0.850  dP=-0.095
++ Mean: roll=-0.022  pitch=-1.315  yaw=-0.408  dS=+0.356  dL=-0.288  dP=+0.228
++ Max : roll=+0.256  pitch=-0.000  yaw=+0.073  dS=+0.836  dL=-0.000  dP=+0.593
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.31(0.31) 0.23(0.09) 0.17(0.11) 0.22(0.05) 0.20(0.07) 0.33(0.25) 0.36(0.13) 0.28(0.16) 0.30(0.07) 0.26(0.08) 0.28(0.09) 0.29(0.07) 0.31(0.03) 0.29(0.06) 0.24(0.06) 0.22(0.04) 0.18(0.06) 0.19(0.07) 0.23(0.07) 0.35(0.12) 0.43(0.10) 0.50(0.08) 0.55(0.06) 0.57(0.04) 0.65(0.09) 0.76(0.12) 0.83(0.08) 0.84(0.05) 0.82(0.02) 0.86(0.06) 0.89(0.06) 0.93(0.06) 0.64(0.37) 0.80(0.17) 0.88(0.14) 0.91(0.07) 0.92(0.06) 1.08(0.16) 1.14(0.07) 1.21(0.07) 1.24(0.07) 1.29(0.06) 1.38(0.09) 1.44(0.07) 1.40(0.05) 1.40(0.03) 1.42(0.04) 1.45(0.10) 1.46(0.04) 1.53(0.12) 1.49(0.09) 1.41(0.09) 1.50(0.11) 1.44(0.21) 1.48(0.10) 1.50(0.06) 1.58(0.12) 1.56(0.10) 1.54(0.08) 1.62(0.13) 1.65(0.07) 1.73(0.13) 1.80(0.08) 1.83(0.04) 1.89(0.08) 1.87(0.07) 1.92(0.08) 1.93(0.06) 1.87(0.07) 1.92(0.09) 1.99(0.08) 1.97(0.07) 1.96(0.09) 1.87(0.13) 1.92(0.08) 1.96(0.05) 2.10(0.16) 2.21(0.15) 2.23(0.06) 2.27(0.07) 2.35(0.11) 2.40(0.06) 2.41(0.05) 1.91(0.58) 2.13(0.22) 2.52(0.45) 2.56(0.07) 2.63(0.07) 2.74(0.12) 2.85(0.14) 2.95(0.12) 3.09(0.15) 3.36(0.30) 3.52(0.18) 3.51(0.14) 3.61(0.11) 3.68(0.09) 3.65(0.05) 3.71(0.07) 3.69(0.07) 3.82(0.14) 3.81(0.11) 3.87(0.09) 4.06(0.23) 4.07(0.03) 4.10(0.08) 4.19(0.10) 4.25(0.08) 4.32(0.07) 4.33(0.08) 4.26(0.10) 4.40(0.18) 4.42(0.08) 4.57(0.16) 4.66(0.12) 4.84(0.23) 4.93(0.09) 4.90(0.08) 4.95(0.12) 4.98(0.23) 5.43(0.49) 5.53(0.14) 5.52(0.13) 5.11(0.47) 5.23(0.16) 5.36(0.16) 5.20(0.22) 5.37(0.17) 5.43(0.08) 5.40(0.05) 5.37(0.07) 5.45(0.12) 5.46(0.06) 5.24(0.24) 4.76(0.52) 5.08(0.38) 5.14(0.14) 4.89(0.35) 5.02(0.23) 5.29(0.29) 5.12(0.33) 4.25(0.96) 3.75(0.51) 4.26(0.52) 4.58(0.35) 4.45(0.14) 4.52(0.12) 4.61(0.12) 4.51(0.12)
++ Max displacement in automask = 5.53 (mm) at sub-brick 122
++ Max delta displ  in automask = 0.96 (mm) at sub-brick 142
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb7729.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7729.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7729.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7729.r01.tshift+orig.BRIK is 9.099994 degrees from plumb.
++ Source dataset: ./pb01.tb7729.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 9.099994 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb7729.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 9.099994 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7729.r02.tshift+orig.BRIK is 9.099994 degrees from plumb.
++ Reading input dataset ./pb01.tb7729.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 26936 voxels
 + 4621 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.190  pitch=-0.401  yaw=-0.742  dS=-0.653  dL=-0.031  dP=-0.888
++ Mean: roll=+0.265  pitch=+0.310  yaw=-0.025  dS=-0.173  dL=+0.348  dP=-0.425
++ Max : roll=+0.397  pitch=+1.883  yaw=+0.328  dS=+0.675  dL=+0.511  dP=-0.157
++ Max displacements (mm) for each sub-brick:
 2.56(0.00) 3.59(1.26) 3.32(0.27) 3.05(0.32) 2.82(0.57) 2.46(0.60) 2.41(0.11) 2.65(0.26) 2.65(0.04) 2.69(0.10) 2.73(0.06) 2.68(0.08) 2.58(0.11) 2.53(0.10) 2.41(0.14) 2.44(0.05) 2.42(0.05) 2.20(0.25) 2.20(0.07) 2.22(0.04) 2.19(0.06) 2.16(0.08) 2.13(0.09) 2.07(0.07) 1.96(0.18) 1.88(0.13) 1.78(0.11) 1.77(0.07) 1.89(0.15) 1.95(0.09) 1.89(0.11) 1.86(0.06) 1.85(0.06) 1.80(0.06) 1.81(0.06) 1.74(0.16) 1.66(0.09) 1.67(0.06) 1.63(0.13) 1.59(0.09) 1.54(0.06) 1.37(0.18) 1.20(0.25) 1.05(0.26) 1.03(0.11) 1.05(0.15) 1.02(0.10) 1.07(0.09) 1.09(0.05) 1.07(0.09) 1.09(0.19) 1.12(0.16) 1.02(0.12) 0.99(0.11) 1.00(0.20) 1.02(0.24) 1.03(0.17) 1.00(0.15) 1.00(0.12) 1.07(0.21) 1.15(0.78) 1.15(0.12) 1.10(0.34) 1.14(0.06) 1.11(0.07) 1.09(0.11) 1.12(0.12) 1.16(0.14) 1.18(0.10) 1.14(0.14) 1.11(0.10) 1.17(0.16) 1.18(0.03) 1.18(0.07) 1.17(0.05) 1.17(0.07) 1.12(0.13) 1.11(0.08) 1.11(0.08) 1.04(0.10) 1.04(0.11) 1.04(0.10) 1.04(0.08) 0.99(0.10) 1.06(0.06) 1.01(0.08) 1.01(0.09) 0.96(0.17) 1.01(0.16) 0.94(0.10) 0.91(0.12) 0.95(0.09) 1.04(0.10) 1.05(0.09) 1.03(0.08) 1.04(0.08) 1.09(0.12) 1.12(0.08) 1.14(0.04) 1.11(0.05) 1.12(0.06) 1.18(0.13) 1.15(0.06) 1.15(0.07) 1.18(0.09) 1.11(0.13) 1.11(0.05) 1.06(0.20) 1.01(0.10) 1.02(0.06) 1.06(0.36) 1.04(0.13) 0.98(0.10) 1.15(0.30) 1.10(0.30) 1.07(0.18) 1.11(0.18) 1.12(0.09) 1.15(0.21) 1.27(0.31) 1.31(0.08) 1.38(0.11) 1.38(0.10) 1.35(0.09) 1.28(0.14) 1.33(0.08) 1.40(0.08) 1.41(0.09) 1.41(0.10) 1.58(0.24) 1.72(0.29) 1.72(0.08) 1.79(0.08) 1.55(0.37) 1.46(0.24) 1.49(0.12) 1.51(0.15) 1.53(0.08) 1.66(0.17) 1.73(0.15) 1.78(0.17) 1.50(0.42) 1.77(1.29) 1.21(0.92) 1.20(0.17) 1.23(0.31) 1.31(0.20) 1.44(0.25) 1.56(0.47) 1.59(0.20)
++ Max displacement in automask = 3.59 (mm) at sub-brick 1
++ Max delta displ  in automask = 1.29 (mm) at sub-brick 142
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb7729.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7729.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7729.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7729.r02.tshift+orig.BRIK is 9.099994 degrees from plumb.
++ Source dataset: ./pb01.tb7729.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 18.4
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 9.099994 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb7729.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 9.099994 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7729.r03.tshift+orig.BRIK is 9.099994 degrees from plumb.
++ Reading input dataset ./pb01.tb7729.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27105 voxels
 + 4652 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.101  pitch=-2.075  yaw=-1.496  dS=-0.753  dL=-0.600  dP=-1.016
++ Mean: roll=+0.167  pitch=-0.150  yaw=-0.847  dS=+0.043  dL=-0.351  dP=-0.758
++ Max : roll=+0.650  pitch=+0.738  yaw=+0.110  dS=+0.511  dL=+0.081  dP=-0.358
++ Max displacements (mm) for each sub-brick:
 1.25(0.00) 1.91(1.05) 1.76(0.21) 1.83(0.13) 1.87(0.06) 1.78(0.12) 1.72(0.12) 1.65(0.11) 1.53(0.17) 1.51(0.15) 1.56(0.10) 1.53(0.06) 1.48(0.13) 1.43(0.11) 1.30(0.20) 1.21(0.21) 1.24(0.25) 1.16(0.24) 1.25(0.26) 1.41(0.45) 1.46(0.20) 1.62(0.26) 1.89(0.50) 2.20(0.55) 2.37(0.23) 2.52(0.23) 2.87(0.44) 3.32(0.51) 3.36(0.11) 3.38(0.05) 3.33(0.14) 3.46(0.19) 3.61(0.16) 3.68(0.08) 3.74(0.08) 3.75(0.13) 3.83(0.13) 3.94(0.12) 3.94(0.07) 3.80(0.16) 3.61(0.30) 3.41(0.54) 3.24(0.29) 2.85(0.46) 2.49(0.47) 2.64(0.27) 2.83(0.24) 2.83(0.19) 2.72(0.12) 2.66(0.11) 2.60(0.11) 2.46(0.17) 2.28(0.29) 2.05(0.39) 1.65(0.60) 1.61(1.32) 1.74(0.29) 1.81(0.09) 1.82(0.14) 1.86(0.19) 1.87(0.11) 1.84(0.12) 1.77(0.17) 1.73(0.14) 1.71(0.14) 1.69(0.06) 1.62(0.09) 1.68(0.13) 1.69(0.09) 1.68(0.12) 1.74(0.12) 1.83(0.14) 2.13(0.53) 2.20(0.11) 2.20(0.10) 2.18(0.13) 2.24(0.06) 2.27(0.11) 2.34(0.12) 2.33(0.24) 2.20(0.14) 2.19(0.17) 2.01(0.53) 1.97(1.02) 2.13(0.42) 1.70(0.72) 1.70(0.78) 1.68(0.20) 1.74(0.32) 1.94(0.40) 1.92(0.23) 1.94(0.31) 1.82(0.28) 1.84(0.31) 1.89(0.12) 1.87(0.05) 1.88(0.16) 1.99(0.31) 2.04(0.13) 2.03(0.17) 1.98(0.18) 1.99(0.13) 2.01(0.15) 2.03(0.10) 2.00(0.16) 2.06(0.23) 2.12(0.16) 2.16(0.13) 2.15(0.10) 2.14(0.07) 2.12(0.06) 2.11(0.07) 2.08(0.09) 2.02(0.15) 2.07(0.17) 2.03(0.06) 2.00(0.11) 2.04(0.06) 2.04(0.13) 2.06(0.07) 2.03(0.07) 2.13(0.23) 2.18(0.12) 2.12(0.14) 2.15(0.06) 2.21(0.16) 2.19(0.07) 2.25(0.13) 2.36(0.28) 2.40(0.23) 2.41(0.14) 2.49(0.17) 2.46(0.18) 2.56(0.30) 2.58(0.12) 2.54(0.08) 2.41(0.14) 2.28(0.20) 2.42(0.32) 2.42(0.23) 2.25(0.20) 2.26(0.12) 2.36(0.26) 2.35(0.22) 2.32(0.11) 2.28(0.06) 2.23(0.08) 2.22(0.04) 2.19(0.19) 2.09(0.19)
++ Max displacement in automask = 3.94 (mm) at sub-brick 38
++ Max delta displ  in automask = 1.32 (mm) at sub-brick 55
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb7729.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7729.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7729.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7729.r03.tshift+orig.BRIK is 9.099994 degrees from plumb.
++ Source dataset: ./pb01.tb7729.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 9.099994 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.3
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7729.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7729.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7729.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7729.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7729.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7729.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 9.099994 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb7729
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb7729+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb7729+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1213085 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 268704 voxels [63.0%] in weight mask
++ Number of points for matching = 126290
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.120773
   sp   = 0.338234
   mi   = -0.540707
   crM  = 0.0260705
   nmi  = 0.82526
   je   = 2.55362
   hel  = -0.110271
   crA  = 0.161811
   crU  = 0.17241
   lss  = 0.879227
   lpc  = 0.25663
   lpa  = 0.74337
   lpc+ = 0.36834
   ncd  = 0.997297
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.3
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb7729+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb7729+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 40.9 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7729.r01.blur pb02.tb7729.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7729.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb7729.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7729.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7729.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7729.r02.blur pb02.tb7729.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7729.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb7729.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7729.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7729.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7729.r03.blur pb02.tb7729.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7729.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb7729.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7729.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7729.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb7729.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7729.r01.blur+orig
++ Forming automask
 + Fixed clip level = 386.935120
 + Used gradual clip level = 335.793030 .. 427.765045
 + Number voxels above clip level = 45474
 + Clustering voxels ...
 + Largest cluster has 45380 voxels
 + Clustering voxels ...
 + Largest cluster has 45347 voxels
 + Filled    33 voxels in small holes; now have 45380 voxels
 + Clustering voxels ...
 + Largest cluster has 45380 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 380895 voxels
 + Mask now has 45380 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 373559 voxels
++ 52716 voxels in the mask [out of 426275: 12.37%]
++ first  18 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   11 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb7729.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7729.r02.blur+orig
++ Forming automask
 + Fixed clip level = 386.957062
 + Used gradual clip level = 338.285065 .. 428.400360
 + Number voxels above clip level = 45648
 + Clustering voxels ...
 + Largest cluster has 45582 voxels
 + Clustering voxels ...
 + Largest cluster has 45551 voxels
 + Filled    32 voxels in small holes; now have 45583 voxels
 + Clustering voxels ...
 + Largest cluster has 45583 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 380692 voxels
 + Mask now has 45583 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 373315 voxels
++ 52960 voxels in the mask [out of 426275: 12.42%]
++ first  18 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   11 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb7729.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7729.r03.blur+orig
++ Forming automask
 + Fixed clip level = 386.546204
 + Used gradual clip level = 336.459564 .. 427.744080
 + Number voxels above clip level = 45627
 + Clustering voxels ...
 + Largest cluster has 45556 voxels
 + Clustering voxels ...
 + Largest cluster has 45508 voxels
 + Filled    25 voxels in small holes; now have 45533 voxels
 + Clustering voxels ...
 + Largest cluster has 45533 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 380742 voxels
 + Mask now has 45533 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 373402 voxels
++ 52873 voxels in the mask [out of 426275: 12.40%]
++ first  18 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   11 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb7729
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 53098 survived, 373177 were zero
++ writing result full_mask.tb7729...
3dresample -master full_mask.tb7729+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb7729
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 47313 survived, 378962 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb7729...
3dABoverlap -no_automask full_mask.tb7729+orig mask_anat.tb7729+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb7729+orig.BRIK  B=./mask_anat.tb7729+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
53098        47313        54807        45604        7494         1709         14.1135      3.6121     0.8862     0.9112     0.9248
3ddot -dodice full_mask.tb7729+orig mask_anat.tb7729+orig
tee out.mask_ae_dice.txt
0.908347	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb7729
total number of censored TRs (simple form) = 33
1deval -a motion_tb7729_censor.1D -b outcount_tb7729_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb7729_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb7729.r01.blur+orig.HEAD pb03.tb7729.r02.blur+orig.HEAD pb03.tb7729.r03.blur+orig.HEAD -censor censor_tb7729_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb7729 -errts errts.tb7729 -bucket stats.tb7729
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb7729.r01.blur+orig.HEAD pb03.tb7729.r02.blur+orig.HEAD pb03.tb7729.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 45505 voxels (out of 426275 = 10.7%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 417 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb7729.r01.blur+orig.HEAD pb03.tb7729.r02.blur+orig.HEAD pb03.tb7729.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb7729_REML -Rvar stats.tb7729_REMLvar \
 -Rfitts fitts.tb7729_REML -Rerrts errts.tb7729_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (417x24):  4.87604  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (417x6):  1.03499  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (417x18):  4.64328  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (417x6):  2.89231  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (417x12):  1.12612  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.84565e-15  ++ VERY GOOD ++
++ Matrix setup time = 3.34 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.811
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.830
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.850
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.873
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.895
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.918
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.956
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.976
++ Job #0: processing voxels 0 to 42626; elapsed time=7.995
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=7.996
0123456789.0123456789.0123456789.01234++ Job #2 finished; elapsed time=34.195
5++ Job #5 finished; elapsed time=34.924
6++ Job #4 finished; elapsed time=35.508
++ Job #7 finished; elapsed time=35.565
++ Job #1 finished; elapsed time=35.614
78++ Job #8 finished; elapsed time=36.388
9.0123++ Job #3 finished; elapsed time=38.255
4++ Job #9 finished; elapsed time=38.522
5678++ Job #6 finished; elapsed time=39.554
9.
++ Job #0 waiting for children to finish; elapsed time=39.602
++ Job #0 now finishing up; elapsed time=39.602
++ Smallest FDR q [0 Full_Fstat] = 5.24267e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 5.71221e-14
++ Smallest FDR q [3 uns1_Fstat] = 5.71196e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 1.54037e-13
++ Smallest FDR q [6 uns2_Fstat] = 1.54012e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 1.93089e-13
++ Smallest FDR q [9 uns3_Fstat] = 1.93073e-13
++ Smallest FDR q [11 str1#0_Tstat] = 4.20506e-14
++ Smallest FDR q [12 str1_Fstat] = 4.20532e-14
++ Smallest FDR q [14 str2#0_Tstat] = 1.37884e-13
++ Smallest FDR q [15 str2_Fstat] = 1.37855e-13
++ Smallest FDR q [17 str3#0_Tstat] = 9.3567e-14
++ Smallest FDR q [18 str3_Fstat] = 9.35528e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.6483e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.64812e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 9.24723e-15
++ Smallest FDR q [24 structured_GLT_Fstat] = 9.24477e-15
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 2.79257e-11
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 2.79247e-11
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.00185124
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.00185109
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 6.90349e-12
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 6.9025e-12
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 2.20627e-12
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 2.20586e-12
++ Wrote bucket dataset into ./stats.tb7729+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb7729+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb7729+orig.BRIK
++ Program finished; elapsed time=67.297
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.762       0.821  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.730       0.798  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.721       0.785  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.488       0.562  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.459       0.538  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.458       0.533  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:      -0.405      -0.379  ( 6 vs. 16)  Run#2Pol#2  vs.  str2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb7729.r01.blur+orig.HEAD pb03.tb7729.r02.blur+orig.HEAD pb03.tb7729.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb7729_REML -Rvar stats.tb7729_REMLvar -Rfitts fitts.tb7729_REML -Rerrts errts.tb7729_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 45505 voxels (out of 426275 = 10.7%)
++ -----  matrix condition (417x24):  4.87604  ++ VERY GOOD ++
 + masked off 250502 voxels for being all zero; 175773 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 317 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=20.10
 + X matrix: 46.703% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=417 cols=24; 109*1 cases; total CPU=0.00 Elapsed=20.13
 +  average case bandwidth = 11.88
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=84.17
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=128.07
++ Output dataset ./stats.tb7729_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb7729_REML+orig.BRIK
++ Output dataset ./errts.tb7729_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb7729_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 3.99113e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 3.01552e-09
++ Smallest FDR q [3 uns1_Fstat] = 3.01552e-09
++ Smallest FDR q [5 uns2#0_Tstat] = 2.99734e-09
++ Smallest FDR q [6 uns2_Fstat] = 2.99734e-09
++ Smallest FDR q [8 uns3#0_Tstat] = 4.41329e-07
++ Smallest FDR q [9 uns3_Fstat] = 4.4133e-07
++ Smallest FDR q [11 str1#0_Tstat] = 1.661e-09
++ Smallest FDR q [12 str1_Fstat] = 1.66101e-09
++ Smallest FDR q [14 str2#0_Tstat] = 5.06006e-09
++ Smallest FDR q [15 str2_Fstat] = 5.06006e-09
++ Smallest FDR q [17 str3#0_Tstat] = 3.81464e-10
++ Smallest FDR q [18 str3_Fstat] = 3.81464e-10
++ Smallest FDR q [20 unstructured#0_Tstat] = 3.27678e-13
++ Smallest FDR q [21 unstructured_Fstat] = 3.27678e-13
++ Smallest FDR q [23 structured#0_Tstat] = 1.78196e-13
++ Smallest FDR q [24 structured_Fstat] = 1.78196e-13
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.0200428
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.0200428
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.922085 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.922086 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.00725976
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.00725975
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.00192634
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.00192634
 + Added 25 FDR curves to dataset stats.tb7729_REML+orig
++ Output dataset ./stats.tb7729_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=164.66
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb7729 pb03.tb7729.r01.blur+orig.HEAD pb03.tb7729.r02.blur+orig.HEAD pb03.tb7729.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 28.8 s
3dTstat -mean -prefix rm.signal.all all_runs.tb7729+orig[0..82,85..133,136..140,143..149,152,156..208,213..290,294..299,302..339,342..352,356..370,373..380,387..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb7729_REML+orig[0..82,85..133,136..140,143..149,152,156..208,213..290,294..299,302..339,342..352,356..370,373..380,387..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb7729+orig -expr c*a/b -prefix TSNR.tb7729
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb7729_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb7729+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
** Can't read ANY data from file 'rm.errts.unit+orig.HEAD'
*** Cannot open input dataset rm.errts.unit+orig!
