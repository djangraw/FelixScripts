echo auto-generated by afni_proc.py, Tue Aug  8 19:14:03 2017
auto-generated by afni_proc.py, Tue Aug  8 19:14:03 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Tue Aug  8 19:14:03 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0094
endif
set output_dir = tb0094.srtt
if ( -d tb0094.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0094.srtt
mkdir tb0094.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0094.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0094.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0094.srtt/pb00.tb0094.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0094.srtt/pb00.tb0094.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0094.srtt/pb00.tb0094.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.7 s
set tr_counts = ( 150 150 150 )
cd tb0094.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0094.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0094.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0094.r01.tcat+orig.BRIK is 15.700005 degrees from plumb.
++ 28688 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0094.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0094.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0094.r02.tcat+orig.BRIK is 15.700005 degrees from plumb.
++ 28681 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0094.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0094.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0094.r03.tcat+orig.BRIK is 15.700005 degrees from plumb.
++ 28803 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0094.r01.tshift -tpattern alt+z2 pb00.tb0094.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0094.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0094.r01.tcat+orig.BRIK is 15.700005 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0094.r02.tshift -tpattern alt+z2 pb00.tb0094.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0094.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0094.r02.tcat+orig.BRIK is 15.700005 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0094.r03.tshift -tpattern alt+z2 pb00.tb0094.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0094.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0094.r03.tcat+orig.BRIK is 15.700005 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0094.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 15.700005 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 347.473602
 + Used gradual clip level = 310.977997 .. 399.550415
 + Number voxels above clip level = 29441
 + Clustering voxels ...
 + Largest cluster has 29023 voxels
 + Clustering voxels ...
 + Largest cluster has 28409 voxels
 + Filled   289 voxels in small holes; now have 28698 voxels
 + Filled     1 voxels in large holes; now have 28699 voxels
 + Clustering voxels ...
 + Largest cluster has 28693 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 102379 voxels
 + Mask now has 28693 voxels
++ 28693 voxels in the mask [out of 131072: 21.89%]
++ first  14 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last    4 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 869.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/869.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 15.700005 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 15.700005 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1540851 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 28693 voxels [18.4%] in weight mask
++ Number of points for matching = 28693
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.593 29.181 18.955 (index)
 + source center of mass = 88.078 171.772 174.696 (index)
 + source-target CM = -0.378 0.018 -1.166 (xyz)
 + center of mass shifts = -0.378 0.018 -1.166
++ shift param auto-range: -69.9..69.1 -69.5..69.5 -48.7..46.3
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.378258 .. 9.621742
 + Range param#2 [y-shift] = -9.982018 .. 10.017982
 + Range param#3 [z-shift] = -11.166100 .. 8.833900
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.378258 .. 39.621742
 + Range param#2 [y-shift] = -39.982018 .. 40.017982
 + Range param#3 [z-shift] = -41.166100 .. 38.833900
 + 12 free parameters
++ Normalized convergence radius = 0.000459
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1540851 [out of 17574656] voxels
 + base mask has 39577 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=89 usiz=172.5
 + - copying weight image
 + - using 28693 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24826 total points stored in 233 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#o+-+.o.+o--.+-+.+.-.$ + - best 45 costs found:
    0 v=-0.087498:  -0.38   0.02  -1.17   0.00   0.00   0.00  [grid]
    1 v=-0.040011: -13.71 -13.32  12.17  15.00 -15.00  15.00  [grid]
    2 v=-0.032645: -27.04 -26.65  25.50  15.00 -15.00  15.00  [grid]
    3 v=-0.030073: -27.04 -26.65  12.17  15.00 -15.00  30.00  [grid]
    4 v=-0.029397: -27.04 -26.65  12.17  30.00 -15.00  30.00  [grid]
    5 v=-0.027780: -15.60  36.45   9.34  -3.49  11.25  35.41  [rand]
    6 v=-0.027442: -19.87  16.69   1.43 -30.54  19.59  20.03  [rand]
    7 v=-0.027364:  12.96 -26.65  12.17 -15.00 -15.00 -15.00  [grid]
    8 v=-0.026797: -13.71 -26.65  25.50  30.00 -15.00  15.00  [grid]
    9 v=-0.026768: -32.22 -11.78   1.58  23.31  -3.26  40.47  [rand]
   10 v=-0.026287: -16.60  14.13 -36.30 -15.74  34.09  -7.78  [rand]
   11 v=-0.025778:  26.29 -26.65  12.17  15.00 -30.00 -15.00  [grid]
   12 v=-0.025549: -13.71 -26.65 -14.50 -15.00 -30.00  30.00  [grid]
   13 v=-0.025011: -30.16  10.76  12.80   4.50   6.71   7.94  [rand]
   14 v=-0.024860:  26.29  13.35  12.17 -15.00  15.00 -30.00  [grid]
   15 v=-0.024730: -19.87  16.69  -3.77 -30.54  19.59  20.03  [rand]
   16 v=-0.024080: -24.76 -30.11 -34.61 -27.62  21.02  -5.11  [rand]
   17 v=-0.024054: -32.86 -14.67  10.64  11.16  -9.40  34.39  [rand]
   18 v=-0.024011:  12.96 -26.65  12.17  15.00 -30.00 -15.00  [grid]
   19 v=-0.023935:  -4.46   6.24  -8.96   4.32 -22.85  18.95  [rand]
   20 v=-0.023638: -34.70  16.60   7.44 -16.34   8.64  40.54  [rand]
   21 v=-0.023529: -34.70  16.60  -9.77  16.34   8.64  40.54  [rand]
   22 v=-0.023402: -13.71 -26.65  12.17  30.00 -30.00  15.00  [grid]
   23 v=-0.023264:  12.96 -26.65  12.17 -30.00 -30.00 -30.00  [grid]
   24 v=-0.023088: -33.41   5.04  35.65  11.98   4.28  19.20  [rand]
   25 v=-0.023011: -32.86  14.71  10.64 -11.16   9.40  34.39  [rand]
   26 v=-0.022942:   9.44 -24.74  10.22   3.10 -34.36  -2.55  [rand]
   27 v=-0.022525: -34.15 -31.90   6.54 -12.26 -17.56  17.80  [rand]
   28 v=-0.022497: -10.70  28.83  13.84 -30.67  17.79  20.52  [rand]
   29 v=-0.022451:   3.70   6.24  -8.96  -4.32 -22.85 -18.95  [rand]
   30 v=-0.022242: -27.04 -13.32  12.17 -15.00 -15.00  15.00  [grid]
   31 v=-0.022185:  12.96 -13.32  12.17 -15.00 -15.00 -30.00  [grid]
   32 v=-0.021989: -13.71 -13.32 -14.50 -30.00 -15.00  30.00  [grid]
   33 v=-0.021525: -35.80  29.52  -4.27  13.33   5.58  13.04  [rand]
   34 v=-0.021408:  12.96  26.68  12.17 -30.00  30.00 -15.00  [grid]
   35 v=-0.021185: -13.71  13.35 -27.83 -15.00  30.00 -15.00  [grid]
   36 v=-0.021144:  12.96 -13.32  12.17  15.00 -30.00 -15.00  [grid]
   37 v=-0.020878: -27.04 -26.65  25.50  30.00 -30.00  15.00  [grid]
   38 v=-0.020877:  19.11 -16.65  -3.77 -30.54 -19.59 -20.03  [rand]
   39 v=-0.020876: -27.04 -26.65  12.17 -15.00 -15.00  15.00  [grid]
   40 v=-0.020436:  26.29 -26.65  12.17 -15.00 -30.00  30.00  [grid]
   41 v=-0.020373: -15.60  36.45 -11.67  -3.49  11.25  35.41  [rand]
   42 v=-0.020133:  26.29 -13.32  12.17 -30.00 -15.00  30.00  [grid]
   43 v=-0.020104:  12.96 -26.65  12.17 -15.00 -30.00 -30.00  [grid]
   44 v=-0.020031:   9.44 -24.74  10.22   3.10 -34.36   2.55  [rand]
*[#8002=-0.0997432] *[#8004=-0.172062] *[#8013=-0.193753] *[#8014=-0.2072] *[#8017=-0.254194] *[#8018=-0.281699] *[#8020=-0.285444] *[#8021=-0.307317] *[#8022=-0.322077] *[#8024=-0.330065] *[#8027=-0.350672] *[#8028=-0.371827] *[#8030=-0.378536] *[#8031=-0.381253] *[#8037=-0.388532] *[#8038=-0.391829]  + - costs of the above after a little optimization:
  * 0 v=-0.391829:   1.46  -4.20   2.25  -0.48  -2.09  -0.25  [grid]
    1 v=-0.047393: -14.07 -13.23  12.26  13.01 -12.92  14.97  [grid]
    2 v=-0.044541: -26.86 -25.48  23.44  18.58 -16.06  14.01  [grid]
    3 v=-0.070133: -26.51 -28.29   6.66   9.15 -18.61  30.01  [grid]
    4 v=-0.046235: -22.74 -26.68  12.00  32.04 -12.29  29.24  [grid]
    5 v=-0.032572: -15.22  38.58   9.27  -3.74  11.85  34.85  [rand]
    6 v=-0.035636: -18.62  17.46   0.20 -28.29  18.55  21.18  [rand]
    7 v=-0.041065:  13.24 -25.82  16.01 -14.91 -14.93 -15.44  [grid]
    8 v=-0.028383: -12.73 -26.57  24.42  28.15 -14.91  14.06  [grid]
    9 v=-0.027743: -32.23 -11.79   1.24  23.26  -3.50  40.46  [rand]
   10 v=-0.029134: -16.11  14.32 -36.38 -15.12  33.61  -7.20  [rand]
   11 v=-0.030700:  23.10 -26.32  12.73  14.82 -30.25 -15.49  [grid]
   12 v=-0.032666: -14.31 -23.34 -14.45 -14.82 -29.62  29.80  [grid]
   13 v=-0.025024: -30.13  10.76  12.77   4.38   7.14   7.91  [rand]
   14 v=-0.025354:  26.77  13.70  12.19 -15.15  14.97 -30.26  [grid]
   15 v=-0.032009: -17.86  19.88  -3.29 -29.77  19.68  20.10  [rand]
   16 v=-0.027830: -24.31 -26.75 -35.20 -27.11  22.59  -5.13  [rand]
   17 v=-0.026287: -32.39 -10.56  10.63  11.30  -9.39  34.43  [rand]
   18 v=-0.028840:  16.84 -27.57  12.97  14.98 -30.79 -15.18  [grid]
   19 v=-0.029080:  -5.69   7.45 -10.16   1.04 -22.85  15.23  [rand]
   20 v=-0.027496: -34.46  15.93   6.49 -16.68   7.16  39.77  [rand]
   21 v=-0.042912: -36.79  14.13  -8.11  18.91  10.02  38.99  [rand]
   22 v=-0.032035: -13.41 -27.39  16.34  30.79 -29.64  14.86  [grid]
   23 v=-0.035153:  12.49 -25.75  12.35 -23.83 -29.35 -28.94  [grid]
   24 v=-0.025536: -33.68   4.94  34.81  12.49   3.97  19.17  [rand]
   25 v=-0.026027: -32.80  14.80  11.31 -11.30   9.85  38.72  [rand]
   26 v=-0.031746:   9.82 -24.80   8.71   8.59 -35.67  -4.03  [rand]
   27 v=-0.039628: -33.53 -27.83   6.00 -12.65 -17.34  16.97  [rand]
   28 v=-0.026883: -11.04  29.15  13.44 -31.08  22.24  20.70  [rand]
   29 v=-0.027273:   4.30   2.22  -8.31  -2.79 -23.97 -18.53  [rand]
   30 v=-0.049432: -19.80 -11.88   9.82 -11.08 -14.61  15.62  [grid]
   31 v=-0.038955:  11.66 -12.71   9.71 -13.34 -20.26 -27.17  [grid]
   32 v=-0.025150: -14.57 -13.05 -14.60 -29.51 -14.35  30.44  [grid]
   33 v=-0.024292: -35.46  26.11  -4.63  13.24   5.65  13.08  [rand]
   34 v=-0.029590:  11.76  26.95  13.83 -29.51  27.27 -11.72  [grid]
   35 v=-0.031614: -13.12  12.89 -27.40 -15.40  29.63  -9.74  [grid]
   36 v=-0.028937:  12.26 -13.91  12.07  15.09 -29.87 -10.66  [grid]
   37 v=-0.026329: -27.72 -26.76  24.07  33.56 -30.20  14.96  [grid]
   38 v=-0.027654:  18.43 -17.12  -5.26 -30.30 -22.25 -19.58  [rand]
   39 v=-0.057462: -27.23 -22.30   7.67  -8.63 -14.69  16.17  [grid]
   40 v=-0.028000:  26.66 -31.20   9.24 -17.89 -30.47  29.40  [grid]
   41 v=-0.031539: -16.24  36.55  -6.25  -2.25   9.69  38.05  [rand]
   42 v=-0.032206:  25.56 -18.87  10.11 -22.69 -19.99  29.92  [grid]
   43 v=-0.031919:  12.46 -26.02  12.44 -14.82 -29.86 -26.43  [grid]
   44 v=-0.022039:   6.91 -24.72   9.45   2.25 -34.89   1.64  [rand]
 + - save # 0 for twobest
 + - save # 3 for twobest
 + - save #39 for twobest
 + - save #30 for twobest
 + - save # 1 for twobest
 + - save # 4 for twobest
 + - save # 2 for twobest
 + - save #21 for twobest
 + - save # 7 for twobest
 + - save #27 for twobest
 + - save #31 for twobest
 + - save # 6 for twobest
 + - save #23 for twobest
 + - save #12 for twobest
 + - save # 5 for twobest
 + - save #42 for twobest
 + - save #22 for twobest
 + - skip #15 for twobest: too close to set # 6
 + - save #43 for twobest
 + - save #26 for twobest
 + - save #35 for twobest
 + - save #41 for twobest
 + - save #11 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=89 usiz=172.5
 + - retaining old weight image
 + - using 28693 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24901 total points stored in 250 'RHDD(13.7332)' bloks
*[#9448=-0.423637] *[#9469=-0.424796] *[#9474=-0.42607] *[#9477=-0.427261] *[#9479=-0.428843] *[#9482=-0.430618] *[#9483=-0.431525] *[#9484=-0.431603] *[#9485=-0.432798] *[#9486=-0.434932] *[#9487=-0.435176] *[#9488=-0.436079] *[#9491=-0.436379] *[#9492=-0.437449] *[#9493=-0.437853] *[#9494=-0.438604] *[#9495=-0.439278] *[#9498=-0.439341] *[#9499=-0.440163] *[#9502=-0.44076] *[#9504=-0.441253] *[#9505=-0.442288] *[#9508=-0.443061] *[#9511=-0.443137] *[#9513=-0.443461] *[#9514=-0.443632] *[#9517=-0.44474] *[#9522=-0.444975] *[#9523=-0.445114] *[#9528=-0.446342] *[#9533=-0.447492] *[#9538=-0.447776] 
 + - param set #1 has cost=-0.447776
 + -- Parameters = 1.3208 -4.2206 2.1629 -0.5716 -2.6982 -0.3774 1.0014 1.0134 0.9945 0.0007 -0.0024 -0.0045
 + - param set #2 has cost=-0.052797
 + -- Parameters = -26.4485 -28.2633 6.8515 9.2194 -18.6249 30.0520 1.0009 0.9996 0.9997 0.0099 -0.0009 -0.0005
 + - param set #3 has cost=-0.052722
 + -- Parameters = -25.0558 -22.8013 7.5952 -7.3362 -15.9555 16.4956 1.0016 1.0036 1.0170 -0.0021 -0.0003 0.0006
 + - param set #4 has cost=-0.053701
 + -- Parameters = -19.3791 -10.8792 9.6032 -9.7310 -14.1309 15.9917 1.0211 1.0040 1.0026 0.0010 0.0026 0.0015
 + - param set #5 has cost=-0.072751
 + -- Parameters = -13.6555 -16.1489 11.1482 5.5293 -11.8066 17.8443 1.0149 0.9938 1.0122 -0.0056 0.0046 0.0003
 + - param set #6 has cost=-0.031294
 + -- Parameters = -22.3340 -26.4362 11.8669 32.2497 -12.2916 29.4583 1.0034 1.0027 1.0063 0.0028 0.0025 0.0118
 + - param set #7 has cost=-0.030204
 + -- Parameters = -26.2429 -25.7100 27.1455 19.0488 -16.1526 14.0276 1.0016 1.0000 0.9998 -0.0006 0.0007 -0.0008
 + - param set #8 has cost=-0.036677
 + -- Parameters = -36.1959 13.7506 -8.1567 18.7947 10.2592 38.9644 0.9969 0.9967 0.9978 -0.0017 0.0074 -0.0016
 + - param set #9 has cost=-0.090056
 + -- Parameters = 14.3895 -23.5730 15.5700 -2.7750 -17.9822 -11.2992 1.0068 1.0366 0.9771 0.0117 0.0097 -0.0056
 + - param set #10 has cost=-0.041480
 + -- Parameters = -30.0004 -27.3764 5.6323 -8.4103 -17.1952 18.7829 1.0041 0.9930 1.0320 -0.0218 0.0043 -0.0068
 + - param set #11 has cost=-0.036537
 + -- Parameters = 11.1510 -11.6301 10.4769 -17.4248 -18.7850 -26.0174 0.9954 0.9951 0.9678 -0.0035 -0.0114 -0.0091
 + - param set #12 has cost=-0.436923
 + -- Parameters = 1.1926 -4.4791 2.1550 -0.8875 -2.7427 -0.5762 0.9953 1.0018 0.9936 -0.0057 0.0049 -0.0033
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0329 
 + --- dist(#3,#1) = 0.242 
 + --- dist(#4,#1) = 0.202 
 + --- dist(#5,#1) = 0.259 
 + --- dist(#6,#1) = 0.347 
 + --- dist(#7,#1) = 0.33 
 + --- dist(#8,#1) = 0.392 
 + --- dist(#9,#1) = 0.469 
 + --- dist(#10,#1) = 0.285 
 + --- dist(#11,#1) = 0.365 
 + --- dist(#12,#1) = 0.345 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=89 usiz=172.5
 + - retaining old weight image
 + - using 28693 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24614 total points stored in 251 'RHDD(13.5933)' bloks
*[#10431=-0.447917] *[#10432=-0.448054] *[#10433=-0.448243] *[#10438=-0.448376] *[#10439=-0.448768] *[#10444=-0.449281] *[#10446=-0.449516] *[#10447=-0.449792] *[#10450=-0.44997] *[#10451=-0.450049] *[#10453=-0.450067] *[#10454=-0.45019] *[#10457=-0.450301] *[#10460=-0.450419] *[#10461=-0.450442] *[#10463=-0.450615] *[#10464=-0.450704] *[#10467=-0.450825] *[#10470=-0.450922] *[#10473=-0.450967] *[#10476=-0.451054] *[#10479=-0.451082] *[#10480=-0.451146] *[#10481=-0.451152] *[#10483=-0.451257] *[#10484=-0.451279] *[#10485=-0.451296] *[#10487=-0.451308] *[#10491=-0.451379] *[#10492=-0.451431] 
 + - param set #1 has cost=-0.451431
 + -- Parameters = 1.1865 -4.2351 1.7972 -0.8155 -2.8542 -0.3964 0.9987 1.0148 0.9853 -0.0023 -0.0027 -0.0060
*[#10550=-0.451469] *[#10552=-0.451936] *[#10554=-0.452012] *[#10565=-0.452087] *[#10566=-0.452322] *[#10567=-0.452499] *[#10568=-0.452521] *[#10572=-0.452521] *[#10576=-0.452618] *[#10577=-0.452833] *[#10578=-0.453056] *[#10581=-0.453283] 
 + - param set #2 has cost=-0.453283
 + -- Parameters = 1.4100 -4.1482 1.8017 -0.8404 -2.8241 -0.8091 1.0007 1.0161 0.9836 -0.0032 0.0067 -0.0037
 + - param set #3 has cost=-0.084607
 + -- Parameters = 11.2330 -23.9186 15.3717 -1.9944 -18.2667 -8.7138 1.0194 1.0320 0.9857 0.0125 0.0184 -0.0097
 + - param set #4 has cost=-0.101614
 + -- Parameters = -5.4082 -14.6974 9.4774 -0.2476 -12.2127 5.9410 1.0143 1.0166 0.9850 0.0130 -0.0183 -0.0047
 + - param set #5 has cost=-0.044804
 + -- Parameters = -19.4742 -10.7311 9.1997 -9.3195 -14.1985 16.3370 1.0229 1.0019 1.0048 0.0007 0.0040 0.0084
 + - param set #6 has cost=-0.042306
 + -- Parameters = -26.0637 -28.2711 7.0805 9.5135 -18.8214 29.8226 1.0028 1.0119 0.9974 0.0100 -0.0001 -0.0004
 + - param set #7 has cost=-0.054590
 + -- Parameters = -24.0032 -22.6947 7.5638 -6.6305 -15.6692 15.6139 1.0058 1.0245 1.0194 0.0052 0.0019 0.0141
 + - param set #8 has cost=-0.039886
 + -- Parameters = -29.9311 -26.8390 5.7574 -8.6219 -17.0221 18.2574 1.0053 0.9914 1.0307 -0.0122 0.0058 -0.0066
 + - param set #9 has cost=-0.030999
 + -- Parameters = -35.9413 13.5555 -7.9645 18.9511 10.3316 38.7429 0.9964 0.9955 0.9963 0.0051 0.0055 -0.0016
 + - param set #10 has cost=-0.033729
 + -- Parameters = 11.0160 -11.2403 10.5972 -17.3867 -18.6398 -25.9411 0.9949 0.9942 0.9685 0.0039 -0.0122 -0.0085
 + - param set #11 has cost=-0.026662
 + -- Parameters = -21.8070 -26.2832 12.3963 31.8433 -11.7257 29.3142 1.0011 1.0227 1.0086 0.0030 0.0025 0.0083
 + - param set #12 has cost=-0.029526
 + -- Parameters = -26.7184 -25.8148 27.0180 19.0457 -16.1590 14.2452 1.0010 1.0004 0.9994 0.0058 0.0003 -0.0016
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.042 
 + --- dist(#3,#1) = 0.132 
 + --- dist(#4,#1) = 0.247 
 + --- dist(#5,#1) = 0.318 
 + --- dist(#6,#1) = 0.261 
 + --- dist(#7,#1) = 0.343 
 + --- dist(#8,#1) = 0.392 
 + --- dist(#9,#1) = 0.279 
 + --- dist(#10,#1) = 0.467 
 + --- dist(#11,#1) = 0.352 
 + --- dist(#12,#1) = 0.363 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=89 usiz=172.5
 + - retaining old weight image
 + - using 28693 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24920 total points stored in 262 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.422051
 + -- Parameters = 1.4431 -4.1117 1.6938 -0.8248 -2.6797 -0.8220 0.9987 1.0082 0.9832 -0.0046 0.0072 -0.0045
 + - param set #2 has cost=-0.421992
 + -- Parameters = 1.3078 -4.1534 1.5997 -0.8219 -2.6978 -0.6380 0.9980 1.0090 0.9796 -0.0029 0.0018 -0.0048
 + - param set #3 has cost=-0.125941
 + -- Parameters = -4.4099 -13.1097 7.5008 -0.6093 -11.3053 4.7499 1.0244 1.0559 0.9998 0.0048 -0.0178 -0.0186
 + - param set #4 has cost=-0.078174
 + -- Parameters = 10.7701 -23.2153 14.8322 -1.4953 -17.7572 -8.3514 1.0156 1.0351 1.0030 0.0042 0.0212 -0.0240
 + - param set #5 has cost=-0.046756
 + -- Parameters = -23.0331 -22.6436 7.1865 -6.0492 -15.3392 15.0430 0.9976 1.0234 1.0177 0.0038 0.0027 0.0140
 + - param set #6 has cost=-0.038954
 + -- Parameters = -19.5602 -10.5785 8.6838 -9.3766 -13.8342 16.7026 1.0217 1.0008 1.0024 0.0011 0.0043 0.0172
 + - param set #7 has cost=-0.032624
 + -- Parameters = -26.1064 -28.2589 7.0088 9.5153 -18.9057 29.9795 1.0024 1.0124 0.9967 0.0096 0.0000 -0.0007
 + - param set #8 has cost=-0.034491
 + -- Parameters = -29.4682 -26.8818 5.8235 -8.3024 -16.9890 17.7359 1.0027 0.9921 1.0308 -0.0127 0.0067 -0.0074
 + - param set #9 has cost=-0.026882
 + -- Parameters = 11.5364 -11.6511 10.0886 -16.3527 -19.3234 -25.3853 1.0041 0.9910 0.9605 0.0070 -0.0163 -0.0012
 + - param set #10 has cost=-0.025012
 + -- Parameters = -35.8872 13.2958 -7.4583 19.0236 10.0142 38.5558 0.9960 0.9940 0.9958 0.0052 0.0087 -0.0011
 + - param set #11 has cost=-0.025128
 + -- Parameters = -26.5034 -25.8483 26.9665 19.1559 -16.1197 14.1683 1.0082 1.0004 0.9987 0.0059 0.0003 -0.0012
 + - param set #12 has cost=-0.022762
 + -- Parameters = -21.0851 -26.1135 12.2965 31.7968 -12.0146 29.1393 0.9964 1.0225 1.0006 0.0035 0.0006 0.0074
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0242 
 + --- dist(#3,#1) = 0.13 
 + --- dist(#4,#1) = 0.239 
 + --- dist(#5,#1) = 0.306 
 + --- dist(#6,#1) = 0.263 
 + --- dist(#7,#1) = 0.386 
 + --- dist(#8,#1) = 0.344 
 + --- dist(#9,#1) = 0.273 
 + --- dist(#10,#1) = 0.349 
 + --- dist(#11,#1) = 0.467 
 + --- dist(#12,#1) = 0.362 
 + - Total coarse refinement net CPU time = 0.0 s; 3048 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=89 usiz=172.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24833 total points stored in 262 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.411602 *
 + -- Parameters = 1.4431 -4.1117 1.6938 -0.8248 -2.6797 -0.8220 0.9987 1.0082 0.9832 -0.0046 0.0072 -0.0045
 + - cost(#2)=-0.411434  
 + -- Parameters = 1.3078 -4.1534 1.5997 -0.8219 -2.6978 -0.6380 0.9980 1.0090 0.9796 -0.0029 0.0018 -0.0048
 + - cost(#3)=-0.118589  
 + -- Parameters = -4.4099 -13.1097 7.5008 -0.6093 -11.3053 4.7499 1.0244 1.0559 0.9998 0.0048 -0.0178 -0.0186
 + - cost(#4)=-0.073305  
 + -- Parameters = 10.7701 -23.2153 14.8322 -1.4953 -17.7572 -8.3514 1.0156 1.0351 1.0030 0.0042 0.0212 -0.0240
 + - cost(#5)=-0.043829  
 + -- Parameters = -23.0331 -22.6436 7.1865 -6.0492 -15.3392 15.0430 0.9976 1.0234 1.0177 0.0038 0.0027 0.0140
 + - cost(#6)=-0.036701  
 + -- Parameters = -19.5602 -10.5785 8.6838 -9.3766 -13.8342 16.7026 1.0217 1.0008 1.0024 0.0011 0.0043 0.0172
 + - cost(#7)=-0.033413  
 + -- Parameters = -29.4682 -26.8818 5.8235 -8.3024 -16.9890 17.7359 1.0027 0.9921 1.0308 -0.0127 0.0067 -0.0074
 + - cost(#8)=-0.032445  
 + -- Parameters = -26.1064 -28.2589 7.0088 9.5153 -18.9057 29.9795 1.0024 1.0124 0.9967 0.0096 0.0000 -0.0007
 + - cost(#9)=-0.025448  
 + -- Parameters = 11.5364 -11.6511 10.0886 -16.3527 -19.3234 -25.3853 1.0041 0.9910 0.9605 0.0070 -0.0163 -0.0012
 + - cost(#10)=-0.020587  
 + -- Parameters = -26.5034 -25.8483 26.9665 19.1559 -16.1197 14.1683 1.0082 1.0004 0.9987 0.0059 0.0003 -0.0012
 + - cost(#11)=-0.025152  
 + -- Parameters = -35.8872 13.2958 -7.4583 19.0236 10.0142 38.5558 0.9960 0.9940 0.9958 0.0052 0.0087 -0.0011
 + - cost(#12)=-0.021676  
 + -- Parameters = -21.0851 -26.1135 12.2965 31.7968 -12.0146 29.1393 0.9964 1.0225 1.0006 0.0035 0.0006 0.0074
 + - cost(#13)=-0.104285  
 + -- Parameters = -0.3783 0.0180 -1.1661 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.411794 *
 + -- Parameters = 1.4332 -4.1365 1.6753 -0.8329 -2.6757 -0.8105 0.9997 1.0085 0.9829 -0.0040 0.0074 -0.0048
 + - cost(#2)=-0.412236 *
 + -- Parameters = 1.4008 -4.1791 1.4583 -0.7862 -2.7094 -0.7678 1.0003 1.0085 0.9773 -0.0012 0.0056 -0.0058
 + - cost(#3)=-0.276114  
 + -- Parameters = 1.2246 -4.3544 4.6061 -0.5500 -6.8691 -0.1019 1.0061 1.0952 1.0038 0.0051 -0.0249 -0.0393
 + - cost(#4)=-0.077185  
 + -- Parameters = 9.9090 -22.9540 13.3367 -1.0980 -17.3422 -7.5708 1.0293 1.0378 0.9936 0.0058 0.0301 -0.0305
 + - cost(#5)=-0.051880  
 + -- Parameters = -18.8246 -18.4039 6.7423 -3.7583 -13.9847 14.7106 0.9980 1.0237 1.0159 0.0037 0.0024 0.0148
 + - cost(#6)=-0.073689  
 + -- Parameters = -12.3293 -12.2388 8.3987 0.3628 -9.9081 12.2702 1.0409 1.0439 0.9735 0.0023 -0.0184 0.0490
 + - cost(#7)=-0.034643  
 + -- Parameters = -29.2916 -27.4635 6.3511 -8.6505 -17.0517 17.2690 1.0009 0.9908 1.0350 -0.0071 0.0090 -0.0083
 + - cost(#8)=-0.032611  
 + -- Parameters = -26.1405 -28.4350 7.1007 9.4858 -18.9058 30.0306 1.0013 1.0096 0.9979 0.0082 -0.0019 -0.0002
 + - cost(#9)=-0.026439  
 + -- Parameters = 11.7640 -11.7587 10.3817 -16.5445 -19.3764 -25.2439 0.9983 0.9912 0.9613 0.0086 -0.0176 -0.0012
 + - cost(#10)=-0.022123  
 + -- Parameters = -26.8587 -25.8654 26.7688 19.3358 -16.4996 14.3738 1.0032 0.9995 0.9982 0.0076 0.0006 -0.0008
 + - cost(#11)=-0.025332  
 + -- Parameters = -35.8644 13.2221 -7.4818 19.0088 9.9796 38.4835 0.9961 0.9939 0.9963 0.0051 0.0096 -0.0025
 + - cost(#12)=-0.023246  
 + -- Parameters = -20.6114 -26.6557 11.9041 31.8084 -12.6740 28.7268 0.9818 1.0246 0.9973 -0.0056 0.0081 0.0106
 + - cost(#13)=-0.401405  
 + -- Parameters = 1.3517 -3.9571 2.0997 -0.4400 -2.1781 -0.3649 0.9994 1.0105 0.9934 0.0141 -0.0009 0.0035
 + - case #2 is now the best
 + - Initial  cost = -0.412236
 + - Initial fine Parameters = 1.4008 -4.1791 1.4583 -0.7862 -2.7094 -0.7678 1.0003 1.0085 0.9773 -0.0012 0.0056 -0.0058
 + - Finalish cost = -0.412604 ; 201 funcs
 + - Final    cost = -0.412640 ; 182 funcs
 + Final fine fit Parameters:
       x-shift= 1.5121   y-shift=-4.2268   z-shift= 1.4098
       z-angle=-0.8222   x-angle=-2.8106   y-angle=-0.9146
       x-scale= 0.9988   y-scale= 1.0093   z-scale= 0.9765
     y/x-shear=-0.0018 z/x-shear= 0.0087 z/y-shear=-0.0074
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 1.5121 -4.2268 1.4098 -0.8222 -2.8106 -0.9146 0.9988 1.0093 0.9765 -0.0018 0.0087 -0.0074
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 19.4
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 15.700005 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0105 -0.9814 0.2163 230.0533 -0.0095 0.2338 0.9527 62.2525 -0.9986 -0.0135 -0.0159 200.9665
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.8 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2025.780100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 71.1665 47.5833   ITER = 12/137
71.1665

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 78ms]
lev=0 0..171 0..213 0..166: [first cost=-0.67953] ... done [cost:-0.67953==>-0.76085]
lev=1 patch=129x161x125 [clock= 12m 22s 501ms]........:[cost=-0.80277]:........ done [cost:-0.76085==>-0.80599 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 17m 1s 919ms]......................... done [cost:-0.80599==>-0.87395 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 20m 35s 261ms]................ done [cost:-0.87395==>-0.92392 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 23m 27s 292ms]........... done [cost:-0.92392==>-0.97568 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 25m 29s 412ms].................. done [cost:-0.97568==>-1.03602 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 27m 39s 293ms]................... done [cost:-1.03602==>-1.06446 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 29m 58s 623ms]...................................... done [cost:-1.06446==>-1.16386 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 32m 28s 344ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0094/tb0094.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 7.5 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0094.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.700005 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0094.r01.tshift+orig.BRIK is 15.700005 degrees from plumb.
++ Reading input dataset ./pb01.tb0094.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30565 voxels
 + 5036 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.441  pitch=-0.437  yaw=-0.346  dS=-0.114  dL=-0.177  dP=-0.607
++ Mean: roll=-0.172  pitch=-0.053  yaw=+0.094  dS=+0.042  dL=+0.038  dP=+0.008
++ Max : roll=+0.105  pitch=+1.395  yaw=+0.427  dS=+0.182  dL=+0.166  dP=+0.145
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.21(0.21) 0.17(0.05) 0.19(0.07) 0.21(0.06) 0.23(0.09) 0.25(0.08) 0.26(0.03) 0.30(0.07) 0.36(0.09) 0.35(0.07) 0.37(0.02) 0.37(0.06) 0.39(0.09) 0.41(0.07) 0.41(0.09) 0.36(0.07) 0.34(0.05) 0.34(0.08) 0.37(0.08) 0.36(0.04) 0.34(0.05) 0.35(0.05) 0.37(0.05) 0.37(0.02) 0.38(0.06) 0.35(0.06) 0.39(0.06) 0.39(0.05) 0.36(0.08) 0.38(0.09) 0.41(0.05) 0.47(0.11) 0.33(0.36) 0.53(0.43) 0.36(0.45) 0.44(0.12) 0.46(0.07) 0.50(0.06) 0.57(0.10) 0.59(0.03) 0.60(0.05) 0.62(0.07) 0.63(0.02) 0.65(0.05) 0.65(0.05) 0.67(0.10) 0.71(0.06) 0.74(0.04) 0.76(0.05) 0.79(0.05) 0.82(0.03) 0.83(0.05) 0.84(0.06) 0.87(0.03) 0.92(0.07) 0.94(0.06) 1.03(0.13) 0.58(1.16) 0.65(0.39) 0.53(0.27) 0.54(0.12) 0.53(0.14) 0.51(0.14) 0.49(0.10) 0.51(0.13) 0.55(0.07) 0.58(0.08) 0.55(0.08) 0.56(0.05) 0.59(0.06) 0.64(0.17) 1.21(1.35) 2.47(1.41) 2.22(0.26) 2.08(0.19) 2.01(0.10) 1.97(0.09) 1.87(0.12) 1.78(0.13) 1.91(0.15) 1.82(0.21) 1.62(0.22) 1.56(0.08) 1.54(0.05) 1.47(0.11) 1.43(0.10) 1.41(0.12) 0.61(0.88) 0.75(1.17) 0.64(0.13) 0.63(0.12) 0.46(0.19) 0.50(0.06) 0.53(0.11) 0.56(0.05) 0.58(0.04) 0.56(0.08) 0.62(0.06) 0.61(0.03) 0.57(0.04) 0.60(0.06) 0.59(0.04) 0.63(0.05) 0.63(0.03) 0.62(0.04) 0.70(0.11) 0.68(0.02) 0.72(0.05) 0.47(0.45) 0.53(0.48) 0.78(0.29) 0.67(0.13) 0.71(0.07) 0.73(0.03) 0.72(0.04) 0.63(0.13) 0.63(0.05) 0.65(0.03) 0.65(0.02) 0.65(0.05) 0.67(0.02) 0.68(0.02) 0.66(0.02) 0.70(0.04) 0.70(0.03) 0.69(0.03) 0.71(0.03) 0.71(0.02) 0.72(0.04) 0.76(0.05) 0.75(0.02) 0.76(0.07) 0.79(0.13) 0.77(0.05) 0.79(0.06) 0.80(0.02) 0.82(0.03) 0.84(0.03) 0.81(0.05) 0.84(0.05) 0.80(0.05) 0.86(0.18) 0.64(0.33) 0.32(0.88) 0.23(0.21) 0.32(0.26) 0.30(0.07) 0.33(0.10) 0.40(0.09)
++ Max displacement in automask = 2.47 (mm) at sub-brick 73
++ Max delta displ  in automask = 1.41 (mm) at sub-brick 73
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0094.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0094.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0094.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0094.r01.tshift+orig.BRIK is 15.700005 degrees from plumb.
++ Source dataset: ./pb01.tb0094.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 14.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.700005 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0094.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.700005 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0094.r02.tshift+orig.BRIK is 15.700005 degrees from plumb.
++ Reading input dataset ./pb01.tb0094.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30688 voxels
 + 5011 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.982  pitch=-0.584  yaw=-0.563  dS=-1.157  dL=+0.644  dP=-1.193
++ Mean: roll=+1.114  pitch=+0.461  yaw=-0.225  dS=-1.035  dL=+0.858  dP=-0.557
++ Max : roll=+1.279  pitch=+1.917  yaw=+0.053  dS=-0.860  dL=+1.024  dP=-0.066
++ Max displacements (mm) for each sub-brick:
 3.39(0.00) 3.77(0.73) 3.68(0.15) 3.68(0.15) 3.60(0.10) 3.60(0.04) 3.59(0.06) 3.57(0.08) 3.55(0.06) 3.50(0.06) 3.44(0.11) 3.41(0.05) 3.41(0.03) 3.38(0.06) 3.42(0.05) 3.10(0.58) 2.91(0.41) 2.95(0.08) 2.93(0.05) 2.92(0.04) 2.92(0.06) 2.85(0.07) 2.84(0.03) 2.82(0.06) 2.80(0.06) 2.85(0.06) 2.83(0.06) 2.81(0.03) 2.75(0.19) 2.72(0.08) 2.73(0.05) 2.72(0.04) 2.73(0.07) 2.74(0.04) 2.74(0.03) 2.73(0.09) 2.70(0.05) 2.72(0.11) 2.73(0.03) 2.72(0.02) 2.72(0.01) 2.72(0.03) 2.71(0.04) 2.74(0.03) 2.73(0.06) 2.74(0.04) 2.74(0.04) 2.71(0.06) 2.71(0.05) 2.69(0.07) 2.67(0.05) 2.69(0.03) 2.65(0.06) 2.66(0.04) 2.63(0.03) 2.65(0.02) 2.64(0.09) 2.75(0.55) 5.08(3.93) 4.92(0.27) 4.59(0.47) 4.48(0.12) 4.42(0.08) 4.38(0.11) 4.32(0.11) 4.27(0.10) 4.17(0.15) 4.12(0.07) 4.09(0.06) 4.02(0.08) 4.00(0.04) 3.98(0.06) 3.96(0.04) 3.92(0.08) 3.87(0.12) 3.84(0.06) 3.82(0.03) 3.83(0.04) 3.79(0.06) 3.75(0.04) 3.74(0.04) 3.73(0.04) 3.72(0.04) 3.73(0.03) 3.73(0.03) 3.70(0.05) 3.69(0.04) 3.66(0.04) 3.67(0.03) 3.68(0.02) 3.65(0.05) 3.66(0.03) 3.67(0.02) 3.67(0.03) 3.67(0.03) 3.64(0.06) 3.66(0.04) 3.65(0.01) 3.66(0.03) 3.69(0.05) 3.64(0.07) 3.65(0.04) 3.61(0.06) 3.59(0.04) 3.58(0.02) 3.57(0.04) 3.54(0.05) 3.51(0.05) 3.52(0.02) 3.52(0.03) 3.47(0.08) 3.48(0.03) 3.48(0.05) 3.44(0.04) 3.40(0.07) 3.41(0.03) 3.43(0.05) 3.43(0.02) 3.39(0.04) 3.37(0.04) 3.38(0.02) 3.36(0.04) 3.35(0.03) 3.33(0.04) 3.32(0.04) 3.30(0.04) 3.26(0.06) 3.29(0.06) 3.29(0.01) 3.27(0.02) 3.27(0.03) 3.23(0.07) 4.56(2.06) 4.66(0.14) 4.17(0.70) 4.17(0.08) 4.11(0.08) 4.05(0.09) 4.02(0.08) 3.92(0.18) 3.88(0.11) 3.38(1.13) 3.14(0.44) 3.19(0.20) 3.18(0.08) 3.22(0.05) 3.17(0.05) 3.16(0.06) 3.13(0.10) 3.32(0.30)
++ Max displacement in automask = 5.08 (mm) at sub-brick 58
++ Max delta displ  in automask = 3.93 (mm) at sub-brick 58
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0094.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0094.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0094.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0094.r02.tshift+orig.BRIK is 15.700005 degrees from plumb.
++ Source dataset: ./pb01.tb0094.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 14.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.700005 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.8
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0094.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.700005 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0094.r03.tshift+orig.BRIK is 15.700005 degrees from plumb.
++ Reading input dataset ./pb01.tb0094.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30712 voxels
 + 5004 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.603  pitch=+0.042  yaw=-0.431  dS=-1.545  dL=+0.594  dP=-2.455
++ Mean: roll=+0.855  pitch=+1.509  yaw=-0.107  dS=-1.391  dL=+0.948  dP=-1.157
++ Max : roll=+1.157  pitch=+4.437  yaw=+0.379  dS=-1.152  dL=+1.273  dP=-0.551
++ Max displacements (mm) for each sub-brick:
 3.78(0.00) 3.53(0.45) 3.51(0.09) 3.47(0.09) 3.48(0.03) 3.45(0.03) 3.47(0.06) 3.39(0.12) 3.32(0.19) 3.28(0.07) 3.28(0.05) 3.23(0.07) 3.17(0.12) 3.15(0.10) 3.12(0.07) 3.14(0.04) 3.12(0.04) 3.10(0.04) 3.12(0.04) 3.06(0.15) 3.74(1.18) 6.29(3.48) 6.22(0.20) 5.99(0.33) 5.83(0.21) 5.74(0.13) 5.71(0.10) 5.67(0.06) 5.67(0.06) 5.55(0.14) 5.48(0.10) 5.43(0.14) 5.37(0.08) 5.34(0.04) 5.25(0.10) 5.21(0.07) 5.21(0.03) 5.14(0.08) 5.12(0.04) 5.13(0.04) 5.16(0.04) 5.17(0.03) 5.12(0.08) 5.26(0.18) 5.12(0.30) 4.97(0.18) 4.93(0.05) 4.95(0.04) 4.97(0.05) 4.87(0.12) 4.79(0.11) 4.80(0.04) 4.78(0.04) 4.75(0.06) 4.68(0.08) 4.70(0.03) 4.71(0.04) 4.69(0.03) 4.67(0.06) 4.60(0.09) 4.58(0.03) 4.54(0.05) 4.57(0.05) 4.55(0.05) 4.52(0.03) 4.53(0.03) 4.52(0.05) 4.53(0.02) 4.54(0.04) 4.57(0.03) 4.56(0.05) 4.53(0.06) 4.52(0.03) 4.49(0.04) 4.48(0.03) 4.48(0.04) 4.48(0.01) 4.51(0.05) 4.51(0.04) 4.49(0.03) 4.46(0.05) 4.44(0.02) 4.46(0.02) 4.43(0.05) 4.42(0.04) 4.40(0.05) 4.39(0.03) 4.41(0.03) 4.39(0.05) 4.39(0.04) 4.33(0.07) 4.30(0.03) 4.29(0.02) 4.26(0.08) 4.31(0.06) 4.25(0.06) 4.27(0.02) 4.23(0.05) 4.21(0.03) 4.22(0.03) 4.23(0.04) 4.27(0.05) 4.21(0.08) 4.23(0.05) 4.23(0.02) 4.23(0.02) 4.22(0.03) 4.20(0.03) 4.20(0.02) 4.16(0.04) 4.16(0.04) 4.13(0.05) 4.11(0.03) 4.11(0.02) 4.10(0.03) 4.12(0.06) 4.09(0.06) 4.10(0.03) 4.10(0.03) 4.11(0.03) 4.15(0.05) 4.13(0.04) 4.15(0.05) 4.11(0.05) 4.11(0.02) 4.09(0.03) 4.09(0.03) 4.06(0.06) 4.02(0.05) 4.04(0.03) 4.03(0.02) 4.06(0.04) 4.01(0.07) 4.07(0.08) 3.95(0.15) 5.21(1.77) 8.83(4.35) 8.74(0.21) 8.51(0.25) 8.44(0.12) 8.40(0.07) 8.36(0.09) 8.28(0.09) 8.19(0.21) 8.15(0.08) 6.25(2.38) 5.13(1.39) 5.20(0.18) 5.17(0.09) 4.98(0.21)
++ Max displacement in automask = 8.83 (mm) at sub-brick 136
++ Max delta displ  in automask = 4.35 (mm) at sub-brick 136
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0094.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0094.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0094.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0094.r03.tshift+orig.BRIK is 15.700005 degrees from plumb.
++ Source dataset: ./pb01.tb0094.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 14.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 15.700005 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0094.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0094.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0094.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0094.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0094.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0094.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 15.700005 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0094
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0094+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0094+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1412614 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=1
++ Computing -autobox
++ 286254 voxels [66.4%] in weight mask
++ Number of points for matching = 134539
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.124007
   sp   = 0.327062
   mi   = -0.535625
   crM  = 0.0367134
   nmi  = 0.840815
   je   = 2.82917
   hel  = -0.110867
   crA  = 0.191609
   crU  = 0.192418
   lss  = 0.875993
   lpc  = 0.170947
   lpa  = 0.829053
   lpc+ = 0.296408
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.7
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0094+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0094+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 26.4 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0094.r01.blur pb02.tb0094.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0094.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0094.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0094.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0094.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0094.r02.blur pb02.tb0094.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0094.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0094.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0094.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0094.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0094.r03.blur pb02.tb0094.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0094.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0094.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0094.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0094.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0094.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0094.r01.blur+orig
++ Forming automask
 + Fixed clip level = 338.653809
 + Used gradual clip level = 290.894012 .. 381.256104
 + Number voxels above clip level = 51169
 + Clustering voxels ...
 + Largest cluster has 50938 voxels
 + Clustering voxels ...
 + Largest cluster has 50885 voxels
 + Filled    49 voxels in small holes; now have 50934 voxels
 + Filled     1 voxels in large holes; now have 50935 voxels
 + Clustering voxels ...
 + Largest cluster has 50935 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 375340 voxels
 + Mask now has 50935 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 367236 voxels
++ 59039 voxels in the mask [out of 426275: 13.85%]
++ first  13 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  25 y-planes are zero [from I]
++ last   17 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0094.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0094.r02.blur+orig
++ Forming automask
 + Fixed clip level = 338.846954
 + Used gradual clip level = 292.152771 .. 381.042236
 + Number voxels above clip level = 51188
 + Clustering voxels ...
 + Largest cluster has 50965 voxels
 + Clustering voxels ...
 + Largest cluster has 50916 voxels
 + Filled    45 voxels in small holes; now have 50961 voxels
 + Clustering voxels ...
 + Largest cluster has 50961 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 375314 voxels
 + Mask now has 50961 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 367271 voxels
++ 59004 voxels in the mask [out of 426275: 13.84%]
++ first  13 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  25 y-planes are zero [from I]
++ last   17 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0094.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0094.r03.blur+orig
++ Forming automask
 + Fixed clip level = 339.099762
 + Used gradual clip level = 292.891846 .. 381.623840
 + Number voxels above clip level = 51246
 + Clustering voxels ...
 + Largest cluster has 51020 voxels
 + Clustering voxels ...
 + Largest cluster has 50976 voxels
 + Filled    45 voxels in small holes; now have 51021 voxels
 + Filled     6 voxels in large holes; now have 51027 voxels
 + Clustering voxels ...
 + Largest cluster has 51027 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 375248 voxels
 + Mask now has 51027 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 367202 voxels
++ 59073 voxels in the mask [out of 426275: 13.86%]
++ first  13 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  25 y-planes are zero [from I]
++ last   17 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0094
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 59346 survived, 366929 were zero
++ writing result full_mask.tb0094...
3dresample -master full_mask.tb0094+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0094
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 56031 survived, 370244 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0094...
3dABoverlap -no_automask full_mask.tb0094+orig mask_anat.tb0094+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0094+orig.BRIK  B=./mask_anat.tb0094+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
59346        56031        62810        52567        6779         3464         11.4228      6.1823     0.8355     1.1355     0.8992
3ddot -dodice full_mask.tb0094+orig mask_anat.tb0094+orig
tee out.mask_ae_dice.txt
0.911221	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0094
total number of censored TRs (simple form) = 36
1deval -a motion_tb0094_censor.1D -b outcount_tb0094_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0094_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0094.r01.blur+orig.HEAD pb03.tb0094.r02.blur+orig.HEAD pb03.tb0094.r03.blur+orig.HEAD -censor censor_tb0094_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0094 -errts errts.tb0094 -bucket stats.tb0094
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0094.r01.blur+orig.HEAD pb03.tb0094.r02.blur+orig.HEAD pb03.tb0094.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 50961 voxels (out of 426275 = 12.0%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 383 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0094.r01.blur+orig.HEAD pb03.tb0094.r02.blur+orig.HEAD pb03.tb0094.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0094_REML -Rvar stats.tb0094_REMLvar \
 -Rfitts fitts.tb0094_REML -Rerrts errts.tb0094_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (383x24):  5.90393  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (383x6):  1.03996  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (383x18):  5.68765  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (383x6):  4.12945  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (383x12):  1.2146  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.74948e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.16 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=8.731
++ Job #2: processing voxels 85254 to 127880; elapsed time=8.745
++ Job #3: processing voxels 127881 to 170507; elapsed time=8.759
++ Job #4: processing voxels 170508 to 213134; elapsed time=8.773
++ Job #5: processing voxels 213135 to 255761; elapsed time=8.786
++ Job #6: processing voxels 255762 to 298388; elapsed time=8.801
++ Job #7: processing voxels 298389 to 341015; elapsed time=8.814
++ Job #8: processing voxels 341016 to 383642; elapsed time=8.828
++ Job #9: processing voxels 383643 to 426274; elapsed time=8.842
++ Job #0: processing voxels 0 to 42626; elapsed time=8.852
++ voxel loop:0123456789.0123456789.0123456789.0123456789.0123456789.++ Job #1 finished; elapsed time=19.556

++ Job #0 waiting for children to finish; elapsed time=19.557
++ Job #5 finished; elapsed time=19.587
++ Job #3 finished; elapsed time=19.591
++ Job #7 finished; elapsed time=19.630
++ Job #2 finished; elapsed time=19.636
++ Job #8 finished; elapsed time=19.658
++ Job #6 finished; elapsed time=19.672
++ Job #4 finished; elapsed time=19.713
++ Job #9 finished; elapsed time=19.834
++ Job #0 now finishing up; elapsed time=19.849
++ Smallest FDR q [0 Full_Fstat] = 5.11602e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 1.3164e-13
++ Smallest FDR q [3 uns1_Fstat] = 1.31612e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 9.4675e-13
++ Smallest FDR q [6 uns2_Fstat] = 9.46458e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 8.38922e-14
++ Smallest FDR q [9 uns3_Fstat] = 8.38807e-14
++ Smallest FDR q [11 str1#0_Tstat] = 2.52292e-13
++ Smallest FDR q [12 str1_Fstat] = 2.52211e-13
++ Smallest FDR q [14 str2#0_Tstat] = 4.62829e-13
++ Smallest FDR q [15 str2_Fstat] = 4.62818e-13
++ Smallest FDR q [17 str3#0_Tstat] = 8.02732e-14
++ Smallest FDR q [18 str3_Fstat] = 8.02484e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 7.23565e-15
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 7.23341e-15
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 7.93354e-15
++ Smallest FDR q [24 structured_GLT_Fstat] = 7.93303e-15
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 0.00064722
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 0.00064722
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 6.79224e-09
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 6.79135e-09
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 2.07594e-06
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 2.07597e-06
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 7.42114e-05
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 7.4215e-05
++ Wrote bucket dataset into ./stats.tb0094+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0094+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0094+orig.BRIK
++ Program finished; elapsed time=35.273
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.806       0.856  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.767       0.828  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.700       0.768  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.504       0.581  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.433      -0.397  ( 6 vs. 16)  Run#2Pol#2  vs.  str2#0
  medium:       0.417       0.493  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:      -0.405       0.000  ( 4 vs. 17)  Run#2Pol#0  vs.  str3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0094.r01.blur+orig.HEAD pb03.tb0094.r02.blur+orig.HEAD pb03.tb0094.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0094_REML -Rvar stats.tb0094_REMLvar -Rfitts fitts.tb0094_REML -Rerrts errts.tb0094_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 50961 voxels (out of 426275 = 12.0%)
++ -----  matrix condition (383x24):  5.90393  ++ VERY GOOD ++
 + masked off 254887 voxels for being all zero; 171388 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 309 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=8.43
 + X matrix: 46.649% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=383 cols=24; 109*1 cases; total CPU=0.00 Elapsed=8.45
 +  average case bandwidth = 11.47
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=44.68
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=88.79
++ Output dataset ./stats.tb0094_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0094_REML+orig.BRIK
++ Output dataset ./errts.tb0094_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0094_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.16084e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 2.53991e-08
++ Smallest FDR q [3 uns1_Fstat] = 2.53991e-08
++ Smallest FDR q [5 uns2#0_Tstat] = 7.40766e-06
++ Smallest FDR q [6 uns2_Fstat] = 7.40766e-06
++ Smallest FDR q [8 uns3#0_Tstat] = 5.85109e-10
++ Smallest FDR q [9 uns3_Fstat] = 5.85109e-10
++ Smallest FDR q [11 str1#0_Tstat] = 1.54507e-07
++ Smallest FDR q [12 str1_Fstat] = 1.54506e-07
++ Smallest FDR q [14 str2#0_Tstat] = 0.000210438
++ Smallest FDR q [15 str2_Fstat] = 0.000210438
++ Smallest FDR q [17 str3#0_Tstat] = 7.26139e-10
++ Smallest FDR q [18 str3_Fstat] = 7.26137e-10
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.13271e-13
++ Smallest FDR q [21 unstructured_Fstat] = 1.13271e-13
++ Smallest FDR q [23 structured#0_Tstat] = 1.33623e-13
++ Smallest FDR q [24 structured_Fstat] = 1.33623e-13
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.999882 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.999882 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.109156 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.109156 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.444725 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.444725 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.999627 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.999627 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0094_REML+orig
++ Output dataset ./stats.tb0094_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=104.79
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0094 pb03.tb0094.r01.blur+orig.HEAD pb03.tb0094.r02.blur+orig.HEAD pb03.tb0094.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.0 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0094+orig[0..56,59..70,90..142,145..149,152..163,166..205,213..280,285..289,292..298,302..313,325..433,447..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0094_REML+orig[0..56,59..70,90..142,145..149,152..163,166..205,213..280,285..289,292..298,302..313,325..433,447..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0094+orig -expr c*a/b -prefix TSNR.tb0094
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0094_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0094+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 59346 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.138174
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0094.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..56,59..70,90..142,145..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0094+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0094+orig[0..56,59..70,90..142,145..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59346
[7m*+ WARNING:[0m removed 299 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 127 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.69 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 152..163,166..205,213..280,285..289,292..298 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0094+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0094+orig[152..163,166..205,213..280,285..289,292..298]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59346
[7m*+ WARNING:[0m removed 299 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 132 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.74 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 302..313,325..433,447..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0094+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0094+orig[302..313,325..433,447..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59346
[7m*+ WARNING:[0m removed 299 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 124 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.52 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 9.89017 9.35704 9.75491 9.66468
average errts FWHM blurs: 9.89017 9.35704 9.75491 9.66468
echo 9.89017 9.35704 9.75491 9.66468   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.490289 6.8683 13.0851 16.8204
average errts ACF blurs: 0.490289 6.8683 13.0851 16.8204
echo 0.490289 6.8683 13.0851 16.8204   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..56,59..70,90..142,145..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0094+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0094_REML+orig[0..56,59..70,90..142,145..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59346
[7m*+ WARNING:[0m removed 299 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 127 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.53 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 152..163,166..205,213..280,285..289,292..298 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0094+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0094_REML+orig[152..163,166..205,213..280,285..289,292..298]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59346
[7m*+ WARNING:[0m removed 299 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 132 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.61 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 302..313,325..433,447..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0094+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0094_REML+orig[302..313,325..433,447..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59346
[7m*+ WARNING:[0m removed 299 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 124 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.37 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 9.83619 9.31346 9.70248 9.61478
average err_reml FWHM blurs: 9.83619 9.31346 9.70248 9.61478
echo 9.83619 9.31346 9.70248 9.61478   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.487545 6.90464 12.9092 16.8148
average err_reml ACF blurs: 0.487545 6.90464 12.9092 16.8148
echo 0.487545 6.90464 12.9092 16.8148   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0094.1D
3dClustSim -both -mask full_mask.tb0094+orig -acf 0.487545 6.90464 12.9092 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 59346 voxels in mask (13.92% of total)
++ Kernel function radius = 41.87 mm
++ ACF(0.49,6.90,12.91) => FWHM=16.80 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 477.3 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0094+orig stats.tb0094_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0094+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0094_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0094 -dsets pb00.tb0094.r01.tcat+orig.HEAD pb00.tb0094.r02.tcat+orig.HEAD pb00.tb0094.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0094.r01.blur+orig.BRIK rm.pb03.tb0094.r01.blur+orig.HEAD rm.pb03.tb0094.r02.blur+orig.BRIK rm.pb03.tb0094.r02.blur+orig.HEAD rm.pb03.tb0094.r03.blur+orig.BRIK rm.pb03.tb0094.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0094.txt
./@ss_review_basic

subject ID                : tb0094
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0094+orig.HEAD
final stats dset          : stats.tb0094_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 21
average motion (per TR)   : 0.090665
average censored motion   : 0.043283
max motion displacement   : 5.79285
max censored displacement : 3.72782
outlier limit             : 0.1
average outlier frac (TR) : 0.0307622
num TRs above out limit   : 47

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 127 132 124
num TRs per run (censored): 23 18 26
fraction censored per run : 0.153333 0.12 0.173333
TRs total (uncensored)    : 450
TRs total                 : 383
degrees of freedom used   : 24
degrees of freedom left   : 359

TRs censored              : 67
censor fraction           : 0.148889
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 4 15 24 20 8 8
fraction TRs censored     : 0.059 0.221 0.353 0.180 0.072 0.072
ave mot per sresp (orig)  : 0.070377 0.132187 0.177778 0.083375 0.050679 0.090354
ave mot per sresp (cens)  : 0.051067 0.045332 0.033771 0.053429 0.031254 0.032129

TSNR average              : 305.843
global correlation (GCOR) : 0.138174
anat/EPI mask Dice coef   : 0.911221
maximum F-stat (masked)   : 21.6756
blur estimates (ACF)      : 0.487545 6.90464 12.9092
blur estimates (FWHM)     : 9.83619 9.31346 9.70248


cd ..
echo execution finished: `date`
date
execution finished: Tue Aug  8 20:05:55 EDT 2017
