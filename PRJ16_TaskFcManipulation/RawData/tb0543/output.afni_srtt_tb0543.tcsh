echo auto-generated by afni_proc.py, Wed Aug  9 06:45:43 2017
auto-generated by afni_proc.py, Wed Aug  9 06:45:43 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 06:45:43 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0543
endif
set output_dir = tb0543.srtt
if ( -d tb0543.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0543.srtt
mkdir tb0543.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0543.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0543.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0543.srtt/pb00.tb0543.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0543.srtt/pb00.tb0543.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0543.srtt/pb00.tb0543.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0543.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0543.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0543.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0543.r01.tcat+orig.BRIK is 14.900002 degrees from plumb.
++ 29233 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0543.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0543.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0543.r02.tcat+orig.BRIK is 14.900002 degrees from plumb.
++ 29262 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0543.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0543.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0543.r03.tcat+orig.BRIK is 14.900002 degrees from plumb.
++ 29216 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0543.r01.tshift -tpattern alt+z2 pb00.tb0543.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0543.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0543.r01.tcat+orig.BRIK is 14.900002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0543.r02.tshift -tpattern alt+z2 pb00.tb0543.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0543.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0543.r02.tcat+orig.BRIK is 14.900002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0543.r03.tshift -tpattern alt+z2 pb00.tb0543.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0543.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0543.r03.tcat+orig.BRIK is 14.900002 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0543.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 14.900002 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 347.531586
 + Used gradual clip level = 320.044006 .. 391.076385
 + Number voxels above clip level = 29686
 + Clustering voxels ...
 + Largest cluster has 29329 voxels
 + Clustering voxels ...
 + Largest cluster has 28860 voxels
 + Filled   327 voxels in small holes; now have 29187 voxels
 + Clustering voxels ...
 + Largest cluster has 29186 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 101886 voxels
 + Mask now has 29186 voxels
++ 29186 voxels in the mask [out of 131072: 22.27%]
++ first  13 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   7 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    3 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 860.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/860.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 14.900002 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1613096 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=1
++ 29186 voxels [19.3%] in weight mask
++ Number of points for matching = 29186
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.883 29.514 18.631 (index)
 + source center of mass = 86.265 162.630 184.548 (index)
 + source-target CM = 0.249 1.226 -1.158 (xyz)
 + center of mass shifts = 0.249 1.226 -1.158
++ shift param auto-range: -69.3..69.8 -68.3..70.7 -47.4..45.1
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.751495 .. 10.248505
 + Range param#2 [y-shift] = -8.773796 .. 11.226204
 + Range param#3 [z-shift] = -11.158066 .. 8.841934
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.751495 .. 40.248505
 + Range param#2 [y-shift] = -38.773796 .. 41.226204
 + Range param#3 [z-shift] = -41.158066 .. 38.841934
 + 12 free parameters
++ Normalized convergence radius = 0.000468
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1613096 [out of 17352896] voxels
 + base mask has 40228 [out of 151552] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=82 usiz=163
 + - copying weight image
 + - using 29186 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 25150 total points stored in 236 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo-+.-+-o-+-.+--...o..-+-$+ + - best 45 costs found:
    0 v=-0.207579:   0.25   1.23  -1.16   0.00   0.00   0.00  [grid]
    1 v=-0.044629: -13.08 -12.11  12.18 -15.00 -30.00  15.00  [grid]
    2 v=-0.036854: -16.61 -17.36  13.30 -19.57 -37.09  16.59  [rand]
    3 v=-0.036646: -26.42 -12.11  12.18 -15.00 -15.00  30.00  [grid]
    4 v=-0.035722: -26.42 -12.11  12.18 -30.00 -15.00  30.00  [grid]
    5 v=-0.033357: -13.08 -12.11  12.18 -15.00 -15.00  15.00  [grid]
    6 v=-0.031904:  35.10 -34.45  13.09  40.22 -24.26 -41.52  [rand]
    7 v=-0.031879:  19.74  17.90   1.44  30.54  19.59 -20.03  [rand]
    8 v=-0.031433: -13.78 -14.49  13.51 -24.25 -37.55   4.41  [rand]
    9 v=-0.031089: -26.42 -25.44  12.18 -15.00 -30.00  30.00  [grid]
   10 v=-0.030675: -26.42 -25.44  12.18 -15.00 -30.00  15.00  [grid]
   11 v=-0.030589: -13.08 -25.44  12.18 -15.00 -15.00  15.00  [grid]
   12 v=-0.030566: -26.42 -25.44  25.51 -15.00  15.00  30.00  [grid]
   13 v=-0.030262: -26.42 -25.44  12.18 -30.00 -30.00  30.00  [grid]
   14 v=-0.029903:  10.07  25.98 -12.54   3.10  34.36   2.55  [rand]
   15 v=-0.029877: -13.08 -25.44  12.18 -15.00 -30.00  15.00  [grid]
   16 v=-0.029608: -24.10 -28.47  11.87 -28.68 -38.91  32.36  [rand]
   17 v=-0.029596: -13.08 -25.44  12.18 -30.00 -30.00  15.00  [grid]
   18 v=-0.029524: -13.08  14.56  12.18  30.00  15.00  30.00  [grid]
   19 v=-0.029207: -26.42 -12.11  12.18 -30.00 -30.00  15.00  [grid]
   20 v=-0.028790: -22.10 -15.16  14.67 -41.11 -22.86   3.97  [rand]
   21 v=-0.028601: -13.78 -14.49  13.51 -24.25 -37.55  -4.41  [rand]
   22 v=-0.028212: -22.60 -22.35   9.26  -5.91 -29.74  29.45  [rand]
   23 v=-0.027829:  -3.83   7.45   6.64   4.32 -22.85  18.95  [rand]
   24 v=-0.027712:  13.58 -12.11  12.18  15.00 -30.00 -15.00  [grid]
   25 v=-0.027674: -15.73 -18.27  -6.88 -20.53   3.14  10.08  [rand]
   26 v=-0.027176: -26.42 -25.44  25.51 -30.00 -15.00  30.00  [grid]
   27 v=-0.027071: -32.24 -13.47  10.65 -11.16  -9.40  34.39  [rand]
   28 v=-0.026380: -34.08 -15.36   7.44 -16.34  -8.64  40.54  [rand]
   29 v=-0.026140: -19.24  17.90  -3.76 -30.54  19.59  20.03  [rand]
   30 v=-0.025767: -26.42 -12.11  12.18 -30.00 -30.00  30.00  [grid]
   31 v=-0.025765: -13.08 -25.44 -14.49 -30.00 -15.00 -30.00  [grid]
   32 v=-0.025764: -13.08 -25.44  12.18 -15.00 -30.00  30.00  [grid]
   33 v=-0.025728:  10.07  25.98 -12.54   3.10  34.36  -2.55  [rand]
   34 v=-0.025546: -13.08 -12.11  12.18 -30.00 -30.00  15.00  [grid]
   35 v=-0.025497:  -3.83  -5.00   6.64   4.32 -22.85  18.95  [rand]
   36 v=-0.025134: -31.14 -28.73  -5.56 -42.54  -9.20  25.31  [rand]
   37 v=-0.024731:  26.92 -12.11  12.18 -30.00  30.00 -30.00  [grid]
   38 v=-0.024601:  13.58 -25.44  12.18  15.00 -30.00 -15.00  [grid]
   39 v=-0.024544: -26.42  27.89 -14.49 -30.00  15.00 -30.00  [grid]
   40 v=-0.024401: -18.49 -35.17  31.89 -24.90   4.74  17.23  [rand]
   41 v=-0.024148:  13.58  27.89 -14.49  15.00  30.00 -15.00  [grid]
   42 v=-0.023981:  25.21  30.28  34.29 -17.69  14.58 -34.92  [rand]
   43 v=-0.023913: -31.59 -10.57   1.58 -23.31  -3.26  40.47  [rand]
   44 v=-0.023817:  32.73 -13.47  10.65  11.16  -9.40 -34.39  [rand]
*[#8004=-0.374967] *[#8013=-0.382743] *[#8014=-0.400535] *[#8015=-0.462073] *[#8016=-0.522402] *[#8018=-0.53377] *[#8021=-0.558424] *[#8023=-0.582503] *[#8024=-0.59001] *[#8027=-0.593609] *[#8029=-0.600136] *[#8032=-0.606737]  + - costs of the above after a little optimization:
  * 0 v=-0.606737:  -0.44  -0.50   0.96   0.59   1.17   0.37  [grid]
    1 v=-0.061400: -13.83 -12.02  15.43 -10.36 -29.82  14.60  [grid]
    2 v=-0.047068: -11.22 -15.85  13.47 -17.52 -36.89  16.09  [rand]
    3 v=-0.049167: -26.12 -12.15  11.21 -15.46 -11.39  28.37  [grid]
    4 v=-0.048060: -24.48 -13.44  10.96 -30.48 -17.05  28.15  [grid]
    5 v=-0.081552: -14.99  -9.12  13.44  -4.54 -13.29  18.65  [grid]
    6 v=-0.033158:  35.10 -31.95  12.43  39.68 -25.21 -42.20  [rand]
    7 v=-0.040761:  15.60  18.30   1.47  31.99  19.75 -20.54  [rand]
    8 v=-0.044520: -13.57 -11.94  14.05 -25.13 -35.93  10.73  [rand]
    9 v=-0.042203: -25.84 -29.76  12.17 -16.40 -29.57  29.12  [grid]
   10 v=-0.083862: -14.42 -26.68  14.10  -6.46 -29.88  14.01  [grid]
   11 v=-0.086537: -13.49 -21.65  14.35  -5.41 -25.77  14.37  [grid]
   12 v=-0.032821: -25.71 -25.41  25.64 -15.25  15.15  29.97  [grid]
   13 v=-0.061535: -25.82 -32.35  10.07 -27.34 -29.29  25.86  [grid]
   14 v=-0.044284:   7.91  26.90 -13.14   1.83  32.51   2.19  [rand]
   15 v=-0.086083: -13.31 -27.31  14.73  -4.35 -30.83  14.02  [grid]
   16 v=-0.062230: -25.98 -33.48  11.19 -27.77 -31.33  24.94  [rand]
   17 v=-0.042829: -17.28 -25.76  11.65 -29.60 -29.52  15.04  [grid]
   18 v=-0.044473: -15.85  14.23  11.43  29.76  18.01  27.33  [grid]
   19 v=-0.036254: -26.40  -8.40  12.26 -29.03 -30.34  15.00  [grid]
   20 v=-0.047339: -18.14 -14.40  14.93 -44.43 -23.85   3.29  [rand]
   21 v=-0.039626: -13.16 -13.96  13.74 -24.64 -42.36   0.46  [rand]
   22 v=-0.049302: -23.19 -26.73  10.72  -4.97 -29.82  28.66  [rand]
   23 v=-0.037405:  -4.43   7.62   6.81   5.91 -21.03  25.21  [rand]
   24 v=-0.040113:  14.04 -11.75  15.97  14.95 -29.90 -15.17  [grid]
   25 v=-0.066140: -15.21 -12.61  -8.16 -15.12   3.43   8.75  [rand]
   26 v=-0.035375: -26.36 -27.29  25.15 -30.18 -14.83  33.44  [grid]
   27 v=-0.037774: -28.76 -12.52  10.55 -10.68  -9.32  33.93  [rand]
   28 v=-0.034899: -33.87 -13.85   8.02 -10.38  -7.98  41.16  [rand]
   29 v=-0.032298: -18.95  14.31  -4.02 -30.26  19.06  20.01  [rand]
   30 v=-0.037270: -26.78 -11.12  13.07 -23.21 -30.56  30.63  [grid]
   31 v=-0.044520: -13.54 -22.65  -8.69 -29.41 -17.03 -23.48  [grid]
   32 v=-0.044098: -13.15 -30.15  12.37  -8.99 -30.30  23.81  [grid]
   33 v=-0.052096:   5.48  25.57 -18.43   2.78  34.57  -2.45  [rand]
   34 v=-0.035274: -16.32 -12.30  12.90 -28.95 -31.48  11.64  [grid]
   35 v=-0.037866:  -3.69  -8.41   8.09   3.97 -22.12  19.26  [rand]
   36 v=-0.039769: -31.80 -29.71  -4.02 -39.37 -12.60  31.89  [rand]
   37 v=-0.028689:  26.87 -12.08  12.62 -30.03  29.75 -25.55  [grid]
   38 v=-0.044807:  12.46 -25.99  11.99   8.73 -30.89 -13.32  [grid]
   39 v=-0.026845: -26.63  28.39 -14.04 -29.79  14.84 -30.52  [grid]
   40 v=-0.032956: -18.92 -34.10  33.52 -14.04   4.32  20.40  [rand]
   41 v=-0.033458:  13.67  26.18 -14.94  14.44  29.32 -11.21  [grid]
   42 v=-0.030089:  24.95  25.91  34.18 -19.19  13.83 -34.80  [rand]
   43 v=-0.049841: -27.86 -10.70   9.22 -22.06 -10.64  35.15  [rand]
   44 v=-0.035420:  38.38 -11.93   9.17   9.67 -10.79 -36.86  [rand]
 + - save # 0 for twobest
 + - save #11 for twobest
 + - save #15 for twobest
 + - skip #10 for twobest: too close to set #15
 + - save # 5 for twobest
 + - save #25 for twobest
 + - save #16 for twobest
 + - skip #13 for twobest: too close to set #16
 + - save # 1 for twobest
 + - save #33 for twobest
 + - save #43 for twobest
 + - save #22 for twobest
 + - save # 3 for twobest
 + - save # 4 for twobest
 + - save #20 for twobest
 + - save # 2 for twobest
 + - save #38 for twobest
 + - save #31 for twobest
 + - save # 8 for twobest
 + - save #18 for twobest
 + - save #14 for twobest
 + - save #32 for twobest
 + - save #17 for twobest
 + - save # 9 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=82 usiz=163
 + - retaining old weight image
 + - using 29186 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25422 total points stored in 255 'RHDD(13.7332)' bloks
*[#9541=-0.611114] *[#9562=-0.611594] *[#9563=-0.612365] *[#9567=-0.615132] *[#9568=-0.615325] *[#9571=-0.615659] *[#9572=-0.617067] *[#9573=-0.617316] *[#9577=-0.617472] *[#9580=-0.618016] *[#9581=-0.618037] *[#9583=-0.618398] *[#9586=-0.619043] *[#9587=-0.619063] *[#9597=-0.6197] *[#9600=-0.620241] 
 + - param set #1 has cost=-0.620241
 + -- Parameters = -0.3225 -0.3528 1.0031 0.5457 0.8946 0.3962 1.0020 1.0031 0.9980 -0.0015 0.0018 0.0020
 + - param set #2 has cost=-0.066838
 + -- Parameters = -13.0567 -21.9539 13.9347 -4.7248 -25.8795 14.1897 0.9976 0.9988 0.9958 -0.0001 0.0007 0.0109
 + - param set #3 has cost=-0.069674
 + -- Parameters = -13.3194 -26.9707 14.9686 -4.3485 -30.9015 13.9100 0.9988 0.9996 1.0001 0.0005 0.0100 -0.0001
 + - param set #4 has cost=-0.071830
 + -- Parameters = -14.3547 -9.1924 13.5664 -3.7162 -13.8872 18.2759 1.0028 0.9989 1.0012 -0.0002 -0.0007 0.0091
 + - param set #5 has cost=-0.068151
 + -- Parameters = -15.1780 -11.5076 -7.5413 -13.9269 2.3972 9.1066 1.0311 0.9759 0.9856 -0.0048 0.0038 -0.0037
 + - param set #6 has cost=-0.040378
 + -- Parameters = -25.8561 -32.9504 10.7271 -27.2068 -30.5505 25.8447 1.0024 1.0040 0.9984 0.0018 0.0095 0.0037
 + - param set #7 has cost=-0.049646
 + -- Parameters = -13.2547 -11.5844 15.7358 -10.7457 -30.3629 14.0152 1.0159 0.9967 1.0042 0.0002 0.0011 -0.0031
 + - param set #8 has cost=-0.051217
 + -- Parameters = 4.4495 25.7512 -18.4947 2.4190 32.4565 -3.7323 1.0272 1.0097 0.9827 0.0053 -0.0017 -0.0044
 + - param set #9 has cost=-0.039222
 + -- Parameters = -27.7541 -12.0068 9.4450 -23.6808 -11.2486 34.4136 0.9977 0.9990 0.9957 0.0019 0.0036 0.0045
 + - param set #10 has cost=-0.068755
 + -- Parameters = -13.5633 -28.3883 13.7849 -4.0068 -32.2135 15.5664 0.9971 1.0147 0.9922 -0.0087 0.0001 -0.0127
 + - param set #11 has cost=-0.044363
 + -- Parameters = -21.3963 -11.4822 12.0368 -16.9126 -12.4287 29.8113 1.0080 0.9934 0.9778 0.0011 0.0005 0.0027
 + - param set #12 has cost=-0.615860
 + -- Parameters = -0.3088 -0.4225 0.9979 0.5270 0.7794 0.5949 0.9984 0.9989 0.9993 -0.0010 -0.0017 -0.0001
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0158 XXX
 + --- dist(#3,#1) = 0.353 
 + --- dist(#4,#1) = 0.368 
 + --- dist(#5,#1) = 0.186 
 + --- dist(#6,#1) = 0.297 
 + --- dist(#7,#1) = 0.351 
 + --- dist(#8,#1) = 0.347 
 + --- dist(#9,#1) = 0.327 
 + --- dist(#10,#1) = 0.407 
 + --- dist(#11,#1) = 0.378 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #2 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=82 usiz=163
 + - retaining old weight image
 + - using 29186 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25415 total points stored in 261 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.598059
 + -- Parameters = -0.3330 -0.2606 1.0611 0.4796 0.8397 0.4244 1.0015 1.0045 0.9978 -0.0007 0.0018 0.0021
 + - param set #2 has cost=-0.060479
 + -- Parameters = -14.5575 -9.1174 13.6000 -3.6429 -13.6449 18.2504 1.0025 0.9986 1.0010 0.0067 -0.0010 0.0093
 + - param set #3 has cost=-0.063816
 + -- Parameters = -12.6813 -25.8854 15.5038 -3.0439 -29.9345 13.8876 0.9892 0.9955 0.9830 -0.0035 0.0127 -0.0015
 + - param set #4 has cost=-0.066022
 + -- Parameters = -13.4081 -27.7251 14.0622 -3.1911 -31.2018 14.6854 0.9812 0.9599 0.9421 -0.0377 0.0174 -0.0232
 + - param set #5 has cost=-0.085249
 + -- Parameters = -12.8574 -10.3898 -7.6737 -10.0810 3.3549 7.4328 1.0151 0.9284 1.0045 -0.0251 0.0201 0.0025
 + - param set #6 has cost=-0.058071
 + -- Parameters = -13.1384 -21.6301 14.2192 -4.6577 -26.1483 13.9327 0.9940 1.0046 0.9924 -0.0026 0.0051 0.0163
 + - param set #7 has cost=-0.044238
 + -- Parameters = 4.1630 25.9803 -18.7015 2.7790 31.9516 -4.4218 1.0297 1.0249 0.9831 0.0058 -0.0070 -0.0027
 + - param set #8 has cost=-0.042959
 + -- Parameters = -13.6669 -11.3722 16.0633 -11.4626 -30.3261 13.6076 0.9992 0.9912 1.0080 0.0081 0.0021 -0.0048
 + - param set #9 has cost=-0.033153
 + -- Parameters = -21.3737 -11.8196 12.2976 -17.3822 -11.7148 29.5346 0.9844 0.9948 0.9729 -0.0004 0.0041 0.0126
 + - param set #10 has cost=-0.033739
 + -- Parameters = -24.4612 -32.5019 11.1285 -26.1254 -29.2595 22.6040 0.9956 1.0039 0.9784 0.0009 0.0090 0.0030
 + - param set #11 has cost=-0.031103
 + -- Parameters = -28.3522 -12.8757 9.9443 -23.0886 -9.6975 34.6324 0.9663 1.0194 1.0030 0.0084 0.0300 0.0246
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.207 
 + --- dist(#3,#1) = 0.356 
 + --- dist(#4,#1) = 0.342 
 + --- dist(#5,#1) = 0.198 
 + --- dist(#6,#1) = 0.3 
 + --- dist(#7,#1) = 0.346 
 + --- dist(#8,#1) = 0.346 
 + --- dist(#9,#1) = 0.403 
 + --- dist(#10,#1) = 0.323 
 + --- dist(#11,#1) = 0.38 
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=82 usiz=163
 + - retaining old weight image
 + - using 29186 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25691 total points stored in 271 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.571480
 + -- Parameters = -0.3091 -0.2105 1.0382 0.5675 0.6361 0.0722 1.0014 1.0054 0.9965 0.0002 0.0084 -0.0021
 + - param set #2 has cost=-0.120533
 + -- Parameters = -10.3071 -8.8860 -5.8676 -6.5008 3.4347 5.2543 1.0343 0.8852 0.9724 -0.0543 -0.0071 -0.0267
 + - param set #3 has cost=-0.053271
 + -- Parameters = -12.5847 -27.8028 14.2775 -3.6985 -31.0312 13.8626 0.9808 0.9497 0.9446 -0.0402 0.0205 -0.0206
 + - param set #4 has cost=-0.051826
 + -- Parameters = -12.5596 -25.9971 15.5327 -2.9735 -30.8022 13.8465 0.9906 0.9955 0.9743 -0.0142 0.0145 0.0030
 + - param set #5 has cost=-0.059099
 + -- Parameters = -12.8593 -10.4996 14.4262 -2.6318 -14.8012 15.4794 0.9594 1.0099 0.9773 0.0010 0.0355 0.0222
 + - param set #6 has cost=-0.050057
 + -- Parameters = -11.9386 -20.7419 13.6039 -4.5547 -25.4474 12.5744 0.9872 1.0059 0.9822 -0.0010 0.0128 0.0157
 + - param set #7 has cost=-0.044126
 + -- Parameters = 4.0376 26.1201 -18.6422 2.8692 31.9110 -4.2295 1.0281 1.0354 0.9834 0.0074 -0.0072 -0.0049
 + - param set #8 has cost=-0.037836
 + -- Parameters = -13.4908 -11.3436 16.1308 -11.5229 -30.2243 13.5262 0.9986 0.9914 1.0081 0.0082 0.0021 -0.0045
 + - param set #9 has cost=-0.029399
 + -- Parameters = -24.7053 -32.1616 11.0417 -26.2077 -29.1117 22.6528 0.9949 1.0081 0.9757 0.0004 0.0060 0.0004
 + - param set #10 has cost=-0.029736
 + -- Parameters = -21.2404 -11.9294 12.3167 -16.2252 -10.8986 29.5527 0.9844 0.9928 0.9704 -0.0021 0.0099 0.0096
 + - param set #11 has cost=-0.027685
 + -- Parameters = -28.2223 -12.9879 9.9117 -23.0641 -9.6879 34.6286 0.9677 1.0128 1.0037 0.0073 0.0302 0.0254
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.328 
 + --- dist(#3,#1) = 0.172 
 + --- dist(#4,#1) = 0.352 
 + --- dist(#5,#1) = 0.349 
 + --- dist(#6,#1) = 0.29 
 + --- dist(#7,#1) = 0.347 
 + --- dist(#8,#1) = 0.343 
 + --- dist(#9,#1) = 0.328 
 + --- dist(#10,#1) = 0.399 
 + --- dist(#11,#1) = 0.384 
 + - Total coarse refinement net CPU time = 0.0 s; 2908 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=82 usiz=163
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 25771 total points stored in 274 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.552577 *
 + -- Parameters = -0.3091 -0.2105 1.0382 0.5675 0.6361 0.0722 1.0014 1.0054 0.9965 0.0002 0.0084 -0.0021
 + - cost(#2)=-0.116002  
 + -- Parameters = -10.3071 -8.8860 -5.8676 -6.5008 3.4347 5.2543 1.0343 0.8852 0.9724 -0.0543 -0.0071 -0.0267
 + - cost(#3)=-0.056847  
 + -- Parameters = -12.8593 -10.4996 14.4262 -2.6318 -14.8012 15.4794 0.9594 1.0099 0.9773 0.0010 0.0355 0.0222
 + - cost(#4)=-0.050645  
 + -- Parameters = -12.5847 -27.8028 14.2775 -3.6985 -31.0312 13.8626 0.9808 0.9497 0.9446 -0.0402 0.0205 -0.0206
 + - cost(#5)=-0.049028  
 + -- Parameters = -12.5596 -25.9971 15.5327 -2.9735 -30.8022 13.8465 0.9906 0.9955 0.9743 -0.0142 0.0145 0.0030
 + - cost(#6)=-0.047723  
 + -- Parameters = -11.9386 -20.7419 13.6039 -4.5547 -25.4474 12.5744 0.9872 1.0059 0.9822 -0.0010 0.0128 0.0157
 + - cost(#7)=-0.041415  
 + -- Parameters = 4.0376 26.1201 -18.6422 2.8692 31.9110 -4.2295 1.0281 1.0354 0.9834 0.0074 -0.0072 -0.0049
 + - cost(#8)=-0.033095  
 + -- Parameters = -13.4908 -11.3436 16.1308 -11.5229 -30.2243 13.5262 0.9986 0.9914 1.0081 0.0082 0.0021 -0.0045
 + - cost(#9)=-0.030090  
 + -- Parameters = -21.2404 -11.9294 12.3167 -16.2252 -10.8986 29.5527 0.9844 0.9928 0.9704 -0.0021 0.0099 0.0096
 + - cost(#10)=-0.025982  
 + -- Parameters = -24.7053 -32.1616 11.0417 -26.2077 -29.1117 22.6528 0.9949 1.0081 0.9757 0.0004 0.0060 0.0004
 + - cost(#11)=-0.026975  
 + -- Parameters = -28.2223 -12.9879 9.9117 -23.0641 -9.6879 34.6286 0.9677 1.0128 1.0037 0.0073 0.0302 0.0254
 + - cost(#12)=-0.178760  
 + -- Parameters = 0.2485 1.2262 -1.1581 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.554256 *
 + -- Parameters = -0.3139 -0.2166 0.9639 0.5683 0.6538 -0.0038 1.0020 1.0035 1.0010 0.0018 0.0105 -0.0034
 + - cost(#2)=-0.146528  
 + -- Parameters = -7.7382 -7.6425 -5.7227 -5.6845 4.2214 0.3133 1.0233 0.8847 0.9740 -0.0628 0.0209 -0.0453
 + - cost(#3)=-0.065511  
 + -- Parameters = -10.4181 -9.9386 13.8708 -1.5427 -14.3873 13.0896 0.9490 1.0198 0.9720 -0.0019 0.0369 0.0275
 + - cost(#4)=-0.051566  
 + -- Parameters = -12.5394 -27.9365 14.0076 -3.7764 -31.0473 13.5736 0.9744 0.9440 0.9486 -0.0420 0.0251 -0.0224
 + - cost(#5)=-0.049471  
 + -- Parameters = -12.5024 -25.6335 15.5941 -3.1128 -30.7641 13.6640 0.9899 0.9999 0.9729 -0.0138 0.0176 0.0036
 + - cost(#6)=-0.051867  
 + -- Parameters = -10.9729 -19.8921 13.5758 -4.6149 -25.4339 11.4025 0.9902 1.0254 0.9676 -0.0127 0.0200 0.0243
 + - cost(#7)=-0.042405  
 + -- Parameters = 3.8368 26.1510 -18.5950 3.0299 31.6819 -4.4023 1.0187 1.0339 0.9854 0.0093 -0.0076 -0.0061
 + - cost(#8)=-0.034732  
 + -- Parameters = -13.4612 -11.1930 16.1637 -11.6278 -29.3506 12.5360 0.9971 0.9910 1.0048 0.0068 0.0011 -0.0070
 + - cost(#9)=-0.030460  
 + -- Parameters = -21.1299 -11.9848 12.2641 -16.0022 -10.8572 29.6890 0.9858 0.9865 0.9699 -0.0024 0.0104 0.0092
 + - cost(#10)=-0.026925  
 + -- Parameters = -24.7879 -32.0923 11.2257 -26.2123 -29.3357 22.7997 0.9941 1.0158 0.9755 0.0002 0.0058 0.0008
 + - cost(#11)=-0.027204  
 + -- Parameters = -28.2780 -13.0308 9.9119 -22.9938 -9.5569 34.4230 0.9688 1.0123 1.0043 0.0086 0.0295 0.0206
 + - cost(#12)=-0.551492  
 + -- Parameters = -0.3223 -0.1998 0.9331 0.5454 0.4724 0.3060 1.0050 1.0021 1.0061 -0.0012 0.0026 -0.0087
 + - case #1 is now the best
 + - Initial  cost = -0.554256
 + - Initial fine Parameters = -0.3139 -0.2166 0.9639 0.5683 0.6538 -0.0038 1.0020 1.0035 1.0010 0.0018 0.0105 -0.0034
 + - Finalish cost = -0.554373 ; 178 funcs
 + - Final    cost = -0.554423 ; 193 funcs
 + Final fine fit Parameters:
       x-shift=-0.3207   y-shift=-0.2180   z-shift= 0.9607
       z-angle= 0.5466   x-angle= 0.5639   y-angle=-0.1044
       x-scale= 1.0016   y-scale= 1.0032   z-scale= 0.9998
     y/x-shear= 0.0016 z/x-shear= 0.0130 z/y-shear=-0.0049
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.3207 -0.2180 0.9607 0.5466 0.5639 -0.1044 1.0016 1.0032 0.9998 0.0016 0.0130 -0.0049
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 21.8
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0048 -0.9656 0.2666 223.3163 0.0130 0.2721 0.9636 68.5571 -1.0016 0.0095 -0.0018 199.6345
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.8 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3815.690100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 81.3904 48.293   ITER = 10/137
81.3904

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 123ms]
lev=0 0..171 0..213 0..166: [first cost=-0.64620] ... done [cost:-0.64620==>-0.71859]
lev=1 patch=129x161x125 [clock= 12m 55s 313ms]........:[cost=-0.74896]:........ done [cost:-0.71859==>-0.75250 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 18m 5s 603ms]......................... done [cost:-0.75250==>-0.81387 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 22m 0s 436ms].................. done [cost:-0.81387==>-0.88005 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 25m 7s 159ms]........ done [cost:-0.88005==>-0.90595 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 27m 11s 910ms]...................... done [cost:-0.90595==>-0.96792 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 29m 23s 608ms]..................... done [cost:-0.96792==>-1.00699 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 31m 41s 975ms]......................... done [cost:-1.00699==>-1.11473 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 34m 10s 641ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0543/tb0543.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 6.4 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0543.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0543.r01.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb0543.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30798 voxels
 + 4871 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.231  pitch=-0.145  yaw=-0.318  dS=-0.252  dL=-0.139  dP=-0.360
++ Mean: roll=-0.077  pitch=+0.280  yaw=-0.139  dS=-0.006  dL=+0.009  dP=-0.093
++ Max : roll=+0.088  pitch=+1.021  yaw=+0.173  dS=+0.260  dL=+0.195  dP=+0.125
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.23(0.23) 0.17(0.23) 0.30(0.27) 0.21(0.37) 0.28(0.09) 0.34(0.33) 0.23(0.32) 0.36(0.42) 0.27(0.43) 0.20(0.24) 0.48(0.35) 0.27(0.30) 0.22(0.09) 0.25(0.09) 0.28(0.04) 0.23(0.07) 0.50(0.30) 0.24(0.71) 0.73(0.53) 0.34(0.39) 0.30(0.20) 0.22(0.17) 0.26(0.25) 0.20(0.22) 0.28(0.10) 0.34(0.26) 0.27(0.16) 0.16(0.15) 0.19(0.05) 0.16(0.08) 0.23(0.09) 0.24(0.17) 0.34(0.14) 0.34(0.38) 0.38(0.22) 0.32(0.18) 0.36(0.14) 0.41(0.15) 0.34(0.27) 0.52(0.27) 0.44(0.24) 0.42(0.24) 0.45(0.23) 0.91(0.53) 0.70(0.27) 0.60(0.16) 0.75(0.43) 0.51(0.39) 0.48(0.06) 0.65(0.48) 0.58(0.22) 0.40(0.28) 0.42(0.19) 0.54(0.15) 0.56(0.14) 0.52(0.08) 0.50(0.17) 0.52(0.24) 0.65(0.15) 0.59(0.23) 0.55(0.07) 0.58(0.06) 0.58(0.07) 0.56(0.19) 0.40(0.25) 0.45(0.35) 0.32(0.31) 0.81(0.68) 0.96(0.21) 0.80(0.21) 0.77(0.09) 0.75(0.04) 0.70(0.07) 0.66(0.06) 0.65(0.03) 0.55(0.11) 0.57(0.33) 0.62(0.34) 0.61(0.05) 0.64(0.11) 0.64(0.02) 0.60(0.07) 0.60(0.03) 0.61(0.10) 0.73(0.42) 0.67(0.24) 0.58(0.26) 0.63(0.14) 0.71(0.10) 0.69(0.14) 0.72(0.05) 0.68(0.24) 0.71(0.12) 0.68(0.05) 0.70(0.15) 0.85(0.31) 0.74(0.13) 0.59(0.29) 0.63(0.26) 0.73(0.15) 0.74(0.09) 0.67(0.19) 0.77(0.17) 0.86(0.42) 1.46(0.67) 0.88(0.67) 0.94(0.23) 0.92(0.45) 0.75(0.27) 0.71(0.15) 0.80(0.19) 1.13(0.45) 0.81(0.40) 0.79(0.09) 0.79(0.07) 0.81(0.03) 0.98(0.32) 0.99(0.10) 0.83(0.30) 0.83(0.06) 1.01(0.28) 1.01(0.16) 0.88(0.15) 0.88(0.09) 0.96(0.14) 0.84(0.46) 1.08(0.33) 1.06(0.13) 0.99(0.08) 1.08(0.26) 1.04(0.22) 1.00(0.12) 1.14(0.25) 1.17(0.04) 1.05(0.35) 1.23(0.24) 1.26(0.16) 1.08(0.24) 1.11(0.09) 1.30(0.27) 1.01(0.51) 1.04(0.09) 0.87(0.19) 0.87(0.17) 1.10(0.37) 1.14(0.24) 0.90(0.34) 1.85(1.16) 1.53(0.46)
++ Max displacement in automask = 1.85 (mm) at sub-brick 148
++ Max delta displ  in automask = 1.16 (mm) at sub-brick 148
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0543.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0543.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0543.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0543.r01.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./pb01.tb0543.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 14.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.3
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0543.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0543.r02.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb0543.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31056 voxels
 + 5016 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.805  pitch=-0.117  yaw=-0.662  dS=+0.908  dL=-1.372  dP=-0.746
++ Mean: roll=-0.533  pitch=+0.199  yaw=-0.257  dS=+1.285  dL=-1.018  dP=-0.448
++ Max : roll=+0.079  pitch=+0.864  yaw=+0.322  dS=+1.782  dL=-0.198  dP=+0.046
++ Max displacements (mm) for each sub-brick:
 1.60(0.00) 1.67(0.27) 1.54(0.32) 1.62(1.01) 1.76(1.18) 1.87(0.41) 1.90(0.08) 1.80(0.24) 1.73(0.18) 1.80(0.28) 1.83(0.05) 1.85(0.10) 1.76(0.29) 1.87(0.24) 1.88(0.05) 1.83(0.08) 1.79(0.19) 1.69(0.31) 1.62(0.44) 1.61(0.29) 1.73(0.24) 1.87(0.21) 1.75(0.18) 1.75(0.05) 1.84(0.10) 1.75(0.26) 1.66(0.20) 1.74(0.22) 1.83(0.11) 1.75(0.16) 1.70(0.29) 1.98(0.44) 1.95(0.26) 2.13(0.36) 2.11(0.13) 2.05(0.12) 2.04(0.07) 2.06(0.07) 2.10(0.07) 2.18(0.22) 2.00(0.35) 2.07(0.42) 2.09(0.18) 2.02(0.18) 2.01(0.06) 2.01(0.04) 2.06(0.05) 2.11(0.06) 2.11(0.02) 2.12(0.05) 2.18(0.07) 2.22(0.05) 2.26(0.07) 2.36(0.14) 2.27(0.17) 2.24(0.05) 2.28(0.11) 2.29(0.11) 2.30(0.10) 1.86(0.89) 2.28(0.83) 1.66(1.06) 1.94(0.29) 2.03(0.22) 2.12(0.27) 2.02(0.13) 2.03(0.09) 2.08(0.07) 2.03(0.14) 1.92(0.22) 1.98(0.22) 2.02(0.04) 2.20(0.22) 2.15(0.10) 2.07(0.14) 2.09(0.07) 2.10(0.12) 2.17(0.09) 2.34(0.23) 2.20(0.34) 2.05(0.18) 2.40(0.45) 2.53(0.20) 2.29(0.41) 2.34(0.13) 2.47(0.24) 2.35(0.18) 2.35(0.11) 2.38(0.09) 2.39(0.30) 2.30(0.69) 2.45(0.62) 2.46(0.31) 2.58(0.27) 2.75(0.24) 2.85(0.12) 2.85(0.04) 2.79(0.09) 2.74(0.09) 2.65(0.22) 2.72(0.19) 2.23(0.84) 2.62(0.51) 2.68(0.35) 2.66(0.14) 2.45(1.02) 2.89(0.77) 3.01(0.90) 3.06(0.33) 3.16(0.13) 3.20(0.10) 3.28(0.10) 3.28(0.03) 3.25(0.04) 3.19(0.10) 3.26(0.17) 3.25(0.06) 3.27(0.11) 3.30(0.07) 3.27(0.17) 3.32(0.06) 3.31(0.09) 3.44(0.14) 3.42(0.17) 3.39(0.06) 3.39(0.05) 3.14(0.33) 3.08(0.19) 3.12(0.16) 3.10(0.33) 2.96(0.25) 3.01(0.16) 2.94(0.28) 3.07(0.26) 3.14(0.15) 3.14(0.13) 3.15(0.03) 3.15(0.10) 3.23(0.19) 3.19(0.20) 3.12(0.10) 3.05(0.09) 2.94(0.28) 3.04(0.20) 2.88(0.42) 2.50(0.44) 2.06(0.74) 2.20(0.65) 2.11(0.31) 2.43(0.38)
++ Max displacement in automask = 3.44 (mm) at sub-brick 122
++ Max delta displ  in automask = 1.18 (mm) at sub-brick 4
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0543.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0543.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0543.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0543.r02.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./pb01.tb0543.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 14.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.4
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0543.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0543.r03.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb0543.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30944 voxels
 + 4932 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.533  pitch=-0.502  yaw=-0.891  dS=+1.084  dL=-2.058  dP=-0.701
++ Mean: roll=-0.039  pitch=-0.216  yaw=-0.424  dS=+1.553  dL=-1.386  dP=-0.559
++ Max : roll=+0.516  pitch=+0.301  yaw=-0.118  dS=+1.832  dL=-0.750  dP=-0.288
++ Max displacements (mm) for each sub-brick:
 2.33(0.00) 2.82(0.54) 2.10(1.14) 2.34(0.76) 2.65(0.44) 2.39(0.66) 2.30(0.20) 2.42(0.25) 2.44(0.06) 2.40(0.17) 2.39(0.14) 2.38(0.06) 2.39(0.07) 2.37(0.10) 2.37(0.09) 2.34(0.12) 2.38(0.14) 2.40(0.15) 2.40(0.13) 2.48(0.18) 2.39(0.14) 2.39(0.06) 2.51(0.17) 2.42(0.14) 2.55(0.14) 2.13(0.49) 2.22(0.20) 2.41(0.25) 2.20(0.30) 2.38(0.21) 2.45(0.20) 2.35(0.14) 2.34(0.05) 2.33(0.08) 2.32(0.08) 2.45(0.23) 2.38(0.21) 2.34(0.07) 2.38(0.13) 2.43(0.12) 2.30(0.21) 2.22(0.09) 2.37(0.21) 2.35(0.09) 2.25(0.14) 2.35(0.13) 2.48(0.20) 2.17(0.36) 2.57(0.44) 2.70(0.21) 2.39(0.35) 2.30(0.11) 2.37(0.11) 2.58(0.33) 2.42(0.22) 2.42(0.13) 2.75(0.37) 2.62(0.26) 2.59(0.05) 2.76(0.24) 2.69(0.13) 2.66(0.05) 2.67(0.11) 2.60(0.17) 2.59(0.04) 2.57(0.05) 2.55(0.06) 2.22(0.42) 1.93(0.43) 2.13(0.26) 2.26(0.24) 2.23(0.17) 2.44(0.32) 2.37(0.13) 2.31(0.09) 2.52(0.25) 2.54(0.06) 2.41(0.24) 2.57(0.22) 2.61(0.08) 2.50(0.20) 2.60(0.19) 2.54(0.16) 2.52(0.14) 2.52(0.08) 2.42(0.18) 2.44(0.08) 2.59(0.26) 2.43(0.22) 2.53(0.12) 2.60(0.09) 2.45(0.21) 2.55(0.18) 2.55(0.51) 2.14(0.80) 2.76(1.53) 2.97(0.44) 2.96(0.08) 2.94(0.27) 2.96(0.24) 2.92(0.18) 2.97(0.12) 3.17(0.25) 3.03(0.25) 3.06(0.10) 3.23(0.19) 3.21(0.20) 3.29(0.12) 3.23(0.07) 3.22(0.14) 3.23(0.07) 3.34(0.17) 3.19(0.21) 3.24(0.21) 3.24(0.14) 3.36(0.20) 3.23(0.23) 3.35(0.17) 3.33(0.07) 3.38(0.06) 3.41(0.08) 3.40(0.05) 3.43(0.12) 3.43(0.06) 3.47(0.11) 3.44(0.16) 3.42(0.25) 3.39(0.19) 3.51(0.19) 3.49(0.12) 3.53(0.28) 3.62(0.15) 3.56(0.11) 3.49(0.16) 3.46(0.10) 3.63(0.29) 3.55(0.27) 3.58(0.21) 3.67(0.16) 3.74(0.31) 3.61(0.17) 3.65(0.07) 3.55(0.16) 3.67(0.15) 3.92(0.33) 4.03(0.12) 4.00(0.10) 3.91(0.14) 3.71(0.23) 3.82(0.16)
++ Max displacement in automask = 4.03 (mm) at sub-brick 145
++ Max delta displ  in automask = 1.53 (mm) at sub-brick 95
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0543.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0543.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0543.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0543.r03.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./pb01.tb0543.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 14.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.7
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0543.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0543.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0543.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0543.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0543.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0543.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0543
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0543+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0543+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1473169 voxels in source_automask+0
++ Zero-pad: zbot=0 ztop=2
++ Computing -autobox
++ 298304 voxels [67.7%] in weight mask
++ Number of points for matching = 140202
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.129408
   sp   = 0.320476
   mi   = -0.546592
   crM  = 0.0335656
   nmi  = 0.833468
   je   = 2.73561
   hel  = -0.111658
   crA  = 0.183394
   crU  = 0.191619
   lss  = 0.870592
   lpc  = 0.090469
   lpa  = 0.909531
   lpc+ = 0.217719
   ncd  = 0.990508
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.0
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0543+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0543+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 25.9 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0543.r01.blur pb02.tb0543.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0543.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0543.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0543.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0543.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0543.r02.blur pb02.tb0543.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0543.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0543.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0543.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0543.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0543.r03.blur pb02.tb0543.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0543.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0543.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0543.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0543.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0543.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0543.r01.blur+orig
++ Forming automask
 + Fixed clip level = 338.368713
 + Used gradual clip level = 290.812012 .. 383.381073
 + Number voxels above clip level = 52616
 + Clustering voxels ...
 + Largest cluster has 52527 voxels
 + Clustering voxels ...
 + Largest cluster has 52507 voxels
 + Filled    28 voxels in small holes; now have 52535 voxels
 + Clustering voxels ...
 + Largest cluster has 52535 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373740 voxels
 + Mask now has 52535 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365763 voxels
++ 60512 voxels in the mask [out of 426275: 14.20%]
++ first  13 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0543.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0543.r02.blur+orig
++ Forming automask
 + Fixed clip level = 339.202545
 + Used gradual clip level = 291.230408 .. 384.016541
 + Number voxels above clip level = 52783
 + Clustering voxels ...
 + Largest cluster has 52700 voxels
 + Clustering voxels ...
 + Largest cluster has 52677 voxels
 + Filled    40 voxels in small holes; now have 52717 voxels
 + Clustering voxels ...
 + Largest cluster has 52717 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373558 voxels
 + Mask now has 52717 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365577 voxels
++ 60698 voxels in the mask [out of 426275: 14.24%]
++ first  13 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0543.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0543.r03.blur+orig
++ Forming automask
 + Fixed clip level = 340.333649
 + Used gradual clip level = 293.610657 .. 384.280945
 + Number voxels above clip level = 52834
 + Clustering voxels ...
 + Largest cluster has 52747 voxels
 + Clustering voxels ...
 + Largest cluster has 52729 voxels
 + Filled    35 voxels in small holes; now have 52764 voxels
 + Clustering voxels ...
 + Largest cluster has 52764 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373511 voxels
 + Mask now has 52764 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365482 voxels
++ 60793 voxels in the mask [out of 426275: 14.26%]
++ first  13 x-planes are zero [from A]
++ last   12 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0543
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 60916 survived, 365359 were zero
++ writing result full_mask.tb0543...
3dresample -master full_mask.tb0543+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0543
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 58333 survived, 367942 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0543...
3dABoverlap -no_automask full_mask.tb0543+orig mask_anat.tb0543+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0543+orig.BRIK  B=./mask_anat.tb0543+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
60916        58333        64101        55148        5768         3185          9.4688      5.4600     0.8932     1.1066     0.8831
3ddot -dodice full_mask.tb0543+orig mask_anat.tb0543+orig
tee out.mask_ae_dice.txt
0.924922	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0543
total number of censored TRs (simple form) = 57
1deval -a motion_tb0543_censor.1D -b outcount_tb0543_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0543_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0543.r01.blur+orig.HEAD pb03.tb0543.r02.blur+orig.HEAD pb03.tb0543.r03.blur+orig.HEAD -censor censor_tb0543_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0543 -errts errts.tb0543 -bucket stats.tb0543
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0543.r01.blur+orig.HEAD pb03.tb0543.r02.blur+orig.HEAD pb03.tb0543.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 52669 voxels (out of 426275 = 12.4%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 391 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0543.r01.blur+orig.HEAD pb03.tb0543.r02.blur+orig.HEAD pb03.tb0543.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0543_REML -Rvar stats.tb0543_REMLvar \
 -Rfitts fitts.tb0543_REML -Rerrts errts.tb0543_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (391x24):  4.33802  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (391x6):  1.03818  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (391x18):  3.92438  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (391x6):  2.64431  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (391x12):  1.18134  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.41734e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.18 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.028
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.042
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.055
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.069
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.084
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.099
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.113
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.127
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.141
++ Job #0: processing voxels 0 to 42626; elapsed time=7.151
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #1 finished; elapsed time=17.989
9.++ Job #4 finished; elapsed time=18.008

++ Job #0 waiting for children to finish; elapsed time=18.011
++ Job #3 finished; elapsed time=18.023
++ Job #5 finished; elapsed time=18.025
++ Job #9 finished; elapsed time=18.069
++ Job #7 finished; elapsed time=18.069
++ Job #8 finished; elapsed time=18.090
++ Job #2 finished; elapsed time=18.169
++ Job #6 finished; elapsed time=18.225
++ Job #0 now finishing up; elapsed time=18.246
++ Smallest FDR q [0 Full_Fstat] = 1.34389e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 3.32247e-13
++ Smallest FDR q [3 uns1_Fstat] = 3.32212e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 2.81287e-08
++ Smallest FDR q [6 uns2_Fstat] = 2.8127e-08
++ Smallest FDR q [8 uns3#0_Tstat] = 3.16047e-12
++ Smallest FDR q [9 uns3_Fstat] = 3.16031e-12
++ Smallest FDR q [11 str1#0_Tstat] = 3.93047e-14
++ Smallest FDR q [12 str1_Fstat] = 3.92912e-14
++ Smallest FDR q [14 str2#0_Tstat] = 1.22102e-08
++ Smallest FDR q [15 str2_Fstat] = 1.22081e-08
++ Smallest FDR q [17 str3#0_Tstat] = 2.49939e-12
++ Smallest FDR q [18 str3_Fstat] = 2.49923e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.528e-13
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.52807e-13
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 8.38801e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 8.38582e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 4.143e-11
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 4.14175e-11
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 9.81981e-11
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 9.81872e-11
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 4.41531e-13
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 4.41489e-13
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.2556e-11
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.25587e-11
++ Wrote bucket dataset into ./stats.tb0543+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0543+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0543+orig.BRIK
++ Program finished; elapsed time=35.751
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.766       0.823  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.744       0.809  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.726       0.790  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.493       0.568  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.473       0.547  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.471       0.552  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:      -0.410      -0.377  (10 vs. 17)  Run#3Pol#2  vs.  str3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0543.r01.blur+orig.HEAD pb03.tb0543.r02.blur+orig.HEAD pb03.tb0543.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0543_REML -Rvar stats.tb0543_REMLvar -Rfitts fitts.tb0543_REML -Rerrts errts.tb0543_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 52669 voxels (out of 426275 = 12.4%)
++ -----  matrix condition (391x24):  4.33802  ++ VERY GOOD ++
 + masked off 246877 voxels for being all zero; 179398 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 324 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=7.81
 + X matrix: 46.707% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=391 cols=24; 109*1 cases; total CPU=0.00 Elapsed=7.84
 +  average case bandwidth = 11.35
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=48.20
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=93.65
++ Output dataset ./stats.tb0543_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0543_REML+orig.BRIK
++ Output dataset ./errts.tb0543_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0543_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 5.97915e-07
++ Smallest FDR q [2 uns1#0_Tstat] = 0.00017434
++ Smallest FDR q [3 uns1_Fstat] = 0.00017434
++ Smallest FDR q [5 uns2#0_Tstat] = 0.00449076
++ Smallest FDR q [6 uns2_Fstat] = 0.00449076
++ Smallest FDR q [8 uns3#0_Tstat] = 0.0013216
++ Smallest FDR q [9 uns3_Fstat] = 0.0013216
++ Smallest FDR q [11 str1#0_Tstat] = 2.96349e-05
++ Smallest FDR q [12 str1_Fstat] = 2.96348e-05
[7m*+ WARNING:[0m Smallest FDR q [14 str2#0_Tstat] = 0.186512 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [15 str2_Fstat] = 0.186511 ==> few true single voxel detections
++ Smallest FDR q [17 str3#0_Tstat] = 0.00797324
++ Smallest FDR q [18 str3_Fstat] = 0.00797324
++ Smallest FDR q [20 unstructured#0_Tstat] = 6.7336e-10
++ Smallest FDR q [21 unstructured_Fstat] = 6.73358e-10
++ Smallest FDR q [23 structured#0_Tstat] = 1.33771e-07
++ Smallest FDR q [24 structured_Fstat] = 1.33771e-07
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.203032 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.203032 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.270699 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.270699 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.000840603
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.000840602
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.999891 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.999891 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0543_REML+orig
++ Output dataset ./stats.tb0543_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=111.02
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0543 pb03.tb0543.r01.blur+orig.HEAD pb03.tb0543.r02.blur+orig.HEAD pb03.tb0543.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.2 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0543+orig[0..7,10..16,19..45,51..66,69..103,109,110,113..139,142..146,149..151,155..207,212..238,242..249,253,258..293,306..323,326..345,348..392,397..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0543_REML+orig[0..7,10..16,19..45,51..66,69..103,109,110,113..139,142..146,149..151,155..207,212..238,242..249,253,258..293,306..323,326..345,348..392,397..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0543+orig -expr c*a/b -prefix TSNR.tb0543
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0543_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0543+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 60916 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.228385
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0543.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..7,10..16,19..45,51..66,69..103,109,110,113..139,142..146,149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0543+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0543+orig[0..7,10..16,19..45,51..66,69..103,109,110,113..139,142..146,149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60916
[7m*+ WARNING:[0m removed 279 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 128 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.46 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150,151,155..207,212..238,242..249,253,258..293 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0543+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0543+orig[150,151,155..207,212..238,242..249,253,258..293]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60916
[7m*+ WARNING:[0m removed 279 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 127 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.78 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 306..323,326..345,348..392,397..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0543+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0543+orig[306..323,326..345,348..392,397..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60916
[7m*+ WARNING:[0m removed 279 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 136 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.51 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 10.2632 9.25196 10.1078 9.86408
average errts FWHM blurs: 10.2632 9.25196 10.1078 9.86408
echo 10.2632 9.25196 10.1078 9.86408   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.471029 6.99031 12.6503 16.836
average errts ACF blurs: 0.471029 6.99031 12.6503 16.836
echo 0.471029 6.99031 12.6503 16.836   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..7,10..16,19..45,51..66,69..103,109,110,113..139,142..146,149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0543+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0543_REML+orig[0..7,10..16,19..45,51..66,69..103,109,110,113..139,142..146,149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60916
[7m*+ WARNING:[0m removed 279 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 128 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.33 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150,151,155..207,212..238,242..249,253,258..293 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0543+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0543_REML+orig[150,151,155..207,212..238,242..249,253,258..293]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60916
[7m*+ WARNING:[0m removed 279 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 127 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.62 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 306..323,326..345,348..392,397..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0543+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0543_REML+orig[306..323,326..345,348..392,397..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 60916
[7m*+ WARNING:[0m removed 279 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 136 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.47 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 10.2253 9.2162 10.0749 9.8285
average err_reml FWHM blurs: 10.2253 9.2162 10.0749 9.8285
echo 10.2253 9.2162 10.0749 9.8285   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.48412 6.81678 13.0301 16.6584
average err_reml ACF blurs: 0.48412 6.81678 13.0301 16.6584
echo 0.48412 6.81678 13.0301 16.6584   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0543.1D
3dClustSim -both -mask full_mask.tb0543+orig -acf 0.48412 6.81678 13.0301 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 60916 voxels in mask (14.29% of total)
++ Kernel function radius = 42.35 mm
++ ACF(0.48,6.82,13.03) => FWHM=16.71 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 495.2 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0543+orig stats.tb0543_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0543+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0543_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0543 -dsets pb00.tb0543.r01.tcat+orig.HEAD pb00.tb0543.r02.tcat+orig.HEAD pb00.tb0543.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0543.r01.blur+orig.BRIK rm.pb03.tb0543.r01.blur+orig.HEAD rm.pb03.tb0543.r02.blur+orig.BRIK rm.pb03.tb0543.r02.blur+orig.HEAD rm.pb03.tb0543.r03.blur+orig.BRIK rm.pb03.tb0543.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0543.txt
./@ss_review_basic

subject ID                : tb0543
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0543+orig.HEAD
final stats dset          : stats.tb0543_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 37
average motion (per TR)   : 0.15311
average censored motion   : 0.122848
max motion displacement   : 3.20172
max censored displacement : 3.16641
outlier limit             : 0.1
average outlier frac (TR) : 0.00791569
num TRs above out limit   : 12

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 128 127 136
num TRs per run (censored): 22 23 14
fraction censored per run : 0.146667 0.153333 0.0933333
TRs total (uncensored)    : 450
TRs total                 : 391
degrees of freedom used   : 24
degrees of freedom left   : 367

TRs censored              : 59
censor fraction           : 0.131111
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 10 16 6 14 10 8
fraction TRs censored     : 0.147 0.235 0.088 0.126 0.090 0.072
ave mot per sresp (orig)  : 0.160287 0.185010 0.138412 0.147354 0.140257 0.134163
ave mot per sresp (cens)  : 0.136918 0.117450 0.114736 0.128858 0.111946 0.118120

TSNR average              : 274.997
global correlation (GCOR) : 0.228385
anat/EPI mask Dice coef   : 0.924922
maximum F-stat (masked)   : 11.1831
blur estimates (ACF)      : 0.48412 6.81678 13.0301
blur estimates (FWHM)     : 10.2253 9.2162 10.0749


cd ..
echo execution finished: `date`
date
execution finished: Wed Aug  9 07:40:04 EDT 2017
