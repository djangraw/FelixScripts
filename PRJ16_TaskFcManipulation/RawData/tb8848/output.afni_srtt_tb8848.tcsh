echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb8848
endif
set output_dir = tb8848.srtt
if ( -d tb8848.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb8848.srtt
mkdir tb8848.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb8848.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb8848.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb8848.srtt/pb00.tb8848.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.5 s
3dTcat -prefix tb8848.srtt/pb00.tb8848.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.8 s
3dTcat -prefix tb8848.srtt/pb00.tb8848.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.4 s
set tr_counts = ( 150 150 150 )
cd tb8848.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8848.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8848.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8848.r01.tcat+orig.BRIK is 4.899970 degrees from plumb.
++ 26134 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8848.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8848.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8848.r02.tcat+orig.BRIK is 4.899970 degrees from plumb.
++ 26200 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8848.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8848.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8848.r03.tcat+orig.BRIK is 4.899970 degrees from plumb.
++ 25959 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb8848.r01.tshift -tpattern alt+z2 pb00.tb8848.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8848.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8848.r01.tcat+orig.BRIK is 4.899970 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8848.r02.tshift -tpattern alt+z2 pb00.tb8848.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8848.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8848.r02.tcat+orig.BRIK is 4.899970 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8848.r03.tshift -tpattern alt+z2 pb00.tb8848.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8848.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8848.r03.tcat+orig.BRIK is 4.899970 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb8848.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 4.899970 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 348.098785
 + Used gradual clip level = 300.495911 .. 396.468811
 + Number voxels above clip level = 26941
 + Clustering voxels ...
 + Largest cluster has 26494 voxels
 + Clustering voxels ...
 + Largest cluster has 25880 voxels
 + Filled   251 voxels in small holes; now have 26131 voxels
 + Filled     1 voxels in large holes; now have 26132 voxels
 + Clustering voxels ...
 + Largest cluster has 26132 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 104940 voxels
 + Mask now has 26132 voxels
++ 26132 voxels in the mask [out of 131072: 19.94%]
++ first  14 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   4 y-planes are zero [from P]
++ last   12 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 883.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/883.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 4.899970 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 4.899970 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1354564 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 26132 voxels [15.9%] in weight mask
++ Number of points for matching = 26132
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.537 25.417 20.252 (index)
 + source center of mass = 85.417 148.807 158.850 (index)
 + source-target CM = 0.592 -12.810 -5.210 (xyz)
 + center of mass shifts = 0.592 -12.810 -5.210
++ shift param auto-range: -68.9..70.1 -82.3..56.7 -55.3..44.9
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.407814 .. 10.592186
 + Range param#2 [y-shift] = -22.809593 .. -2.809593
 + Range param#3 [z-shift] = -15.210449 .. 4.789551
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.407814 .. 40.592186
 + Range param#2 [y-shift] = -52.809593 .. 27.190407
 + Range param#3 [z-shift] = -45.210449 .. 34.789551
 + 12 free parameters
++ Normalized convergence radius = 0.000475
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1354564 [out of 13504304] voxels
 + base mask has 36092 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=66 usiz=171
 + - copying weight image
 + - using 26132 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 22411 total points stored in 208 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo-o-..+.ooo*[#28=-0.0410827] *--o+...o.o..-$.+-+-
 + - best 45 costs found:
    0 v=-0.041083: -12.74 -26.14   8.12 -15.00 -15.00  15.00  [grid]
    1 v=-0.039744: -26.07 -26.14   8.12 -30.00 -30.00  15.00  [grid]
    2 v=-0.039264:  22.91 -42.44 -12.21   8.73 -38.75 -33.73  [rand]
    3 v=-0.039083:  22.91 -42.44 -12.21  -8.73 -38.75 -33.73  [rand]
    4 v=-0.037550: -22.26 -36.38   5.21  -5.91 -29.74  29.45  [rand]
    5 v=-0.036127: -32.44 -17.83  31.61 -11.98   4.28  19.20  [rand]
    6 v=-0.033144: -26.07  13.86  21.46  15.00  15.00  15.00  [grid]
    7 v=-0.033020:  33.08   1.88   6.60  11.16   9.40 -34.39  [rand]
    8 v=-0.032601:  27.26 -39.48  21.46  30.00 -30.00 -30.00  [grid]
    9 v=-0.032248: -34.27 -43.36  10.56 -11.68 -29.04  39.38  [rand]
   10 v=-0.032219:  13.93 -26.14   8.12 -15.00 -15.00 -15.00  [grid]
   11 v=-0.031857:  27.26 -39.48   8.12  30.00 -30.00 -30.00  [grid]
   12 v=-0.031814: -26.07 -26.14   8.12 -15.00 -15.00  30.00  [grid]
   13 v=-0.030750: -26.07 -26.14   8.12 -15.00 -15.00  15.00  [grid]
   14 v=-0.030631: -26.07   0.52  21.46 -30.00  15.00  15.00  [grid]
   15 v=-0.030000:   0.59 -12.81  -5.21   0.00   0.00   0.00  [grid]
   16 v=-0.029978:  27.26 -26.14   8.12  15.00 -15.00 -30.00  [grid]
   17 v=-0.029732:  13.93 -39.48  21.46 -15.00 -15.00 -15.00  [grid]
   18 v=-0.029603: -26.07 -39.48   8.12 -15.00 -30.00  15.00  [grid]
   19 v=-0.029350: -26.07 -26.14   8.12 -30.00 -15.00  15.00  [grid]
   20 v=-0.029202:  10.92  16.00   9.80 -30.67  17.79 -20.52  [rand]
   21 v=-0.029145: -16.27 -31.40   9.24 -19.57 -37.09  16.59  [rand]
   22 v=-0.028755: -12.74  13.86   8.12 -15.00  15.00  15.00  [grid]
   23 v=-0.028229:  27.72 -31.68  22.53   5.55 -17.35 -23.42  [rand]
   24 v=-0.027660:  23.06 -41.96  24.82 -27.43 -11.56 -19.13  [rand]
   25 v=-0.027558: -26.07 -26.14   8.12 -15.00 -15.00 -15.00  [grid]
   26 v=-0.027226:  25.28  -8.20 -21.60   8.97 -18.72 -30.56  [rand]
   27 v=-0.026603:  27.26  13.86 -31.88  15.00 -15.00 -15.00  [grid]
   28 v=-0.026364: -26.07 -39.48   8.12 -30.00 -30.00  30.00  [grid]
   29 v=-0.026185: -12.74 -26.14   8.12  15.00 -15.00  15.00  [grid]
   30 v=-0.026058:   9.23 -33.24  12.26  25.20 -18.50 -13.54  [rand]
   31 v=-0.025870: -19.19   3.94  12.47  -2.96  -2.59  18.65  [rand]
   32 v=-0.025855:  13.93 -26.14   8.12  15.00 -15.00 -15.00  [grid]
   33 v=-0.025838: -27.59 -27.03   8.27 -11.27 -31.24  23.90  [rand]
   34 v=-0.025385:  33.62 -17.83  31.61  11.98   4.28 -19.20  [rand]
   35 v=-0.025088: -23.76 -42.50   7.82 -28.68 -38.91  32.36  [rand]
   36 v=-0.025033:  35.46 -43.36  10.56  11.68 -29.04 -39.38  [rand]
   37 v=-0.024584: -26.07 -26.14  21.46  30.00 -15.00  15.00  [grid]
   38 v=-0.024537: -15.39   6.68   0.51 -20.53   3.14  10.08  [rand]
   39 v=-0.024360: -26.07   0.52 -18.54 -15.00 -15.00  30.00  [grid]
   40 v=-0.024243: -26.07 -26.14   8.12  30.00 -15.00  15.00  [grid]
   41 v=-0.024130: -12.74  13.86  21.46 -15.00  15.00  15.00  [grid]
   42 v=-0.024042:  27.26 -26.14  21.46  30.00 -15.00 -30.00  [grid]
   43 v=-0.023684: -15.39   6.68   0.51 -20.53  -3.14  10.08  [rand]
   44 v=-0.023601: -34.27 -43.36  10.56  11.68 -29.04  39.38  [rand]
*[#8003=-0.0482192] *[#8005=-0.0531002] *[#8010=-0.0722861] *[#8011=-0.0787821] *[#8016=-0.0844363] *[#8021=-0.0934257] *[#8022=-0.106465] *[#8026=-0.132543] *[#8033=-0.139287] *[#8034=-0.151896] *[#8035=-0.157341] *[#8037=-0.161788] *[#8038=-0.167589] *[#8039=-0.170865] *[#8040=-0.171572] *[#8043=-0.171658] *[#8045=-0.179597] *[#8046=-0.186816] *[#8051=-0.193438] *[#8052=-0.199469] *[#8053=-0.199937] *[#8054=-0.20102] *[#8055=-0.211051] *[#8056=-0.232642] *[#8057=-0.264527] *[#8058=-0.281732] *[#8061=-0.293543] *[#8062=-0.308615] *[#8063=-0.352907] *[#8064=-0.395132] *[#8066=-0.396773] *[#8069=-0.403502] *[#8071=-0.407115] *[#8072=-0.429463] *[#8073=-0.446109] *[#8076=-0.459463] *[#8079=-0.476119] *[#8080=-0.483837] *[#8081=-0.488471] *[#8082=-0.491863] *[#8419=-0.493244] *[#8420=-0.502216] *[#8424=-0.503053] *[#8425=-0.510591] *[#8646=-0.510595] *[#9160=-0.511439] *[#9163=-0.51469] *[#9166=-0.518877] *[#9167=-0.522098] *[#9169=-0.524731]  + - costs of the above after a little optimization:
    0 v=-0.491863:  -1.42 -30.25  -2.63  -0.94 -18.50   2.63  [grid]
    1 v=-0.045740: -25.92 -27.35   6.48 -29.94 -29.61  13.51  [grid]
    2 v=-0.062915:  25.33 -42.02  -9.21   6.45 -38.18 -35.99  [rand]
    3 v=-0.062691:  24.37 -49.32 -13.09  -6.05 -42.74 -37.45  [rand]
    4 v=-0.043132: -23.35 -37.05   1.50  -6.96 -30.56  31.54  [rand]
    5 v=-0.043762: -33.03 -17.80  31.67 -12.51   3.59  23.05  [rand]
    6 v=-0.037356: -26.78  13.40  20.42  19.11  13.88  15.07  [grid]
    7 v=-0.033420:  33.01   1.80   6.18  11.18   9.31 -34.00  [rand]
    8 v=-0.041826:  26.86 -38.13  19.89  29.62 -27.56 -31.61  [grid]
    9 v=-0.038103: -35.09 -46.05   9.39 -12.12 -29.23  40.38  [rand]
   10 v=-0.510591:   0.80 -31.68  -2.14  -1.31 -19.97   0.71  [grid]
   11 v=-0.038348:  27.83 -39.14   7.68  28.99 -25.99 -29.91  [grid]
   12 v=-0.048835: -26.74 -26.95   7.11  -8.56 -17.22  26.71  [grid]
   13 v=-0.086827: -20.44 -28.18   4.31 -12.30 -21.34  15.07  [grid]
   14 v=-0.039521: -25.53   4.23  23.41 -30.77  15.40  15.80  [grid]
   15 v=-0.510595:   0.70 -31.18  -2.40  -1.74 -19.65   0.56  [grid]
   16 v=-0.038566:  30.35 -25.47   7.76  13.89 -15.73 -31.12  [grid]
   17 v=-0.049341:  13.64 -45.38  21.79 -16.65 -13.75 -14.33  [grid]
   18 v=-0.079915: -18.67 -39.34   0.60 -11.92 -29.82  14.16  [grid]
   19 v=-0.055571: -27.13 -13.97   4.06 -30.06 -11.39  16.56  [grid]
   20 v=-0.040652:  11.69  14.07   7.97 -30.70  14.94 -19.39  [rand]
   21 v=-0.042982: -19.25 -30.86   7.85 -22.14 -37.27  15.71  [rand]
   22 v=-0.052021: -15.28  14.10   5.73 -12.90  12.44  13.11  [grid]
   23 v=-0.038524:  29.59 -25.49  15.56   8.14 -17.57 -27.31  [rand]
   24 v=-0.049950:  20.20 -47.05  18.82 -18.57 -14.40 -20.43  [rand]
   25 v=-0.027579: -25.68 -26.14   8.12 -15.00 -15.00 -15.09  [grid]
   26 v=-0.037683:  27.22  -8.70 -21.06   9.50 -17.53 -29.34  [rand]
   27 v=-0.028901:  26.64  13.87 -32.21  14.59 -15.20 -14.21  [grid]
   28 v=-0.034362: -26.88 -39.52  12.73 -29.38 -31.30  31.58  [grid]
  *29 v=-0.524731:  -0.74 -30.93  -2.57  -1.02 -19.19   2.42  [grid]
   30 v=-0.036235:   9.05 -29.40  13.29  25.26 -18.25 -13.73  [rand]
   31 v=-0.069039: -17.76  -3.01   8.79  -6.80  -2.30  14.38  [rand]
   32 v=-0.078718:   9.98 -23.08   3.47  10.50 -16.34  -9.66  [grid]
   33 v=-0.067875: -26.45 -32.83   5.66 -10.87 -26.30  22.33  [rand]
   34 v=-0.047274:  29.69 -17.00  28.27  13.42   2.35 -18.93  [rand]
   35 v=-0.034590: -28.53 -43.46   8.79 -27.83 -38.08  34.30  [rand]
   36 v=-0.050090:  36.04 -50.49   9.54  12.83 -30.42 -39.11  [rand]
   37 v=-0.036575: -24.44 -27.49  19.98  31.80 -16.04  12.36  [grid]
   38 v=-0.046797: -19.62   6.42  -0.20 -20.07   2.47   9.61  [rand]
   39 v=-0.033569: -26.29   0.61 -16.84  -9.64 -15.38  28.97  [grid]
   40 v=-0.036860: -25.59 -24.77  15.71  30.27 -11.93  15.86  [grid]
   41 v=-0.027511: -12.71  17.86  21.82 -15.12  15.07  15.12  [grid]
   42 v=-0.032913:  31.51 -26.08  21.18  29.95 -15.27 -29.72  [grid]
   43 v=-0.043036: -19.18   5.67   1.04 -20.49  -2.99   9.61  [rand]
   44 v=-0.037952: -34.39 -48.19  10.52  11.84 -29.80  39.65  [rand]
 + - save #29 for twobest
 + - skip #15 for twobest: too close to set #29
 + - skip #10 for twobest: too close to set #29
 + - skip # 0 for twobest: too close to set #29
 + - save #13 for twobest
 + - save #18 for twobest
 + - save #32 for twobest
 + - save #31 for twobest
 + - save #33 for twobest
 + - save # 2 for twobest
 + - save # 3 for twobest
 + - save #19 for twobest
 + - save #22 for twobest
 + - save #36 for twobest
 + - save #24 for twobest
 + - save #17 for twobest
 + - save #12 for twobest
 + - save #34 for twobest
 + - save #38 for twobest
 + - save # 1 for twobest
 + - save # 5 for twobest
 + - save # 4 for twobest
 + - save #43 for twobest
 + - save #21 for twobest
 + - save # 8 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=66 usiz=171
 + - retaining old weight image
 + - using 26132 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22717 total points stored in 230 'RHDD(13.7332)' bloks
*[#9739=-0.53405] *[#9749=-0.537425] *[#9761=-0.542409] *[#9765=-0.544547] *[#9766=-0.544665] *[#9768=-0.545296] *[#9769=-0.545788] *[#9770=-0.547323] *[#9771=-0.547491] *[#9773=-0.547507] *[#9774=-0.548954] *[#9777=-0.549203] *[#9779=-0.550575] *[#9786=-0.550886] *[#9789=-0.551829] *[#9792=-0.551832] *[#9796=-0.552124] *[#9799=-0.55256] 
 + - param set #1 has cost=-0.552560
 + -- Parameters = -0.2526 -31.3387 -2.8303 -0.9045 -19.3124 1.7669 0.9996 1.0016 0.9993 0.0066 -0.0009 -0.0016
 + - param set #2 has cost=-0.118930
 + -- Parameters = -14.2489 -31.9993 0.9545 -10.4465 -21.9864 9.6820 0.9832 1.0324 1.0154 -0.0098 -0.0026 0.0077
 + - param set #3 has cost=-0.092966
 + -- Parameters = -16.6392 -39.9537 -1.5796 -8.4290 -26.7366 11.5002 0.9919 1.0057 1.0142 -0.0060 0.0056 0.0061
 + - param set #4 has cost=-0.304677
 + -- Parameters = 4.7657 -29.3825 0.0608 -1.4401 -17.6713 -3.1462 0.9681 0.9876 1.0149 -0.0172 0.0070 0.0093
 + - param set #5 has cost=-0.049722
 + -- Parameters = -16.9244 -2.8080 10.8304 -12.2953 -3.8404 14.0018 1.0024 1.0005 0.9966 0.0014 0.0023 0.0022
 + - param set #6 has cost=-0.063380
 + -- Parameters = -23.4984 -33.5778 5.1296 -7.8602 -27.7838 20.9241 0.9922 0.9952 0.9842 0.0082 -0.0087 -0.0050
 + - param set #7 has cost=-0.057406
 + -- Parameters = 29.0662 -46.1880 -7.9169 2.4672 -37.8721 -36.3666 0.9978 1.0011 0.9990 0.0030 0.0022 -0.0007
 + - param set #8 has cost=-0.044988
 + -- Parameters = 24.3032 -51.3927 -11.8060 -5.4076 -41.7258 -35.9032 1.0046 1.0045 0.9956 0.0052 0.0015 0.0013
 + - param set #9 has cost=-0.048492
 + -- Parameters = -27.2723 -13.6259 3.4922 -29.5060 -11.2610 16.6513 0.9978 0.9945 1.0031 0.0142 0.0001 0.0014
 + - param set #10 has cost=-0.049286
 + -- Parameters = -14.8837 7.6783 8.0171 -13.7087 12.3079 15.6109 1.0242 0.9988 1.0072 0.0072 -0.0011 -0.0109
 + - param set #11 has cost=-0.033364
 + -- Parameters = 35.9667 -50.4398 9.0717 13.1890 -30.6072 -38.6369 1.0011 1.0009 0.9996 0.0008 0.0103 0.0001
 + - param set #12 has cost=-0.442037
 + -- Parameters = -0.3607 -30.1249 -2.7568 -1.4959 -17.6060 1.8183 1.0476 0.9995 0.9879 -0.0071 0.0058 0.0133
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.131 
 + --- dist(#3,#1) = 0.107 
 + --- dist(#4,#1) = 0.175 
 + --- dist(#5,#1) = 0.205 
 + --- dist(#6,#1) = 0.291 
 + --- dist(#7,#1) = 0.424 
 + --- dist(#8,#1) = 0.357 
 + --- dist(#9,#1) = 0.488 
 + --- dist(#10,#1) = 0.338 
 + --- dist(#11,#1) = 0.419 
 + --- dist(#12,#1) = 0.453 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=66 usiz=171
 + - retaining old weight image
 + - using 26132 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22971 total points stored in 239 'RHDD(13.5933)' bloks
*[#10837=-0.552962] *[#10838=-0.553172] *[#10842=-0.55325] *[#10845=-0.553283] *[#10849=-0.553529] *[#10850=-0.553739] *[#10855=-0.554046] *[#10858=-0.554116] *[#10867=-0.554171] *[#10870=-0.554209] *[#10877=-0.554563] 
 + - param set #1 has cost=-0.554563
 + -- Parameters = -0.2064 -31.4092 -2.9652 -0.7269 -19.3366 1.7061 1.0002 1.0042 0.9983 0.0074 0.0052 -0.0022
 + - param set #2 has cost=-0.530780
 + -- Parameters = -0.3413 -30.4392 -3.1196 -0.9927 -18.0739 1.7479 1.0019 0.9973 0.9961 -0.0043 -0.0012 0.0234
 + - param set #3 has cost=-0.463158
 + -- Parameters = 3.0703 -30.9187 -2.9013 -1.4471 -18.3994 -2.1328 1.0048 0.9946 0.9908 -0.0160 0.0747 0.0140
 + - param set #4 has cost=-0.196765
 + -- Parameters = -8.2413 -31.0375 3.3416 -2.6905 -20.8835 8.4582 0.9413 1.0273 1.0655 0.0072 -0.0260 -0.0206
 + - param set #5 has cost=-0.111057
 + -- Parameters = -13.5394 -38.6954 -2.9892 -5.4998 -26.0995 11.1431 0.9835 0.9964 0.9784 0.0184 -0.0077 -0.0115
 + - param set #6 has cost=-0.065386
 + -- Parameters = -22.7807 -34.5206 4.0493 -6.1349 -27.5832 21.0617 0.9807 1.0240 0.9809 0.0090 -0.0196 0.0017
 + - param set #7 has cost=-0.046536
 + -- Parameters = 29.2267 -46.4782 -8.4441 1.4495 -37.8808 -36.1695 1.0017 1.0012 0.9988 0.0031 -0.0067 -0.0016
 + - param set #8 has cost=-0.040577
 + -- Parameters = -17.3247 -3.1466 10.2166 -12.3142 -3.9026 13.7385 1.0002 1.0061 0.9885 0.0026 0.0033 0.0105
 + - param set #9 has cost=-0.045161
 + -- Parameters = -14.9466 7.4836 7.2447 -13.6717 12.0093 15.5359 1.0463 1.0002 0.9976 0.0128 -0.0006 -0.0155
 + - param set #10 has cost=-0.041054
 + -- Parameters = -27.1013 -13.5745 3.5666 -29.3314 -11.0680 16.5472 0.9962 0.9932 1.0031 0.0156 -0.0000 0.0081
 + - param set #11 has cost=-0.051113
 + -- Parameters = 24.6184 -51.1566 -9.9930 -6.2222 -37.1427 -34.7630 1.0003 1.0113 0.9875 0.0049 -0.0005 0.0031
 + - param set #12 has cost=-0.026359
 + -- Parameters = 36.2044 -50.3243 9.0275 13.3880 -30.4643 -38.6612 1.0009 1.0128 0.9994 0.0006 0.0101 0.0000
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.115 
 + --- dist(#3,#1) = 0.313 
 + --- dist(#4,#1) = 0.183 
 + --- dist(#5,#1) = 0.167 
 + --- dist(#6,#1) = 0.282 
 + --- dist(#7,#1) = 0.405 
 + --- dist(#8,#1) = 0.421 
 + --- dist(#9,#1) = 0.486 
 + --- dist(#10,#1) = 0.336 
 + --- dist(#11,#1) = 0.353 
 + --- dist(#12,#1) = 0.455 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=66 usiz=171
 + - retaining old weight image
 + - using 26132 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22869 total points stored in 242 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.547104
 + -- Parameters = -0.0910 -31.4230 -3.2852 -0.7284 -19.5013 1.5954 0.9992 0.9964 0.9898 0.0052 0.0011 -0.0129
 + - param set #2 has cost=-0.533363
 + -- Parameters = -0.1455 -30.6630 -3.4138 -0.6746 -18.3949 1.6798 1.0011 0.9957 0.9884 0.0066 -0.0007 0.0098
 + - param set #3 has cost=-0.498910
 + -- Parameters = 1.3502 -30.6513 -3.2537 -1.1806 -18.3569 -0.5583 0.9967 0.9950 0.9872 -0.0009 0.0628 0.0126
 + - param set #4 has cost=-0.372209
 + -- Parameters = -4.4714 -31.1961 0.3546 -0.0195 -19.2448 6.5314 1.0197 1.0027 1.0509 0.0120 -0.0723 -0.0299
 + - param set #5 has cost=-0.303954
 + -- Parameters = -4.4725 -34.6718 -3.9326 1.3710 -22.9714 8.0089 1.1028 1.0373 0.9728 0.0471 -0.0789 -0.0623
 + - param set #6 has cost=-0.065968
 + -- Parameters = -22.5519 -34.3490 3.7204 -6.2240 -27.3516 20.4724 0.9814 1.0292 0.9809 0.0080 -0.0145 0.0151
 + - param set #7 has cost=-0.048122
 + -- Parameters = 25.8063 -50.6895 -10.2906 -6.2979 -36.8441 -35.5580 0.9854 1.0063 0.9868 0.0032 -0.0011 0.0012
 + - param set #8 has cost=-0.041826
 + -- Parameters = 29.7194 -46.5502 -8.0452 2.0908 -38.3556 -35.8526 1.0065 1.0048 1.0066 0.0034 -0.0306 -0.0002
 + - param set #9 has cost=-0.043182
 + -- Parameters = -14.8096 7.2326 7.4160 -13.8231 11.8099 15.6463 1.0528 1.0002 0.9982 0.0145 -0.0019 -0.0156
 + - param set #10 has cost=-0.038443
 + -- Parameters = -27.0148 -13.5566 3.2185 -29.3992 -11.1646 16.7923 0.9947 0.9932 1.0034 0.0141 -0.0019 0.0151
 + - param set #11 has cost=-0.039745
 + -- Parameters = -17.6707 -2.7902 9.7850 -11.0037 -3.7902 14.5835 0.9971 0.9959 0.9716 0.0051 0.0045 0.0179
 + - param set #12 has cost=-0.021783
 + -- Parameters = 36.2203 -50.3078 9.0397 13.3288 -30.4835 -38.6633 0.9994 1.0117 0.9991 0.0001 0.0105 -0.0003
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.102 
 + --- dist(#3,#1) = 0.277 
 + --- dist(#4,#1) = 0.33 
 + --- dist(#5,#1) = 0.36 
 + --- dist(#6,#1) = 0.281 
 + --- dist(#7,#1) = 0.413 
 + --- dist(#8,#1) = 0.483 
 + --- dist(#9,#1) = 0.416 
 + --- dist(#10,#1) = 0.358 
 + --- dist(#11,#1) = 0.337 
 + --- dist(#12,#1) = 0.454 
 + - Total coarse refinement net CPU time = 0.0 s; 3249 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=66 usiz=171
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 23094 total points stored in 248 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.529132 *
 + -- Parameters = -0.0910 -31.4230 -3.2852 -0.7284 -19.5013 1.5954 0.9992 0.9964 0.9898 0.0052 0.0011 -0.0129
 + - cost(#2)=-0.512403  
 + -- Parameters = -0.1455 -30.6630 -3.4138 -0.6746 -18.3949 1.6798 1.0011 0.9957 0.9884 0.0066 -0.0007 0.0098
 + - cost(#3)=-0.481221  
 + -- Parameters = 1.3502 -30.6513 -3.2537 -1.1806 -18.3569 -0.5583 0.9967 0.9950 0.9872 -0.0009 0.0628 0.0126
 + - cost(#4)=-0.355408  
 + -- Parameters = -4.4714 -31.1961 0.3546 -0.0195 -19.2448 6.5314 1.0197 1.0027 1.0509 0.0120 -0.0723 -0.0299
 + - cost(#5)=-0.281251  
 + -- Parameters = -4.4725 -34.6718 -3.9326 1.3710 -22.9714 8.0089 1.1028 1.0373 0.9728 0.0471 -0.0789 -0.0623
 + - cost(#6)=-0.058902  
 + -- Parameters = -22.5519 -34.3490 3.7204 -6.2240 -27.3516 20.4724 0.9814 1.0292 0.9809 0.0080 -0.0145 0.0151
 + - cost(#7)=-0.045514  
 + -- Parameters = 25.8063 -50.6895 -10.2906 -6.2979 -36.8441 -35.5580 0.9854 1.0063 0.9868 0.0032 -0.0011 0.0012
 + - cost(#8)=-0.037684  
 + -- Parameters = -14.8096 7.2326 7.4160 -13.8231 11.8099 15.6463 1.0528 1.0002 0.9982 0.0145 -0.0019 -0.0156
 + - cost(#9)=-0.036996  
 + -- Parameters = 29.7194 -46.5502 -8.0452 2.0908 -38.3556 -35.8526 1.0065 1.0048 1.0066 0.0034 -0.0306 -0.0002
 + - cost(#10)=-0.034966  
 + -- Parameters = -17.6707 -2.7902 9.7850 -11.0037 -3.7902 14.5835 0.9971 0.9959 0.9716 0.0051 0.0045 0.0179
 + - cost(#11)=-0.033610  
 + -- Parameters = -27.0148 -13.5566 3.2185 -29.3992 -11.1646 16.7923 0.9947 0.9932 1.0034 0.0141 -0.0019 0.0151
 + - cost(#12)=-0.019186  
 + -- Parameters = 36.2203 -50.3078 9.0397 13.3288 -30.4835 -38.6633 0.9994 1.0117 0.9991 0.0001 0.0105 -0.0003
 + - cost(#13)=-0.045585  
 + -- Parameters = 0.5922 -12.8096 -5.2104 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.533839 *
 + -- Parameters = -0.0694 -31.5515 -3.4001 -0.6388 -19.8565 1.5289 0.9987 0.9926 0.9849 0.0038 0.0026 -0.0211
 + - cost(#2)=-0.526292  
 + -- Parameters = -0.1615 -31.2717 -3.2479 -0.7617 -19.3410 1.5438 1.0032 0.9911 0.9917 0.0030 0.0084 -0.0118
 + - cost(#3)=-0.499896  
 + -- Parameters = 1.1397 -30.8231 -3.3164 -1.0729 -18.6186 -0.2622 0.9949 0.9901 0.9876 -0.0004 0.0483 0.0050
 + - cost(#4)=-0.401818  
 + -- Parameters = -3.7078 -31.5243 -0.9007 -0.2009 -19.6388 6.1262 0.9957 0.9904 1.0348 0.0156 -0.0841 -0.0183
 + - cost(#5)=-0.426105  
 + -- Parameters = -2.1881 -33.8634 -2.9454 -0.2510 -22.7573 4.7746 1.0000 0.9993 0.9875 0.0073 -0.0792 -0.0774
 + - cost(#6)=-0.059585  
 + -- Parameters = -22.5594 -34.1248 3.9260 -6.4389 -27.1162 20.1548 0.9830 1.0308 0.9829 0.0087 -0.0136 0.0179
 + - cost(#7)=-0.046492  
 + -- Parameters = 25.7362 -50.5456 -10.0088 -6.1641 -36.6915 -35.3365 0.9801 1.0120 0.9888 0.0022 -0.0009 0.0008
 + - cost(#8)=-0.038005  
 + -- Parameters = -14.8132 7.3838 7.2402 -13.7813 11.8848 15.6121 1.0524 1.0009 0.9908 0.0150 -0.0016 -0.0152
 + - cost(#9)=-0.037476  
 + -- Parameters = 29.6222 -46.4858 -8.0626 2.2330 -38.4315 -35.9728 1.0056 1.0034 1.0157 0.0027 -0.0323 0.0012
 + - cost(#10)=-0.036170  
 + -- Parameters = -18.0003 -3.0536 9.5958 -10.6551 -3.8264 14.7141 0.9952 0.9953 0.9693 0.0048 0.0049 0.0233
 + - cost(#11)=-0.034087  
 + -- Parameters = -27.1290 -13.4994 3.4344 -29.4353 -11.1438 16.8436 0.9884 0.9917 1.0030 0.0146 -0.0014 0.0164
 + - cost(#12)=-0.020167  
 + -- Parameters = 36.1345 -50.5250 8.9232 13.2040 -30.6785 -38.6771 0.9995 1.0146 0.9922 -0.0001 0.0082 -0.0006
 + - cost(#13)=-0.327082  
 + -- Parameters = 1.2915 -31.6500 -1.5348 -0.8862 -17.1337 0.1990 1.0114 1.0611 1.0600 0.0233 0.0448 0.0689
 + - case #1 is now the best
 + - Initial  cost = -0.533839
 + - Initial fine Parameters = -0.0694 -31.5515 -3.4001 -0.6388 -19.8565 1.5289 0.9987 0.9926 0.9849 0.0038 0.0026 -0.0211
 + - Finalish cost = -0.536898 ; 439 funcs
 + - Final    cost = -0.536936 ; 141 funcs
 + Final fine fit Parameters:
       x-shift=-0.0294   y-shift=-31.9172   z-shift=-3.5688
       z-angle=-0.6780   x-angle=-20.4392   y-angle= 1.4511
       x-scale= 0.9999   y-scale= 0.9948   z-scale= 0.9793
     y/x-shear= 0.0022 z/x-shear= 0.0052 z/y-shear=-0.0332
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.0294 -31.9172 -3.5688 -0.6780 -20.4392 1.4511 0.9999 0.9948 0.9793 0.0022 0.0052 -0.0332
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 19.0
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 4.899970 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0160 -0.9552 -0.2669 240.3604 0.0324 -0.2298 0.9550 106.1090 -0.9994 -0.0207 0.0237 198.7628
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 17.2 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3466.660100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 79.0419 45.9586   ITER = 7/137
79.0419

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 759ms]
lev=0 0..171 0..213 0..166: [first cost=-0.69665] ... done [cost:-0.69665==>-0.75564]
lev=1 patch=129x161x125 [clock= 11m 54s 429ms]........:[cost=-0.78232]:........ done [cost:-0.75564==>-0.78744 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 20m 28s 74ms]......................... done [cost:-0.78744==>-0.84742 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 26m 56s 363ms]................. done [cost:-0.84742==>-0.91414 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 32m 6s 962ms]................. done [cost:-0.91414==>-0.97349 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 35m 59s 844ms]................ done [cost:-0.97349==>-1.03947 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 39m 40s 257ms]............... done [cost:-1.03947==>-1.08966 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 43m 10s 740ms].............................. done [cost:-1.08966==>-1.17029 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 46m 53s 684ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8848/tb8848.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 14.2 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb8848.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.899970 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8848.r01.tshift+orig.BRIK is 4.899970 degrees from plumb.
++ Reading input dataset ./pb01.tb8848.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28141 voxels
 + 4719 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.216  pitch=-1.026  yaw=-0.085  dS=-1.602  dL=-0.391  dP=-0.663
++ Mean: roll=+0.362  pitch=-0.195  yaw=-0.025  dS=-0.753  dL=+0.629  dP=-0.106
++ Max : roll=+0.470  pitch=+0.751  yaw=+0.143  dS=+0.910  dL=+0.863  dP=+0.772
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.78(0.78) 0.58(0.25) 0.56(0.11) 0.50(0.10) 0.38(0.16) 2.01(2.10) 1.62(0.50) 0.99(0.70) 0.25(0.93) 2.73(2.75) 0.94(1.83) 0.52(1.29) 0.60(0.18) 0.69(0.09) 0.78(0.13) 0.81(0.06) 0.85(0.08) 0.99(0.23) 0.92(0.17) 0.86(0.12) 0.89(0.19) 0.89(0.04) 0.90(0.06) 0.95(0.06) 0.99(0.06) 1.00(0.05) 1.00(0.07) 1.06(0.16) 1.08(0.04) 1.13(0.30) 1.22(0.14) 1.15(0.20) 1.20(0.10) 1.26(0.07) 1.25(0.08) 1.24(0.08) 1.29(0.07) 1.31(0.05) 1.32(0.09) 1.38(0.09) 1.37(0.02) 1.40(0.05) 1.46(0.15) 1.48(0.05) 1.52(0.17) 1.53(0.07) 1.51(0.14) 1.53(0.06) 1.55(0.09) 1.59(0.06) 1.58(0.12) 1.62(0.05) 1.59(0.06) 1.59(0.04) 1.60(0.10) 1.63(0.07) 1.64(0.04) 1.65(0.04) 1.67(0.11) 1.66(0.08) 1.64(0.10) 1.66(0.05) 1.69(0.04) 1.70(0.05) 1.71(0.04) 1.69(0.09) 1.66(0.05) 1.67(0.04) 1.67(0.05) 1.70(0.09) 1.73(0.03) 1.66(0.10) 1.65(0.07) 1.64(0.05) 1.64(0.03) 1.63(0.07) 1.65(0.12) 1.69(0.07) 1.73(0.04) 1.70(0.06) 1.68(0.10) 1.67(0.06) 1.71(0.07) 1.72(0.06) 1.71(0.08) 1.72(0.03) 1.68(0.11) 1.65(0.10) 1.66(0.09) 1.69(0.12) 1.66(0.08) 1.62(0.06) 1.67(0.07) 1.69(0.06) 1.67(0.08) 1.65(0.08) 1.59(0.13) 1.58(0.14) 1.62(0.18) 1.64(0.10) 1.58(0.10) 1.59(0.03) 1.55(0.09) 1.54(0.08) 1.54(0.03) 1.69(0.35) 1.72(0.07) 1.70(0.07) 1.71(0.05) 1.73(0.07) 1.71(0.06) 1.64(0.10) 1.68(0.12) 1.65(0.06) 1.66(0.07) 1.63(0.15) 1.64(0.06) 1.63(0.07) 1.64(0.10) 1.69(0.17) 1.63(0.11) 1.55(0.13) 1.55(0.05) 1.53(0.03) 1.58(0.14) 1.59(0.06) 1.60(0.06) 1.66(0.14) 1.64(0.05) 1.63(0.04) 1.56(0.13) 1.54(0.10) 1.58(0.09) 1.59(0.03) 1.60(0.05) 1.61(0.09) 1.60(0.09) 1.59(0.07) 1.64(0.07) 2.20(1.64) 2.03(1.10) 2.23(1.40) 1.89(0.56) 1.82(0.07) 1.81(0.05) 1.83(0.03) 1.87(0.08) 1.90(0.07) 1.61(0.42)
++ Max displacement in automask = 2.73 (mm) at sub-brick 10
++ Max delta displ  in automask = 2.75 (mm) at sub-brick 10
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb8848.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8848.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8848.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8848.r01.tshift+orig.BRIK is 4.899970 degrees from plumb.
++ Source dataset: ./pb01.tb8848.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.6
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.899970 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.3
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb8848.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.899970 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8848.r02.tshift+orig.BRIK is 4.899970 degrees from plumb.
++ Reading input dataset ./pb01.tb8848.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28347 voxels
 + 4712 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.202  pitch=-6.022  yaw=+0.647  dS=-1.899  dL=-0.461  dP=+0.729
++ Mean: roll=+0.163  pitch=-1.784  yaw=+1.025  dS=-0.660  dL=-0.052  dP=+2.413
++ Max : roll=+0.747  pitch=+1.189  yaw=+1.332  dS=+0.156  dL=+0.938  dP=+4.912
++ Max displacements (mm) for each sub-brick:
 4.91(0.00) 3.60(1.56) 3.97(0.42) 4.07(0.24) 3.91(0.52) 4.80(1.28) 7.78(3.39) 3.44(6.00) 3.49(0.31) 4.39(1.76) 4.92(0.71) 4.72(0.31) 4.94(0.29) 6.05(1.33) 4.91(1.42) 4.61(5.72) 4.04(1.18) 3.65(1.03) 4.41(2.88) 6.68(3.08) 8.23(1.73) 6.12(2.26) 5.78(0.57) 5.78(0.12) 5.81(0.14) 6.26(0.57) 7.08(1.22) 7.12(0.16) 9.36(2.34) 9.23(0.54) 8.21(1.10) 8.94(0.79) 10.91(2.19) 10.93(0.42) 8.84(2.23) 4.55(5.05) 3.74(1.27) 4.17(0.67) 4.33(0.18) 6.28(2.52) 9.05(3.17) 9.01(0.36) 8.00(1.21) 8.02(0.24) 9.19(1.30) 12.49(3.35) 10.46(2.05) 8.91(1.70) 8.86(0.24) 8.80(0.11) 10.30(1.69) 10.85(0.64) 9.21(1.83) 9.31(0.17) 9.84(0.72) 10.52(0.87) 12.08(1.57) 4.88(8.48) 3.38(3.51) 3.28(1.20) 3.21(0.12) 3.24(0.11) 3.20(0.10) 3.30(0.20) 4.11(1.82) 3.90(0.41) 3.15(2.08) 3.25(0.60) 4.04(1.59) 4.66(1.43) 6.10(1.66) 6.17(0.38) 3.91(3.01) 3.97(0.19) 3.97(0.15) 3.93(0.13) 4.19(0.38) 5.84(2.35) 6.49(0.68) 5.27(1.46) 5.30(0.09) 5.19(0.15) 5.62(0.83) 5.38(0.30) 5.15(0.33) 5.12(0.16) 5.03(0.09) 5.39(0.47) 6.48(1.22) 5.65(0.90) 3.16(3.18) 2.67(1.05) 2.89(0.72) 2.81(0.14) 2.85(0.06) 3.03(0.34) 3.14(0.15) 2.97(0.51) 2.94(0.08) 3.68(1.01) 5.49(2.25) 4.08(1.51) 3.60(0.72) 3.64(0.07) 3.61(0.07) 3.49(0.12) 4.24(0.91) 5.61(1.63) 4.37(1.36) 4.01(0.49) 3.92(0.22) 3.82(0.11) 4.08(0.38) 4.57(0.69) 4.13(0.58) 4.05(0.30) 4.00(0.08) 3.98(0.04) 4.00(0.04) 4.00(0.04) 3.90(0.15) 3.93(0.07) 3.89(0.11) 3.83(0.13) 3.89(0.12) 3.70(0.30) 3.67(0.08) 3.84(0.36) 2.56(2.27) 2.61(0.38) 2.69(0.32) 2.72(0.14) 2.72(0.18) 2.71(0.34) 2.73(0.04) 2.73(0.04) 2.68(0.07) 2.81(0.44) 3.25(0.58) 3.30(0.12) 3.25(0.08) 3.19(0.14) 3.02(0.35) 2.94(0.44) 2.85(0.16) 2.96(0.37) 2.97(0.18) 3.00(0.19) 3.03(0.25) 3.62(1.38)
++ Max displacement in automask = 12.49 (mm) at sub-brick 45
++ Max delta displ  in automask = 8.48 (mm) at sub-brick 57
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb8848.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8848.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8848.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8848.r02.tshift+orig.BRIK is 4.899970 degrees from plumb.
++ Source dataset: ./pb01.tb8848.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.9
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.899970 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb8848.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.899970 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8848.r03.tshift+orig.BRIK is 4.899970 degrees from plumb.
++ Reading input dataset ./pb01.tb8848.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 27996 voxels
 + 4662 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.573  pitch=-7.386  yaw=+0.479  dS=-0.835  dL=-1.070  dP=+2.267
++ Mean: roll=-0.128  pitch=-3.995  yaw=+0.943  dS=-0.391  dL=-0.641  dP=+2.765
++ Max : roll=-0.047  pitch=-3.167  yaw=+1.269  dS=+1.187  dL=-0.520  dP=+5.335
++ Max displacements (mm) for each sub-brick:
 7.67(0.00) 7.03(0.79) 7.32(0.30) 7.58(0.32) 8.20(0.64) 9.88(1.78) 10.17(0.39) 10.37(0.21) 10.43(0.13) 10.77(0.39) 11.83(1.15) 11.96(0.27) 12.96(1.02) 13.12(0.29) 14.68(1.56) 15.09(0.79) 8.18(6.93) 7.76(0.72) 7.76(0.15) 7.75(0.10) 7.67(0.17) 7.59(0.09) 7.50(0.18) 7.42(0.10) 7.70(0.29) 7.69(0.16) 7.57(0.24) 7.51(0.11) 7.51(0.04) 7.54(0.04) 7.52(0.03) 7.54(0.06) 7.62(0.10) 7.56(0.08) 7.61(0.05) 7.53(0.08) 7.38(0.19) 7.50(0.14) 7.47(0.05) 7.56(0.09) 7.50(0.08) 7.51(0.02) 7.57(0.08) 7.53(0.04) 7.48(0.07) 7.52(0.05) 7.31(0.23) 7.36(0.06) 7.35(0.10) 7.32(0.06) 7.39(0.07) 7.36(0.05) 7.39(0.04) 7.41(0.05) 7.38(0.02) 7.40(0.04) 7.39(0.05) 7.50(0.11) 7.49(0.02) 7.39(0.10) 7.34(0.07) 7.34(0.04) 7.37(0.08) 7.39(0.03) 7.40(0.02) 7.37(0.06) 7.36(0.07) 7.41(0.07) 7.34(0.08) 7.40(0.06) 7.45(0.05) 7.33(0.12) 7.32(0.05) 7.43(0.13) 7.38(0.06) 7.30(0.13) 7.41(0.14) 7.70(0.30) 7.65(0.06) 7.64(0.03) 7.63(0.03) 7.34(0.30) 7.47(0.13) 7.56(0.11) 7.60(0.09) 7.93(0.36) 6.82(1.18) 6.87(0.14) 7.12(0.28) 7.10(0.04) 7.14(0.05) 7.12(0.03) 7.15(0.03) 7.20(0.06) 7.21(0.04) 7.19(0.03) 7.19(0.02) 7.23(0.03) 7.23(0.02) 7.09(0.15) 7.09(0.05) 7.15(0.06) 7.19(0.10) 7.18(0.04) 7.22(0.05) 7.19(0.05) 7.19(0.05) 7.26(0.10) 7.18(0.09) 7.23(0.09) 7.26(0.09) 7.28(0.10) 7.24(0.06) 7.33(0.10) 7.30(0.05) 7.24(0.06) 7.20(0.10) 7.23(0.04) 7.24(0.02) 7.38(0.24) 7.06(0.34) 7.20(0.15) 7.22(0.03) 7.17(0.05) 7.22(0.05) 7.23(0.01) 7.20(0.05) 7.19(0.07) 7.21(0.07) 7.26(0.05) 7.25(0.04) 7.16(0.09) 7.25(0.09) 7.30(0.09) 7.22(0.09) 7.24(0.05) 7.29(0.06) 7.26(0.05) 7.27(0.04) 7.26(0.02) 7.23(0.04) 7.21(0.09) 7.31(0.18) 7.63(0.37) 7.96(0.36) 8.11(0.22) 6.93(1.26) 6.57(0.51) 6.80(0.35) 7.04(0.29)
++ Max displacement in automask = 15.09 (mm) at sub-brick 15
++ Max delta displ  in automask = 6.93 (mm) at sub-brick 16
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb8848.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb8848.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8848.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8848.r03.tshift+orig.BRIK is 4.899970 degrees from plumb.
++ Source dataset: ./pb01.tb8848.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.4
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.899970 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8848.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8848.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8848.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8848.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8848.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8848.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.899970 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb8848
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb8848+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb8848+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1241839 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 279186 voxels [65.5%] in weight mask
++ Number of points for matching = 131217
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.137166
   sp   = 0.356867
   mi   = -0.504405
   crM  = 0.0374678
   nmi  = 0.833473
   je   = 2.52457
   hel  = -0.100307
   crA  = 0.193601
   crU  = 0.197255
   lss  = 0.862834
   lpc  = 0.115629
   lpa  = 0.884371
   lpc+ = 0.250198
   ncd  = 0.988241
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.3
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb8848+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb8848+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 37.2 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8848.r01.blur pb02.tb8848.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8848.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb8848.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8848.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8848.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8848.r02.blur pb02.tb8848.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8848.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb8848.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8848.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8848.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8848.r03.blur pb02.tb8848.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8848.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb8848.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8848.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8848.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb8848.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8848.r01.blur+orig
++ Forming automask
 + Fixed clip level = 342.345032
 + Used gradual clip level = 316.509766 .. 385.358795
 + Number voxels above clip level = 45604
 + Clustering voxels ...
 + Largest cluster has 45222 voxels
 + Clustering voxels ...
 + Largest cluster has 45142 voxels
 + Filled    26 voxels in small holes; now have 45168 voxels
 + Clustering voxels ...
 + Largest cluster has 45168 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 381107 voxels
 + Mask now has 45168 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 373916 voxels
++ 52359 voxels in the mask [out of 426275: 12.28%]
++ first  15 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb8848.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8848.r02.blur+orig
++ Forming automask
 + Fixed clip level = 340.078064
 + Used gradual clip level = 313.411804 .. 382.683350
 + Number voxels above clip level = 45539
 + Clustering voxels ...
 + Largest cluster has 45114 voxels
 + Clustering voxels ...
 + Largest cluster has 45082 voxels
 + Filled    35 voxels in small holes; now have 45117 voxels
 + Clustering voxels ...
 + Largest cluster has 45117 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 381158 voxels
 + Mask now has 45117 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 374062 voxels
++ 52213 voxels in the mask [out of 426275: 12.25%]
++ first  15 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb8848.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8848.r03.blur+orig
++ Forming automask
 + Fixed clip level = 341.289673
 + Used gradual clip level = 314.669128 .. 383.211731
 + Number voxels above clip level = 45168
 + Clustering voxels ...
 + Largest cluster has 44763 voxels
 + Clustering voxels ...
 + Largest cluster has 44741 voxels
 + Filled    34 voxels in small holes; now have 44775 voxels
 + Clustering voxels ...
 + Largest cluster has 44775 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 381500 voxels
 + Mask now has 44775 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 374444 voxels
++ 51831 voxels in the mask [out of 426275: 12.16%]
++ first  15 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb8848
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 52581 survived, 373694 were zero
++ writing result full_mask.tb8848...
3dresample -master full_mask.tb8848+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb8848
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 48715 survived, 377560 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb8848...
3dABoverlap -no_automask full_mask.tb8848+orig mask_anat.tb8848+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb8848+orig.BRIK  B=./mask_anat.tb8848+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
52581        48715        55575        45721        6860         2994         13.0465      6.1460     0.8805     1.0377     0.9221
3ddot -dodice full_mask.tb8848+orig mask_anat.tb8848+orig
tee out.mask_ae_dice.txt
0.902721	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb8848
total number of censored TRs (simple form) = 131
1deval -a motion_tb8848_censor.1D -b outcount_tb8848_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb8848_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb8848.r01.blur+orig.HEAD pb03.tb8848.r02.blur+orig.HEAD pb03.tb8848.r03.blur+orig.HEAD -censor censor_tb8848_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb8848 -errts errts.tb8848 -bucket stats.tb8848
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb8848.r01.blur+orig.HEAD pb03.tb8848.r02.blur+orig.HEAD pb03.tb8848.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 45024 voxels (out of 426275 = 10.6%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 312 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb8848.r01.blur+orig.HEAD pb03.tb8848.r02.blur+orig.HEAD pb03.tb8848.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb8848_REML -Rvar stats.tb8848_REMLvar \
 -Rfitts fitts.tb8848_REML -Rerrts errts.tb8848_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (312x24):  5.83947  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (312x6):  1.04783  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (312x18):  4.67024  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (312x6):  3.03095  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (312x12):  1.75181  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 4.24861e-15  ++ VERY GOOD ++
++ Matrix setup time = 0.96 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.500
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.515
++ Job #3: processing voxels 127881 to 170507; elapsed time=5.531
++ Job #4: processing voxels 170508 to 213134; elapsed time=5.548
++ Job #5: processing voxels 213135 to 255761; elapsed time=5.566
++ Job #6: processing voxels 255762 to 298388; elapsed time=5.583
++ Job #7: processing voxels 298389 to 341015; elapsed time=5.610
++ Job #8: processing voxels 341016 to 383642; elapsed time=5.630
++ Job #0: processing voxels 0 to 42626; elapsed time=5.645
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=5.650
0123456789.0123456789.0123456789.0123456789.0123++ Job #2 finished; elapsed time=25.994
++ Job #3 finished; elapsed time=26.044
4++ Job #8 finished; elapsed time=26.385
56++ Job #6 finished; elapsed time=26.971
789.
++ Job #0 waiting for children to finish; elapsed time=27.729
++ Job #5 finished; elapsed time=28.116
++ Job #9 finished; elapsed time=29.598
++ Job #1 finished; elapsed time=29.603
++ Job #4 finished; elapsed time=30.179
++ Job #7 finished; elapsed time=30.296
++ Job #0 now finishing up; elapsed time=30.305
++ Smallest FDR q [0 Full_Fstat] = 5.36096e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 7.81886e-13
++ Smallest FDR q [3 uns1_Fstat] = 7.82172e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 3.05773e-13
++ Smallest FDR q [6 uns2_Fstat] = 3.05773e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 1.10171e-10
++ Smallest FDR q [9 uns3_Fstat] = 1.10171e-10
++ Smallest FDR q [11 str1#0_Tstat] = 5.46541e-13
++ Smallest FDR q [12 str1_Fstat] = 5.46499e-13
++ Smallest FDR q [14 str2#0_Tstat] = 3.1104e-13
++ Smallest FDR q [15 str2_Fstat] = 3.1104e-13
++ Smallest FDR q [17 str3#0_Tstat] = 2.10792e-09
++ Smallest FDR q [18 str3_Fstat] = 2.10764e-09
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.65026e-13
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.65026e-13
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.39745e-13
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.39734e-13
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 0.00011635
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 0.000116365
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.58874 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.587387 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 6.82848e-07
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 6.82725e-07
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.65239e-06
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.65261e-06
++ Wrote bucket dataset into ./stats.tb8848+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb8848+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb8848+orig.BRIK
++ Program finished; elapsed time=53.654
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.785       0.854  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.761       0.840  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.760       0.789  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.666       0.688  (13 vs. 19)      uns2#0  vs.  pitch#0
  medium:      -0.604      -0.623  (13 vs. 23)      uns2#0  vs.  dP#0
  medium:      -0.557       0.000  ( 0 vs. 17)  Run#1Pol#0  vs.  str3#0
  medium:      -0.540       0.000  ( 8 vs. 15)  Run#3Pol#0  vs.  str1#0
  medium:       0.527       0.562  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.463       0.561  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.447       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.440       0.485  ( 5 vs. 16)  Run#2Pol#1  vs.  str2#0
  medium:      -0.435      -0.357  (16 vs. 18)      str2#0  vs.  roll#0
  medium:      -0.431      -0.427  ( 7 vs. 16)  Run#2Pol#3  vs.  str2#0
  medium:      -0.424       0.000  (15 vs. 17)      str1#0  vs.  str3#0
  medium:       0.400       0.436  ( 5 vs. 13)  Run#2Pol#1  vs.  uns2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb8848.r01.blur+orig.HEAD pb03.tb8848.r02.blur+orig.HEAD pb03.tb8848.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb8848_REML -Rvar stats.tb8848_REMLvar -Rfitts fitts.tb8848_REML -Rerrts errts.tb8848_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 45024 voxels (out of 426275 = 10.6%)
++ -----  matrix condition (312x24):  5.83947  ++ VERY GOOD ++
 + masked off 263508 voxels for being all zero; 162767 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 294 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=17.51
 + X matrix: 47.049% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=312 cols=24; 109*1 cases; total CPU=0.00 Elapsed=17.54
 +  average case bandwidth = 11.27
++ REML voxel loop: [6 threads]0123456789.0123456789.
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=59.39
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=90.27
++ Output dataset ./stats.tb8848_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb8848_REML+orig.BRIK
++ Output dataset ./errts.tb8848_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb8848_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 9.00368e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 8.14058e-10
++ Smallest FDR q [3 uns1_Fstat] = 8.14058e-10
++ Smallest FDR q [5 uns2#0_Tstat] = 2.80083e-12
++ Smallest FDR q [6 uns2_Fstat] = 2.80083e-12
++ Smallest FDR q [8 uns3#0_Tstat] = 2.46474e-05
++ Smallest FDR q [9 uns3_Fstat] = 2.46474e-05
++ Smallest FDR q [11 str1#0_Tstat] = 1.6439e-11
++ Smallest FDR q [12 str1_Fstat] = 1.6439e-11
++ Smallest FDR q [14 str2#0_Tstat] = 3.19675e-12
++ Smallest FDR q [15 str2_Fstat] = 3.19675e-12
++ Smallest FDR q [17 str3#0_Tstat] = 0.000105262
++ Smallest FDR q [18 str3_Fstat] = 0.000105262
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.37109e-12
++ Smallest FDR q [21 unstructured_Fstat] = 1.37109e-12
++ Smallest FDR q [23 structured#0_Tstat] = 1.337e-12
++ Smallest FDR q [24 structured_Fstat] = 1.337e-12
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.0374054
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.0374054
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999896 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999896 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.00119447
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.00119447
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.159276 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.159276 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb8848_REML+orig
++ Output dataset ./stats.tb8848_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=122.70
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb8848 pb03.tb8848.r01.blur+orig.HEAD pb03.tb8848.r02.blur+orig.HEAD pb03.tb8848.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 21.7 s
3dTstat -mean -prefix rm.signal.all all_runs.tb8848+orig[3,4,13..138,144..148,152,153,161,173,198,210..212,223..225,230,233..236,243..245,253,254,259..261,265..276,279..286,289..297,318..384,387..443,448,449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb8848_REML+orig[3,4,13..138,144..148,152,153,161,173,198,210..212,223..225,230,233..236,243..245,253,254,259..261,265..276,279..286,289..297,318..384,387..443,448,449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb8848+orig -expr c*a/b -prefix TSNR.tb8848
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb8848_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb8848+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 52581 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.110185
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb8848.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 3,4,13..138,144..148 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8848+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb8848+orig[3,4,13..138,144..148]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 52581
[7m*+ WARNING:[0m removed 248 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 133 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 26.40 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 152,153,161,173,198,210..212,223..225,230,233..236,243..245,253,254,259..261,265..276,279..286,289..297 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8848+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb8848+orig[152,153,161,173,198,210..212,223..225,230,233..236,243..245,253,254,259..261,265..276,279..286,289..297]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 52581
[7m*+ WARNING:[0m removed 248 voxels from mask because they are constant in time
++ detrending start: 5 baseline funcs, 53 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.31 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 318..384,387..443,448,449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8848+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb8848+orig[318..384,387..443,448,449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 52581
[7m*+ WARNING:[0m removed 248 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 126 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 26.93 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 9.32979 8.60266 9.30585 9.07297
average errts FWHM blurs: 9.32979 8.60266 9.30585 9.07297
echo 9.32979 8.60266 9.30585 9.07297   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.557113 6.226 12.5793 15.3835
average errts ACF blurs: 0.557113 6.226 12.5793 15.3835
echo 0.557113 6.226 12.5793 15.3835   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 3,4,13..138,144..148 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8848+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb8848_REML+orig[3,4,13..138,144..148]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 52581
[7m*+ WARNING:[0m removed 248 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 133 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 26.36 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 152,153,161,173,198,210..212,223..225,230,233..236,243..245,253,254,259..261,265..276,279..286,289..297 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8848+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb8848_REML+orig[152,153,161,173,198,210..212,223..225,230,233..236,243..245,253,254,259..261,265..276,279..286,289..297]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 52581
[7m*+ WARNING:[0m removed 248 voxels from mask because they are constant in time
++ detrending start: 5 baseline funcs, 53 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.09 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 318..384,387..443,448,449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb8848+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb8848_REML+orig[318..384,387..443,448,449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 52581
[7m*+ WARNING:[0m removed 248 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 126 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 26.88 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 9.29604 8.56922 9.27359 9.03978
average err_reml FWHM blurs: 9.29604 8.56922 9.27359 9.03978
echo 9.29604 8.56922 9.27359 9.03978   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.556656 6.19548 12.6107 15.3345
average err_reml ACF blurs: 0.556656 6.19548 12.6107 15.3345
echo 0.556656 6.19548 12.6107 15.3345   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb8848.1D
3dClustSim -both -mask full_mask.tb8848+orig -acf 0.556656 6.19548 12.6107 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 52581 voxels in mask (12.33% of total)
++ Kernel function radius = 39.08 mm
++ ACF(0.56,6.20,12.61) => FWHM=15.34 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 799.2 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb8848+orig stats.tb8848_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m Can't read 'file:files_ClustSim/ClustSim.ACF.mask'
++ Processing AFNI dataset stats.tb8848+orig
++ applying attributes
++ Processing AFNI dataset stats.tb8848_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb8848 -dsets pb00.tb8848.r01.tcat+orig.HEAD pb00.tb8848.r02.tcat+orig.HEAD pb00.tb8848.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
Traceback (most recent call last):
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2698, in <module>
    sys.exit(main())
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2691, in main
    if me.write_scripts():
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2023, in write_scripts
    UTIL.write_text_to_file(scr_basic, self.text_basic, exe=1)
  File "/usr/local/apps/afni/current/linux_openmp_64/afni_util.py", line 71, in write_text_to_file
    fp.close()
IOError: [Errno 122] Disk quota exceeded
