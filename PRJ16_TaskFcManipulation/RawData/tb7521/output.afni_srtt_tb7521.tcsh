echo auto-generated by afni_proc.py, Wed Aug  9 12:15:49 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:49 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:49 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb7521
endif
set output_dir = tb7521.srtt
if ( -d tb7521.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb7521.srtt
mkdir tb7521.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb7521.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb7521.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb7521.srtt/pb00.tb7521.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.7 s
3dTcat -prefix tb7521.srtt/pb00.tb7521.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.7 s
3dTcat -prefix tb7521.srtt/pb00.tb7521.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.5 s
set tr_counts = ( 150 150 150 )
cd tb7521.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7521.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r01.tcat+orig.BRIK is 11.299999 degrees from plumb.
++ 27341 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7521.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r02.tcat+orig.BRIK is 11.299999 degrees from plumb.
++ 27688 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7521.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r03.tcat+orig.BRIK is 11.299999 degrees from plumb.
++ 27400 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb7521.r01.tshift -tpattern alt+z2 pb00.tb7521.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r01.tcat+orig.BRIK is 11.299999 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb7521.r02.tshift -tpattern alt+z2 pb00.tb7521.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r02.tcat+orig.BRIK is 11.299999 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb7521.r03.tshift -tpattern alt+z2 pb00.tb7521.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r03.tcat+orig.BRIK is 11.299999 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb7521.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 11.299999 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 432.614014
 + Used gradual clip level = 385.503601 .. 489.972809
 + Number voxels above clip level = 27768
 + Clustering voxels ...
 + Largest cluster has 27547 voxels
 + Clustering voxels ...
 + Largest cluster has 26768 voxels
 + Filled   261 voxels in small holes; now have 27029 voxels
 + Filled     5 voxels in large holes; now have 27034 voxels
 + Clustering voxels ...
 + Largest cluster has 27033 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 104039 voxels
 + Mask now has 27033 voxels
++ 27033 voxels in the mask [out of 131072: 20.62%]
++ first  14 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1075.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1075.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 11.299999 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 11.299999 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1432793 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 27033 voxels [16.5%] in weight mask
++ Number of points for matching = 27033
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.229 29.970 20.408 (index)
 + source center of mass = 86.139 162.062 165.002 (index)
 + source-target CM = -0.741 0.454 -5.242 (xyz)
 + center of mass shifts = -0.741 0.454 -5.242
++ shift param auto-range: -70.3..68.8 -69.1..70.0 -55.3..44.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.740791 .. 9.259209
 + Range param#2 [y-shift] = -9.546082 .. 10.453918
 + Range param#3 [z-shift] = -15.241974 .. 4.758026
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.740791 .. 39.259209
 + Range param#2 [y-shift] = -39.546082 .. 40.453918
 + Range param#3 [z-shift] = -45.241974 .. 34.758026
 + 12 free parameters
++ Normalized convergence radius = 0.000460
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1432793 [out of 16051904] voxels
 + base mask has 37541 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=79 usiz=207
 + - copying weight image
 + - using 27033 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 22856 total points stored in 213 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#o*[#2=-0.0264243] *+.-+o*[#28=-0.0308303] *-.+*[#60=-0.0624025] *..+o-+.+.o+-o-$-
 + - best 45 costs found:
    0 v=-0.062402: -14.07 -12.88   8.09 -15.00 -15.00 -15.00  [grid]
    1 v=-0.044365: -14.07 -12.88   8.09 -15.00 -15.00 -30.00  [grid]
    2 v=-0.043295: -14.07 -12.88  21.42 -15.00 -30.00 -15.00  [grid]
    3 v=-0.041896: -16.88  -9.01  19.11 -20.99 -15.73 -16.09  [rand]
    4 v=-0.041512: -14.07 -12.88  21.42 -30.00 -15.00  30.00  [grid]
    5 v=-0.039820: -14.07 -26.21   8.09 -30.00 -30.00 -15.00  [grid]
    6 v=-0.039533:   9.08 -24.30   6.14   3.10 -34.36  -2.55  [rand]
    7 v=-0.039451: -14.07 -12.88  21.42 -30.00 -30.00 -15.00  [grid]
    8 v=-0.039450: -14.07 -26.21   8.09 -30.00 -15.00  30.00  [grid]
    9 v=-0.039307:  12.59 -12.88  21.42  30.00 -15.00 -30.00  [grid]
   10 v=-0.038148:  12.59 -26.21  21.42  30.00 -15.00 -30.00  [grid]
   11 v=-0.036457: -16.96 -13.66  29.89 -15.74 -34.09   7.78  [rand]
   12 v=-0.035978: -14.07 -12.88  21.42 -15.00 -15.00 -15.00  [grid]
   13 v=-0.035504:   9.08 -24.30   6.14   3.10 -34.36   2.55  [rand]
   14 v=-0.035486: -14.07 -12.88   8.09 -15.00 -30.00 -30.00  [grid]
   15 v=-0.035061:  12.59 -26.21  21.42  15.00 -30.00 -30.00  [grid]
   16 v=-0.034747:  12.59 -26.21   8.09  30.00 -15.00 -30.00  [grid]
   17 v=-0.034167: -14.07 -12.88   8.09 -30.00 -30.00 -30.00  [grid]
   18 v=-0.034088: -14.07 -12.88  21.42 -30.00 -30.00  30.00  [grid]
   19 v=-0.033657: -14.07 -26.21   8.09 -15.00 -15.00 -30.00  [grid]
   20 v=-0.032745:  12.59 -12.88  21.42  15.00 -30.00  15.00  [grid]
   21 v=-0.032542: -14.07 -12.88  21.42 -15.00 -30.00  30.00  [grid]
   22 v=-0.032150: -14.07 -12.88   8.09 -15.00 -30.00  15.00  [grid]
   23 v=-0.031664:  -7.79 -19.36  30.51 -25.15 -27.05 -27.90  [rand]
   24 v=-0.031578: -14.07 -12.88  21.42 -15.00 -30.00  15.00  [grid]
   25 v=-0.031506: -17.60 -18.13   9.21 -19.57 -37.09  16.59  [rand]
   26 v=-0.031280: -20.23 -16.22  -2.64 -30.54 -19.59  20.03  [rand]
   27 v=-0.031204: -16.88   9.92  19.11 -20.99 -15.73  16.09  [rand]
   28 v=-0.030830: -14.07 -12.88   8.09 -15.00 -15.00  15.00  [grid]
   29 v=-0.030739:  23.95   5.06  11.14   8.97  18.72 -30.56  [rand]
   30 v=-0.030596: -14.07  13.79  21.42 -15.00  30.00 -15.00  [grid]
   31 v=-0.030556: -16.72  19.95   0.48 -20.53  -3.14 -10.08  [rand]
   32 v=-0.030504: -14.07  27.12   8.09  15.00  30.00  15.00  [grid]
   33 v=-0.030484: -11.07 -28.36   9.77 -30.67 -17.79  20.52  [rand]
   34 v=-0.030429: -14.07 -26.21  21.42 -30.00 -30.00  30.00  [grid]
   35 v=-0.030257: -14.07 -26.21   8.09 -30.00 -15.00  15.00  [grid]
   36 v=-0.030154: -14.07 -26.21   8.09 -30.00 -30.00  15.00  [grid]
   37 v=-0.029824:  15.24 -19.04 -10.97  20.53   3.14 -10.08  [rand]
   38 v=-0.029781: -14.07 -12.88  21.42 -15.00 -15.00 -30.00  [grid]
   39 v=-0.029781:  12.42 -37.43  31.95  14.03  -8.39 -25.20  [rand]
   40 v=-0.029771: -23.09 -15.93  10.59 -41.11 -22.86   3.97  [rand]
   41 v=-0.029723:  12.59 -26.21   8.09  15.00 -30.00 -30.00  [grid]
   42 v=-0.029665: -14.07 -26.21   8.09 -15.00 -15.00 -15.00  [grid]
   43 v=-0.029604: -14.07 -12.88 -18.58 -30.00  30.00  15.00  [grid]
   44 v=-0.029447:  -6.73  -2.95  19.29  29.81   4.26  23.54  [rand]
*[#8003=-0.0698805] *[#8011=-0.0736677] *[#8014=-0.0748328] *[#8016=-0.0753053] *[#8019=-0.0769864] *[#8020=-0.0770573] *[#8022=-0.0783781] *[#8023=-0.0798598] *[#8024=-0.0807469] *[#8025=-0.0830167] *[#8026=-0.0838802] *[#8027=-0.085142] *[#8029=-0.0874522] *[#8030=-0.0879715] *[#8031=-0.0902907] *[#8032=-0.0919442] *[#8033=-0.0964372] *[#8034=-0.0994598] *[#8036=-0.101817] *[#8037=-0.106614] *[#8038=-0.111121] *[#8039=-0.116634] *[#8044=-0.119012] *[#8045=-0.120937] *[#8046=-0.121965] *[#8048=-0.123511] *[#8049=-0.124671] *[#8051=-0.125216] *[#8054=-0.126418] *[#8055=-0.126824] *[#8058=-0.128248] *[#8059=-0.128322] *[#8061=-0.130036] *[#8062=-0.132147] *[#8065=-0.132847] *[#8067=-0.133795] *[#8070=-0.134156] *[#8073=-0.134815] *[#8076=-0.135789] *[#8081=-0.135804] *[#8082=-0.136047]  + - costs of the above after a little optimization:
  * 0 v=-0.136047:  -4.44  -6.65   6.76  -6.19 -13.44  -5.52  [grid]
    1 v=-0.082287: -10.12  -9.14   8.25 -11.25 -15.68 -16.73  [grid]
    2 v=-0.095439:  -6.43 -15.79  14.93 -12.04 -30.57 -13.97  [grid]
    3 v=-0.106239:  -8.89  -9.85  17.08 -12.29 -24.55  -4.54  [rand]
    4 v=-0.045023: -14.90 -13.42  22.08 -29.55 -15.02  29.91  [grid]
    5 v=-0.053290: -13.73 -26.01   8.14 -25.24 -29.80 -15.24  [grid]
    6 v=-0.063124:   3.67 -26.71   8.78   2.28 -34.81  -3.37  [rand]
    7 v=-0.092647:  -9.16 -14.65  20.80 -12.84 -32.12  -5.84  [grid]
    8 v=-0.046273: -12.23 -25.02   7.00 -32.14 -15.98  27.56  [grid]
    9 v=-0.046475:  11.68 -13.18  21.85  30.26 -10.18 -30.11  [grid]
   10 v=-0.058611:   8.85 -22.17  22.72  22.65 -17.86 -32.82  [grid]
   11 v=-0.057206: -16.18 -10.17  28.41 -14.93 -34.22   8.10  [rand]
   12 v=-0.080761:  -9.45  -9.63  16.02 -14.77 -12.15 -13.25  [grid]
   13 v=-0.049009:  10.78 -24.65   5.73   9.39 -31.75   2.68  [rand]
   14 v=-0.063995:  -8.91 -15.29   8.16 -20.54 -28.53 -30.82  [grid]
   15 v=-0.052477:  10.80 -30.18  19.31  14.91 -27.30 -38.06  [grid]
   16 v=-0.045784:  12.19 -26.42   6.38  35.19 -16.52 -30.41  [grid]
   17 v=-0.073580:  -8.99 -17.59  10.00 -16.50 -30.41 -21.47  [grid]
   18 v=-0.040849: -13.26 -15.93  20.88 -30.55 -30.19  27.86  [grid]
   19 v=-0.067636:  -9.19 -17.37  10.74 -12.31 -18.17 -26.06  [grid]
   20 v=-0.105621:   3.67 -10.53  16.88   1.69 -25.76   6.38  [grid]
   21 v=-0.043564: -14.80 -11.89  16.96 -10.87 -29.38  28.30  [grid]
   22 v=-0.095344: -12.73 -13.12  14.88 -14.45 -27.52   6.42  [grid]
   23 v=-0.083552:  -6.20 -18.71  14.52 -15.64 -37.80 -22.80  [rand]
   24 v=-0.097873:  -9.68 -13.96  20.32  -7.19 -31.60  10.38  [grid]
   25 v=-0.062730: -18.86 -16.62  10.14 -18.35 -29.85  15.82  [rand]
   26 v=-0.067285: -17.97 -16.02  -1.93 -22.76 -16.18  14.98  [rand]
   27 v=-0.048334: -15.84   8.94  18.21 -17.68 -15.90  14.34  [rand]
   28 v=-0.084468: -15.33  -5.10  10.98 -12.77 -15.25  14.48  [grid]
   29 v=-0.035493:  23.90   1.41  11.70   8.84  18.49 -29.93  [rand]
   30 v=-0.036460: -12.87  13.71  20.86 -11.00  29.95 -15.90  [grid]
   31 v=-0.039454: -17.77  16.56  -2.16 -20.06  -1.33 -10.59  [rand]
   32 v=-0.032898: -15.08  26.66   8.00  14.99  29.99  15.25  [grid]
   33 v=-0.046255: -10.91 -24.45   8.38 -30.82 -17.22  20.18  [rand]
   34 v=-0.045402: -15.94 -26.99  21.66 -23.98 -31.13  30.48  [grid]
   35 v=-0.047909: -10.36 -25.54   7.44 -29.93 -18.01  23.98  [grid]
   36 v=-0.036615: -14.30 -31.03   7.08 -30.36 -29.20  16.91  [grid]
   37 v=-0.054997:  16.86 -15.17 -10.03  18.38   0.17  -9.77  [rand]
   38 v=-0.080668:  -8.97 -17.73   9.90 -14.24 -25.62 -18.11  [grid]
   39 v=-0.033792:  13.25 -36.98  32.11  14.18  -7.24 -25.93  [rand]
   40 v=-0.053252: -19.54 -18.37  12.12 -34.05 -28.15   4.87  [rand]
   41 v=-0.041275:  11.15 -26.58  15.25   8.37 -34.37 -36.06  [grid]
   42 v=-0.065492:  -7.07 -22.71  10.91 -14.11 -22.35 -12.15  [grid]
   43 v=-0.031366: -14.29 -12.40 -18.42 -29.95  29.64  15.00  [grid]
   44 v=-0.041685:  -6.70  -9.27  17.82  26.35   3.75  24.50  [rand]
 + - save # 0 for twobest
 + - save # 3 for twobest
 + - save #20 for twobest
 + - save #24 for twobest
 + - save # 2 for twobest
 + - save #22 for twobest
 + - save # 7 for twobest
 + - save #28 for twobest
 + - save #23 for twobest
 + - save # 1 for twobest
 + - save #12 for twobest
 + - save #38 for twobest
 + - save #17 for twobest
 + - save #19 for twobest
 + - save #26 for twobest
 + - save #42 for twobest
 + - save #14 for twobest
 + - save # 6 for twobest
 + - save #25 for twobest
 + - save #10 for twobest
 + - save #11 for twobest
 + - save #37 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=79 usiz=207
 + - retaining old weight image
 + - using 27033 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23287 total points stored in 237 'RHDD(13.7332)' bloks
*[#9811=-0.137211] *[#9812=-0.138105] *[#9814=-0.140138] *[#9815=-0.140524] *[#9816=-0.140698] *[#9817=-0.141067] *[#9818=-0.141165] *[#9820=-0.142205] *[#9821=-0.142638] *[#9824=-0.14314] *[#9825=-0.143296] *[#9828=-0.143553] *[#9829=-0.144264] *[#9830=-0.145116] *[#9831=-0.14555] *[#9834=-0.146501] *[#9835=-0.146978] *[#9836=-0.147323] *[#9837=-0.147587] *[#9842=-0.14816] *[#9845=-0.148307] *[#9846=-0.148484] *[#9849=-0.148995] *[#9854=-0.149573] *[#9855=-0.150287] *[#9856=-0.150612] *[#9857=-0.150655] *[#9858=-0.150699] *[#9859=-0.151355] *[#9862=-0.152524] *[#9863=-0.154104] *[#9864=-0.157252] *[#9865=-0.165728] *[#9866=-0.188009] *[#9867=-0.189197] *[#9868=-0.200155] *[#9869=-0.224479] *[#9872=-0.265887] *[#9873=-0.296567] 
 + - param set #1 has cost=-0.296567
 + -- Parameters = -2.2568 -2.3601 -0.4605 -3.9739 -2.0663 -1.0966 1.0030 1.0002 0.9473 0.0174 0.0300 -0.0281
 + - param set #2 has cost=-0.095239
 + -- Parameters = -8.5574 -10.5907 15.5910 -11.7543 -24.9761 -0.8669 1.0081 1.0079 1.0077 0.0055 0.0050 -0.0001
 + - param set #3 has cost=-0.095811
 + -- Parameters = 1.5895 -9.2665 15.0091 -0.4644 -24.4280 3.7474 1.0271 0.9995 1.0000 0.0137 -0.0007 -0.0091
 + - param set #4 has cost=-0.096792
 + -- Parameters = -8.2683 -12.1820 18.5531 -9.3505 -29.4976 4.0342 0.9991 1.0022 1.0042 0.0136 0.0092 -0.0046
 + - param set #5 has cost=-0.082349
 + -- Parameters = -5.7545 -15.4898 14.9119 -11.1967 -31.1493 -12.5097 1.0044 1.0017 1.0054 0.0004 0.0017 0.0058
 + - param set #6 has cost=-0.092565
 + -- Parameters = -11.1236 -13.0909 15.0049 -13.0844 -28.1510 7.2737 1.0040 0.9917 0.9981 -0.0015 0.0086 -0.0011
 + - param set #7 has cost=-0.085491
 + -- Parameters = -9.4499 -14.8323 20.4047 -12.1283 -33.0407 -0.9004 1.0046 1.0044 0.9981 0.0004 0.0009 0.0007
 + - param set #8 has cost=-0.059439
 + -- Parameters = -14.7837 -5.0841 10.6253 -12.5764 -14.3977 14.7423 1.0036 1.0009 0.9979 0.0007 0.0090 0.0009
 + - param set #9 has cost=-0.075401
 + -- Parameters = -4.8849 -18.7889 14.3695 -12.7171 -37.1570 -21.9925 1.0052 1.0310 1.0088 0.0031 0.0055 0.0032
*[#10690=-0.303236] *[#10691=-0.316008] *[#10692=-0.321372] 
 + - param set #10 has cost=-0.321372
 + -- Parameters = -2.5230 -2.0312 1.5993 -3.2322 -2.2535 -0.7288 1.0522 0.9768 0.9914 -0.0220 0.0259 0.0030
 + - param set #11 has cost=-0.064181
 + -- Parameters = -8.6343 -10.5125 16.2244 -13.8952 -13.1547 -12.6503 1.0146 0.9949 1.0030 -0.0011 0.0027 0.0005
*[#10797=-0.384504] *[#10803=-0.459468] *[#10805=-0.509472] *[#10818=-0.518452] *[#10822=-0.520719] *[#10825=-0.532339] *[#10826=-0.542064] *[#10827=-0.543981] *[#10831=-0.548058] *[#10835=-0.548184] *[#10836=-0.550158] *[#10839=-0.552725] *[#10844=-0.552836] *[#10848=-0.554554] *[#10853=-0.554658] *[#10854=-0.554976] 
 + - param set #12 has cost=-0.554976
 + -- Parameters = -0.2042 -0.6710 0.3609 -1.1556 -2.8369 -0.5685 0.9880 1.0175 1.0017 0.0095 0.0066 -0.0053
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.175 
 + --- dist(#3,#1) = 0.148 
 + --- dist(#4,#1) = 0.296 
 + --- dist(#5,#1) = 0.24 
 + --- dist(#6,#1) = 0.246 
 + --- dist(#7,#1) = 0.281 
 + --- dist(#8,#1) = 0.336 
 + --- dist(#9,#1) = 0.315 
 + --- dist(#10,#1) = 0.381 
 + --- dist(#11,#1) = 0.198 
 + --- dist(#12,#1) = 0.182 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=79 usiz=207
 + - retaining old weight image
 + - using 27033 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23457 total points stored in 244 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.554333
 + -- Parameters = -0.1570 -0.6639 0.4694 -1.1794 -3.0547 -0.4506 1.0049 1.0169 0.9918 -0.0012 0.0022 -0.0111
 + - param set #2 has cost=-0.509307
 + -- Parameters = -0.8192 -0.7114 0.9693 -1.4410 -2.8665 -1.8426 1.0083 1.0151 0.9671 -0.0200 0.0360 -0.0066
 + - param set #3 has cost=-0.508870
 + -- Parameters = -0.2021 -1.0775 0.9769 -0.9895 -3.3438 -1.0181 1.0154 1.0025 0.9526 0.0047 0.0137 -0.0212
 + - param set #4 has cost=-0.081638
 + -- Parameters = -7.7815 -11.9290 18.0509 -9.5476 -29.6401 3.0205 1.0252 0.9976 0.9759 0.0141 0.0096 -0.0041
 + - param set #5 has cost=-0.078593
 + -- Parameters = -0.4424 -8.6819 14.7656 -2.5245 -24.1094 -1.5557 1.0350 1.0085 0.9857 0.0148 0.0051 -0.0095
 + - param set #6 has cost=-0.081875
 + -- Parameters = -8.0951 -9.6081 14.2934 -10.4691 -25.0404 0.9294 1.0234 1.0179 1.0092 0.0146 0.0254 0.0015
 + - param set #7 has cost=-0.074798
 + -- Parameters = -9.5450 -12.2305 16.8181 -11.3341 -29.0325 6.0152 0.9967 1.0044 0.9865 -0.0101 0.0104 0.0060
 + - param set #8 has cost=-0.072399
 + -- Parameters = -9.2917 -14.2943 20.3828 -12.5537 -33.1920 -0.6135 1.0094 0.9954 0.9728 -0.0006 0.0140 -0.0029
 + - param set #9 has cost=-0.071239
 + -- Parameters = -4.8687 -16.6537 12.4399 -10.1849 -31.2473 -10.7135 1.0030 1.0067 1.0128 0.0008 0.0172 0.0060
 + - param set #10 has cost=-0.058518
 + -- Parameters = -4.9343 -18.7452 14.4974 -12.6930 -37.2079 -21.9735 1.0046 1.0312 1.0095 0.0031 0.0122 0.0026
 + - param set #11 has cost=-0.054329
 + -- Parameters = -8.1116 -10.4544 16.0600 -13.0969 -13.1591 -12.1456 1.0037 0.9971 1.0080 0.0031 0.0094 -0.0005
 + - param set #12 has cost=-0.046320
 + -- Parameters = -14.8064 -4.9332 10.4943 -12.7157 -14.3852 14.7887 1.0040 0.9995 0.9973 0.0011 0.0088 0.0067
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.152 
 + --- dist(#3,#1) = 0.107 
 + --- dist(#4,#1) = 0.244 
 + --- dist(#5,#1) = 0.295 
 + --- dist(#6,#1) = 0.234 
 + --- dist(#7,#1) = 0.289 
 + --- dist(#8,#1) = 0.335 
 + --- dist(#9,#1) = 0.313 
 + --- dist(#10,#1) = 0.379 
 + --- dist(#11,#1) = 0.195 
 + --- dist(#12,#1) = 0.183 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=79 usiz=207
 + - retaining old weight image
 + - using 27033 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23944 total points stored in 259 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.508493
 + -- Parameters = -0.1387 -0.6670 0.3904 -1.2011 -3.1861 -0.4267 1.0055 1.0192 0.9927 -0.0008 0.0010 -0.0139
 + - param set #2 has cost=-0.498969
 + -- Parameters = -0.4737 -0.5772 0.4650 -1.2040 -3.0227 -1.2454 1.0060 1.0209 0.9916 0.0012 0.0220 -0.0080
 + - param set #3 has cost=-0.495872
 + -- Parameters = -0.3643 -0.6353 0.7604 -1.1796 -3.3046 -0.9797 1.0020 1.0190 0.9702 0.0036 0.0118 -0.0155
 + - param set #4 has cost=-0.065840
 + -- Parameters = -8.1249 -9.5550 14.5625 -10.1866 -25.0501 1.2231 1.0203 1.0142 1.0074 0.0141 0.0244 0.0017
 + - param set #5 has cost=-0.069184
 + -- Parameters = -8.0140 -11.4620 17.7636 -9.6683 -29.7739 1.4694 1.0240 1.0041 0.9582 0.0136 0.0171 -0.0201
 + - param set #6 has cost=-0.087682
 + -- Parameters = -2.1457 -8.1249 13.7290 -3.9974 -22.7897 -0.0828 1.0209 1.0201 0.9197 -0.0200 -0.0280 0.0059
 + - param set #7 has cost=-0.064585
 + -- Parameters = -9.1488 -12.5122 16.7407 -10.1742 -28.4969 4.1777 1.0036 1.0002 0.9836 -0.0105 0.0129 0.0039
 + - param set #8 has cost=-0.069229
 + -- Parameters = -9.1328 -12.9888 18.8546 -11.8340 -31.0129 -0.5108 1.0090 0.9949 0.9374 0.0222 0.0251 -0.0208
 + - param set #9 has cost=-0.061323
 + -- Parameters = -4.6719 -16.4435 12.4416 -9.9669 -31.6224 -10.2699 1.0001 1.0076 1.0109 -0.0011 0.0166 0.0015
 + - param set #10 has cost=-0.049949
 + -- Parameters = -3.4084 -19.9578 13.3164 -12.3798 -37.8986 -19.9545 0.9866 1.0424 1.0034 -0.0012 0.0095 -0.0069
 + - param set #11 has cost=-0.042285
 + -- Parameters = -7.7706 -10.1587 16.0941 -11.7192 -14.1702 -11.8919 1.0059 0.9995 1.0165 0.0083 0.0062 0.0004
 + - param set #12 has cost=-0.039999
 + -- Parameters = -14.8162 -4.7336 10.8785 -12.7633 -14.4450 15.1107 1.0042 0.9982 0.9972 0.0020 0.0084 0.0061
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0945 
 + --- dist(#3,#1) = 0.0613 
 + --- dist(#4,#1) = 0.218 
 + --- dist(#5,#1) = 0.309 
 + --- dist(#6,#1) = 0.295 
 + --- dist(#7,#1) = 0.243 
 + --- dist(#8,#1) = 0.281 
 + --- dist(#9,#1) = 0.316 
 + --- dist(#10,#1) = 0.386 
 + --- dist(#11,#1) = 0.196 
 + --- dist(#12,#1) = 0.183 
 + - Total coarse refinement net CPU time = 0.0 s; 3317 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=79 usiz=207
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24194 total points stored in 265 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.476286 *
 + -- Parameters = -0.1387 -0.6670 0.3904 -1.2011 -3.1861 -0.4267 1.0055 1.0192 0.9927 -0.0008 0.0010 -0.0139
 + - cost(#2)=-0.468064  
 + -- Parameters = -0.4737 -0.5772 0.4650 -1.2040 -3.0227 -1.2454 1.0060 1.0209 0.9916 0.0012 0.0220 -0.0080
 + - cost(#3)=-0.466559  
 + -- Parameters = -0.3643 -0.6353 0.7604 -1.1796 -3.3046 -0.9797 1.0020 1.0190 0.9702 0.0036 0.0118 -0.0155
 + - cost(#4)=-0.079142  
 + -- Parameters = -2.1457 -8.1249 13.7290 -3.9974 -22.7897 -0.0828 1.0209 1.0201 0.9197 -0.0200 -0.0280 0.0059
 + - cost(#5)=-0.060608  
 + -- Parameters = -9.1328 -12.9888 18.8546 -11.8340 -31.0129 -0.5108 1.0090 0.9949 0.9374 0.0222 0.0251 -0.0208
 + - cost(#6)=-0.061652  
 + -- Parameters = -8.0140 -11.4620 17.7636 -9.6683 -29.7739 1.4694 1.0240 1.0041 0.9582 0.0136 0.0171 -0.0201
 + - cost(#7)=-0.060984  
 + -- Parameters = -8.1249 -9.5550 14.5625 -10.1866 -25.0501 1.2231 1.0203 1.0142 1.0074 0.0141 0.0244 0.0017
 + - cost(#8)=-0.057366  
 + -- Parameters = -9.1488 -12.5122 16.7407 -10.1742 -28.4969 4.1777 1.0036 1.0002 0.9836 -0.0105 0.0129 0.0039
 + - cost(#9)=-0.058051  
 + -- Parameters = -4.6719 -16.4435 12.4416 -9.9669 -31.6224 -10.2699 1.0001 1.0076 1.0109 -0.0011 0.0166 0.0015
 + - cost(#10)=-0.045376  
 + -- Parameters = -3.4084 -19.9578 13.3164 -12.3798 -37.8986 -19.9545 0.9866 1.0424 1.0034 -0.0012 0.0095 -0.0069
 + - cost(#11)=-0.034821  
 + -- Parameters = -7.7706 -10.1587 16.0941 -11.7192 -14.1702 -11.8919 1.0059 0.9995 1.0165 0.0083 0.0062 0.0004
 + - cost(#12)=-0.034205  
 + -- Parameters = -14.8162 -4.7336 10.8785 -12.7633 -14.4450 15.1107 1.0042 0.9982 0.9972 0.0020 0.0084 0.0061
 + - cost(#13)=-0.012762  
 + -- Parameters = -0.7408 0.4539 -5.2420 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.477974 *
 + -- Parameters = -0.1005 -0.5592 0.3712 -1.1921 -3.4579 -0.3905 1.0031 1.0184 0.9927 -0.0013 0.0003 -0.0188
 + - cost(#2)=-0.474255  
 + -- Parameters = -0.3095 -0.4410 0.5190 -1.2012 -3.2121 -0.8339 1.0019 1.0241 0.9923 0.0026 0.0112 -0.0106
 + - cost(#3)=-0.475495  
 + -- Parameters = -0.2399 -0.4951 0.5357 -1.1594 -3.4283 -0.7328 1.0017 1.0202 0.9902 0.0017 0.0108 -0.0138
 + - cost(#4)=-0.084756  
 + -- Parameters = -2.5338 -8.1442 12.8421 -4.7072 -21.8669 -0.2093 1.0108 1.0128 0.8481 -0.0219 -0.0249 0.0071
 + - cost(#5)=-0.062592  
 + -- Parameters = -8.6387 -11.5565 18.4252 -11.4038 -30.6248 -0.4223 1.0133 0.9965 0.9385 0.0217 0.0277 -0.0210
 + - cost(#6)=-0.063474  
 + -- Parameters = -7.8343 -11.4845 18.0767 -9.7921 -30.1414 0.9379 1.0161 1.0057 0.9491 0.0161 0.0173 -0.0227
 + - cost(#7)=-0.061796  
 + -- Parameters = -7.8382 -9.6898 14.4422 -9.9797 -25.2033 1.3339 1.0224 1.0138 1.0076 0.0199 0.0247 0.0013
 + - cost(#8)=-0.060271  
 + -- Parameters = -9.0289 -11.6566 16.1456 -10.6558 -27.8768 3.3635 1.0101 1.0019 0.9789 -0.0080 0.0230 0.0002
 + - cost(#9)=-0.058924  
 + -- Parameters = -4.5632 -16.2965 12.4283 -9.8056 -31.8040 -10.0810 0.9976 1.0115 1.0105 -0.0008 0.0141 -0.0040
 + - cost(#10)=-0.049021  
 + -- Parameters = -3.5096 -20.6830 11.7755 -11.5944 -37.7913 -17.7517 0.9778 1.0324 0.9897 0.0002 0.0067 -0.0268
 + - cost(#11)=-0.036058  
 + -- Parameters = -7.3559 -10.2485 16.0987 -11.6619 -14.4677 -11.4804 1.0029 0.9986 1.0187 0.0101 -0.0038 -0.0023
 + - cost(#12)=-0.034669  
 + -- Parameters = -14.9035 -4.6871 10.7905 -12.7495 -14.4392 14.9703 1.0042 0.9990 1.0029 0.0019 0.0091 0.0059
 + - cost(#13)=-0.469508  
 + -- Parameters = -0.0459 -0.6067 0.4562 -1.1931 -2.7965 -0.1887 1.0008 1.0258 0.9977 0.0063 -0.0034 -0.0030
 + - case #1 is now the best
 + - Initial  cost = -0.477974
 + - Initial fine Parameters = -0.1005 -0.5592 0.3712 -1.1921 -3.4579 -0.3905 1.0031 1.0184 0.9927 -0.0013 0.0003 -0.0188
 + - Finalish cost = -0.482138 ; 323 funcs
 + - Final    cost = -0.482189 ; 228 funcs
 + Final fine fit Parameters:
       x-shift=-0.2975   y-shift=-0.0552   z-shift= 0.3845
       z-angle=-1.2629   x-angle=-4.5402   y-angle=-0.7025
       x-scale= 1.0036   y-scale= 1.0203   z-scale= 0.9890
     y/x-shear=-0.0005 z/x-shear= 0.0066 z/y-shear=-0.0385
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.2975 -0.0552 0.3845 -1.2629 -4.5402 -0.7025 1.0036 1.0203 0.9890 -0.0005 0.0066 -0.0385
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.9
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 11.299999 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0206 -1.0048 0.1146 235.9315 -0.0088 0.1608 0.9856 62.5890 -1.0033 -0.0211 -0.0123 203.3705
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 18.2 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3038.770100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 71.1296 47.1373   ITER = 9/137
71.1296

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 6s 63ms]
lev=0 0..171 0..213 0..166: [first cost=-0.68382] ... done [cost:-0.68382==>-0.77394]
lev=1 patch=129x161x125 [clock= 15m 38s 613ms]........:[cost=-0.80279]:........ done [cost:-0.77394==>-0.80807 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 24m 33s 448ms]......................... done [cost:-0.80807==>-0.87795 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 31m 22s 921ms].............. done [cost:-0.87795==>-0.93160 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 36m 6s 843ms].............. done [cost:-0.93160==>-0.98305 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 39m 48s 751ms].............. done [cost:-0.98305==>-1.05219 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 43m 29s 528ms].................... done [cost:-1.05219==>-1.10191 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 47m 0s 549ms].............................. done [cost:-1.10191==>-1.17974 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 50m 44s 48ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.9 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb7521.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.299999 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7521.r01.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ Reading input dataset ./pb01.tb7521.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29567 voxels
 + 4831 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.676  pitch=-0.635  yaw=-0.604  dS=-0.199  dL=-0.530  dP=-2.546
++ Mean: roll=+0.384  pitch=+2.547  yaw=+0.032  dS=+0.284  dL=+0.480  dP=-0.927
++ Max : roll=+3.159  pitch=+7.148  yaw=+1.307  dS=+0.664  dL=+2.022  dP=+0.201
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 1.26(1.26) 1.05(0.21) 1.09(0.04) 1.03(0.08) 0.94(0.10) 0.93(0.10) 0.82(0.18) 0.96(0.16) 0.96(0.24) 0.83(0.16) 0.88(0.13) 0.93(0.07) 0.92(0.03) 0.93(0.05) 0.92(0.02) 0.90(0.07) 0.92(0.10) 0.92(0.17) 0.57(0.41) 4.14(4.69) 2.82(1.51) 2.80(0.27) 2.76(0.17) 2.70(0.14) 2.66(0.06) 2.72(0.10) 2.83(0.17) 2.77(0.12) 2.90(0.33) 3.77(1.21) 4.40(0.77) 4.05(0.39) 3.92(0.15) 3.89(0.09) 3.83(0.13) 3.75(0.17) 3.76(0.05) 3.63(0.19) 3.57(0.14) 4.01(1.16) 4.35(0.97) 4.25(0.47) 4.31(0.33) 4.18(0.18) 4.26(0.11) 4.29(0.21) 4.28(0.10) 4.13(0.17) 4.21(0.27) 4.28(0.12) 4.37(0.10) 4.45(0.12) 4.33(0.14) 4.16(0.20) 4.19(0.16) 4.14(0.16) 4.16(0.08) 4.30(0.16) 4.38(0.14) 4.33(0.10) 4.30(0.09) 4.24(0.07) 4.21(0.07) 4.24(0.11) 4.34(0.11) 4.31(0.06) 4.25(0.10) 4.31(0.11) 4.33(0.04) 4.44(0.23) 4.37(0.08) 4.24(0.30) 4.27(0.09) 4.21(0.07) 4.25(0.05) 4.30(0.06) 4.35(0.09) 4.40(0.11) 4.37(0.11) 4.39(0.03) 4.29(0.21) 4.29(0.07) 4.38(0.15) 4.36(0.07) 4.31(0.12) 4.21(0.19) 4.19(0.12) 4.22(0.13) 4.36(0.24) 4.35(0.17) 4.34(0.11) 4.55(0.21) 4.84(0.29) 4.74(0.13) 4.65(0.15) 4.61(0.10) 4.62(0.19) 4.69(0.15) 4.57(0.16) 4.41(0.17) 4.47(0.12) 4.48(0.05) 4.48(0.06) 4.49(0.13) 4.53(0.49) 5.02(2.50) 5.52(0.51) 6.82(1.36) 6.93(0.21) 6.70(0.28) 6.74(0.09) 6.98(0.47) 7.05(0.36) 7.02(0.50) 6.96(0.07) 6.82(0.18) 6.86(0.20) 6.72(0.32) 4.68(2.17) 5.80(1.17) 5.89(0.58) 6.23(2.02) 10.78(5.71) 12.61(1.97) 12.26(0.39) 12.47(0.24) 11.33(1.25) 6.22(5.29) 6.82(0.71) 9.24(2.57) 8.03(2.31) 7.33(1.17) 7.68(0.37) 7.79(0.25) 8.06(0.49) 8.29(0.32) 8.35(0.18) 7.24(1.14) 5.04(2.45) 5.77(0.92) 6.26(0.64) 6.29(0.16) 6.11(0.20) 5.32(0.88) 4.88(0.47) 5.00(0.17) 5.13(0.27) 5.28(0.34) 4.95(0.59)
++ Max displacement in automask = 12.61 (mm) at sub-brick 124
++ Max delta displ  in automask = 5.71 (mm) at sub-brick 123
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb7521.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7521.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7521.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7521.r01.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ Source dataset: ./pb01.tb7521.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.299999 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.0
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb7521.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.299999 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7521.r02.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ Reading input dataset ./pb01.tb7521.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30551 voxels
 + 4973 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-2.313  pitch=+2.284  yaw=-1.302  dS=-2.163  dL=-3.402  dP=-4.970
++ Mean: roll=+1.944  pitch=+6.854  yaw=-0.330  dS=-0.754  dL=-0.866  dP=-2.860
++ Max : roll=+6.699  pitch=+12.209  yaw=+1.388  dS=-0.021  dL=+2.757  dP=-0.577
++ Max displacements (mm) for each sub-brick:
 10.53(0.00) 11.16(1.98) 7.60(3.68) 7.36(0.44) 7.70(0.36) 7.71(0.11) 7.60(0.23) 7.59(0.64) 7.91(0.60) 14.20(7.62) 13.13(1.48) 12.20(1.04) 11.89(0.34) 11.53(0.39) 10.28(1.36) 10.03(0.31) 11.72(2.53) 16.83(6.12) 15.76(1.20) 12.24(5.22) 7.70(8.53) 7.91(1.98) 8.40(1.53) 9.09(1.40) 9.37(0.42) 9.81(0.66) 19.42(11.63) 19.98(0.69) 18.56(1.43) 17.98(0.59) 18.11(0.21) 17.96(0.52) 17.62(0.35) 11.32(6.66) 8.99(2.69) 9.71(0.77) 10.18(0.51) 10.17(0.10) 10.30(0.38) 10.38(0.13) 10.23(0.16) 10.81(0.63) 12.29(1.91) 12.36(5.77) 10.23(6.44) 9.92(1.96) 10.73(1.60) 10.80(0.22) 10.82(0.10) 10.99(0.32) 11.03(0.33) 11.24(0.23) 11.20(0.21) 10.91(0.29) 10.99(0.16) 12.15(14.02) 15.50(4.77) 15.38(0.14) 13.87(2.13) 11.83(12.65) 12.93(1.59) 17.02(5.20) 16.28(0.94) 14.15(2.32) 13.95(0.92) 13.90(0.23) 15.07(5.68) 17.02(6.29) 16.20(0.97) 16.19(0.35) 16.38(0.55) 16.40(0.87) 15.49(2.23) 11.45(4.66) 11.94(0.89) 12.82(1.04) 13.21(1.07) 13.42(1.51) 14.42(2.63) 14.61(0.32) 14.07(0.62) 14.22(0.17) 14.28(0.14) 13.68(0.60) 13.27(0.63) 15.27(2.00) 15.27(0.43) 14.84(0.43) 13.94(0.96) 12.55(1.56) 13.64(2.83) 19.04(7.48) 18.79(1.31) 17.99(1.34) 6.96(12.44) 7.29(0.46) 10.00(3.29) 10.45(0.73) 10.77(0.35) 10.99(0.25) 11.06(0.35) 10.90(0.42) 11.01(0.19) 11.05(0.21) 10.77(0.43) 11.08(0.45) 10.97(0.19) 11.12(0.16) 11.93(1.53) 10.43(3.87) 10.15(0.96) 11.32(3.47) 16.89(11.67) 16.84(0.59) 13.66(9.14) 13.58(0.24) 13.55(0.33) 13.04(0.79) 13.06(0.33) 13.19(0.31) 13.02(0.27) 12.85(0.47) 13.80(2.96) 13.39(0.80) 12.91(0.88) 12.66(0.27) 12.78(0.28) 15.22(4.43) 18.07(3.96) 16.45(2.10) 12.59(8.54) 12.78(0.40) 13.17(0.44) 13.04(0.22) 13.13(0.42) 14.33(1.36) 13.95(0.40) 14.63(6.70) 13.88(1.36) 13.16(1.26) 12.99(0.62) 11.27(2.15) 10.93(0.43) 11.00(0.25) 11.01(0.16) 10.90(0.18) 10.39(0.57) 9.40(1.12) 10.10(0.96) 10.06(0.26)
++ Max displacement in automask = 19.98 (mm) at sub-brick 27
++ Max delta displ  in automask = 14.02 (mm) at sub-brick 55
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb7521.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7521.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7521.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7521.r02.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ Source dataset: ./pb01.tb7521.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.3
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.299999 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb7521.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.299999 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb7521.r03.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ Reading input dataset ./pb01.tb7521.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29661 voxels
 + 4896 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.604  pitch=+4.701  yaw=-0.803  dS=-0.533  dL=-2.425  dP=-3.822
++ Mean: roll=+0.465  pitch=+6.276  yaw=-0.169  dS=-0.203  dL=-1.804  dP=-2.865
++ Max : roll=+5.797  pitch=+7.955  yaw=+0.710  dS=+0.178  dL=+1.796  dP=-2.305
++ Max displacements (mm) for each sub-brick:
 8.73(0.00) 8.63(0.50) 8.40(0.32) 8.41(0.16) 8.26(0.17) 8.06(0.22) 7.94(0.13) 7.84(0.10) 7.84(0.23) 8.16(0.38) 8.16(0.05) 8.17(0.04) 7.99(0.26) 8.04(0.08) 8.08(0.07) 8.12(0.05) 8.20(0.10) 8.33(0.23) 8.73(0.46) 8.90(0.20) 8.88(0.09) 8.98(0.11) 9.07(0.12) 9.09(0.07) 9.13(0.07) 9.16(0.09) 9.25(0.13) 9.09(0.17) 8.97(0.12) 8.92(0.07) 8.77(0.16) 8.68(0.18) 8.80(0.18) 8.95(0.15) 8.92(0.08) 8.98(0.07) 9.11(0.14) 9.09(0.06) 9.08(0.04) 9.07(0.17) 9.10(0.08) 9.10(0.06) 9.05(0.06) 9.01(0.11) 8.91(0.10) 8.97(0.07) 9.38(0.42) 9.47(0.16) 9.40(0.13) 9.41(0.05) 9.39(0.07) 9.48(0.09) 9.47(0.03) 9.44(0.05) 9.46(0.03) 9.49(0.08) 9.54(0.10) 9.55(0.05) 9.57(0.06) 9.65(0.09) 9.63(0.04) 9.56(0.12) 9.57(0.06) 9.54(0.06) 9.46(0.10) 9.55(0.10) 9.60(0.05) 9.55(0.07) 9.59(0.10) 9.58(0.02) 9.58(0.06) 9.51(0.11) 9.65(0.21) 11.71(2.35) 11.99(0.67) 11.70(0.31) 11.60(0.14) 11.78(0.18) 11.86(0.12) 11.72(0.17) 11.66(0.13) 11.62(0.07) 11.64(0.08) 11.70(0.08) 11.67(0.05) 11.62(0.10) 11.66(0.12) 11.70(0.05) 11.99(0.30) 11.82(0.20) 11.77(0.08) 11.74(0.13) 11.55(0.23) 11.71(0.17) 11.60(0.14) 11.54(0.07) 11.62(0.13) 11.60(0.04) 11.61(0.05) 11.64(0.04) 11.65(0.17) 11.55(0.11) 11.54(0.14) 11.63(0.10) 11.62(0.26) 11.49(0.14) 11.24(0.32) 11.34(0.14) 11.71(0.43) 11.87(0.21) 11.88(0.09) 11.88(0.01) 11.89(0.03) 12.18(0.35) 12.35(0.25) 11.73(0.67) 11.34(0.57) 11.79(0.53) 11.68(0.12) 11.61(0.14) 11.60(0.27) 16.35(12.55) 15.87(0.64) 15.46(0.43) 13.08(3.53) 12.01(2.27) 12.29(0.29) 12.18(0.33) 12.53(0.42) 13.22(1.16) 11.88(1.60) 8.57(3.62) 10.31(1.97) 12.87(5.46) 13.27(1.05) 12.80(0.57) 12.67(0.14) 12.60(0.08) 12.59(0.08) 12.36(0.24) 12.05(0.35) 11.50(0.56) 11.11(0.40) 11.07(0.06) 11.11(0.08) 11.28(0.18) 11.41(0.15) 11.45(0.15) 11.77(0.40) 12.12(1.07)
++ Max displacement in automask = 16.35 (mm) at sub-brick 121
++ Max delta displ  in automask = 12.55 (mm) at sub-brick 121
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb7521.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb7521.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7521.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7521.r03.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ Source dataset: ./pb01.tb7521.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.299999 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7521.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7521.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7521.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7521.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb7521.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb7521.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.299999 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb7521
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb7521+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb7521+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1312211 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 284589 voxels [66.8%] in weight mask
++ Number of points for matching = 133756
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.133281
   sp   = 0.330687
   mi   = -0.527536
   crM  = 0.0336074
   nmi  = 0.833036
   je   = 2.63204
   hel  = -0.106275
   crA  = 0.183693
   crU  = 0.195344
   lss  = 0.866719
   lpc  = 0.249631
   lpa  = 0.750369
   lpc+ = 0.380853
   ncd  = 0.993516
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.4
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb7521+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb7521+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 47.1 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7521.r01.blur pb02.tb7521.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7521.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb7521.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7521.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7521.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7521.r02.blur pb02.tb7521.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7521.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb7521.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7521.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7521.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb7521.r03.blur pb02.tb7521.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb7521.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb7521.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb7521.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7521.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb7521.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7521.r01.blur+orig
++ Forming automask
 + Fixed clip level = 420.816528
 + Used gradual clip level = 342.535309 .. 478.842499
 + Number voxels above clip level = 49647
 + Clustering voxels ...
 + Largest cluster has 49465 voxels
 + Clustering voxels ...
 + Largest cluster has 49360 voxels
 + Filled    43 voxels in small holes; now have 49403 voxels
 + Filled     1 voxels in large holes; now have 49404 voxels
 + Clustering voxels ...
 + Largest cluster has 49404 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376871 voxels
 + Mask now has 49404 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368821 voxels
++ 57454 voxels in the mask [out of 426275: 13.48%]
++ first  17 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  25 y-planes are zero [from I]
++ last   17 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb7521.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7521.r02.blur+orig
++ Forming automask
 + Fixed clip level = 418.320923
 + Used gradual clip level = 346.115417 .. 472.976166
 + Number voxels above clip level = 50139
 + Clustering voxels ...
 + Largest cluster has 49941 voxels
 + Clustering voxels ...
 + Largest cluster has 49840 voxels
 + Filled    37 voxels in small holes; now have 49877 voxels
 + Filled     2 voxels in large holes; now have 49879 voxels
 + Clustering voxels ...
 + Largest cluster has 49878 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376397 voxels
 + Mask now has 49878 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368295 voxels
++ 57980 voxels in the mask [out of 426275: 13.60%]
++ first  17 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  25 y-planes are zero [from I]
++ last   16 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb7521.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb7521.r03.blur+orig
++ Forming automask
 + Fixed clip level = 419.686584
 + Used gradual clip level = 345.570190 .. 474.449036
 + Number voxels above clip level = 50111
 + Clustering voxels ...
 + Largest cluster has 49923 voxels
 + Clustering voxels ...
 + Largest cluster has 49802 voxels
 + Filled    43 voxels in small holes; now have 49845 voxels
 + Clustering voxels ...
 + Largest cluster has 49845 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376430 voxels
 + Mask now has 49845 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368313 voxels
++ 57962 voxels in the mask [out of 426275: 13.60%]
++ first  17 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  25 y-planes are zero [from I]
++ last   17 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb7521
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 58275 survived, 368000 were zero
++ writing result full_mask.tb7521...
3dresample -master full_mask.tb7521+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb7521
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 51667 survived, 374608 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb7521...
3dABoverlap -no_automask full_mask.tb7521+orig mask_anat.tb7521+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb7521+orig.BRIK  B=./mask_anat.tb7521+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
58275        51667        60320        49622        8653         2045         14.8486      3.9580     0.8630     0.9548     0.8997
3ddot -dodice full_mask.tb7521+orig mask_anat.tb7521+orig
tee out.mask_ae_dice.txt
0.902694	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb7521
total number of censored TRs (simple form) = 178
1deval -a motion_tb7521_censor.1D -b outcount_tb7521_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb7521_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb7521.r01.blur+orig.HEAD pb03.tb7521.r02.blur+orig.HEAD pb03.tb7521.r03.blur+orig.HEAD -censor censor_tb7521_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb7521 -errts errts.tb7521 -bucket stats.tb7521
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb7521.r01.blur+orig.HEAD pb03.tb7521.r02.blur+orig.HEAD pb03.tb7521.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 49733 voxels (out of 426275 = 11.7%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 259 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb7521.r01.blur+orig.HEAD pb03.tb7521.r02.blur+orig.HEAD pb03.tb7521.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb7521_REML -Rvar stats.tb7521_REMLvar \
 -Rfitts fitts.tb7521_REML -Rerrts errts.tb7521_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (259x24):  7.27561  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (259x6):  1.06986  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (259x18):  6.99617  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (259x6):  5.253  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (259x12):  1.38325  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 4.03546e-15  ++ VERY GOOD ++
++ Matrix setup time = 0.77 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.733
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.754
++ Job #3: processing voxels 127881 to 170507; elapsed time=5.775
++ Job #4: processing voxels 170508 to 213134; elapsed time=5.797
++ Job #5: processing voxels 213135 to 255761; elapsed time=5.820
++ Job #6: processing voxels 255762 to 298388; elapsed time=5.843
++ Job #7: processing voxels 298389 to 341015; elapsed time=5.877
++ Job #8: processing voxels 341016 to 383642; elapsed time=5.897
++ Job #9: processing voxels 383643 to 426274; elapsed time=5.927
++ Job #0: processing voxels 0 to 42626; elapsed time=5.929
++ voxel loop:0123456789.0123456789.0123456789.012++ Job #1 finished; elapsed time=23.321
34++ Job #2 finished; elapsed time=23.953
++ Job #4 finished; elapsed time=24.273
5++ Job #8 finished; elapsed time=24.766
++ Job #5 finished; elapsed time=24.869
6++ Job #7 finished; elapsed time=24.960
789.012345678++ Job #9 finished; elapsed time=26.885
9.
++ Job #0 waiting for children to finish; elapsed time=26.905
++ Job #3 finished; elapsed time=27.597
++ Job #6 finished; elapsed time=27.737
++ Job #0 now finishing up; elapsed time=27.750
++ Smallest FDR q [0 Full_Fstat] = 1.56384e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 9.83395e-13
++ Smallest FDR q [3 uns1_Fstat] = 9.83395e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 7.8875e-12
++ Smallest FDR q [6 uns2_Fstat] = 7.888e-12
++ Smallest FDR q [8 uns3#0_Tstat] = 3.79304e-10
++ Smallest FDR q [9 uns3_Fstat] = 3.79326e-10
++ Smallest FDR q [11 str1#0_Tstat] = 1.38365e-12
++ Smallest FDR q [12 str1_Fstat] = 1.38365e-12
++ Smallest FDR q [14 str2#0_Tstat] = 3.54978e-12
++ Smallest FDR q [15 str2_Fstat] = 3.54978e-12
++ Smallest FDR q [17 str3#0_Tstat] = 3.49266e-08
++ Smallest FDR q [18 str3_Fstat] = 3.49268e-08
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 9.70668e-12
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 9.706e-12
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 4.05126e-11
++ Smallest FDR q [24 structured_GLT_Fstat] = 4.05093e-11
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 1.85111e-08
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 1.85093e-08
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 1.25681e-10
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 1.25658e-10
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 7.95539e-05
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 7.95542e-05
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 0.000201683
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 0.000201674
++ Wrote bucket dataset into ./stats.tb7521+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb7521+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb7521+orig.BRIK
++ Program finished; elapsed time=49.603
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.784       0.807  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.697       0.778  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.671       0.778  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:      -0.523      -0.528  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0
  medium:       0.521       0.552  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:      -0.513       0.000  ( 8 vs. 15)  Run#3Pol#0  vs.  str1#0
  medium:      -0.494       0.000  ( 0 vs. 17)  Run#1Pol#0  vs.  str3#0
  medium:       0.493       0.585  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.491      -0.466  (10 vs. 17)  Run#3Pol#2  vs.  str3#0
  medium:      -0.482      -0.545  (16 vs. 22)      str2#0  vs.  dL#0
  medium:      -0.478      -0.546  (16 vs. 18)      str2#0  vs.  roll#0
  medium:       0.456       0.574  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb7521.r01.blur+orig.HEAD pb03.tb7521.r02.blur+orig.HEAD pb03.tb7521.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb7521_REML -Rvar stats.tb7521_REMLvar -Rfitts fitts.tb7521_REML -Rerrts errts.tb7521_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 49733 voxels (out of 426275 = 11.7%)
++ -----  matrix condition (259x24):  7.27561  ++ VERY GOOD ++
 + masked off 264328 voxels for being all zero; 161947 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 292 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=28.85
 + X matrix: 46.782% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=259 cols=24; 109*1 cases; total CPU=0.00 Elapsed=28.87
 +  average case bandwidth = 10.00
++ REML voxel loop: [6 threads]0123456789.0123456789.
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=63.40
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=94.40
++ Output dataset ./stats.tb7521_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb7521_REML+orig.BRIK
++ Output dataset ./errts.tb7521_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb7521_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 5.46308e-09
++ Smallest FDR q [2 uns1#0_Tstat] = 6.99105e-10
++ Smallest FDR q [3 uns1_Fstat] = 6.99105e-10
++ Smallest FDR q [5 uns2#0_Tstat] = 3.89597e-05
++ Smallest FDR q [6 uns2_Fstat] = 3.89597e-05
++ Smallest FDR q [8 uns3#0_Tstat] = 0.0424624
++ Smallest FDR q [9 uns3_Fstat] = 0.0424624
++ Smallest FDR q [11 str1#0_Tstat] = 4.27074e-09
++ Smallest FDR q [12 str1_Fstat] = 4.27074e-09
++ Smallest FDR q [14 str2#0_Tstat] = 0.00106247
++ Smallest FDR q [15 str2_Fstat] = 0.00106247
[7m*+ WARNING:[0m Smallest FDR q [17 str3#0_Tstat] = 0.170866 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [18 str3_Fstat] = 0.170866 ==> few true single voxel detections
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.2796e-06
++ Smallest FDR q [21 unstructured_Fstat] = 1.27967e-06
++ Smallest FDR q [23 structured#0_Tstat] = 0.000388269
++ Smallest FDR q [24 structured_Fstat] = 0.000388269
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.0353004
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.0353004
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.110316 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.110316 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999846 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999846 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.99989 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.99989 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb7521_REML+orig
++ Output dataset ./stats.tb7521_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=112.87
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb7521 pb03.tb7521.r01.blur+orig.HEAD pb03.tb7521.r02.blur+orig.HEAD pb03.tb7521.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 26.0 s
3dTstat -mean -prefix rm.signal.all all_runs.tb7521+orig[2..18,22..28,32..38,42..103,117,133,134,142,146,147,153..155,162,180,181,187..189,197..203,231,236,248..256,265,268..270,275,281..283,292..294,299,302..371,375..413,418,419,436..439,442..447]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb7521_REML+orig[2..18,22..28,32..38,42..103,117,133,134,142,146,147,153..155,162,180,181,187..189,197..203,231,236,248..256,265,268..270,275,281..283,292..294,299,302..371,375..413,418,419,436..439,442..447]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb7521+orig -expr c*a/b -prefix TSNR.tb7521
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands

*** failure while reading from brick file ./rm.signal.all+orig.BRIK
*** desired 1705100 bytes but only got 0
*** Unix error message: Success
   THD_load_datablock
  3dcalc main
** Command line was:
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb7521+orig -expr 'c*a/b' -prefix TSNR.tb7521
[7m** FATAL ERROR:[0m Can't load dataset './rm.signal.all+orig.BRIK': is it complete?
** Program compile date = Jul 20 2017
