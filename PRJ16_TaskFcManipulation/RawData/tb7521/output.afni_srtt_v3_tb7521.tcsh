echo auto-generated by afni_proc.py, Tue Jan  2 15:40:59 2018
auto-generated by afni_proc.py, Tue Jan  2 15:40:59 2018
echo (version 6.02, December 12, 2017)
(version 6.02, December 12, 2017)
echo execution started: `date`
date
execution started: Tue Jan  2 15:41:00 EST 2018
afni -ver
Precompiled binary linux_openmp_64: Dec 22 2017 (Version AFNI_17.3.09)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   22 Dec 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb7521
endif
set output_dir = tb7521.srtt_v3
if ( -d tb7521.srtt_v3 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb7521.srtt_v3
mkdir tb7521.srtt_v3/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb7521.srtt_v3/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb7521.srtt_v3/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dTcat -prefix tb7521.srtt_v3/pb00.tb7521.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.4 s
3dTcat -prefix tb7521.srtt_v3/pb00.tb7521.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.3 s
3dTcat -prefix tb7521.srtt_v3/pb00.tb7521.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.5 s
set tr_counts = ( 150 150 150 )
cd tb7521.srtt_v3
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7521.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r01.tcat+orig.BRIK is 11.299999 degrees from plumb.
++ 27341 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7521.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r02.tcat+orig.BRIK is 11.299999 degrees from plumb.
++ 27688 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb7521.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r03.tcat+orig.BRIK is 11.299999 degrees from plumb.
++ 27400 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.tb7521.r01.despike pb00.tb7521.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r01.tcat+orig.BRIK is 11.299999 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb7521.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 621ms

++ FINAL: 19353600 data points, 1258861 edits [6.505%], 359539 big edits [1.858%]
++ Output dataset ./pb01.tb7521.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb7521.r02.despike pb00.tb7521.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r02.tcat+orig.BRIK is 11.299999 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb7521.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #4
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #1
........................................................
++ Elapsed despike time =  1s 666ms

++ FINAL: 19353600 data points, 1292729 edits [6.680%], 356183 big edits [1.840%]
++ Output dataset ./pb01.tb7521.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb7521.r03.despike pb00.tb7521.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb7521.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb7521.r03.tcat+orig.BRIK is 11.299999 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb7521.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #0
++ start OpenMP thread #4
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  1s 729ms

++ FINAL: 19353600 data points, 1214496 edits [6.275%], 366799 big edits [1.895%]
++ Output dataset ./pb01.tb7521.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.tb7521.r01.tshift -tpattern alt+z2 pb01.tb7521.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7521.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7521.r01.despike+orig.BRIK is 11.299999 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb7521.r02.tshift -tpattern alt+z2 pb01.tb7521.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7521.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7521.r02.despike+orig.BRIK is 11.299999 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb7521.r03.tshift -tpattern alt+z2 pb01.tb7521.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb7521.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb7521.r03.despike+orig.BRIK is 11.299999 degrees from plumb.
end
3dbucket -prefix vr_base pb02.tb7521.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 11.299999 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 432.595062
 + Used gradual clip level = 385.928925 .. 490.357361
 + Number voxels above clip level = 27761
 + Clustering voxels ...
 + Largest cluster has 27537 voxels
 + Clustering voxels ...
 + Largest cluster has 26757 voxels
 + Filled   259 voxels in small holes; now have 27016 voxels
 + Filled     5 voxels in large holes; now have 27021 voxels
 + Clustering voxels ...
 + Largest cluster has 27020 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 104052 voxels
 + Mask now has 27020 voxels
++ 27020 voxels in the mask [out of 131072: 20.61%]
++ first  14 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1075.346924 on /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1075.346924))'
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 11.299999 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 11.299999 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1432793 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 27020 voxels [16.5%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 27020
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.229 29.969 20.409 (index)
 + source center of mass = 86.139 162.062 165.002 (index)
 + source-target CM = -0.739 0.451 -5.245 (xyz)
 + center of mass shifts = -0.739 0.451 -5.245
++ shift param auto-range: -70.3..68.8 -69.1..70.0 -55.3..44.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.739456 .. 9.260544
 + Range param#2 [y-shift] = -9.549316 .. 10.450684
 + Range param#3 [z-shift] = -15.245056 .. 4.754944
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.739456 .. 39.260544
 + Range param#2 [y-shift] = -39.549316 .. 40.450684
 + Range param#3 [z-shift] = -45.245056 .. 34.754944
 + 12 free parameters
++ Normalized convergence radius = 0.000460
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1432793 [out of 16051904] voxels
 + base mask has 37538 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=79 usiz=207
 + - copying weight image
 + - using 27020 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 22849 total points stored in 213 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#o*[#2=-0.0263684] *+.-+o*[#28=-0.0306116] *-.+*[#60=-0.0624239] *..+o-+.+.o+-o-$-
 + - best 45 costs found:
    0 v=-0.062424: -14.07 -12.88   8.09 -15.00 -15.00 -15.00  [grid]
    1 v=-0.044333: -14.07 -12.88   8.09 -15.00 -15.00 -30.00  [grid]
    2 v=-0.043165: -14.07 -12.88  21.42 -15.00 -30.00 -15.00  [grid]
    3 v=-0.041813: -16.88  -9.01  19.10 -20.99 -15.73 -16.09  [rand]
    4 v=-0.041361: -14.07 -12.88  21.42 -30.00 -15.00  30.00  [grid]
    5 v=-0.039635: -14.07 -26.22   8.09 -30.00 -30.00 -15.00  [grid]
    6 v=-0.039527:   9.08 -24.31   6.14   3.10 -34.36  -2.55  [rand]
    7 v=-0.039502: -14.07 -12.88  21.42 -30.00 -30.00 -15.00  [grid]
    8 v=-0.039325: -14.07 -26.22   8.09 -30.00 -15.00  30.00  [grid]
    9 v=-0.039284:  12.59 -12.88  21.42  30.00 -15.00 -30.00  [grid]
   10 v=-0.037829:  12.59 -26.22  21.42  30.00 -15.00 -30.00  [grid]
   11 v=-0.036422: -16.96 -13.66  29.89 -15.74 -34.09   7.78  [rand]
   12 v=-0.035812: -14.07 -12.88  21.42 -15.00 -15.00 -15.00  [grid]
   13 v=-0.035678: -14.07 -12.88   8.09 -15.00 -30.00 -30.00  [grid]
   14 v=-0.035494:   9.08 -24.31   6.14   3.10 -34.36   2.55  [rand]
   15 v=-0.035106:  12.59 -26.22  21.42  15.00 -30.00 -30.00  [grid]
   16 v=-0.034710:  12.59 -26.22   8.09  30.00 -15.00 -30.00  [grid]
   17 v=-0.034194: -14.07 -12.88   8.09 -30.00 -30.00 -30.00  [grid]
   18 v=-0.033833: -14.07 -12.88  21.42 -30.00 -30.00  30.00  [grid]
   19 v=-0.033500: -14.07 -26.22   8.09 -15.00 -15.00 -30.00  [grid]
   20 v=-0.032743:  12.59 -12.88  21.42  15.00 -30.00  15.00  [grid]
   21 v=-0.032468: -14.07 -12.88  21.42 -15.00 -30.00  30.00  [grid]
   22 v=-0.032084: -14.07 -12.88   8.09 -15.00 -30.00  15.00  [grid]
   23 v=-0.031670:  -7.79 -19.36  30.50 -25.15 -27.05 -27.90  [rand]
   24 v=-0.031526: -14.07 -12.88  21.42 -15.00 -30.00  15.00  [grid]
   25 v=-0.031376: -17.60 -18.13   9.21 -19.57 -37.09  16.59  [rand]
   26 v=-0.031268: -20.23 -16.22  -2.64 -30.54 -19.59  20.03  [rand]
   27 v=-0.031182: -16.88   9.92  19.10 -20.99 -15.73  16.09  [rand]
   28 v=-0.030642: -14.07  13.78  21.42 -15.00  30.00 -15.00  [grid]
   29 v=-0.030612: -14.07 -12.88   8.09 -15.00 -15.00  15.00  [grid]
   30 v=-0.030588:  23.95   5.06  11.14   8.97  18.72 -30.56  [rand]
   31 v=-0.030563: -14.07  27.12   8.09  15.00  30.00  15.00  [grid]
   32 v=-0.030502: -16.72  19.94   0.48 -20.53  -3.14 -10.08  [rand]
   33 v=-0.030265: -14.07 -26.22   8.09 -30.00 -15.00  15.00  [grid]
   34 v=-0.030135: -14.07 -26.22  21.42 -30.00 -30.00  30.00  [grid]
   35 v=-0.030090: -11.06 -28.36   9.76 -30.67 -17.79  20.52  [rand]
   36 v=-0.030061: -14.07 -26.22   8.09 -30.00 -30.00  15.00  [grid]
   37 v=-0.029861:  15.24 -19.04 -10.97  20.53   3.14 -10.08  [rand]
   38 v=-0.029818: -14.07 -12.88  21.42 -15.00 -15.00 -30.00  [grid]
   39 v=-0.029796: -23.09 -15.93  10.59 -41.11 -22.86   3.97  [rand]
   40 v=-0.029730:  12.42 -37.43  31.95  14.03  -8.39 -25.20  [rand]
   41 v=-0.029607: -14.07 -12.88 -18.58 -30.00  30.00  15.00  [grid]
   42 v=-0.029607:  12.59 -26.22   8.09  15.00 -30.00 -30.00  [grid]
   43 v=-0.029468: -14.07 -26.22   8.09 -15.00 -15.00 -15.00  [grid]
   44 v=-0.029434:  -6.72  -2.96  19.28  29.81   4.26  23.54  [rand]
*[#8003=-0.0698265] *[#8011=-0.0738064] *[#8014=-0.074658] *[#8016=-0.0755008] *[#8018=-0.07583] *[#8019=-0.0772945] *[#8022=-0.0785432] *[#8023=-0.0799899] *[#8024=-0.0816892] *[#8025=-0.0819198] *[#8026=-0.0824256] *[#8027=-0.0826062] *[#8028=-0.0842512] *[#8030=-0.0848156] *[#8031=-0.0863738] *[#8032=-0.0870058] *[#8035=-0.0891767] *[#8036=-0.0914146] *[#8037=-0.0932315] *[#8038=-0.0959015] *[#8039=-0.102106] *[#8040=-0.105059] *[#8045=-0.108425] *[#8048=-0.109869] *[#8051=-0.111003] *[#8052=-0.111705] *[#8053=-0.112512] *[#8055=-0.113069] *[#8058=-0.114672] *[#8059=-0.116453] *[#8060=-0.118307] *[#8061=-0.121788] *[#8062=-0.122954] *[#8063=-0.125735] *[#8064=-0.129549] *[#8065=-0.144943] *[#8066=-0.148525] *[#8067=-0.162903] *[#8072=-0.170082] *[#8073=-0.174145] *[#8074=-0.179041] *[#8075=-0.185856] *[#8077=-0.190746] *[#8078=-0.201864] *[#8079=-0.232434] *[#8080=-0.308886] *[#8083=-0.330572]  + - costs of the above after a little optimization:
  * 0 v=-0.330572:  -0.50  -2.33   2.21  -1.52  -5.51   0.27  [grid]
    1 v=-0.084691: -10.21  -9.76   8.09 -11.13 -16.54 -16.40  [grid]
    2 v=-0.104519:  -9.30  -9.99  15.66 -13.29 -24.77  -6.61  [grid]
    3 v=-0.121197:  -4.55  -9.57  15.05  -7.01 -23.06  -4.35  [rand]
    4 v=-0.045148: -14.66 -13.34  22.21 -29.47 -14.59  29.73  [grid]
    5 v=-0.052932: -13.73 -26.01   8.14 -25.24 -29.80 -15.26  [grid]
    6 v=-0.063574:   3.59 -27.10   8.30   2.67 -34.71  -2.70  [rand]
    7 v=-0.111156:  -9.97 -11.11  15.44 -12.75 -24.45  -0.89  [grid]
    8 v=-0.046180: -12.06 -24.76   6.71 -32.21 -16.15  27.59  [grid]
    9 v=-0.046361:  11.69 -13.17  21.85  30.26 -10.23 -30.14  [grid]
   10 v=-0.058369:   8.69 -21.58  22.25  22.47 -18.36 -33.00  [grid]
   11 v=-0.057412: -15.77 -10.02  26.68 -14.38 -33.06   9.02  [rand]
   12 v=-0.155300:  -4.30  -4.85   5.11  -5.90  -9.67   1.73  [grid]
   13 v=-0.067498:  -9.86 -13.88   8.78 -20.17 -26.81 -29.41  [grid]
   14 v=-0.046668:   9.27 -24.09   7.84   8.33 -33.52   2.71  [rand]
   15 v=-0.054466:  10.58 -24.94  19.19  18.78 -22.99 -36.35  [grid]
   16 v=-0.046118:  12.11 -26.17   6.53  35.70 -16.70 -30.13  [grid]
   17 v=-0.067883:  -9.32 -14.11   8.80 -16.71 -25.12 -26.79  [grid]
   18 v=-0.046355: -13.51 -16.53  20.31 -31.91 -30.22  29.17  [grid]
   19 v=-0.066061: -11.31 -17.74   9.84 -14.09 -16.55 -26.57  [grid]
   20 v=-0.106550:   3.21  -9.82  12.22   1.97 -20.25  13.80  [grid]
   21 v=-0.050824: -14.54 -12.53  18.86  -7.22 -27.27  23.98  [grid]
   22 v=-0.091646: -15.21 -14.02  15.29 -14.54 -27.10   8.78  [grid]
   23 v=-0.071326:  -7.23 -22.20  19.35 -22.32 -40.96 -31.56  [rand]
   24 v=-0.099397:  -9.48 -13.74  20.42  -7.70 -30.63   9.58  [grid]
   25 v=-0.064640: -19.24 -15.71  11.69 -18.01 -28.64  16.04  [rand]
   26 v=-0.070614: -17.49 -16.76  -1.82 -22.33 -14.88  12.23  [rand]
   27 v=-0.049946: -15.74   9.09  18.53 -17.27 -16.42  13.08  [rand]
   28 v=-0.036567: -12.90  13.75  20.90 -11.02  30.00 -15.94  [grid]
   29 v=-0.084349: -15.24  -5.50  10.92 -12.73 -15.01  14.71  [grid]
   30 v=-0.036436:  23.35   1.17  11.52   8.22  18.73 -29.79  [rand]
   31 v=-0.032694: -15.05  26.99   7.84  14.67  29.66  15.20  [grid]
   32 v=-0.040719: -18.46  16.96  -2.53 -20.18  -0.72 -10.54  [rand]
   33 v=-0.046864: -11.80 -25.30   6.87 -31.19 -18.05  20.59  [grid]
   34 v=-0.045188: -15.99 -26.67  21.79 -24.09 -31.05  30.35  [grid]
   35 v=-0.045689: -10.38 -24.47   8.98 -31.17 -17.20  21.07  [rand]
   36 v=-0.036754: -14.16 -31.43   7.45 -30.09 -29.58  16.75  [grid]
   37 v=-0.043582:  16.42 -17.02 -12.06  19.81   0.70 -12.19  [rand]
   38 v=-0.080793:  -8.66 -15.80   9.18 -12.63 -22.31 -18.50  [grid]
   39 v=-0.051920: -20.19 -16.91  11.60 -35.04 -25.46   7.65  [rand]
   40 v=-0.033820:  13.45 -36.97  32.12  14.13  -6.98 -26.23  [rand]
   41 v=-0.031365: -14.28 -12.40 -18.45 -29.98  29.63  15.00  [grid]
   42 v=-0.040955:  10.97 -28.11  15.81   8.53 -34.90 -34.06  [grid]
   43 v=-0.086338:  -8.46 -17.98   7.97 -12.14 -21.85 -13.73  [grid]
   44 v=-0.041767:  -6.38  -8.38  16.78  25.83   4.50  22.58  [rand]
 + - save # 0 for twobest
 + - skip #12 for twobest: too close to set # 0
 + - save # 3 for twobest
 + - save # 7 for twobest
 + - save #20 for twobest
 + - save # 2 for twobest
 + - save #24 for twobest
 + - save #22 for twobest
 + - save #43 for twobest
 + - save # 1 for twobest
 + - save #29 for twobest
 + - save #38 for twobest
 + - save #23 for twobest
 + - save #26 for twobest
 + - save #17 for twobest
 + - skip #13 for twobest: too close to set #17
 + - save #19 for twobest
 + - save #25 for twobest
 + - save # 6 for twobest
 + - save #10 for twobest
 + - save #11 for twobest
 + - save #15 for twobest
 + - save # 5 for twobest
 + - save #39 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=79 usiz=207
 + - retaining old weight image
 + - using 27020 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23281 total points stored in 237 'RHDD(13.7332)' bloks
*[#9932=-0.378138] *[#9935=-0.437485] *[#9937=-0.440567] *[#9938=-0.473626] *[#9939=-0.48872] *[#9941=-0.490106] *[#9942=-0.493281] *[#9944=-0.493749] *[#9945=-0.496682] *[#9947=-0.507244] *[#9948=-0.51867] *[#9950=-0.519731] *[#9955=-0.523658] *[#9958=-0.52915] *[#9959=-0.532577] *[#9962=-0.53398] *[#9963=-0.534634] *[#9966=-0.536738] *[#9967=-0.538413] *[#9968=-0.538862] *[#9973=-0.544914] *[#9975=-0.545115] *[#9976=-0.551144] *[#9981=-0.552416] *[#9984=-0.558055] *[#9987=-0.558988] *[#9988=-0.559967] *[#9989=-0.561885] *[#9991=-0.564691] *[#9994=-0.566211] *[#9997=-0.566308] *[#9999=-0.567438] *[#10001=-0.567897] *[#10004=-0.568422] *[#10005=-0.569231] 
 + - param set #1 has cost=-0.569231
 + -- Parameters = -0.0783 -0.7676 0.3637 -1.3619 -2.8494 0.0037 0.9940 1.0133 0.9893 -0.0100 -0.0091 -0.0104
 + - param set #2 has cost=-0.109127
 + -- Parameters = -4.3094 -7.7735 14.2952 -6.6880 -22.1210 -1.3786 1.0239 1.0084 0.9982 -0.0050 0.0044 -0.0004
 + - param set #3 has cost=-0.095745
 + -- Parameters = -9.0314 -11.3079 15.4898 -12.1327 -24.7152 -1.1310 1.0067 0.9989 1.0004 0.0001 0.0078 -0.0001
 + - param set #4 has cost=-0.079599
 + -- Parameters = 3.0892 -9.8012 12.4280 2.3714 -20.5046 13.1992 1.0300 1.0157 1.0065 0.0029 0.0001 0.0005
 + - param set #5 has cost=-0.092666
 + -- Parameters = -8.7028 -11.1538 15.2418 -12.4403 -24.8403 -0.6363 0.9945 1.0029 1.0017 -0.0004 -0.0010 -0.0055
 + - param set #6 has cost=-0.093480
 + -- Parameters = -8.4211 -11.9280 19.3069 -10.2172 -30.3427 3.8720 1.0137 1.0163 0.9968 0.0131 -0.0009 0.0122
 + - param set #7 has cost=-0.092777
 + -- Parameters = -11.0785 -13.9641 15.6791 -13.5308 -29.0325 6.6169 0.9925 0.9920 0.9971 -0.0027 0.0066 0.0025
 + - param set #8 has cost=-0.074858
 + -- Parameters = -7.6841 -17.5248 9.2733 -11.7413 -23.2348 -13.0973 1.0011 0.9863 0.9897 -0.0052 0.0033 0.0143
 + - param set #9 has cost=-0.228073
 + -- Parameters = -1.9716 -3.3583 2.6605 -4.7467 -5.7503 1.1652 1.0162 0.9618 0.9993 0.0054 -0.0293 -0.0241
 + - param set #10 has cost=-0.058738
 + -- Parameters = -15.0386 -5.2759 10.7226 -12.7685 -14.7249 14.8088 1.0009 0.9981 0.9990 -0.0011 0.0008 0.0001
 + - param set #11 has cost=-0.086465
 + -- Parameters = -5.5222 -15.7212 10.0339 -10.1543 -26.0580 -8.8562 0.9735 0.9993 0.9851 -0.0162 -0.0120 -0.0072
 + - param set #12 has cost=-0.549425
 + -- Parameters = -0.1848 -0.7012 0.1757 -1.1225 -2.7942 -0.5670 0.9915 1.0177 1.0151 0.0081 0.0049 -0.0034
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0816 
 + --- dist(#3,#1) = 0.14 
 + --- dist(#4,#1) = 0.214 
 + --- dist(#5,#1) = 0.243 
 + --- dist(#6,#1) = 0.305 
 + --- dist(#7,#1) = 0.291 
 + --- dist(#8,#1) = 0.244 
 + --- dist(#9,#1) = 0.258 
 + --- dist(#10,#1) = 0.196 
 + --- dist(#11,#1) = 0.227 
 + --- dist(#12,#1) = 0.187 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=79 usiz=207
 + - retaining old weight image
 + - using 27020 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23450 total points stored in 244 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.551474
 + -- Parameters = -0.1334 -0.8436 0.3873 -1.3630 -2.8480 -0.0219 1.0043 1.0141 0.9902 -0.0103 -0.0090 -0.0106
 + - param set #2 has cost=-0.549839
 + -- Parameters = -0.0687 -0.7905 0.2734 -0.9839 -2.8572 -0.6248 1.0009 1.0159 0.9972 0.0065 0.0052 -0.0099
 + - param set #3 has cost=-0.435800
 + -- Parameters = 0.9517 -2.2963 0.1462 -0.4305 -3.2084 0.9805 1.0050 0.9718 0.9952 0.0082 -0.0265 -0.0273
 + - param set #4 has cost=-0.095043
 + -- Parameters = -4.2677 -6.6376 14.2525 -6.8354 -21.5798 -2.8344 1.0386 1.0156 0.9774 -0.0013 0.0079 0.0036
 + - param set #5 has cost=-0.077554
 + -- Parameters = -8.2446 -11.1937 14.9679 -11.4362 -25.6756 0.1094 1.0060 0.9955 0.9962 -0.0015 0.0175 0.0011
 + - param set #6 has cost=-0.077378
 + -- Parameters = -8.3573 -11.6974 19.0198 -10.2636 -30.4922 3.1868 1.0155 1.0191 0.9918 0.0123 0.0075 0.0099
 + - param set #7 has cost=-0.071281
 + -- Parameters = -11.0439 -14.0624 16.0653 -13.3006 -29.5336 6.6968 0.9907 0.9895 0.9966 -0.0038 0.0075 -0.0000
 + - param set #8 has cost=-0.079613
 + -- Parameters = -9.2173 -10.7611 15.2043 -11.7358 -26.1327 1.4406 1.0170 1.0065 0.9879 -0.0048 0.0126 0.0012
 + - param set #9 has cost=-0.080604
 + -- Parameters = -5.1309 -16.0550 9.9013 -8.9545 -26.8799 -5.8120 1.0411 0.9799 0.9638 -0.0297 -0.0147 -0.0260
 + - param set #10 has cost=-0.070189
 + -- Parameters = 2.0871 -8.0091 12.5065 2.3086 -19.2676 12.6609 1.0186 0.9996 0.9840 0.0530 -0.0034 0.0012
 + - param set #11 has cost=-0.065044
 + -- Parameters = -6.1087 -17.1536 10.2597 -10.0788 -26.8236 -12.1496 0.9770 0.9827 0.9867 -0.0086 0.0076 0.0064
 + - param set #12 has cost=-0.045970
 + -- Parameters = -14.9356 -4.8025 10.5871 -12.7675 -14.6976 15.2816 1.0011 1.0000 0.9980 0.0001 0.0013 -0.0013
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0756 
 + --- dist(#3,#1) = 0.115 
 + --- dist(#4,#1) = 0.208 
 + --- dist(#5,#1) = 0.267 
 + --- dist(#6,#1) = 0.259 
 + --- dist(#7,#1) = 0.254 
 + --- dist(#8,#1) = 0.307 
 + --- dist(#9,#1) = 0.297 
 + --- dist(#10,#1) = 0.285 
 + --- dist(#11,#1) = 0.266 
 + --- dist(#12,#1) = 0.185 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=79 usiz=207
 + - retaining old weight image
 + - using 27020 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23937 total points stored in 259 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.509078
 + -- Parameters = 0.0058 -0.6798 0.3858 -1.1522 -3.1415 -0.1201 1.0063 1.0190 0.9941 -0.0002 -0.0044 -0.0127
 + - param set #2 has cost=-0.508019
 + -- Parameters = -0.0853 -0.7083 0.3617 -1.0627 -3.0587 -0.4933 1.0065 1.0180 0.9952 0.0044 0.0048 -0.0116
 + - param set #3 has cost=-0.484213
 + -- Parameters = 0.7712 -0.9064 0.1078 -0.8413 -3.0143 1.1443 1.0154 1.0152 0.9941 0.0047 -0.0232 -0.0153
 + - param set #4 has cost=-0.088732
 + -- Parameters = -4.3246 -6.6886 12.6421 -6.3498 -19.1602 -2.7789 1.0365 1.0156 0.9182 -0.0145 0.0083 0.0135
 + - param set #5 has cost=-0.069598
 + -- Parameters = -4.7972 -16.2610 10.3080 -8.1047 -27.2740 -5.3956 1.0358 0.9728 0.9636 -0.0299 -0.0090 -0.0371
 + - param set #6 has cost=-0.066153
 + -- Parameters = -9.3459 -10.7450 15.3127 -11.8454 -26.0213 1.1368 1.0157 1.0066 0.9877 0.0033 0.0122 0.0025
 + - param set #7 has cost=-0.065797
 + -- Parameters = -8.9488 -11.4501 15.0019 -11.5850 -26.1261 0.6236 1.0129 1.0000 0.9965 0.0030 0.0244 -0.0003
 + - param set #8 has cost=-0.068947
 + -- Parameters = -8.3613 -11.9034 18.9841 -10.5721 -30.4158 0.8547 1.0061 1.0027 0.9766 0.0196 0.0342 -0.0132
 + - param set #9 has cost=-0.056200
 + -- Parameters = -10.7264 -14.0003 16.0450 -13.1105 -29.5940 6.5037 0.9865 0.9894 0.9951 -0.0020 0.0087 -0.0011
 + - param set #10 has cost=-0.094805
 + -- Parameters = -0.1878 -5.2067 9.6887 -1.0471 -14.8759 1.5174 0.9956 1.0034 0.9279 0.0896 0.0525 -0.0113
 + - param set #11 has cost=-0.063863
 + -- Parameters = -4.5597 -17.2116 10.8807 -9.0902 -27.7604 -8.4513 0.9847 0.9762 0.9760 -0.0203 0.0061 0.0079
 + - param set #12 has cost=-0.039480
 + -- Parameters = -14.9592 -4.6585 10.6578 -12.8745 -14.8480 15.2920 1.0010 0.9995 1.0054 -0.0003 0.0012 -0.0010
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0411 
 + --- dist(#3,#1) = 0.0849 
 + --- dist(#4,#1) = 0.404 
 + --- dist(#5,#1) = 0.207 
 + --- dist(#6,#1) = 0.268 
 + --- dist(#7,#1) = 0.303 
 + --- dist(#8,#1) = 0.254 
 + --- dist(#9,#1) = 0.255 
 + --- dist(#10,#1) = 0.274 
 + --- dist(#11,#1) = 0.294 
 + --- dist(#12,#1) = 0.187 
 + - Total coarse refinement net CPU time = 0.0 s; 3220 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=79 usiz=207
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24187 total points stored in 265 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.476820 *
 + -- Parameters = 0.0058 -0.6798 0.3858 -1.1522 -3.1415 -0.1201 1.0063 1.0190 0.9941 -0.0002 -0.0044 -0.0127
 + - cost(#2)=-0.475777  
 + -- Parameters = -0.0853 -0.7083 0.3617 -1.0627 -3.0587 -0.4933 1.0065 1.0180 0.9952 0.0044 0.0048 -0.0116
 + - cost(#3)=-0.452286  
 + -- Parameters = 0.7712 -0.9064 0.1078 -0.8413 -3.0143 1.1443 1.0154 1.0152 0.9941 0.0047 -0.0232 -0.0153
 + - cost(#4)=-0.086728  
 + -- Parameters = -0.1878 -5.2067 9.6887 -1.0471 -14.8759 1.5174 0.9956 1.0034 0.9279 0.0896 0.0525 -0.0113
 + - cost(#5)=-0.078540  
 + -- Parameters = -4.3246 -6.6886 12.6421 -6.3498 -19.1602 -2.7789 1.0365 1.0156 0.9182 -0.0145 0.0083 0.0135
 + - cost(#6)=-0.064082  
 + -- Parameters = -4.7972 -16.2610 10.3080 -8.1047 -27.2740 -5.3956 1.0358 0.9728 0.9636 -0.0299 -0.0090 -0.0371
 + - cost(#7)=-0.060503  
 + -- Parameters = -8.3613 -11.9034 18.9841 -10.5721 -30.4158 0.8547 1.0061 1.0027 0.9766 0.0196 0.0342 -0.0132
 + - cost(#8)=-0.059603  
 + -- Parameters = -9.3459 -10.7450 15.3127 -11.8454 -26.0213 1.1368 1.0157 1.0066 0.9877 0.0033 0.0122 0.0025
 + - cost(#9)=-0.059651  
 + -- Parameters = -8.9488 -11.4501 15.0019 -11.5850 -26.1261 0.6236 1.0129 1.0000 0.9965 0.0030 0.0244 -0.0003
 + - cost(#10)=-0.061219  
 + -- Parameters = -4.5597 -17.2116 10.8807 -9.0902 -27.7604 -8.4513 0.9847 0.9762 0.9760 -0.0203 0.0061 0.0079
 + - cost(#11)=-0.046912  
 + -- Parameters = -10.7264 -14.0003 16.0450 -13.1105 -29.5940 6.5037 0.9865 0.9894 0.9951 -0.0020 0.0087 -0.0011
 + - cost(#12)=-0.033562  
 + -- Parameters = -14.9592 -4.6585 10.6578 -12.8745 -14.8480 15.2920 1.0010 0.9995 1.0054 -0.0003 0.0012 -0.0010
 + - cost(#13)=-0.012850  
 + -- Parameters = -0.7395 0.4507 -5.2451 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.477415 *
 + -- Parameters = -0.0237 -0.5994 0.4348 -1.1404 -3.2529 -0.1951 1.0057 1.0206 0.9927 -0.0001 -0.0028 -0.0135
 + - cost(#2)=-0.477058  
 + -- Parameters = -0.1217 -0.5863 0.3998 -1.1656 -3.1524 -0.4499 1.0054 1.0213 0.9948 0.0017 0.0038 -0.0113
 + - cost(#3)=-0.469029  
 + -- Parameters = 0.3681 -0.7046 0.3373 -1.0292 -3.1435 0.4928 1.0052 1.0185 0.9903 0.0029 -0.0211 -0.0151
 + - cost(#4)=-0.101440  
 + -- Parameters = -0.1554 -5.2841 6.9069 -1.8233 -12.6088 2.5575 1.0097 1.0030 0.9392 0.0921 0.0532 -0.0113
 + - cost(#5)=-0.083827  
 + -- Parameters = -4.8113 -6.5252 12.4752 -6.9612 -19.3775 -1.2988 1.0370 1.0185 0.9086 -0.0070 0.0157 0.0179
 + - cost(#6)=-0.067506  
 + -- Parameters = -3.6631 -15.3659 10.1760 -6.6029 -27.3795 -3.8173 1.0363 0.9768 0.9637 -0.0293 -0.0111 -0.0396
 + - cost(#7)=-0.061963  
 + -- Parameters = -8.2539 -11.8028 18.7533 -10.4115 -30.1683 0.4105 1.0086 1.0032 0.9655 0.0198 0.0335 -0.0123
 + - cost(#8)=-0.061544  
 + -- Parameters = -9.0482 -10.1658 15.5591 -11.2499 -26.2469 1.1020 1.0077 1.0122 0.9752 0.0185 0.0219 -0.0046
 + - cost(#9)=-0.062311  
 + -- Parameters = -8.2076 -11.1749 15.7645 -10.8691 -26.7734 0.3150 1.0186 1.0041 0.9949 0.0067 0.0335 0.0004
 + - cost(#10)=-0.064393  
 + -- Parameters = -4.6502 -16.8031 10.8963 -8.9792 -28.5379 -8.6239 1.0037 0.9786 0.9515 -0.0171 -0.0054 -0.0035
 + - cost(#11)=-0.048266  
 + -- Parameters = -10.7576 -13.7177 16.3011 -12.9935 -30.0966 6.3836 0.9850 0.9900 0.9837 -0.0008 0.0107 -0.0015
 + - cost(#12)=-0.034126  
 + -- Parameters = -14.9586 -4.6595 10.6417 -12.6740 -14.7521 15.2197 1.0043 1.0008 1.0050 0.0002 0.0021 -0.0008
 + - cost(#13)=-0.469315  
 + -- Parameters = 0.2487 -0.8561 0.2726 -0.9337 -2.9266 0.2151 1.0043 1.0171 0.9985 0.0067 -0.0133 -0.0098
 + - case #1 is now the best
 + - Initial  cost = -0.477415
 + - Initial fine Parameters = -0.0237 -0.5994 0.4348 -1.1404 -3.2529 -0.1951 1.0057 1.0206 0.9927 -0.0001 -0.0028 -0.0135
 + - Finalish cost = -0.483611 ; 488 funcs
 + - Final    cost = -0.483616 ; 88 funcs
 + Final fine fit Parameters:
       x-shift=-0.2901   y-shift= 0.0010   z-shift= 0.3888
       z-angle=-1.2376   x-angle=-4.6274   y-angle=-0.7143
       x-scale= 1.0038   y-scale= 1.0208   z-scale= 0.9887
     y/x-shear= 0.0004 z/x-shear= 0.0073 z/y-shear=-0.0400
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.2901 0.0010 0.3888 -1.2376 -4.6274 -0.7143 1.0038 1.0208 0.9887 0.0004 0.0073 -0.0400
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 30.3
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 11.299999 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0212 -1.0052 0.1130 236.0450 -0.0085 0.1610 0.9857 62.5183 -1.0035 -0.0207 -0.0125 203.3596
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.2
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base MNI152_T1_2009c+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 27.3 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3038.770100 ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 119.659 57.091   ITER = 9/137
119.659

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=0 xtop=0  ybot=1 ytop=2  zbot=15 ztop=0 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 193 x 232 x 208 volume ; autobbox = 19..173 21..211 17..179 [clock= 12s 783ms]
lev=0 0..192 0..231 0..199: [first cost=-0.75046] ... done [cost:-0.75046==>-0.85785]
lev=1 patch=145x175x157 [clock= 30m 54s 949ms]........:[cost=-0.88562]:........ done [cost:-0.85785==>-0.88938 ; 16 patches optimized, 0 skipped]
lev=2 patch=109x131x117 [clock= 51m 21s 740ms]..................... done [cost:-0.88938==>-0.97195 ; 21 patches optimized, 6 skipped]
lev=3 patch=81x99x89 [clock= 1h 5m 21s 517ms]........... done [cost:-0.97195==>-1.04216 ; 41 patches optimized, 23 skipped]
lev=4 patch=61x73x67 [clock= 1h 18m 45s 412ms].......... done [cost:-1.04216==>-1.10481 ; 73 patches optimized, 52 skipped]
lev=5 patch=47x55x49 [clock= 1h 28m 28s 456ms]............. done [cost:-1.10481==>-1.18282 ; 193 patches optimized, 150 skipped]
lev=6 patch=35x41x37 [clock= 1h 38m 53s 443ms].................... done [cost:-1.18282==>-1.25279 ; 451 patches optimized, 359 skipped]
lev=7 patch=25x25x25 [clock= 1h 49m 34s 151ms]............................................. done [cost:-1.25279==>-1.33817 ; 1528 patches optimized, 1384 skipped]
++ ========== total number of parameters 'optimized' = 56049
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 2h 1m 26s 71ms
#++ Applying warps to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb7521/tb7521.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 22.5 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_T1_2009c+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
if ( ! -f Sag3DMPRAGEs002a1001_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.tb7521.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.299999 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb7521.r01.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ Reading input dataset ./pb02.tb7521.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29567 voxels
 + 4821 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.670  pitch=-0.624  yaw=-0.518  dS=-0.188  dL=-0.528  dP=-2.174
++ Mean: roll=+0.377  pitch=+2.534  yaw=+0.034  dS=+0.285  dL=+0.477  dP=-0.925
++ Max : roll=+2.546  pitch=+6.036  yaw=+0.809  dS=+0.662  dL=+1.705  dP=+0.198
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 1.24(1.24) 1.05(0.20) 1.08(0.04) 1.02(0.08) 0.93(0.10) 0.92(0.10) 0.82(0.17) 0.95(0.15) 0.96(0.23) 0.82(0.16) 0.87(0.13) 0.92(0.07) 0.92(0.03) 0.92(0.05) 0.91(0.03) 0.86(0.08) 0.81(0.14) 0.71(0.11) 0.40(0.31) 2.25(2.65) 2.53(0.40) 2.69(0.34) 2.73(0.11) 2.70(0.12) 2.67(0.06) 2.73(0.10) 2.84(0.17) 2.79(0.11) 2.92(0.32) 3.69(1.07) 4.27(0.72) 4.05(0.24) 3.93(0.15) 3.90(0.09) 3.84(0.13) 3.76(0.17) 3.77(0.05) 3.65(0.18) 3.59(0.13) 4.02(1.10) 4.35(0.98) 4.26(0.44) 4.33(0.33) 4.19(0.18) 4.28(0.11) 4.30(0.21) 4.30(0.10) 4.14(0.17) 4.22(0.27) 4.29(0.12) 4.39(0.10) 4.46(0.12) 4.34(0.14) 4.17(0.20) 4.20(0.16) 4.15(0.16) 4.17(0.08) 4.31(0.16) 4.39(0.14) 4.34(0.10) 4.31(0.09) 4.25(0.07) 4.23(0.07) 4.26(0.11) 4.35(0.10) 4.32(0.05) 4.26(0.10) 4.32(0.11) 4.34(0.03) 4.45(0.23) 4.37(0.09) 4.25(0.29) 4.28(0.09) 4.22(0.07) 4.27(0.05) 4.31(0.06) 4.36(0.09) 4.41(0.11) 4.38(0.11) 4.40(0.03) 4.30(0.21) 4.30(0.07) 4.39(0.15) 4.38(0.07) 4.33(0.13) 4.22(0.19) 4.21(0.12) 4.23(0.13) 4.37(0.24) 4.36(0.17) 4.35(0.11) 4.56(0.21) 4.83(0.28) 4.74(0.12) 4.66(0.14) 4.62(0.10) 4.63(0.19) 4.70(0.15) 4.59(0.16) 4.42(0.17) 4.48(0.12) 4.49(0.05) 4.50(0.06) 4.53(0.05) 4.61(0.52) 5.05(2.21) 5.53(0.49) 6.55(1.09) 6.75(0.26) 6.68(0.12) 6.73(0.10) 6.95(0.43) 7.03(0.35) 7.01(0.45) 6.97(0.05) 6.84(0.17) 6.88(0.19) 6.78(0.26) 6.02(0.91) 6.47(0.53) 6.53(0.27) 6.97(0.89) 9.29(2.64) 10.42(1.17) 10.30(0.13) 10.44(0.17) 9.80(0.70) 7.27(2.59) 7.44(0.21) 8.91(1.60) 8.05(1.61) 7.45(0.98) 7.72(0.29) 7.82(0.23) 8.02(0.43) 8.18(0.25) 8.15(0.18) 7.26(0.93) 5.47(1.99) 5.86(0.64) 6.23(0.53) 6.26(0.16) 6.10(0.19) 5.36(0.84) 4.91(0.49) 4.95(0.12) 5.14(0.31) 5.24(0.31) 4.95(0.55)
++ Max displacement in automask = 10.44 (mm) at sub-brick 126
++ Max delta displ  in automask = 2.65 (mm) at sub-brick 20
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.tb7521.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb7521.r01.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb7521.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb7521.r01.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ opened source dataset 'pb02.tb7521.r01.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 457.2 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.299999 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.tb7521.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.299999 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb7521.r02.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ Reading input dataset ./pb02.tb7521.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30470 voxels
 + 4967 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-2.090  pitch=+2.942  yaw=-1.299  dS=-1.899  dL=-3.229  dP=-4.742
++ Mean: roll=+1.842  pitch=+6.860  yaw=-0.351  dS=-0.746  dL=-0.946  dP=-2.869
++ Max : roll=+5.044  pitch=+11.950  yaw=+1.278  dS=-0.062  dL=+1.133  dP=-0.890
++ Max displacements (mm) for each sub-brick:
 10.09(0.00) 10.48(1.79) 7.57(3.03) 7.39(0.35) 7.71(0.35) 7.73(0.11) 7.62(0.23) 7.46(0.59) 7.69(0.57) 13.48(6.77) 13.09(0.65) 12.21(0.99) 11.90(0.34) 11.54(0.39) 10.29(1.36) 10.07(0.30) 11.51(2.18) 15.82(5.47) 14.90(0.99) 12.19(4.32) 8.06(7.23) 8.16(1.32) 8.50(1.09) 9.12(1.22) 9.39(0.41) 9.84(0.64) 18.09(10.40) 18.95(0.99) 17.93(1.08) 17.51(0.51) 17.48(0.19) 17.33(0.52) 17.09(0.34) 11.49(6.21) 9.06(2.72) 9.72(0.70) 10.19(0.51) 10.18(0.10) 10.31(0.38) 10.39(0.13) 10.25(0.15) 10.81(0.58) 12.19(1.72) 11.75(4.41) 10.14(5.49) 10.01(1.09) 10.73(1.22) 10.81(0.20) 10.83(0.09) 10.99(0.31) 11.04(0.33) 11.24(0.23) 11.21(0.21) 10.92(0.29) 10.97(0.13) 9.74(3.98) 12.45(10.07) 12.55(0.21) 11.08(3.49) 11.84(6.93) 12.91(1.52) 16.22(4.85) 15.68(0.78) 13.92(2.18) 13.82(0.77) 13.78(0.22) 14.60(5.52) 16.87(5.88) 16.07(0.82) 16.16(0.33) 16.34(0.54) 16.36(0.83) 15.28(1.93) 11.61(4.33) 12.02(0.72) 12.85(0.95) 13.23(0.96) 13.35(1.49) 14.00(2.63) 14.18(0.32) 13.66(0.62) 13.80(0.17) 13.86(0.14) 13.27(0.59) 13.00(0.63) 14.82(1.95) 14.83(0.43) 14.41(0.42) 13.57(0.95) 12.57(1.53) 13.23(2.34) 17.38(6.01) 17.42(0.91) 16.56(1.07) 7.74(9.95) 7.77(0.31) 10.00(2.64) 10.46(0.72) 10.78(0.35) 11.00(0.25) 11.07(0.35) 10.92(0.42) 11.02(0.19) 11.07(0.21) 10.79(0.43) 11.10(0.44) 10.98(0.19) 11.14(0.17) 11.76(1.52) 11.00(2.54) 10.41(1.49) 11.31(2.74) 14.34(7.42) 15.16(1.12) 13.66(6.40) 13.60(0.13) 13.57(0.30) 13.05(0.77) 13.08(0.33) 13.21(0.31) 13.03(0.27) 12.87(0.45) 13.80(2.93) 13.41(0.75) 12.93(0.88) 12.67(0.28) 12.83(0.24) 14.04(2.28) 16.55(3.92) 15.51(1.39) 12.24(7.16) 12.43(0.39) 12.81(0.43) 12.72(0.21) 12.87(0.42) 13.92(1.37) 13.64(0.40) 13.87(5.41) 13.76(1.52) 13.14(1.12) 13.00(0.60) 11.28(2.10) 10.95(0.42) 11.01(0.25) 11.02(0.16) 10.91(0.18) 10.40(0.55) 9.42(1.08) 10.11(0.93) 10.08(0.26)
++ Max displacement in automask = 18.95 (mm) at sub-brick 27
++ Max delta displ  in automask = 10.40 (mm) at sub-brick 26
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.tb7521.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb7521.r02.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb7521.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb7521.r02.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ opened source dataset 'pb02.tb7521.r02.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 456.3 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.299999 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.tb7521.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.299999 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb7521.r03.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ Reading input dataset ./pb02.tb7521.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29656 voxels
 + 4901 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.455  pitch=+4.710  yaw=-0.783  dS=-0.529  dL=-2.424  dP=-3.516
++ Mean: roll=+0.413  pitch=+6.278  yaw=-0.188  dS=-0.206  dL=-1.839  dP=-2.865
++ Max : roll=+2.914  pitch=+7.739  yaw=+0.480  dS=+0.062  dL=-0.186  dP=-2.309
++ Max displacements (mm) for each sub-brick:
 8.69(0.00) 8.63(0.47) 8.41(0.30) 8.42(0.15) 8.27(0.16) 8.08(0.22) 7.96(0.13) 7.86(0.10) 7.85(0.23) 8.17(0.38) 8.17(0.05) 8.18(0.04) 8.01(0.26) 8.06(0.08) 8.10(0.07) 8.13(0.05) 8.20(0.09) 8.34(0.24) 8.75(0.46) 8.92(0.20) 8.90(0.09) 8.99(0.10) 9.09(0.13) 9.10(0.07) 9.14(0.07) 9.18(0.09) 9.26(0.12) 9.10(0.16) 8.98(0.12) 8.93(0.07) 8.79(0.16) 8.69(0.18) 8.82(0.18) 8.96(0.15) 8.93(0.08) 8.99(0.07) 9.11(0.13) 9.10(0.05) 9.09(0.04) 9.09(0.16) 9.11(0.08) 9.10(0.06) 9.06(0.06) 9.02(0.11) 8.92(0.10) 8.97(0.06) 9.38(0.41) 9.48(0.17) 9.41(0.13) 9.43(0.05) 9.41(0.07) 9.49(0.09) 9.49(0.03) 9.45(0.05) 9.47(0.03) 9.50(0.08) 9.54(0.09) 9.56(0.06) 9.57(0.05) 9.66(0.10) 9.64(0.04) 9.57(0.12) 9.58(0.06) 9.55(0.06) 9.48(0.10) 9.56(0.09) 9.61(0.05) 9.56(0.07) 9.60(0.10) 9.59(0.02) 9.61(0.06) 9.58(0.08) 9.74(0.23) 11.35(1.88) 11.85(0.72) 11.70(0.19) 11.62(0.13) 11.78(0.16) 11.85(0.12) 11.73(0.15) 11.66(0.14) 11.63(0.06) 11.66(0.08) 11.71(0.07) 11.68(0.04) 11.63(0.10) 11.66(0.11) 11.71(0.05) 11.98(0.28) 11.83(0.18) 11.78(0.08) 11.75(0.13) 11.56(0.23) 11.71(0.15) 11.61(0.12) 11.55(0.07) 11.63(0.12) 11.62(0.04) 11.63(0.05) 11.66(0.04) 11.66(0.16) 11.56(0.11) 11.56(0.13) 11.64(0.10) 11.63(0.25) 11.51(0.13) 11.25(0.33) 11.35(0.14) 11.71(0.41) 11.89(0.23) 11.90(0.09) 11.90(0.01) 11.90(0.04) 12.18(0.34) 12.34(0.23) 11.79(0.64) 11.40(0.53) 11.79(0.45) 11.66(0.20) 11.56(0.24) 11.59(0.52) 12.33(4.06) 12.59(1.17) 12.60(0.21) 12.30(0.32) 12.09(0.31) 12.28(0.23) 12.21(0.24) 12.42(0.29) 12.89(0.92) 12.15(0.97) 10.48(1.92) 11.06(0.80) 12.25(3.45) 12.70(1.33) 12.58(0.28) 12.58(0.26) 12.57(0.13) 12.57(0.07) 12.37(0.20) 12.06(0.35) 11.53(0.53) 11.17(0.37) 11.13(0.06) 11.15(0.09) 11.30(0.17) 11.42(0.14) 11.47(0.15) 11.77(0.38) 11.77(0.70)
++ Max displacement in automask = 12.89 (mm) at sub-brick 129
++ Max delta displ  in automask = 4.06 (mm) at sub-brick 121
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.tb7521.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb7521.r03.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb7521.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb7521.r03.tshift+orig.BRIK is 11.299999 degrees from plumb.
++ opened source dataset 'pb02.tb7521.r03.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 451.0 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.299999 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb7521.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7521.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb7521.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7521.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb7521.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb7521.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source vr_base+orig -nwarp anat.un.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.299999 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 17.9 sec
3dcopy Sag3DMPRAGEs002a1001_ns+tlrc anat_final.tb7521
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.tb7521+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb7521+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets
++ 1868238 voxels in source_automask+0
++ Zero-pad: xbot=1 xtop=2
++ Zero-pad: ybot=4 ytop=4
++ Zero-pad: zbot=2 ztop=0
++ Computing -autobox
++ 341120 voxels [91.8%] in weight mask
++ Number of points for matching = 160326
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.135118
   sp   = 0.253965
   mi   = -0.587811
   crM  = 0.032985
   nmi  = 0.842479
   je   = 3.14383
   hel  = -0.121705
   crA  = 0.181783
   crU  = 0.189523
   lss  = 0.864882
   lpc  = 0.166686
   lpa  = 0.833314
   lpc+ = 0.290057
   ncd  = 0.887573
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.4
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb7521+tlrc -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb7521+tlrc'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 21.4 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb7521.r01.blur pb03.tb7521.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb7521.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb7521.r02.blur pb03.tb7521.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb7521.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb7521.r03.blur pb03.tb7521.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb7521.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb04.tb7521.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb7521.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 425.815979
 + Used gradual clip level = 391.037415 .. 475.994507
 + Number voxels above clip level = 70935
 + Clustering voxels ...
 + Largest cluster has 70574 voxels
 + Clustering voxels ...
 + Largest cluster has 70172 voxels
 + Filled   101 voxels in small holes; now have 70273 voxels
 + Clustering voxels ...
 + Largest cluster has 70271 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 241025 voxels
 + Mask now has 70271 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 230716 voxels
++ 80580 voxels in the mask [out of 311296: 25.89%]
++ first   7 x-planes are zero [from L]
++ last    6 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb04.tb7521.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb7521.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 423.897400
 + Used gradual clip level = 387.613892 .. 470.138306
 + Number voxels above clip level = 71652
 + Clustering voxels ...
 + Largest cluster has 71280 voxels
 + Clustering voxels ...
 + Largest cluster has 70883 voxels
 + Filled    99 voxels in small holes; now have 70982 voxels
 + Filled     1 voxels in large holes; now have 70983 voxels
 + Clustering voxels ...
 + Largest cluster has 70977 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 240319 voxels
 + Mask now has 70977 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 230008 voxels
++ 81288 voxels in the mask [out of 311296: 26.11%]
++ first   7 x-planes are zero [from L]
++ last    6 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb04.tb7521.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb7521.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 424.917236
 + Used gradual clip level = 389.553070 .. 471.499023
 + Number voxels above clip level = 71593
 + Clustering voxels ...
 + Largest cluster has 71216 voxels
 + Clustering voxels ...
 + Largest cluster has 70814 voxels
 + Filled   115 voxels in small holes; now have 70929 voxels
 + Clustering voxels ...
 + Largest cluster has 70927 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 240369 voxels
 + Mask now has 70927 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 229935 voxels
++ 81361 voxels in the mask [out of 311296: 26.14%]
++ first   7 x-planes are zero [from L]
++ last    6 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.tb7521
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 81999 survived, 229297 were zero
++ writing result full_mask.tb7521...
3dresample -master full_mask.tb7521+tlrc -input Sag3DMPRAGEs002a1001_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.tb7521
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 97766 survived, 213530 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb7521...
3dABoverlap -no_automask full_mask.tb7521+tlrc mask_anat.tb7521+tlrc
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#A=./full_mask.tb7521+tlrc.BRIK  B=./mask_anat.tb7521+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
81999        97766        98975        80790        1209         16976         1.4744     17.3639     1.0772     0.9962     1.2384
3ddot -dodice full_mask.tb7521+tlrc mask_anat.tb7521+tlrc
tee out.mask_ae_dice.txt
0.89884	
3dresample -master full_mask.tb7521+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71790 survived, 239506 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb04.tb7521.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.tb7521.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb7521.r01.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb7521.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.tb7521.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.tb7521.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb7521.r02.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb7521.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.tb7521.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.tb7521.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb7521.r03.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb7521.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb7521
total number of censored TRs (simple form) = 172
1deval -a motion_tb7521_censor.1D -b outcount_tb7521_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb7521_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb05.tb7521.r01.scale+tlrc.HEAD pb05.tb7521.r02.scale+tlrc.HEAD pb05.tb7521.r03.scale+tlrc.HEAD -censor censor_tb7521_combined_2.1D -polort 3 -local_times -num_stimts 18 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll_01 -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch_01 -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw_01 -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS_01 -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL_01 -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP_01 -stim_file 13 motion_deriv.1D[0] -stim_base 13 -stim_label 13 roll_02 -stim_file 14 motion_deriv.1D[1] -stim_base 14 -stim_label 14 pitch_02 -stim_file 15 motion_deriv.1D[2] -stim_base 15 -stim_label 15 yaw_02 -stim_file 16 motion_deriv.1D[3] -stim_base 16 -stim_label 16 dS_02 -stim_file 17 motion_deriv.1D[4] -stim_base 17 -stim_label 17 dL_02 -stim_file 18 motion_deriv.1D[5] -stim_base 18 -stim_label 18 dP_02 -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +uns1 -str1 -glt_label 4 unstructured-structured BL1 -gltsym SYM: +uns2 -str2 -glt_label 5 unstructured-structured BL2 -gltsym SYM: +uns3 -str3 -glt_label 6 unstructured-structured BL3 -gltsym SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3 -glt_label 7 task -gltsym SYM: +uns1 +str1 -glt_label 8 task BL1 -gltsym SYM: +uns2 +str2 -glt_label 9 task BL2 -gltsym SYM: +uns3 +str3 -glt_label 10 task BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb7521 -errts errts.tb7521 -bucket stats.tb7521
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 596,852 bytes (about 597 thousand [kilo])
++ loading dataset pb05.tb7521.r01.scale+tlrc.HEAD pb05.tb7521.r02.scale+tlrc.HEAD pb05.tb7521.r03.scale+tlrc.HEAD
++ current memory malloc-ated = 561,233,701 bytes (about 561 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 253091 voxels (out of 311296 = 81.3%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 -str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 -str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 +str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 262 (after)
 + Number of parameters:  30 [24 baseline ; 6 signal]
++ total shared memory needed = 1,181,679,616 bytes (about 1.2 billion [giga])
++ current memory malloc-ated = 561,588,601 bytes (about 562 million [mega])
++ mmap() memory allocated: 1,181,679,616 bytes (about 1.2 billion [giga])
++ Memory required for output bricks = 1,181,679,616 bytes (about 1.2 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.tb7521.r01.scale+tlrc.HEAD pb05.tb7521.r02.scale+tlrc.HEAD pb05.tb7521.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.tb7521_REML -Rvar stats.tb7521_REMLvar \
 -Rfitts fitts.tb7521_REML -Rerrts errts.tb7521_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (262x30):  7.79461  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (262x6):  1.06986  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (262x24):  7.48614  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (262x12):  5.58586  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (262x12):  1.38947  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 4.2993e-15  ++ VERY GOOD ++
++ Matrix setup time = 0.95 s
++ Voxels in dataset: 311296
++ Voxels per job:    31129
++ Job #1: processing voxels 31129 to 62257; elapsed time=6.623
++ Job #2: processing voxels 62258 to 93386; elapsed time=6.645
++ Job #3: processing voxels 93387 to 124515; elapsed time=6.671
++ Job #4: processing voxels 124516 to 155644; elapsed time=6.696
++ Job #5: processing voxels 155645 to 186773; elapsed time=6.742
++ Job #6: processing voxels 186774 to 217902; elapsed time=6.778
++ Job #7: processing voxels 217903 to 249031; elapsed time=6.814
++ Job #8: processing voxels 249032 to 280160; elapsed time=6.854
++ Job #9: processing voxels 280161 to 311295; elapsed time=6.879
++ Job #0: processing voxels 0 to 31128; elapsed time=6.882
++ voxel loop:0123456789.0123456789.0123456789.0123456789.0123456789.
++ Job #0 waiting for children to finish; elapsed time=50.567
++ Job #1 finished; elapsed time=50.874
++ Job #8 finished; elapsed time=51.335
++ Job #4 finished; elapsed time=51.863
++ Job #3 finished; elapsed time=51.959
++ Job #5 finished; elapsed time=52.015
++ Job #7 finished; elapsed time=52.210
++ Job #9 finished; elapsed time=52.276
++ Job #2 finished; elapsed time=52.283
++ Job #6 finished; elapsed time=52.400
++ Job #0 now finishing up; elapsed time=52.414
++ Smallest FDR q [0 Full_Fstat] = 9.70049e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 3.24754e-13
++ Smallest FDR q [3 uns1_Fstat] = 3.24754e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 8.71897e-13
++ Smallest FDR q [6 uns2_Fstat] = 8.7193e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 9.619e-12
++ Smallest FDR q [9 uns3_Fstat] = 9.61874e-12
++ Smallest FDR q [11 str1#0_Tstat] = 6.56203e-13
++ Smallest FDR q [12 str1_Fstat] = 6.56183e-13
++ Smallest FDR q [14 str2#0_Tstat] = 1.23539e-12
++ Smallest FDR q [15 str2_Fstat] = 1.2354e-12
++ Smallest FDR q [17 str3#0_Tstat] = 1.75671e-11
++ Smallest FDR q [18 str3_Fstat] = 1.75667e-11
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.17516e-12
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.17506e-12
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 2.79055e-12
++ Smallest FDR q [24 structured_GLT_Fstat] = 2.7907e-12
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 6.07441e-09
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 6.07435e-09
++ Smallest FDR q [29 unstructured-structured BL1_GLT#0_Tstat] = 7.77631e-11
++ Smallest FDR q [30 unstructured-structured BL1_GLT_Fstat] = 7.77641e-11
++ Smallest FDR q [32 unstructured-structured BL2_GLT#0_Tstat] = 1.51096e-10
++ Smallest FDR q [33 unstructured-structured BL2_GLT_Fstat] = 1.51094e-10
++ Smallest FDR q [35 unstructured-structured BL3_GLT#0_Tstat] = 2.59267e-06
++ Smallest FDR q [36 unstructured-structured BL3_GLT_Fstat] = 2.59268e-06
++ Smallest FDR q [38 task_GLT#0_Tstat] = 1.52547e-12
++ Smallest FDR q [39 task_GLT_Fstat] = 1.52538e-12
++ Smallest FDR q [41 task BL1_GLT#0_Tstat] = 4.08056e-13
++ Smallest FDR q [42 task BL1_GLT_Fstat] = 4.08043e-13
++ Smallest FDR q [44 task BL2_GLT#0_Tstat] = 8.72903e-13
++ Smallest FDR q [45 task BL2_GLT_Fstat] = 8.72863e-13
++ Smallest FDR q [47 task BL3_GLT#0_Tstat] = 1.20459e-11
++ Smallest FDR q [48 task BL3_GLT_Fstat] = 1.20462e-11
++ Wrote bucket dataset into ./stats.tb7521+tlrc.BRIK
 + created 33 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb7521+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.tb7521+tlrc.BRIK
++ Program finished; elapsed time=109.032
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.784       0.807  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.693       0.774  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.669       0.777  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:      -0.524      -0.527  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0
  medium:       0.521       0.552  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:      -0.512       0.000  ( 8 vs. 15)  Run#3Pol#0  vs.  str1#0
  medium:       0.499       0.590  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.494       0.000  ( 0 vs. 17)  Run#1Pol#0  vs.  str3#0
  medium:      -0.489      -0.460  (10 vs. 17)  Run#3Pol#2  vs.  str3#0
  medium:      -0.458      -0.517  (16 vs. 22)      str2#0  vs.  dL_01#0
  medium:       0.457       0.577  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:      -0.453      -0.520  (16 vs. 18)      str2#0  vs.  roll_01#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb05.tb7521.r01.scale+tlrc.HEAD pb05.tb7521.r02.scale+tlrc.HEAD pb05.tb7521.r03.scale+tlrc.HEAD -fout -tout -Rbuck stats.tb7521_REML -Rvar stats.tb7521_REMLvar -Rfitts fitts.tb7521_REML -Rerrts errts.tb7521_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 311296 voxels
++ FDR automask has 253091 voxels (out of 311296 = 81.3%)
++ -----  matrix condition (262x30):  7.79461  ++ VERY GOOD ++
 + masked off 89674 voxels for being all zero; 221622 left in mask
++ Converting input dataset to vector image
 +  dataset = 560 million [mega] bytes
 +  vectim  = 400 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=22.28
 + X matrix: 57.443% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=262 cols=30; 109*1 cases; total CPU=0.00 Elapsed=22.31
 +  average case bandwidth = 10.06
++ REML voxel loop: [6 threads]0123456789.0123456789.0123456789.012345
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=121.60
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=186.90
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./stats.tb7521_REMLvar+tlrc.BRIK
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./fitts.tb7521_REML+tlrc.BRIK
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./errts.tb7521_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.tb7521_REML+tlrc
++ Smallest FDR q [0 Full_Fstat] = 6.83316e-09
++ Smallest FDR q [2 uns1#0_Tstat] = 3.76776e-09
++ Smallest FDR q [3 uns1_Fstat] = 3.76777e-09
++ Smallest FDR q [5 uns2#0_Tstat] = 1.97116e-05
++ Smallest FDR q [6 uns2_Fstat] = 1.97116e-05
++ Smallest FDR q [8 uns3#0_Tstat] = 0.047885
++ Smallest FDR q [9 uns3_Fstat] = 0.047885
++ Smallest FDR q [11 str1#0_Tstat] = 1.35965e-07
++ Smallest FDR q [12 str1_Fstat] = 1.35965e-07
++ Smallest FDR q [14 str2#0_Tstat] = 8.36946e-05
++ Smallest FDR q [15 str2_Fstat] = 8.36946e-05
++ Smallest FDR q [17 str3#0_Tstat] = 0.0144348
++ Smallest FDR q [18 str3_Fstat] = 0.0144348
++ Smallest FDR q [20 unstructured#0_Tstat] = 5.16292e-07
++ Smallest FDR q [21 unstructured_Fstat] = 5.16292e-07
++ Smallest FDR q [23 structured#0_Tstat] = 5.18365e-05
++ Smallest FDR q [24 structured_Fstat] = 5.18364e-05
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.00164651
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.00164651
[7m*+ WARNING:[0m Smallest FDR q [29 unstructured-structured_BL1#0_Tstat] = 0.133082 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 unstructured-structured_BL1_Fstat] = 0.133082 ==> few true single voxel detections
++ Smallest FDR q [32 unstructured-structured_BL2#0_Tstat] = 0.00463873
++ Smallest FDR q [33 unstructured-structured_BL2_Fstat] = 0.00463872
[7m*+ WARNING:[0m Smallest FDR q [35 unstructured-structured_BL3#0_Tstat] = 0.999891 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 unstructured-structured_BL3_Fstat] = 0.999891 ==> few true single voxel detections
++ Smallest FDR q [38 task#0_Tstat] = 3.87801e-06
++ Smallest FDR q [39 task_Fstat] = 3.878e-06
++ Smallest FDR q [41 task_BL1#0_Tstat] = 2.30195e-08
++ Smallest FDR q [42 task_BL1_Fstat] = 2.30195e-08
++ Smallest FDR q [44 task_BL2#0_Tstat] = 1.79724e-05
++ Smallest FDR q [45 task_BL2_Fstat] = 1.79722e-05
++ Smallest FDR q [47 task_BL3#0_Tstat] = 0.037933
++ Smallest FDR q [48 task_BL3_Fstat] = 0.037933
 + Added 33 FDR curves to dataset stats.tb7521_REML+tlrc
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./stats.tb7521_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=750.35
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb7521 pb05.tb7521.r01.scale+tlrc.HEAD pb05.tb7521.r02.scale+tlrc.HEAD pb05.tb7521.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ elapsed time = 391.3 s
3dTstat -mean -prefix rm.signal.all all_runs.tb7521+tlrc[2..18,21..28,32..38,42..103,117,133,134,142,146,147,153..155,162,180,181,187..189,197..203,231,236,248..256,265,268..270,275,281..283,292..294,299,302..371,375..413,417..419,435..439,442..447]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
** Can't read ANY data from file 'all_runs.tb7521+tlrc.HEAD'
[7m** FATAL ERROR:[0m Can't open dataset all_runs.tb7521+tlrc[2..18,21..28,32..38,42..103,117,133,134,142,146,147,153..155,162,180,181,187..189,197..203,231,236,248..256,265,268..270,275,281..283,292..294,299,302..371,375..413,417..419,435..439,442..447]
** Program compile date = Dec 22 2017
