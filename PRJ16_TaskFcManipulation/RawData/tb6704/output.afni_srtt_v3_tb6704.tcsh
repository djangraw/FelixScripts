echo auto-generated by afni_proc.py, Tue Jan  2 15:40:59 2018
auto-generated by afni_proc.py, Tue Jan  2 15:40:59 2018
echo (version 6.02, December 12, 2017)
(version 6.02, December 12, 2017)
echo execution started: `date`
date
execution started: Tue Jan  2 15:41:00 EST 2018
afni -ver
Precompiled binary linux_openmp_64: Dec 22 2017 (Version AFNI_17.3.09)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   22 Dec 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb6704
endif
set output_dir = tb6704.srtt_v3
if ( -d tb6704.srtt_v3 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb6704.srtt_v3
mkdir tb6704.srtt_v3/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb6704.srtt_v3/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb6704.srtt_v3/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dTcat -prefix tb6704.srtt_v3/pb00.tb6704.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 3.5 s
3dTcat -prefix tb6704.srtt_v3/pb00.tb6704.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.3 s
3dTcat -prefix tb6704.srtt_v3/pb00.tb6704.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.4 s
set tr_counts = ( 150 150 150 )
cd tb6704.srtt_v3
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6704.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r01.tcat+orig.BRIK is 4.200019 degrees from plumb.
++ 21784 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6704.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r02.tcat+orig.BRIK is 4.200019 degrees from plumb.
++ 21703 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6704.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r03.tcat+orig.BRIK is 4.200019 degrees from plumb.
++ 21696 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.tb6704.r01.despike pb00.tb6704.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r01.tcat+orig.BRIK is 4.200019 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb6704.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #4
++ start OpenMP thread #1
........................................................
++ Elapsed despike time =  1s 604ms

++ FINAL: 19353600 data points, 820431 edits [4.239%], 86562 big edits [0.447%]
++ Output dataset ./pb01.tb6704.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb6704.r02.despike pb00.tb6704.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r02.tcat+orig.BRIK is 4.200019 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb6704.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #1
++ start OpenMP thread #5
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 589ms

++ FINAL: 19353600 data points, 806508 edits [4.167%], 93878 big edits [0.485%]
++ Output dataset ./pb01.tb6704.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb6704.r03.despike pb00.tb6704.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r03.tcat+orig.BRIK is 4.200019 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb6704.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #4
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  1s 702ms

++ FINAL: 19353600 data points, 857352 edits [4.430%], 133632 big edits [0.690%]
++ Output dataset ./pb01.tb6704.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.tb6704.r01.tshift -tpattern alt+z2 pb01.tb6704.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6704.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6704.r01.despike+orig.BRIK is 4.200019 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb6704.r02.tshift -tpattern alt+z2 pb01.tb6704.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6704.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6704.r02.despike+orig.BRIK is 4.200019 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb6704.r03.tshift -tpattern alt+z2 pb01.tb6704.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6704.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6704.r03.despike+orig.BRIK is 4.200019 degrees from plumb.
end
3dbucket -prefix vr_base pb02.tb6704.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 4.200019 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 376.798035
 + Used gradual clip level = 327.583282 .. 425.045044
 + Number voxels above clip level = 22406
 + Clustering voxels ...
 + Largest cluster has 21836 voxels
 + Clustering voxels ...
 + Largest cluster has 21488 voxels
 + Filled   197 voxels in small holes; now have 21685 voxels
 + Clustering voxels ...
 + Largest cluster has 21684 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 109388 voxels
 + Mask now has 21684 voxels
++ 21684 voxels in the mask [out of 131072: 16.54%]
++ first  14 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first   8 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 916.110596 on /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/916.110596))'
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 4.200019 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 4.200019 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1186503 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 21684 voxels [13.6%] in weight mask
++ Number of points for matching = 21684
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 30.733 28.604 21.176 (index)
 + source center of mass = 83.054 155.130 149.700 (index)
 + source-target CM = -0.650 -0.838 -4.314 (xyz)
 + center of mass shifts = -0.650 -0.838 -4.314
++ shift param auto-range: -70.2..68.9 -70.4..68.7 -53.1..44.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.649529 .. 9.350471
 + Range param#2 [y-shift] = -10.837898 .. 9.162102
 + Range param#3 [z-shift] = -14.313766 .. 5.686234
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.649529 .. 39.350471
 + Range param#2 [y-shift] = -40.837898 .. 39.162102
 + Range param#3 [z-shift] = -44.313766 .. 35.686234
 + 12 free parameters
++ Normalized convergence radius = 0.000492
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1186503 [out of 13310000] voxels
 + base mask has 30631 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=70 usiz=185
 + - copying weight image
 + - using 21684 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 18427 total points stored in 173 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--+.+o...-oo-oo.+o$o + - best 45 costs found:
    0 v=-0.058007:  -0.65  -0.84  -4.31   0.00   0.00   0.00  [grid]
    1 v=-0.043787: -22.97 -30.47   2.68  -8.73 -38.75  33.73  [rand]
    2 v=-0.043742: -13.98 -27.50   9.02 -15.00 -30.00  15.00  [grid]
    3 v=-0.038067: -13.98 -14.17  22.35 -15.00 -15.00  15.00  [grid]
    4 v=-0.035979: -13.98  12.50 -17.65 -15.00  30.00  15.00  [grid]
    5 v=-0.035071: -13.98  25.83   9.02 -15.00  15.00  15.00  [grid]
    6 v=-0.033610: -23.50 -24.41   6.10  -5.91 -29.74  29.45  [rand]
    7 v=-0.031323:  22.20 -24.41   6.10   5.91 -29.74 -29.45  [rand]
    8 v=-0.029597: -16.79 -10.30  20.04 -20.99 -15.73  16.09  [rand]
    9 v=-0.029232: -13.98 -14.17   9.02 -15.00 -15.00  15.00  [grid]
   10 v=-0.028872: -13.98 -14.17   9.02 -15.00 -30.00  30.00  [grid]
   11 v=-0.028520: -13.98 -14.17  22.35 -30.00 -30.00  30.00  [grid]
   12 v=-0.028296: -10.47 -25.60   7.07  -3.10 -34.36   2.55  [rand]
   13 v=-0.028130: -13.98 -27.50  22.35 -15.00 -30.00  30.00  [grid]
   14 v=-0.027527: -27.32 -14.17   9.02 -30.00 -15.00  30.00  [grid]
   15 v=-0.027319:  10.95   3.72  -8.21  24.53 -29.49 -26.10  [rand]
   16 v=-0.027224: -14.07 -23.52  27.02  -4.37 -20.12  15.12  [rand]
   17 v=-0.026680:  -7.70 -20.65  31.43 -25.15 -27.05  27.90  [rand]
   18 v=-0.026615:  12.68 -27.50  22.35 -15.00 -30.00 -30.00  [grid]
   19 v=-0.026436:  12.68 -14.17   9.02 -15.00 -15.00 -30.00  [grid]
   20 v=-0.026254: -10.47 -25.60   7.07  -3.10 -34.36  -2.55  [rand]
   21 v=-0.026228: -27.32 -14.17  22.35  30.00 -15.00  15.00  [grid]
   22 v=-0.026213: -13.98  12.50 -17.65  15.00 -15.00  15.00  [grid]
   23 v=-0.024962: -10.47 -25.60   7.07   3.10 -34.36   2.55  [rand]
   24 v=-0.024528:  21.67 -30.47   2.68   8.73 -38.75 -33.73  [rand]
   25 v=-0.024168: -13.98  25.83  22.35  15.00  15.00 -15.00  [grid]
   26 v=-0.024071: -10.97  27.97  10.70 -30.67  17.79  20.52  [rand]
   27 v=-0.023817: -13.98 -27.50   9.02 -30.00 -30.00  15.00  [grid]
   28 v=-0.023546: -13.98  12.50 -17.65  30.00 -15.00  15.00  [grid]
   29 v=-0.023330:  12.68  25.83  22.35  15.00  15.00  30.00  [grid]
   30 v=-0.023073:  26.02 -14.17  22.35 -30.00 -15.00 -15.00  [grid]
   31 v=-0.022845:  12.68 -27.50   9.02 -15.00 -30.00 -30.00  [grid]
   32 v=-0.022418: -13.98 -27.50  22.35 -30.00 -30.00  30.00  [grid]
   33 v=-0.022364: -13.98 -27.50  22.35 -15.00 -15.00  15.00  [grid]
   34 v=-0.021904: -27.32 -14.17   9.02 -15.00 -15.00  30.00  [grid]
   35 v=-0.021862: -22.97 -30.47   2.68   8.73 -38.75  33.73  [rand]
   36 v=-0.021721: -27.32  12.50  22.35 -15.00  30.00  30.00  [grid]
   37 v=-0.021452:  12.68 -27.50   9.02  15.00 -30.00 -15.00  [grid]
   38 v=-0.021422:  26.02 -14.17  22.35 -15.00 -15.00 -15.00  [grid]
   39 v=-0.021398: -13.98 -14.17  22.35 -30.00 -15.00  15.00  [grid]
   40 v=-0.021317:  -9.29  19.59  13.16 -25.20  18.50  13.54  [rand]
   41 v=-0.021250:  26.02 -14.17   9.02 -30.00 -15.00 -30.00  [grid]
   42 v=-0.021242: -10.47 -25.60   7.07   3.10 -34.36  -2.55  [rand]
   43 v=-0.021218: -14.68 -16.56  10.35 -24.25 -37.55   4.41  [rand]
   44 v=-0.021192: -13.98 -27.50   9.02  15.00 -15.00  30.00  [grid]
*[#8004=-0.303516] *[#8014=-0.304303] *[#8015=-0.306749] *[#8018=-0.314187] *[#8020=-0.318591] *[#8026=-0.320082]  + - costs of the above after a little optimization:
  * 0 v=-0.320082:  -0.47  -0.46  -0.10  -0.01  -0.80   0.47  [grid]
    1 v=-0.059047: -22.99 -33.85   2.13  -8.85 -37.38  33.34  [rand]
    2 v=-0.069113: -14.50 -28.08  10.50  -5.51 -30.17  14.79  [grid]
    3 v=-0.041232: -13.47 -14.29  22.45 -15.57 -15.14  15.37  [grid]
    4 v=-0.046725: -12.71  11.66 -18.43 -16.14  28.52  11.93  [grid]
    5 v=-0.068774: -11.52  21.41   1.22 -10.10  13.20  11.08  [grid]
    6 v=-0.069163: -17.88 -28.96   9.63  -1.34 -32.28  22.52  [rand]
    7 v=-0.044555:  23.89 -28.83   6.36   4.57 -29.96 -28.48  [rand]
    8 v=-0.037655: -17.17 -10.58  19.83 -20.67 -14.77  20.51  [rand]
    9 v=-0.044268: -17.54 -13.15  10.58 -12.56 -15.99  14.85  [grid]
   10 v=-0.029572: -14.46 -14.04   8.82 -15.49 -29.92  29.77  [grid]
   11 v=-0.038637: -14.07  -9.80  21.66 -30.30 -30.04  30.40  [grid]
   12 v=-0.067781:  -8.92 -28.63   7.99  -5.98 -34.70   7.64  [rand]
   13 v=-0.031937: -14.30 -30.63  22.73 -14.85 -30.75  29.87  [grid]
   14 v=-0.039727: -26.65 -14.20  14.54 -29.19 -14.64  31.01  [grid]
   15 v=-0.041392:  11.06   3.74  -4.53  23.80 -29.82 -26.54  [rand]
   16 v=-0.040601: -14.49 -24.38  24.39  -9.17 -18.72  18.15  [rand]
   17 v=-0.028285:  -8.74 -20.72  29.34 -26.15 -27.86  24.34  [rand]
   18 v=-0.034465:  10.96 -27.70  18.72 -17.17 -30.21 -33.20  [grid]
   19 v=-0.040205:  10.57 -17.52   9.05 -14.23 -15.09 -29.44  [grid]
   20 v=-0.050467:  -6.23 -26.44   5.07  -7.62 -35.59   0.77  [rand]
   21 v=-0.036826: -27.54 -12.56  23.80  29.53 -10.38  16.86  [grid]
   22 v=-0.043899: -11.72  13.76 -24.79  15.67 -17.48  16.00  [grid]
   23 v=-0.051944:  -9.78 -25.35   6.43 -14.40 -42.68  10.54  [rand]
   24 v=-0.040681:  20.65 -34.71  -2.34   8.36 -40.49 -35.12  [rand]
   25 v=-0.029068: -12.77  30.37  22.97  14.86  15.88 -13.10  [grid]
   26 v=-0.055300: -12.25  22.66   7.23 -20.50  14.21  16.41  [rand]
   27 v=-0.057193: -12.95 -27.70   0.94 -24.65 -29.63  11.52  [grid]
   28 v=-0.028873: -13.56  13.53 -17.10  30.10 -16.22  13.53  [grid]
   29 v=-0.033101:   9.85  27.13  22.22  13.55  15.71  26.73  [grid]
   30 v=-0.035078:  26.37 -14.35  21.87 -29.45 -14.98  -9.75  [grid]
   31 v=-0.061343:   6.50 -27.05   5.24 -17.84 -30.23 -28.16  [grid]
   32 v=-0.036858: -15.19 -27.24  17.25 -21.78 -26.25  27.05  [grid]
   33 v=-0.038111: -13.47 -27.90  26.11 -14.39 -16.34  15.25  [grid]
   34 v=-0.042491: -23.74  -9.86  15.35 -10.52 -13.08  26.38  [grid]
   35 v=-0.054237: -21.55 -37.62   1.45  -4.07 -40.73  34.65  [rand]
   36 v=-0.026590: -26.85  13.64  23.12 -16.28  30.13  29.73  [grid]
   37 v=-0.033568:  14.04 -27.32   5.94  14.36 -36.47 -15.84  [grid]
   38 v=-0.028748:  25.86 -13.77  22.11 -14.53 -14.85 -10.62  [grid]
   39 v=-0.029919: -13.89 -14.08  22.79 -29.24 -15.18  19.18  [grid]
   40 v=-0.032612: -13.38  19.66  13.38 -26.91  16.37  13.79  [rand]
   41 v=-0.028798:  25.88 -12.65   7.14 -32.48 -12.96 -30.58  [grid]
   42 v=-0.027946: -10.90 -25.12   7.12   3.05 -34.31   1.64  [rand]
   43 v=-0.042753: -10.29 -18.49   9.93 -24.46 -38.04   1.77  [rand]
   44 v=-0.026995: -13.73 -22.74   9.21  15.67 -15.88  29.27  [grid]
 + - save # 0 for twobest
 + - save # 6 for twobest
 + - save # 2 for twobest
 + - save # 5 for twobest
 + - save #12 for twobest
 + - save #31 for twobest
 + - save # 1 for twobest
 + - save #27 for twobest
 + - save #26 for twobest
 + - save #35 for twobest
 + - save #23 for twobest
 + - save #20 for twobest
 + - save # 4 for twobest
 + - save # 7 for twobest
 + - save # 9 for twobest
 + - save #22 for twobest
 + - save #43 for twobest
 + - save #34 for twobest
 + - save #15 for twobest
 + - save # 3 for twobest
 + - save #24 for twobest
 + - save #16 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=70 usiz=185
 + - retaining old weight image
 + - using 21684 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 18265 total points stored in 185 'RHDD(13.7332)' bloks
*[#9521=-0.379127] *[#9529=-0.391084] *[#9545=-0.391877] *[#9547=-0.395134] *[#9549=-0.395208] *[#9550=-0.395618] *[#9551=-0.395759] *[#9552=-0.39821] *[#9553=-0.398593] *[#9557=-0.399584] *[#9558=-0.399844] *[#9561=-0.400729] *[#9568=-0.401863] *[#9569=-0.401953] *[#9570=-0.402715] *[#9571=-0.403362] *[#9572=-0.404259] *[#9573=-0.405249] *[#9574=-0.406567] *[#9575=-0.407751] *[#9576=-0.408552] *[#9577=-0.409315] *[#9578=-0.409423] *[#9580=-0.409525] *[#9581=-0.409852] *[#9584=-0.410684] *[#9585=-0.411433] *[#9586=-0.41183] *[#9588=-0.415202] *[#9591=-0.415552] *[#9592=-0.415676] *[#9593=-0.415993] *[#9594=-0.416287] *[#9597=-0.416538] *[#9598=-0.416593] *[#9601=-0.416741] *[#9602=-0.416862] *[#9604=-0.417619] *[#9607=-0.417824] *[#9608=-0.418321] *[#9609=-0.418808] *[#9610=-0.419175] *[#9614=-0.419235] *[#9616=-0.419492] *[#9617=-0.419564] 
 + - param set #1 has cost=-0.419564
 + -- Parameters = -0.3090 -1.1366 -0.4991 0.1388 -2.0992 -0.0169 0.9809 1.0331 0.9843 0.0050 0.0029 -0.0118
 + - param set #2 has cost=-0.057334
 + -- Parameters = -17.8678 -29.0297 9.6634 -1.1002 -32.1883 22.7267 0.9965 1.0011 1.0012 -0.0005 0.0011 0.0013
 + - param set #3 has cost=-0.055187
 + -- Parameters = -14.2399 -28.9659 10.2615 -4.9305 -31.0533 14.5682 1.0005 0.9956 0.9920 -0.0042 0.0139 -0.0016
 + - param set #4 has cost=-0.058442
 + -- Parameters = -11.7375 21.2147 1.4054 -9.5970 13.4977 10.7129 1.0145 1.0031 1.0016 0.0004 0.0001 -0.0001
 + - param set #5 has cost=-0.063036
 + -- Parameters = -8.6013 -23.8167 7.9754 -6.7026 -32.4350 6.9327 1.0048 1.0061 0.9977 -0.0017 0.0038 0.0003
 + - param set #6 has cost=-0.046618
 + -- Parameters = 4.9071 -26.6752 5.4226 -15.1644 -30.7645 -26.9939 0.9962 0.9919 0.9969 -0.0034 -0.0006 0.0014
 + - param set #7 has cost=-0.049497
 + -- Parameters = -23.3067 -34.6552 1.7558 -8.4326 -37.1042 33.1034 0.9997 0.9987 0.9979 -0.0010 0.0010 0.0005
 + - param set #8 has cost=-0.056235
 + -- Parameters = -12.0388 -30.1185 1.1141 -24.1914 -31.1635 7.3651 1.0004 1.0159 1.0095 -0.0000 0.0114 0.0025
 + - param set #9 has cost=-0.049128
 + -- Parameters = -11.8461 21.8179 7.3818 -21.0912 14.1943 17.2589 1.0005 0.9925 0.9987 -0.0031 0.0139 0.0024
 + - param set #10 has cost=-0.045390
 + -- Parameters = -21.7014 -37.2465 1.3133 -4.2309 -40.4246 34.4468 0.9984 0.9999 1.0015 0.0000 0.0000 0.0007
 + - param set #11 has cost=-0.055478
 + -- Parameters = -10.9796 -26.4901 5.7996 -12.2363 -36.7430 10.5914 0.9995 0.9984 0.9978 -0.0004 -0.0008 -0.0018
 + - param set #12 has cost=-0.394787
 + -- Parameters = -0.4502 -0.6205 -0.4150 0.1700 -1.4142 0.4417 0.9967 1.0075 0.9915 0.0022 -0.0023 -0.0003
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0697 
 + --- dist(#3,#1) = 0.337 
 + --- dist(#4,#1) = 0.279 
 + --- dist(#5,#1) = 0.349 
 + --- dist(#6,#1) = 0.362 
 + --- dist(#7,#1) = 0.385 
 + --- dist(#8,#1) = 0.348 
 + --- dist(#9,#1) = 0.419 
 + --- dist(#10,#1) = 0.287 
 + --- dist(#11,#1) = 0.319 
 + --- dist(#12,#1) = 0.451 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=70 usiz=185
 + - retaining old weight image
 + - using 21684 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 18823 total points stored in 200 'RHDD(13.5933)' bloks
*[#10525=-0.432704] *[#10532=-0.44051] *[#10544=-0.443718] *[#10547=-0.444223] *[#10548=-0.445622] *[#10552=-0.445983] *[#10555=-0.447604] *[#10556=-0.447887] *[#10569=-0.448111] *[#10571=-0.448203] *[#10572=-0.448239] *[#10573=-0.448286] *[#10576=-0.448465] *[#10577=-0.448469] *[#10579=-0.448734] *[#10590=-0.448902] *[#10592=-0.448974] *[#10595=-0.448983] *[#10597=-0.449159] *[#10598=-0.449313] *[#10599=-0.449329] *[#10600=-0.449368] *[#10603=-0.449432] *[#10608=-0.449647] *[#10617=-0.449696] *[#10618=-0.449716] *[#10621=-0.449825] 
 + - param set #1 has cost=-0.449825
 + -- Parameters = -0.2967 -1.1504 -0.4819 0.1741 -2.4795 -0.0796 0.9991 1.0306 0.9915 -0.0010 0.0063 -0.0218
 + - param set #2 has cost=-0.445175
 + -- Parameters = -0.2725 -1.0586 -0.4170 0.0289 -2.0053 -0.3492 0.9956 1.0230 0.9974 -0.0065 0.0115 -0.0162
 + - param set #3 has cost=-0.061010
 + -- Parameters = -8.5357 -24.1121 7.8634 -7.1772 -30.6879 5.2797 1.0055 1.0110 0.9876 0.0011 0.0085 0.0048
 + - param set #4 has cost=-0.051472
 + -- Parameters = -11.2860 20.4980 0.8104 -8.8676 13.3549 10.0179 1.0266 1.0244 0.9900 0.0045 -0.0005 0.0059
 + - param set #5 has cost=-0.051445
 + -- Parameters = -17.3962 -29.5904 8.9762 -0.3374 -31.6674 23.1435 0.9892 0.9876 0.9994 -0.0028 0.0019 0.0076
 + - param set #6 has cost=-0.049989
 + -- Parameters = -10.8829 -27.5212 2.0913 -22.8440 -30.9379 6.8491 0.9835 1.0069 0.9845 -0.0023 0.0162 0.0198
 + - param set #7 has cost=-0.046514
 + -- Parameters = -10.9377 -26.6385 5.8225 -12.0203 -36.6093 10.5160 0.9991 1.0002 0.9872 -0.0010 0.0052 -0.0052
 + - param set #8 has cost=-0.048183
 + -- Parameters = -13.9945 -28.4148 10.4341 -3.9911 -32.9990 13.8735 0.9990 0.9891 0.9849 -0.0055 0.0107 -0.0033
 + - param set #9 has cost=-0.040878
 + -- Parameters = -23.2303 -34.5783 1.3738 -8.4536 -37.1164 33.2576 0.9997 0.9987 0.9978 -0.0011 0.0006 0.0068
 + - param set #10 has cost=-0.037261
 + -- Parameters = -11.8378 21.6640 7.5772 -21.2681 13.8380 17.3141 1.0080 0.9854 0.9961 -0.0008 0.0167 0.0000
 + - param set #11 has cost=-0.037230
 + -- Parameters = 4.8554 -26.6299 5.4579 -14.8740 -30.6391 -27.0699 0.9909 0.9814 1.0065 -0.0058 -0.0022 0.0003
 + - param set #12 has cost=-0.040063
 + -- Parameters = -21.5372 -35.8208 0.3272 -7.1769 -39.3433 33.4491 1.0006 0.9893 0.9947 0.0075 -0.0084 -0.0010
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0252 
 + --- dist(#3,#1) = 0.313 
 + --- dist(#4,#1) = 0.271 
 + --- dist(#5,#1) = 0.355 
 + --- dist(#6,#1) = 0.33 
 + --- dist(#7,#1) = 0.341 
 + --- dist(#8,#1) = 0.379 
 + --- dist(#9,#1) = 0.418 
 + --- dist(#10,#1) = 0.433 
 + --- dist(#11,#1) = 0.285 
 + --- dist(#12,#1) = 0.318 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=70 usiz=185
 + - retaining old weight image
 + - using 21684 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 18921 total points stored in 206 'RHDD(13.5079)' bloks
*[#11604=-0.450424] *[#11624=-0.452071] *[#11625=-0.455413] *[#11628=-0.456416] *[#11634=-0.456853] *[#11635=-0.45711] *[#11637=-0.457448] *[#11658=-0.45776] *[#11663=-0.457855] *[#11666=-0.457897] *[#11670=-0.457904] *[#11671=-0.457977] *[#11672=-0.457979] *[#11674=-0.457991] *[#11677=-0.457997] *[#11679=-0.45806] *[#11680=-0.458128] *[#11683=-0.458143] *[#11685=-0.458224] *[#11686=-0.458236] *[#11690=-0.458304] *[#11691=-0.458348] *[#11692=-0.458371] *[#11693=-0.4584] *[#11694=-0.458446] *[#11697=-0.458549] *[#11700=-0.458593] 
 + - param set #1 has cost=-0.458593
 + -- Parameters = -0.2744 -1.1908 -0.4905 0.0492 -2.7294 -0.0961 0.9987 1.0192 0.9946 -0.0047 0.0036 -0.0324
 + - param set #2 has cost=-0.455910
 + -- Parameters = -0.2331 -1.0132 -0.4520 0.0454 -2.2600 -0.2040 0.9985 1.0169 0.9973 -0.0040 0.0067 -0.0245
 + - param set #3 has cost=-0.053835
 + -- Parameters = -8.2279 -24.0369 7.5407 -6.8333 -30.2738 5.2658 1.0144 1.0214 0.9797 0.0041 0.0083 0.0035
 + - param set #4 has cost=-0.047688
 + -- Parameters = -11.2972 20.4477 0.9117 -8.8488 13.2726 10.0449 1.0269 1.0249 0.9903 0.0040 -0.0008 0.0107
 + - param set #5 has cost=-0.042361
 + -- Parameters = -17.4912 -29.6122 8.9275 0.1338 -31.3965 22.7515 0.9871 0.9816 0.9954 -0.0032 0.0034 0.0104
 + - param set #6 has cost=-0.043959
 + -- Parameters = -10.8435 -27.2747 2.1827 -23.5121 -30.7324 5.8015 0.9848 1.0004 0.9803 0.0093 0.0392 0.0270
 + - param set #7 has cost=-0.042283
 + -- Parameters = -13.7550 -27.7214 9.7959 -3.3060 -32.4245 15.5787 0.9554 0.9740 0.9750 -0.0077 0.0139 0.0253
 + - param set #8 has cost=-0.040296
 + -- Parameters = -11.0015 -26.7362 5.3455 -12.3459 -36.8643 9.9550 0.9942 0.9999 0.9791 -0.0071 0.0045 -0.0117
 + - param set #9 has cost=-0.034513
 + -- Parameters = -22.8514 -34.5423 0.7827 -8.2971 -37.0597 33.1192 1.0007 0.9994 0.9867 0.0002 0.0040 0.0079
 + - param set #10 has cost=-0.033148
 + -- Parameters = -21.2232 -35.5603 0.2743 -7.6034 -39.6229 32.8206 0.9997 0.9887 0.9951 0.0079 -0.0006 -0.0033
 + - param set #11 has cost=-0.030402
 + -- Parameters = -12.1933 21.5864 6.8982 -21.7664 13.0712 16.8003 1.0032 0.9762 0.9993 0.0015 0.0221 -0.0017
 + - param set #12 has cost=-0.027925
 + -- Parameters = 4.7761 -26.5432 5.2701 -14.6489 -30.4550 -26.7171 0.9892 0.9793 1.0059 -0.0055 0.0024 -0.0001
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0358 
 + --- dist(#3,#1) = 0.306 
 + --- dist(#4,#1) = 0.27 
 + --- dist(#5,#1) = 0.326 
 + --- dist(#6,#1) = 0.355 
 + --- dist(#7,#1) = 0.332 
 + --- dist(#8,#1) = 0.379 
 + --- dist(#9,#1) = 0.417 
 + --- dist(#10,#1) = 0.43 
 + --- dist(#11,#1) = 0.285 
 + --- dist(#12,#1) = 0.317 
 + - Total coarse refinement net CPU time = 0.0 s; 3167 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=70 usiz=185
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 19168 total points stored in 211 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.446483 *
 + -- Parameters = -0.2744 -1.1908 -0.4905 0.0492 -2.7294 -0.0961 0.9987 1.0192 0.9946 -0.0047 0.0036 -0.0324
 + - cost(#2)=-0.444317  
 + -- Parameters = -0.2331 -1.0132 -0.4520 0.0454 -2.2600 -0.2040 0.9985 1.0169 0.9973 -0.0040 0.0067 -0.0245
 + - cost(#3)=-0.049371  
 + -- Parameters = -8.2279 -24.0369 7.5407 -6.8333 -30.2738 5.2658 1.0144 1.0214 0.9797 0.0041 0.0083 0.0035
 + - cost(#4)=-0.040817  
 + -- Parameters = -11.2972 20.4477 0.9117 -8.8488 13.2726 10.0449 1.0269 1.0249 0.9903 0.0040 -0.0008 0.0107
 + - cost(#5)=-0.040707  
 + -- Parameters = -10.8435 -27.2747 2.1827 -23.5121 -30.7324 5.8015 0.9848 1.0004 0.9803 0.0093 0.0392 0.0270
 + - cost(#6)=-0.037510  
 + -- Parameters = -17.4912 -29.6122 8.9275 0.1338 -31.3965 22.7515 0.9871 0.9816 0.9954 -0.0032 0.0034 0.0104
 + - cost(#7)=-0.036426  
 + -- Parameters = -13.7550 -27.7214 9.7959 -3.3060 -32.4245 15.5787 0.9554 0.9740 0.9750 -0.0077 0.0139 0.0253
 + - cost(#8)=-0.036583  
 + -- Parameters = -11.0015 -26.7362 5.3455 -12.3459 -36.8643 9.9550 0.9942 0.9999 0.9791 -0.0071 0.0045 -0.0117
 + - cost(#9)=-0.030748  
 + -- Parameters = -22.8514 -34.5423 0.7827 -8.2971 -37.0597 33.1192 1.0007 0.9994 0.9867 0.0002 0.0040 0.0079
 + - cost(#10)=-0.029754  
 + -- Parameters = -21.2232 -35.5603 0.2743 -7.6034 -39.6229 32.8206 0.9997 0.9887 0.9951 0.0079 -0.0006 -0.0033
 + - cost(#11)=-0.026411  
 + -- Parameters = -12.1933 21.5864 6.8982 -21.7664 13.0712 16.8003 1.0032 0.9762 0.9993 0.0015 0.0221 -0.0017
 + - cost(#12)=-0.024933  
 + -- Parameters = 4.7761 -26.5432 5.2701 -14.6489 -30.4550 -26.7171 0.9892 0.9793 1.0059 -0.0055 0.0024 -0.0001
 + - cost(#13)=-0.084780  
 + -- Parameters = -0.6495 -0.8379 -4.3138 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.448165 *
 + -- Parameters = -0.2914 -1.2376 -0.5379 0.0844 -2.8269 -0.1642 1.0002 1.0172 0.9940 -0.0048 0.0033 -0.0376
 + - cost(#2)=-0.447278  
 + -- Parameters = -0.2519 -1.1618 -0.5339 0.1815 -2.5740 -0.2335 1.0006 1.0173 0.9948 -0.0009 0.0045 -0.0328
 + - cost(#3)=-0.050854  
 + -- Parameters = -8.1741 -23.8328 7.4483 -7.1961 -30.3721 4.9737 1.0130 1.0270 0.9636 0.0058 0.0088 0.0033
 + - cost(#4)=-0.041553  
 + -- Parameters = -11.3425 20.2962 1.0302 -8.8691 13.1538 10.1466 1.0287 1.0256 0.9903 -0.0002 -0.0001 0.0118
 + - cost(#5)=-0.041491  
 + -- Parameters = -10.8539 -27.2217 2.1266 -23.3950 -30.4008 5.8202 0.9833 0.9991 0.9746 0.0096 0.0402 0.0266
 + - cost(#6)=-0.038462  
 + -- Parameters = -17.7794 -29.4344 8.7914 -0.0631 -31.3354 22.7055 0.9790 0.9808 0.9970 0.0002 0.0041 0.0098
 + - cost(#7)=-0.037209  
 + -- Parameters = -13.9670 -27.8883 9.6109 -3.4103 -32.4606 15.6586 0.9627 0.9781 0.9756 -0.0088 0.0205 0.0115
 + - cost(#8)=-0.039019  
 + -- Parameters = -10.6756 -26.2551 4.6737 -13.7846 -36.4464 9.1051 0.9944 0.9970 0.9715 -0.0074 0.0043 -0.0100
 + - cost(#9)=-0.031267  
 + -- Parameters = -22.6541 -34.4978 0.6629 -8.3891 -37.1589 33.2598 1.0005 0.9999 0.9866 0.0002 0.0085 0.0076
 + - cost(#10)=-0.031950  
 + -- Parameters = -20.5884 -35.3863 0.4376 -8.3026 -40.0088 31.8104 0.9908 0.9861 1.0049 0.0198 -0.0037 -0.0036
 + - cost(#11)=-0.031511  
 + -- Parameters = -11.9998 21.4788 7.3602 -22.0734 13.1266 16.5257 0.9409 0.9818 1.0058 -0.0046 0.0084 -0.0031
 + - cost(#12)=-0.025933  
 + -- Parameters = 4.7843 -26.7642 4.8388 -14.2623 -30.5693 -26.7858 0.9900 0.9708 1.0065 -0.0053 0.0043 0.0004
 + - cost(#13)=-0.442800  
 + -- Parameters = -0.2408 -1.0979 -0.3136 -0.0457 -2.2705 0.1101 0.9995 1.0160 1.0058 -0.0092 -0.0009 -0.0288
 + - case #1 is now the best
 + - Initial  cost = -0.448165
 + - Initial fine Parameters = -0.2914 -1.2376 -0.5379 0.0844 -2.8269 -0.1642 1.0002 1.0172 0.9940 -0.0048 0.0033 -0.0376
 + - Finalish cost = -0.448762 ; 140 funcs
 + - Final    cost = -0.449001 ; 327 funcs
 + Final fine fit Parameters:
       x-shift=-0.3332   y-shift=-1.2922   z-shift=-0.5897
       z-angle= 0.1436   x-angle=-3.2132   y-angle=-0.0156
       x-scale= 1.0002   y-scale= 1.0167   z-scale= 0.9912
     y/x-shear=-0.0031 z/x-shear=-0.0007 z/y-shear=-0.0447
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.3332 -1.2922 -0.5897 0.1436 -3.2132 -0.0156 1.0002 1.0167 0.9912 -0.0031 -0.0007 -0.0447
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 21.4
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 4.200019 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0057 -1.0131 0.0158 248.1060 -0.0006 0.0642 0.9937 66.5900 -1.0002 0.0025 -0.0003 198.2913
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.3
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base MNI152_T1_2009c+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 25.4 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3892.720100 ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 128.603 54.1196   ITER = 12/137
128.603

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=0 xtop=0  ybot=1 ytop=2  zbot=15 ztop=0 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 193 x 232 x 208 volume ; autobbox = 19..173 21..211 17..179 [clock= 12s 214ms]
lev=0 0..192 0..231 0..199: [first cost=-0.76730] ... done [cost:-0.76730==>-0.89907]
lev=1 patch=145x175x157 [clock= 28m 50s 284ms]........:[cost=-0.93097]:........ done [cost:-0.89907==>-0.93407 ; 16 patches optimized, 0 skipped]
lev=2 patch=109x131x117 [clock= 48m 14s 463ms]..................... done [cost:-0.93407==>-0.99547 ; 21 patches optimized, 6 skipped]
lev=3 patch=81x99x89 [clock= 1h 1m 3s 52ms]................. done [cost:-0.99547==>-1.06551 ; 41 patches optimized, 23 skipped]
lev=4 patch=61x73x67 [clock= 1h 14m 10s 931ms]........... done [cost:-1.06551==>-1.13711 ; 73 patches optimized, 52 skipped]
lev=5 patch=47x55x49 [clock= 1h 23m 50s 429ms]............... done [cost:-1.13711==>-1.21198 ; 193 patches optimized, 150 skipped]
lev=6 patch=35x41x37 [clock= 1h 34m 22s 606ms]................. done [cost:-1.21198==>-1.27390 ; 451 patches optimized, 359 skipped]
lev=7 patch=25x25x25 [clock= 1h 44m 56s 645ms].......................................... done [cost:-1.27390==>-1.36737 ; 1528 patches optimized, 1384 skipped]
++ ========== total number of parameters 'optimized' = 56049
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 1h 56m 50s 692ms
#++ Applying warps to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 24.5 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_T1_2009c+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
if ( ! -f Sag3DMPRAGEs002a1001_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.tb6704.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.200019 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb6704.r01.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ Reading input dataset ./pb02.tb6704.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 23450 voxels
 + 4064 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.628  pitch=-0.148  yaw=-0.201  dS=-0.269  dL=-0.663  dP=-0.292
++ Mean: roll=-0.993  pitch=+0.190  yaw=+0.061  dS=+0.533  dL=-0.327  dP=+0.015
++ Max : roll=+0.159  pitch=+0.541  yaw=+0.317  dS=+1.229  dL=+0.040  dP=+0.205
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.41(0.41) 0.44(0.10) 0.47(0.05) 0.49(0.04) 0.54(0.06) 0.50(0.06) 0.48(0.08) 0.55(0.07) 0.54(0.03) 0.46(0.10) 0.40(0.07) 0.38(0.10) 0.34(0.07) 0.27(0.09) 0.25(0.02) 0.22(0.08) 0.19(0.09) 0.21(0.10) 0.23(0.05) 0.31(0.09) 0.38(0.09) 0.39(0.04) 0.48(0.10) 0.48(0.03) 0.60(0.14) 0.67(0.09) 0.67(0.14) 0.70(0.05) 0.76(0.08) 0.79(0.07) 0.86(0.08) 0.85(0.10) 0.90(0.12) 0.98(0.10) 1.11(0.14) 1.17(0.13) 1.25(0.12) 1.29(0.10) 1.31(0.06) 1.35(0.15) 1.36(0.10) 1.36(0.06) 1.40(0.07) 1.42(0.05) 1.42(0.05) 1.46(0.18) 1.41(0.20) 1.39(0.14) 1.48(0.13) 1.55(0.13) 1.75(0.22) 1.74(0.04) 1.78(0.04) 1.83(0.07) 1.84(0.18) 1.75(0.45) 1.73(0.21) 1.95(0.24) 2.04(0.10) 1.97(0.11) 2.00(0.10) 2.11(0.15) 2.14(0.09) 2.19(0.09) 2.20(0.06) 2.19(0.09) 2.27(0.13) 2.31(0.23) 2.25(0.20) 2.36(0.23) 2.38(0.12) 2.47(0.15) 2.52(0.22) 2.58(0.10) 2.65(0.13) 2.44(0.31) 2.28(0.39) 2.35(0.22) 2.30(0.21) 2.29(0.25) 2.35(0.16) 2.44(0.11) 2.42(0.10) 2.43(0.04) 2.46(0.04) 2.51(0.07) 2.51(0.09) 2.50(0.13) 2.52(0.06) 2.55(0.09) 2.57(0.03) 2.64(0.09) 2.60(0.05) 2.57(0.14) 2.62(0.06) 2.59(0.11) 2.52(0.11) 2.67(0.20) 2.87(0.38) 2.83(0.13) 2.72(0.30) 2.68(0.09) 2.74(0.12) 2.80(0.07) 2.87(0.08) 2.86(0.17) 2.78(0.12) 2.79(0.06) 2.78(0.10) 2.87(0.10) 2.89(0.02) 2.87(0.04) 2.89(0.07) 2.90(0.16) 2.69(0.24) 2.69(0.14) 2.84(0.15) 2.97(0.21) 3.00(0.23) 2.92(0.22) 2.96(0.36) 2.97(0.33) 2.88(0.28) 2.86(0.07) 2.85(0.41) 2.69(0.42) 2.86(0.23) 2.94(0.22) 2.75(0.28) 2.67(0.48) 2.71(0.09) 2.68(0.19) 2.75(0.24) 2.82(0.09) 2.67(0.29) 2.83(0.17) 2.92(0.10) 2.91(0.03) 2.94(0.08) 2.97(0.04) 2.87(0.17) 2.75(0.29) 2.48(0.27) 2.33(0.27) 2.34(0.12) 2.22(0.12) 2.14(0.11) 2.16(0.05) 2.01(0.25)
++ Max displacement in automask = 3.00 (mm) at sub-brick 119
++ Max delta displ  in automask = 0.48 (mm) at sub-brick 130
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.tb6704.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb6704.r01.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb6704.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb6704.r01.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ opened source dataset 'pb02.tb6704.r01.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 449.1 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.200019 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.tb6704.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.200019 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb6704.r02.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ Reading input dataset ./pb02.tb6704.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 23351 voxels
 + 4049 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.337  pitch=-0.478  yaw=-0.269  dS=-0.896  dL=-0.445  dP=-0.771
++ Mean: roll=-0.243  pitch=-0.262  yaw=-0.092  dS=-0.605  dL=-0.280  dP=-0.660
++ Max : roll=-0.151  pitch=+0.041  yaw=+0.034  dS=-0.351  dL=-0.105  dP=-0.568
++ Max displacements (mm) for each sub-brick:
 1.07(0.00) 1.16(0.13) 1.12(0.07) 1.06(0.15) 1.08(0.11) 1.14(0.10) 1.14(0.02) 1.11(0.05) 1.12(0.04) 1.10(0.04) 1.10(0.02) 1.08(0.05) 1.10(0.04) 1.10(0.02) 1.09(0.04) 1.11(0.04) 1.12(0.09) 1.12(0.03) 1.07(0.05) 1.07(0.01) 1.08(0.03) 1.07(0.04) 1.09(0.06) 1.12(0.05) 1.11(0.11) 1.08(0.06) 1.05(0.05) 1.05(0.05) 1.05(0.11) 1.03(0.09) 1.25(0.57) 1.34(0.15) 1.10(0.43) 1.19(0.20) 1.18(0.08) 1.14(0.06) 1.18(0.07) 1.21(0.05) 1.15(0.08) 1.15(0.02) 1.16(0.12) 1.18(0.09) 1.22(0.11) 1.18(0.09) 1.19(0.07) 1.20(0.06) 1.09(0.16) 1.12(0.22) 1.13(0.24) 1.19(0.11) 1.22(0.13) 1.25(0.16) 1.25(0.17) 1.22(0.07) 1.18(0.12) 1.20(0.09) 1.20(0.04) 1.19(0.05) 1.21(0.10) 1.24(0.08) 1.27(0.11) 1.24(0.06) 1.22(0.06) 1.23(0.04) 1.27(0.07) 1.24(0.03) 1.24(0.04) 1.29(0.06) 1.23(0.16) 1.27(0.34) 1.36(0.36) 1.27(0.39) 1.34(0.09) 1.25(0.10) 1.28(0.04) 1.24(0.08) 1.27(0.06) 1.34(0.12) 1.31(0.08) 1.29(0.09) 1.29(0.08) 1.30(0.07) 1.34(0.09) 1.32(0.07) 1.35(0.09) 1.36(0.05) 1.38(0.09) 1.39(0.07) 1.39(0.08) 1.40(0.10) 1.30(0.10) 1.33(0.18) 1.33(0.13) 1.34(0.15) 1.34(0.27) 1.35(0.12) 1.47(0.13) 1.45(0.05) 1.44(0.04) 1.35(0.09) 1.42(0.32) 1.27(0.25) 1.36(0.20) 1.47(0.18) 1.38(0.11) 1.34(0.08) 1.34(0.06) 1.41(0.08) 1.40(0.04) 1.41(0.07) 1.39(0.07) 1.37(0.04) 1.45(0.09) 1.45(0.04) 1.48(0.05) 1.46(0.04) 1.44(0.05) 1.51(0.10) 1.46(0.06) 1.49(0.04) 1.51(0.02) 1.42(0.11) 1.47(0.07) 1.48(0.04) 1.50(0.03) 1.48(0.08) 1.46(0.14) 1.55(0.15) 1.51(0.05) 1.50(0.03) 1.52(0.04) 1.49(0.08) 1.34(0.18) 1.34(0.07) 1.44(0.13) 1.45(0.04) 1.38(0.09) 1.44(0.09) 1.47(0.08) 1.48(0.07) 1.47(0.06) 1.55(0.11) 1.39(0.28) 1.47(0.19) 1.51(0.06) 1.45(0.12) 1.44(0.06) 1.37(0.16) 1.34(0.22) 1.40(0.22)
++ Max displacement in automask = 1.55 (mm) at sub-brick 127
++ Max delta displ  in automask = 0.57 (mm) at sub-brick 30
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.tb6704.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb6704.r02.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb6704.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb6704.r02.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ opened source dataset 'pb02.tb6704.r02.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 451.9 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.200019 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.tb6704.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.200019 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb6704.r03.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ Reading input dataset ./pb02.tb6704.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 23318 voxels
 + 4029 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.336  pitch=-0.323  yaw=-0.615  dS=-1.688  dL=-0.395  dP=-1.021
++ Mean: roll=-0.192  pitch=-0.054  yaw=-0.353  dS=-1.254  dL=-0.280  dP=-0.849
++ Max : roll=+0.005  pitch=+0.395  yaw=-0.024  dS=-0.987  dL=-0.124  dP=-0.720
++ Max displacements (mm) for each sub-brick:
 1.69(0.00) 1.78(0.15) 1.78(0.03) 1.80(0.03) 1.82(0.05) 1.89(0.08) 1.91(0.05) 1.89(0.06) 1.90(0.02) 1.94(0.04) 1.84(0.15) 1.84(0.08) 1.85(0.05) 1.91(0.31) 1.76(0.18) 1.74(0.09) 1.76(0.08) 1.77(0.03) 1.82(0.07) 1.77(0.14) 1.57(0.31) 1.57(0.03) 1.65(0.21) 1.78(0.16) 1.74(0.08) 1.69(0.09) 1.74(0.06) 1.74(0.04) 1.68(0.12) 1.71(0.05) 1.71(0.06) 1.69(0.05) 1.72(0.16) 1.84(0.22) 1.76(0.17) 1.75(0.07) 1.68(0.18) 1.70(0.09) 1.84(0.28) 1.68(0.26) 1.68(0.05) 1.67(0.04) 1.69(0.04) 1.65(0.10) 1.64(0.10) 1.71(0.26) 1.71(0.17) 1.69(0.09) 1.73(0.12) 1.72(0.07) 1.73(0.02) 1.70(0.09) 1.68(0.04) 1.71(0.08) 1.73(0.04) 1.71(0.09) 1.67(0.07) 1.66(0.07) 1.70(0.06) 1.73(0.05) 1.68(0.07) 1.67(0.05) 1.71(0.05) 1.69(0.04) 1.68(0.02) 1.66(0.19) 1.84(0.26) 1.88(0.08) 1.85(0.08) 1.77(0.18) 1.76(0.04) 1.74(0.07) 1.73(0.08) 1.74(0.03) 1.77(0.06) 1.78(0.02) 1.76(0.04) 1.76(0.05) 1.76(0.08) 1.75(0.06) 1.66(0.19) 1.71(0.13) 1.80(0.09) 1.75(0.09) 1.79(0.08) 1.78(0.06) 1.75(0.05) 1.83(0.11) 1.82(0.07) 1.81(0.07) 1.80(0.02) 1.81(0.07) 1.79(0.05) 1.81(0.05) 1.85(0.07) 1.81(0.06) 1.79(0.07) 1.82(0.08) 1.82(0.08) 1.83(0.10) 1.88(0.11) 1.82(0.19) 1.82(0.10) 1.83(0.09) 1.80(0.05) 1.80(0.06) 1.85(0.08) 1.89(0.14) 1.82(0.11) 1.87(0.13) 1.75(0.29) 1.89(0.58) 2.07(0.52) 2.00(0.29) 1.91(0.20) 1.93(0.09) 1.92(0.07) 1.91(0.06) 1.94(0.09) 1.97(0.05) 1.98(0.04) 1.96(0.04) 1.98(0.12) 2.01(0.07) 2.02(0.06) 2.01(0.08) 1.96(0.07) 2.06(0.15) 2.03(0.07) 2.06(0.07) 2.06(0.06) 2.10(0.17) 2.14(0.12) 2.09(0.22) 2.07(0.12) 1.92(0.19) 2.04(0.28) 2.08(0.06) 1.93(0.18) 1.95(0.15) 1.98(0.10) 2.00(0.10) 2.00(0.11) 2.03(0.19) 2.59(0.75) 2.31(0.47) 2.27(0.35) 2.37(0.22) 2.22(0.24) 2.23(0.09)
++ Max displacement in automask = 2.59 (mm) at sub-brick 144
++ Max delta displ  in automask = 0.75 (mm) at sub-brick 144
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.tb6704.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb6704.r03.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb6704.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb6704.r03.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ opened source dataset 'pb02.tb6704.r03.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 453.4 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.200019 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb6704.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6704.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb6704.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6704.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb6704.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6704.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source vr_base+orig -nwarp anat.un.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.200019 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 10.8 sec
3dcopy Sag3DMPRAGEs002a1001_ns+tlrc anat_final.tb6704
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.tb6704+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb6704+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets
++ 1870930 voxels in source_automask+0
++ Zero-pad: ybot=4 ytop=3
++ Zero-pad: zbot=4 ztop=0
++ Computing -autobox
++ 331452 voxels [91.8%] in weight mask
++ Number of points for matching = 155782
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.109409
   sp   = 0.269431
   mi   = -0.614771
   crM  = 0.0222375
   nmi  = 0.83164
   je   = 3.03675
   hel  = -0.132897
   crA  = 0.149357
   crU  = 0.157731
   lss  = 0.890591
   lpc  = 0.230443
   lpa  = 0.769557
   lpc+ = 0.323721
   ncd  = 0.935837
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.4
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb6704+tlrc -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb6704+tlrc'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 21.6 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb6704.r01.blur pb03.tb6704.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb6704.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb6704.r02.blur pb03.tb6704.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb6704.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb6704.r03.blur pb03.tb6704.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb6704.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb04.tb6704.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb6704.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 368.872223
 + Used gradual clip level = 328.591248 .. 412.803772
 + Number voxels above clip level = 68971
 + Clustering voxels ...
 + Largest cluster has 68493 voxels
 + Clustering voxels ...
 + Largest cluster has 68324 voxels
 + Filled    83 voxels in small holes; now have 68407 voxels
 + Filled    10 voxels in large holes; now have 68417 voxels
 + Clustering voxels ...
 + Largest cluster has 68413 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 242883 voxels
 + Mask now has 68413 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 232620 voxels
++ 78676 voxels in the mask [out of 311296: 25.27%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb04.tb6704.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb6704.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 370.026886
 + Used gradual clip level = 330.052582 .. 414.298431
 + Number voxels above clip level = 68712
 + Clustering voxels ...
 + Largest cluster has 68261 voxels
 + Clustering voxels ...
 + Largest cluster has 68061 voxels
 + Filled    67 voxels in small holes; now have 68128 voxels
 + Clustering voxels ...
 + Largest cluster has 68125 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 243171 voxels
 + Mask now has 68125 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 233092 voxels
++ 78204 voxels in the mask [out of 311296: 25.12%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb04.tb6704.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb6704.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 370.859009
 + Used gradual clip level = 331.698669 .. 415.007507
 + Number voxels above clip level = 68617
 + Clustering voxels ...
 + Largest cluster has 68193 voxels
 + Clustering voxels ...
 + Largest cluster has 67984 voxels
 + Filled    74 voxels in small holes; now have 68058 voxels
 + Clustering voxels ...
 + Largest cluster has 68057 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 243239 voxels
 + Mask now has 68057 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 233284 voxels
++ 78012 voxels in the mask [out of 311296: 25.06%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   2 z-planes are zero [from I]
++ last    9 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.tb6704
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 79002 survived, 232294 were zero
++ writing result full_mask.tb6704...
3dresample -master full_mask.tb6704+tlrc -input Sag3DMPRAGEs002a1001_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.tb6704
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 100257 survived, 211039 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb6704...
3dABoverlap -no_automask full_mask.tb6704+tlrc mask_anat.tb6704+tlrc
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#A=./full_mask.tb6704+tlrc.BRIK  B=./mask_anat.tb6704+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
79002        100257       100724       78535        467          21722         0.5911     21.6663     1.1210     1.0253     1.2747
3ddot -dodice full_mask.tb6704+tlrc mask_anat.tb6704+tlrc
tee out.mask_ae_dice.txt
0.876218	
3dresample -master full_mask.tb6704+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71790 survived, 239506 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb04.tb6704.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.tb6704.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb6704.r01.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb6704.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.tb6704.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.tb6704.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb6704.r02.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb6704.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.tb6704.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.tb6704.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb6704.r03.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb6704.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb6704
total number of censored TRs (simple form) = 12
1deval -a motion_tb6704_censor.1D -b outcount_tb6704_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb6704_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb05.tb6704.r01.scale+tlrc.HEAD pb05.tb6704.r02.scale+tlrc.HEAD pb05.tb6704.r03.scale+tlrc.HEAD -censor censor_tb6704_combined_2.1D -polort 3 -local_times -num_stimts 18 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll_01 -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch_01 -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw_01 -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS_01 -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL_01 -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP_01 -stim_file 13 motion_deriv.1D[0] -stim_base 13 -stim_label 13 roll_02 -stim_file 14 motion_deriv.1D[1] -stim_base 14 -stim_label 14 pitch_02 -stim_file 15 motion_deriv.1D[2] -stim_base 15 -stim_label 15 yaw_02 -stim_file 16 motion_deriv.1D[3] -stim_base 16 -stim_label 16 dS_02 -stim_file 17 motion_deriv.1D[4] -stim_base 17 -stim_label 17 dL_02 -stim_file 18 motion_deriv.1D[5] -stim_base 18 -stim_label 18 dP_02 -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +uns1 -str1 -glt_label 4 unstructured-structured BL1 -gltsym SYM: +uns2 -str2 -glt_label 5 unstructured-structured BL2 -gltsym SYM: +uns3 -str3 -glt_label 6 unstructured-structured BL3 -gltsym SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3 -glt_label 7 task -gltsym SYM: +uns1 +str1 -glt_label 8 task BL1 -gltsym SYM: +uns2 +str2 -glt_label 9 task BL2 -gltsym SYM: +uns3 +str3 -glt_label 10 task BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb6704 -errts errts.tb6704 -bucket stats.tb6704
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 596,852 bytes (about 597 thousand [kilo])
++ loading dataset pb05.tb6704.r01.scale+tlrc.HEAD pb05.tb6704.r02.scale+tlrc.HEAD pb05.tb6704.r03.scale+tlrc.HEAD
++ current memory malloc-ated = 561,233,701 bytes (about 561 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 261246 voxels (out of 311296 = 83.9%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 -str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 -str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 +str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 437 (after)
 + Number of parameters:  30 [24 baseline ; 6 signal]
++ total shared memory needed = 1,181,679,616 bytes (about 1.2 billion [giga])
++ current memory malloc-ated = 561,588,601 bytes (about 562 million [mega])
++ mmap() memory allocated: 1,181,679,616 bytes (about 1.2 billion [giga])
++ Memory required for output bricks = 1,181,679,616 bytes (about 1.2 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.tb6704.r01.scale+tlrc.HEAD pb05.tb6704.r02.scale+tlrc.HEAD pb05.tb6704.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.tb6704_REML -Rvar stats.tb6704_REMLvar \
 -Rfitts fitts.tb6704_REML -Rerrts errts.tb6704_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (437x30):  4.89446  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (437x6):  1.03519  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (437x24):  4.61865  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (437x12):  3.33026  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (437x12):  1.05295  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.43332e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.56 s
++ Voxels in dataset: 311296
++ Voxels per job:    31129
++ Job #1: processing voxels 31129 to 62257; elapsed time=10.198
++ Job #2: processing voxels 62258 to 93386; elapsed time=10.229
++ Job #3: processing voxels 93387 to 124515; elapsed time=10.261
++ Job #4: processing voxels 124516 to 155644; elapsed time=10.293
++ Job #5: processing voxels 155645 to 186773; elapsed time=10.353
++ Job #6: processing voxels 186774 to 217902; elapsed time=10.399
++ Job #7: processing voxels 217903 to 249031; elapsed time=10.452
++ Job #8: processing voxels 249032 to 280160; elapsed time=10.494
++ Job #0: processing voxels 0 to 31128; elapsed time=10.558
++ Job #9: processing voxels 280161 to 311295; elapsed time=10.558
++ voxel loop:0123456789.0123456789.0123456789.0123456789.0123456++ Job #6 finished; elapsed time=79.732
78++ Job #5 finished; elapsed time=82.064
++ Job #9 finished; elapsed time=82.314
9.
++ Job #0 waiting for children to finish; elapsed time=82.505
++ Job #1 finished; elapsed time=82.804
++ Job #7 finished; elapsed time=83.040
++ Job #8 finished; elapsed time=83.067
++ Job #2 finished; elapsed time=83.188
++ Job #4 finished; elapsed time=83.406
++ Job #3 finished; elapsed time=83.439
++ Job #0 now finishing up; elapsed time=83.463
++ Smallest FDR q [0 Full_Fstat] = 1.32096e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 8.86033e-14
++ Smallest FDR q [3 uns1_Fstat] = 8.85975e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 5.70935e-13
++ Smallest FDR q [6 uns2_Fstat] = 5.70949e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 2.59441e-13
++ Smallest FDR q [9 uns3_Fstat] = 2.59457e-13
++ Smallest FDR q [11 str1#0_Tstat] = 7.52909e-14
++ Smallest FDR q [12 str1_Fstat] = 7.52942e-14
++ Smallest FDR q [14 str2#0_Tstat] = 2.81596e-13
++ Smallest FDR q [15 str2_Fstat] = 2.81606e-13
++ Smallest FDR q [17 str3#0_Tstat] = 2.06874e-13
++ Smallest FDR q [18 str3_Fstat] = 2.06874e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 4.56224e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 4.56236e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 5.81799e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 5.81767e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 4.24524e-11
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 4.24524e-11
++ Smallest FDR q [29 unstructured-structured BL1_GLT#0_Tstat] = 3.55914e-11
++ Smallest FDR q [30 unstructured-structured BL1_GLT_Fstat] = 3.55936e-11
++ Smallest FDR q [32 unstructured-structured BL2_GLT#0_Tstat] = 1.06209e-12
++ Smallest FDR q [33 unstructured-structured BL2_GLT_Fstat] = 1.06205e-12
++ Smallest FDR q [35 unstructured-structured BL3_GLT#0_Tstat] = 1.23893e-12
++ Smallest FDR q [36 unstructured-structured BL3_GLT_Fstat] = 1.23893e-12
++ Smallest FDR q [38 task_GLT#0_Tstat] = 4.59327e-14
++ Smallest FDR q [39 task_GLT_Fstat] = 4.59321e-14
++ Smallest FDR q [41 task BL1_GLT#0_Tstat] = 7.11551e-14
++ Smallest FDR q [42 task BL1_GLT_Fstat] = 7.11515e-14
++ Smallest FDR q [44 task BL2_GLT#0_Tstat] = 3.72367e-13
++ Smallest FDR q [45 task BL2_GLT_Fstat] = 3.72417e-13
++ Smallest FDR q [47 task BL3_GLT#0_Tstat] = 2.08805e-13
++ Smallest FDR q [48 task BL3_GLT_Fstat] = 2.08805e-13
++ Wrote bucket dataset into ./stats.tb6704+tlrc.BRIK
 + created 33 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb6704+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.tb6704+tlrc.BRIK
++ Program finished; elapsed time=173.121
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.731       0.794  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.728       0.793  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.720       0.786  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.482       0.558  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.479       0.557  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.470       0.547  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.406      -0.360  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb05.tb6704.r01.scale+tlrc.HEAD pb05.tb6704.r02.scale+tlrc.HEAD pb05.tb6704.r03.scale+tlrc.HEAD -fout -tout -Rbuck stats.tb6704_REML -Rvar stats.tb6704_REMLvar -Rfitts fitts.tb6704_REML -Rerrts errts.tb6704_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 311296 voxels
++ FDR automask has 261246 voxels (out of 311296 = 83.9%)
++ -----  matrix condition (437x30):  4.89446  ++ VERY GOOD ++
 + masked off 60117 voxels for being all zero; 251179 left in mask
++ Converting input dataset to vector image
 +  dataset = 560 million [mega] bytes
 +  vectim  = 453 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=31.73
 + X matrix: 57.315% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=437 cols=30; 109*1 cases; total CPU=0.00 Elapsed=31.79
 +  average case bandwidth = 12.22
++ REML voxel loop: [6 threads]0123456789.0123456789.0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=222.82
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=329.02
++ Output dataset ./stats.tb6704_REMLvar+tlrc.BRIK
++ Output dataset ./fitts.tb6704_REML+tlrc.BRIK
++ Output dataset ./errts.tb6704_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.tb6704_REML+tlrc
++ Smallest FDR q [0 Full_Fstat] = 1.30042e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 3.22685e-12
++ Smallest FDR q [3 uns1_Fstat] = 3.22685e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 5.25226e-11
++ Smallest FDR q [6 uns2_Fstat] = 5.25226e-11
++ Smallest FDR q [8 uns3#0_Tstat] = 1.6768e-11
++ Smallest FDR q [9 uns3_Fstat] = 1.6768e-11
++ Smallest FDR q [11 str1#0_Tstat] = 2.1098e-12
++ Smallest FDR q [12 str1_Fstat] = 2.1098e-12
++ Smallest FDR q [14 str2#0_Tstat] = 7.16319e-11
++ Smallest FDR q [15 str2_Fstat] = 7.16317e-11
++ Smallest FDR q [17 str3#0_Tstat] = 3.69566e-11
++ Smallest FDR q [18 str3_Fstat] = 3.69567e-11
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.37671e-12
++ Smallest FDR q [21 unstructured_Fstat] = 1.37671e-12
++ Smallest FDR q [23 structured#0_Tstat] = 2.03821e-12
++ Smallest FDR q [24 structured_Fstat] = 2.03821e-12
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.0114086
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.0114086
++ Smallest FDR q [29 unstructured-structured_BL1#0_Tstat] = 0.0143626
++ Smallest FDR q [30 unstructured-structured_BL1_Fstat] = 0.0143627
++ Smallest FDR q [32 unstructured-structured_BL2#0_Tstat] = 0.00128464
++ Smallest FDR q [33 unstructured-structured_BL2_Fstat] = 0.00128464
++ Smallest FDR q [35 unstructured-structured_BL3#0_Tstat] = 0.00395119
++ Smallest FDR q [36 unstructured-structured_BL3_Fstat] = 0.00395119
++ Smallest FDR q [38 task#0_Tstat] = 1.2119e-12
++ Smallest FDR q [39 task_Fstat] = 1.2119e-12
++ Smallest FDR q [41 task_BL1#0_Tstat] = 1.95157e-12
++ Smallest FDR q [42 task_BL1_Fstat] = 1.95157e-12
++ Smallest FDR q [44 task_BL2#0_Tstat] = 2.50036e-11
++ Smallest FDR q [45 task_BL2_Fstat] = 2.50036e-11
++ Smallest FDR q [47 task_BL3#0_Tstat] = 2.02992e-11
++ Smallest FDR q [48 task_BL3_Fstat] = 2.02992e-11
 + Added 33 FDR curves to dataset stats.tb6704_REML+tlrc
++ Output dataset ./stats.tb6704_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=420.51
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb6704 pb05.tb6704.r01.scale+tlrc.HEAD pb05.tb6704.r02.scale+tlrc.HEAD pb05.tb6704.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ elapsed time = 420.8 s
3dTstat -mean -prefix rm.signal.all all_runs.tb6704+tlrc[0..54,57..128,131..178,181..218,220..409,413..442,446..449]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
** Can't read ANY data from file 'all_runs.tb6704+tlrc.HEAD'
[7m** FATAL ERROR:[0m Can't open dataset all_runs.tb6704+tlrc[0..54,57..128,131..178,181..218,220..409,413..442,446..449]
** Program compile date = Dec 22 2017
