echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb6704
endif
set output_dir = tb6704.srtt
if ( -d tb6704.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb6704.srtt
mkdir tb6704.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb6704.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb6704.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb6704.srtt/pb00.tb6704.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.8 s
3dTcat -prefix tb6704.srtt/pb00.tb6704.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.9 s
3dTcat -prefix tb6704.srtt/pb00.tb6704.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.0 s
set tr_counts = ( 150 150 150 )
cd tb6704.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6704.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r01.tcat+orig.BRIK is 4.200019 degrees from plumb.
++ 21784 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6704.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r02.tcat+orig.BRIK is 4.200019 degrees from plumb.
++ 21703 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6704.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r03.tcat+orig.BRIK is 4.200019 degrees from plumb.
++ 21696 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb6704.r01.tshift -tpattern alt+z2 pb00.tb6704.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r01.tcat+orig.BRIK is 4.200019 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6704.r02.tshift -tpattern alt+z2 pb00.tb6704.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r02.tcat+orig.BRIK is 4.200019 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6704.r03.tshift -tpattern alt+z2 pb00.tb6704.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6704.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6704.r03.tcat+orig.BRIK is 4.200019 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb6704.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 4.200019 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 376.588013
 + Used gradual clip level = 327.546997 .. 425.071991
 + Number voxels above clip level = 22399
 + Clustering voxels ...
 + Largest cluster has 21836 voxels
 + Clustering voxels ...
 + Largest cluster has 21488 voxels
 + Filled   198 voxels in small holes; now have 21686 voxels
 + Clustering voxels ...
 + Largest cluster has 21685 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 109387 voxels
 + Mask now has 21685 voxels
++ 21685 voxels in the mask [out of 131072: 16.54%]
++ first  14 x-planes are zero [from R]
++ last   15 x-planes are zero [from L]
++ first   8 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 916.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/916.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 4.200019 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 4.200019 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1186503 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 21685 voxels [13.6%] in weight mask
++ Number of points for matching = 21685
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 30.733 28.605 21.175 (index)
 + source center of mass = 83.054 155.130 149.700 (index)
 + source-target CM = -0.649 -0.835 -4.312 (xyz)
 + center of mass shifts = -0.649 -0.835 -4.312
++ shift param auto-range: -70.2..68.9 -70.4..68.7 -53.1..44.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.648964 .. 9.351036
 + Range param#2 [y-shift] = -10.834663 .. 9.165337
 + Range param#3 [z-shift] = -14.311623 .. 5.688377
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.648964 .. 39.351036
 + Range param#2 [y-shift] = -40.834663 .. 39.165337
 + Range param#3 [z-shift] = -44.311623 .. 35.688377
 + 12 free parameters
++ Normalized convergence radius = 0.000492
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1186503 [out of 13310000] voxels
 + base mask has 30631 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=70 usiz=185
 + - copying weight image
 + - using 21685 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 18426 total points stored in 173 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--+.+o...-oo-oo.+o$o + - best 45 costs found:
    0 v=-0.058151:  -0.65  -0.83  -4.31   0.00   0.00   0.00  [grid]
    1 v=-0.043807: -22.97 -30.47   2.68  -8.73 -38.75  33.73  [rand]
    2 v=-0.043730: -13.98 -27.50   9.02 -15.00 -30.00  15.00  [grid]
    3 v=-0.038046: -13.98 -14.17  22.36 -15.00 -15.00  15.00  [grid]
    4 v=-0.035959: -13.98  12.50 -17.64 -15.00  30.00  15.00  [grid]
    5 v=-0.035063: -13.98  25.83   9.02 -15.00  15.00  15.00  [grid]
    6 v=-0.033598: -23.50 -24.41   6.10  -5.91 -29.74  29.45  [rand]
    7 v=-0.031257:  22.20 -24.41   6.10   5.91 -29.74 -29.45  [rand]
    8 v=-0.029541: -16.79 -10.30  20.04 -20.99 -15.73  16.09  [rand]
    9 v=-0.029191: -13.98 -14.17   9.02 -15.00 -15.00  15.00  [grid]
   10 v=-0.028949: -13.98 -14.17   9.02 -15.00 -30.00  30.00  [grid]
   11 v=-0.028517: -13.98 -14.17  22.36 -30.00 -30.00  30.00  [grid]
   12 v=-0.028231: -10.47 -25.59   7.07  -3.10 -34.36   2.55  [rand]
   13 v=-0.028143: -13.98 -27.50  22.36 -15.00 -30.00  30.00  [grid]
   14 v=-0.027533: -27.32 -14.17   9.02 -30.00 -15.00  30.00  [grid]
   15 v=-0.027263:  10.95   3.72  -8.21  24.53 -29.49 -26.10  [rand]
   16 v=-0.027230: -14.07 -23.52  27.03  -4.37 -20.12  15.12  [rand]
   17 v=-0.026622:  12.68 -27.50  22.36 -15.00 -30.00 -30.00  [grid]
   18 v=-0.026619:  -7.70 -20.65  31.44 -25.15 -27.05  27.90  [rand]
   19 v=-0.026376:  12.68 -14.17   9.02 -15.00 -15.00 -30.00  [grid]
   20 v=-0.026250: -27.32 -14.17  22.36  30.00 -15.00  15.00  [grid]
   21 v=-0.026249: -13.98  12.50 -17.64  15.00 -15.00  15.00  [grid]
   22 v=-0.026211: -10.47 -25.59   7.07  -3.10 -34.36  -2.55  [rand]
   23 v=-0.024892: -10.47 -25.59   7.07   3.10 -34.36   2.55  [rand]
   24 v=-0.024497:  21.67 -30.47   2.68   8.73 -38.75 -33.73  [rand]
   25 v=-0.024125: -13.98  25.83  22.36  15.00  15.00 -15.00  [grid]
   26 v=-0.024060: -10.97  27.98  10.70 -30.67  17.79  20.52  [rand]
   27 v=-0.023847: -13.98 -27.50   9.02 -30.00 -30.00  15.00  [grid]
   28 v=-0.023530: -13.98  12.50 -17.64  30.00 -15.00  15.00  [grid]
   29 v=-0.023311:  12.68  25.83  22.36  15.00  15.00  30.00  [grid]
   30 v=-0.023047:  26.02 -14.17  22.36 -30.00 -15.00 -15.00  [grid]
   31 v=-0.022839:  12.68 -27.50   9.02 -15.00 -30.00 -30.00  [grid]
   32 v=-0.022431: -13.98 -27.50  22.36 -30.00 -30.00  30.00  [grid]
   33 v=-0.022363: -13.98 -27.50  22.36 -15.00 -15.00  15.00  [grid]
   34 v=-0.021946: -27.32 -14.17   9.02 -15.00 -15.00  30.00  [grid]
   35 v=-0.021870: -22.97 -30.47   2.68   8.73 -38.75  33.73  [rand]
   36 v=-0.021766: -27.32  12.50  22.36 -15.00  30.00  30.00  [grid]
   37 v=-0.021445:  26.02 -14.17  22.36 -15.00 -15.00 -15.00  [grid]
   38 v=-0.021422:  12.68 -27.50   9.02  15.00 -30.00 -15.00  [grid]
   39 v=-0.021369: -13.98 -14.17  22.36 -30.00 -15.00  15.00  [grid]
   40 v=-0.021290:  -9.29  19.60  13.16 -25.20  18.50  13.54  [rand]
   41 v=-0.021243: -10.47 -25.59   7.07   3.10 -34.36  -2.55  [rand]
   42 v=-0.021204:  26.02 -14.17   9.02 -30.00 -15.00 -30.00  [grid]
   43 v=-0.021192: -13.98 -27.50   9.02  15.00 -15.00  30.00  [grid]
   44 v=-0.021157: -14.68 -16.55  10.36 -24.25 -37.55   4.41  [rand]
*[#8004=-0.303956] *[#8014=-0.304749] *[#8015=-0.307118] *[#8018=-0.31444] *[#8020=-0.31879] *[#8026=-0.320413]  + - costs of the above after a little optimization:
  * 0 v=-0.320413:  -0.47  -0.47  -0.11  -0.00  -0.80   0.46  [grid]
    1 v=-0.059515: -23.00 -33.85   2.12  -8.80 -37.64  33.16  [rand]
    2 v=-0.069449: -14.55 -27.33  11.05  -5.65 -30.61  15.04  [grid]
    3 v=-0.041585: -13.56 -14.93  22.52 -14.98 -15.06  15.30  [grid]
    4 v=-0.046798: -12.40  11.93 -18.79 -16.59  28.67  11.62  [grid]
    5 v=-0.068493: -10.40  22.05   1.72 -10.12  13.47   9.39  [grid]
    6 v=-0.060561: -19.61 -25.48   9.82  -2.65 -28.39  24.08  [rand]
    7 v=-0.039363:  21.72 -27.55   6.41   5.01 -31.48 -28.09  [rand]
    8 v=-0.037981: -17.03 -10.82  19.77 -20.49 -14.95  20.52  [rand]
    9 v=-0.044588: -18.79 -13.16  10.64 -13.85 -15.78  15.72  [grid]
   10 v=-0.029762: -14.33 -13.83   8.82 -15.51 -30.00  29.76  [grid]
   11 v=-0.038647: -14.30  -9.37  21.93 -30.23 -29.87  30.05  [grid]
   12 v=-0.069081:  -8.60 -28.11   8.85  -5.35 -33.41   6.23  [rand]
   13 v=-0.033262: -14.92 -31.19  22.31 -14.86 -30.97  29.37  [grid]
   14 v=-0.039656: -26.57 -14.21  14.32 -28.84 -14.60  31.04  [grid]
   15 v=-0.041374:  11.05   3.74  -4.53  23.81 -29.82 -26.54  [rand]
   16 v=-0.040943: -14.29 -23.92  26.10  -8.94 -18.37  18.02  [rand]
   17 v=-0.031587:  12.25 -29.97  21.51 -15.33 -29.40 -30.03  [grid]
   18 v=-0.028249:  -8.74 -20.72  29.35 -26.15 -27.85  24.33  [rand]
   19 v=-0.043664:  10.02 -17.01   8.46 -14.46 -14.70 -28.08  [grid]
   20 v=-0.037697: -27.37 -12.56  24.48  29.70 -10.45  17.69  [grid]
   21 v=-0.045614: -11.98  14.17 -23.84  14.98 -17.24  16.87  [grid]
   22 v=-0.059011:  -6.26 -26.14   6.11 -11.66 -37.14   0.81  [rand]
   23 v=-0.057280:  -6.79 -25.26   5.38 -12.84 -39.53   4.19  [rand]
   24 v=-0.038597:  20.15 -34.18  -2.18   7.97 -40.78 -34.82  [rand]
   25 v=-0.030362: -12.21  30.70  22.47  15.09  15.77 -14.32  [grid]
   26 v=-0.053647: -12.62  23.89   5.09 -20.89  14.40  15.44  [rand]
   27 v=-0.058572: -12.48 -27.51   1.78 -24.69 -29.37  10.41  [grid]
   28 v=-0.029518: -13.19  13.22 -16.64  28.91 -15.34  15.01  [grid]
   29 v=-0.034250:  10.64  24.62  21.74  13.16  15.38  25.78  [grid]
   30 v=-0.035833:  26.38 -14.37  21.78 -29.52 -14.99  -9.97  [grid]
   31 v=-0.062187:   5.70 -27.31   4.91 -17.17 -31.16 -27.96  [grid]
   32 v=-0.036830: -15.23 -27.16  17.56 -21.99 -26.24  26.92  [grid]
   33 v=-0.038365: -13.47 -27.76  26.00 -14.37 -16.37  15.41  [grid]
   34 v=-0.042931: -26.12  -6.86  15.23  -7.00 -11.91  30.29  [grid]
   35 v=-0.057456: -21.45 -37.43   1.29  -3.04 -40.03  32.94  [rand]
   36 v=-0.026288: -27.05  13.76  23.20 -16.14  30.24  30.19  [grid]
   37 v=-0.028752:  25.86 -13.77  22.12 -14.53 -14.86 -10.65  [grid]
   38 v=-0.032798:  13.63 -27.46   5.69  14.19 -36.19 -15.86  [grid]
   39 v=-0.029858: -13.89 -14.07  22.79 -29.25 -15.19  19.18  [grid]
   40 v=-0.030357: -13.43  19.21  13.90 -26.02  17.38  13.69  [rand]
   41 v=-0.027823: -10.89 -25.12   7.12   3.05 -34.31   1.64  [rand]
   42 v=-0.028387:  26.05 -12.63   7.12 -31.97 -13.07 -30.37  [grid]
   43 v=-0.026938: -13.73 -22.75   9.19  15.68 -15.85  29.24  [grid]
   44 v=-0.043297:  -9.93 -18.23   9.69 -24.49 -38.44   2.43  [rand]
 + - save # 0 for twobest
 + - save # 2 for twobest
 + - save #12 for twobest
 + - save # 5 for twobest
 + - save #31 for twobest
 + - save # 6 for twobest
 + - save # 1 for twobest
 + - save #22 for twobest
 + - save #27 for twobest
 + - save #35 for twobest
 + - skip #23 for twobest: too close to set #22
 + - save #26 for twobest
 + - save # 4 for twobest
 + - save #21 for twobest
 + - save # 9 for twobest
 + - save #19 for twobest
 + - save #44 for twobest
 + - save #34 for twobest
 + - save # 3 for twobest
 + - save #15 for twobest
 + - save #16 for twobest
 + - save #14 for twobest
 + - save # 7 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=70 usiz=185
 + - retaining old weight image
 + - using 21685 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 18266 total points stored in 185 'RHDD(13.7332)' bloks
*[#9550=-0.379746] *[#9558=-0.391837] *[#9574=-0.392759] *[#9576=-0.395715] *[#9578=-0.395773] *[#9579=-0.395995] *[#9580=-0.396132] *[#9581=-0.398511] *[#9582=-0.398861] *[#9584=-0.398994] *[#9588=-0.399993] *[#9591=-0.400165] *[#9592=-0.400167] *[#9594=-0.400377] *[#9597=-0.40083] *[#9598=-0.401128] *[#9601=-0.401936] *[#9602=-0.403216] *[#9603=-0.403939] *[#9604=-0.405094] *[#9605=-0.405567] *[#9606=-0.406607] *[#9607=-0.407068] *[#9608=-0.408176] *[#9609=-0.410247] *[#9612=-0.410765] *[#9613=-0.414403] *[#9614=-0.416574] *[#9621=-0.418442] *[#9624=-0.419394] *[#9627=-0.419617] *[#9628=-0.420051] *[#9631=-0.420451] *[#9632=-0.420712] *[#9633=-0.42086] *[#9634=-0.421189] *[#9635=-0.421762] *[#9642=-0.422119] *[#9647=-0.422244] *[#9648=-0.422471] 
 + - param set #1 has cost=-0.422471
 + -- Parameters = -0.2943 -1.1472 -0.2505 0.4292 -2.1317 -0.1774 0.9921 1.0397 0.9986 0.0112 0.0123 -0.0121
 + - param set #2 has cost=-0.054129
 + -- Parameters = -14.8714 -26.7459 11.6913 -2.1906 -30.7062 15.5437 1.0003 0.9958 0.9994 -0.0004 -0.0037 -0.0001
 + - param set #3 has cost=-0.060925
 + -- Parameters = -7.7414 -25.4327 8.6261 -6.8876 -32.8509 5.6669 1.0072 0.9982 0.9992 -0.0017 -0.0035 0.0013
 + - param set #4 has cost=-0.060534
 + -- Parameters = -10.9925 21.4754 0.8015 -9.5174 14.0111 9.8889 1.0247 0.9989 1.0028 0.0026 0.0003 -0.0001
 + - param set #5 has cost=-0.046858
 + -- Parameters = 4.9664 -27.2644 4.9074 -15.6446 -31.7820 -27.9213 1.0000 0.9983 0.9949 0.0093 0.0009 0.0002
 + - param set #6 has cost=-0.053761
 + -- Parameters = -19.5532 -25.5936 9.2890 -2.6191 -28.2799 24.4612 0.9996 1.0003 0.9985 -0.0009 -0.0001 0.0097
 + - param set #7 has cost=-0.048620
 + -- Parameters = -23.3658 -33.9576 2.1644 -8.1308 -37.3318 33.4666 1.0000 1.0117 1.0000 -0.0008 0.0004 0.0004
 + - param set #8 has cost=-0.055857
 + -- Parameters = -5.6473 -26.5035 6.3662 -11.2831 -38.0153 1.9146 0.9951 0.9992 0.9962 0.0004 0.0102 -0.0009
 + - param set #9 has cost=-0.053966
 + -- Parameters = -11.7618 -27.5203 1.4199 -24.1373 -29.3817 8.9959 0.9973 1.0035 1.0164 0.0004 0.0061 0.0032
 + - param set #10 has cost=-0.049743
 + -- Parameters = -21.6157 -35.9410 0.6655 -6.9309 -38.8625 32.5393 0.9957 0.9985 1.0004 0.0005 0.0027 -0.0015
 + - param set #11 has cost=-0.056554
 + -- Parameters = -12.5753 20.9638 3.3199 -19.9274 11.9087 12.5173 0.9973 1.0033 1.0179 0.0050 0.0007 -0.0007
 + - param set #12 has cost=-0.411141
 + -- Parameters = -0.3396 -0.9041 -0.5833 0.3774 -1.8182 0.0298 0.9905 1.0157 0.9850 0.0098 0.0012 -0.0115
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0654 
 + --- dist(#3,#1) = 0.341 
 + --- dist(#4,#1) = 0.283 
 + --- dist(#5,#1) = 0.276 
 + --- dist(#6,#1) = 0.399 
 + --- dist(#7,#1) = 0.32 
 + --- dist(#8,#1) = 0.33 
 + --- dist(#9,#1) = 0.306 
 + --- dist(#10,#1) = 0.435 
 + --- dist(#11,#1) = 0.41 
 + --- dist(#12,#1) = 0.329 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=70 usiz=185
 + - retaining old weight image
 + - using 21685 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 18824 total points stored in 200 'RHDD(13.5933)' bloks
*[#10498=-0.43925] *[#10505=-0.440899] *[#10517=-0.442539] *[#10518=-0.443572] *[#10523=-0.44434] *[#10524=-0.444991] *[#10526=-0.445025] *[#10527=-0.445463] *[#10530=-0.445718] *[#10536=-0.446182] *[#10539=-0.446645] *[#10541=-0.446837] *[#10545=-0.447034] *[#10546=-0.447109] *[#10547=-0.447357] *[#10548=-0.447449] *[#10551=-0.447477] *[#10560=-0.447647] *[#10563=-0.447713] *[#10564=-0.447717] *[#10568=-0.447733] *[#10571=-0.447783] 
 + - param set #1 has cost=-0.447783
 + -- Parameters = -0.2920 -1.0998 -0.3938 0.3395 -2.3501 -0.2683 0.9987 1.0334 0.9968 0.0069 0.0112 -0.0200
*[#10624=-0.447824] *[#10630=-0.447894] *[#10632=-0.447997] *[#10633=-0.448167] *[#10634=-0.448202] *[#10637=-0.448401] *[#10638=-0.44869] *[#10641=-0.448731] *[#10642=-0.448888] *[#10643=-0.448989] *[#10644=-0.449108] *[#10645=-0.449138] *[#10648=-0.449208] *[#10649=-0.449273] *[#10650=-0.449498] *[#10660=-0.449655] *[#10663=-0.449887] *[#10666=-0.449955] *[#10667=-0.450022] *[#10670=-0.450116] *[#10671=-0.450133] 
 + - param set #2 has cost=-0.450133
 + -- Parameters = -0.3084 -1.0650 -0.5369 0.1802 -2.3945 -0.2057 0.9983 1.0290 0.9893 0.0002 0.0071 -0.0236
 + - param set #3 has cost=-0.064197
 + -- Parameters = -8.0315 -23.9693 7.1336 -7.1560 -31.3039 4.6511 1.0194 1.0453 0.9481 0.0055 0.0101 -0.0012
 + - param set #4 has cost=-0.051452
 + -- Parameters = -10.8218 21.5232 0.3741 -9.7238 14.1569 9.7332 1.0265 0.9981 1.0030 0.0020 -0.0022 0.0074
 + - param set #5 has cost=-0.052644
 + -- Parameters = -12.2880 20.0969 1.2131 -20.9059 12.2694 12.8177 0.9990 1.0094 1.0109 0.0098 -0.0045 0.0013
 + - param set #6 has cost=-0.059163
 + -- Parameters = -4.8849 -24.0343 3.8276 -10.2306 -41.7826 0.9877 0.9929 0.9728 0.8559 0.0169 0.0410 -0.0098
 + - param set #7 has cost=-0.048084
 + -- Parameters = -14.8330 -26.5921 11.7348 -2.2359 -30.4373 15.5926 1.0021 0.9964 0.9981 -0.0012 -0.0040 0.0073
 + - param set #8 has cost=-0.046113
 + -- Parameters = -11.6740 -27.6391 1.6466 -24.3049 -29.9593 8.6267 0.9967 1.0032 1.0147 -0.0002 0.0153 0.0041
 + - param set #9 has cost=-0.049272
 + -- Parameters = -19.4666 -26.1713 9.1792 -1.9291 -28.3483 24.2131 0.9992 0.9676 0.9845 -0.0126 0.0021 0.0031
 + - param set #10 has cost=-0.042068
 + -- Parameters = -21.3448 -35.3992 1.3871 -7.8837 -38.7612 31.9152 0.9898 0.9922 0.9923 0.0005 0.0116 -0.0049
 + - param set #11 has cost=-0.041072
 + -- Parameters = -23.3575 -34.2204 1.8133 -7.9921 -37.3671 33.6629 1.0016 1.0163 0.9989 -0.0033 -0.0016 0.0073
 + - param set #12 has cost=-0.037840
 + -- Parameters = 5.0291 -27.3435 4.9200 -15.4331 -32.1164 -27.7360 0.9926 0.9825 0.9836 0.0091 0.0006 -0.0047
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0304 
 + --- dist(#3,#1) = 0.321 
 + --- dist(#4,#1) = 0.438 
 + --- dist(#5,#1) = 0.265 
 + --- dist(#6,#1) = 0.282 
 + --- dist(#7,#1) = 0.314 
 + --- dist(#8,#1) = 0.319 
 + --- dist(#9,#1) = 0.332 
 + --- dist(#10,#1) = 0.429 
 + --- dist(#11,#1) = 0.414 
 + --- dist(#12,#1) = 0.33 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=70 usiz=185
 + - retaining old weight image
 + - using 21685 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 18923 total points stored in 206 'RHDD(13.5079)' bloks
*[#11529=-0.451485] *[#11538=-0.451888] *[#11549=-0.45384] *[#11550=-0.456287] *[#11553=-0.456818] *[#11577=-0.457213] *[#11586=-0.457312] *[#11589=-0.457351] *[#11592=-0.457424] *[#11593=-0.457458] *[#11596=-0.457531] *[#11601=-0.457584] *[#11602=-0.457622] *[#11605=-0.457761] *[#11606=-0.457779] *[#11607=-0.457786] *[#11614=-0.45806] *[#11617=-0.458152] *[#11620=-0.458176] *[#11621=-0.458267] *[#11622=-0.458277] *[#11623=-0.458294] *[#11624=-0.458433] *[#11625=-0.458449] 
 + - param set #1 has cost=-0.458449
 + -- Parameters = -0.3019 -1.1519 -0.5695 0.0856 -2.7260 -0.0720 0.9970 1.0174 0.9928 -0.0041 0.0028 -0.0337
 + - param set #2 has cost=-0.457348
 + -- Parameters = -0.2757 -1.0869 -0.4347 0.1973 -2.4814 -0.1440 1.0014 1.0182 1.0007 0.0002 0.0054 -0.0293
 + - param set #3 has cost=-0.056466
 + -- Parameters = -8.2796 -24.3327 7.3222 -6.7932 -31.9382 4.5196 1.0128 1.0485 0.9425 0.0052 0.0091 -0.0002
 + - param set #4 has cost=-0.051310
 + -- Parameters = -4.8289 -23.7458 3.5156 -10.5845 -41.7206 0.9865 1.0057 0.9699 0.8622 0.0149 0.0370 -0.0085
 + - param set #5 has cost=-0.048797
 + -- Parameters = -11.8878 19.9478 1.0458 -21.3469 11.6868 12.5710 0.9984 1.0221 1.0193 0.0248 -0.0226 0.0038
 + - param set #6 has cost=-0.047575
 + -- Parameters = -10.5259 21.3153 -0.3243 -9.3431 14.0235 9.5673 1.0361 0.9973 1.0004 0.0062 -0.0100 0.0060
 + - param set #7 has cost=-0.042785
 + -- Parameters = -19.0272 -27.3136 8.5022 -1.0809 -29.0576 24.5205 1.0012 0.9439 0.9934 -0.0038 0.0032 0.0220
 + - param set #8 has cost=-0.039147
 + -- Parameters = -14.8543 -26.1793 11.6140 -2.1890 -30.8392 15.7534 1.0005 0.9923 0.9867 0.0036 -0.0030 0.0049
 + - param set #9 has cost=-0.039240
 + -- Parameters = -11.4538 -27.3031 1.5310 -24.3150 -30.0509 8.4777 1.0010 1.0027 1.0065 -0.0064 0.0265 -0.0003
 + - param set #10 has cost=-0.035079
 + -- Parameters = -20.9481 -35.4188 1.5617 -8.0955 -38.7264 31.5212 0.9857 0.9926 0.9953 0.0004 0.0102 -0.0053
 + - param set #11 has cost=-0.033192
 + -- Parameters = -23.2501 -34.2460 1.3974 -8.0667 -37.1760 33.2425 0.9996 1.0144 0.9996 -0.0037 -0.0056 0.0082
 + - param set #12 has cost=-0.029014
 + -- Parameters = 4.9231 -27.2679 4.8764 -15.4091 -32.1214 -27.6746 0.9923 0.9829 0.9787 0.0139 0.0009 -0.0067
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0216 
 + --- dist(#3,#1) = 0.325 
 + --- dist(#4,#1) = 0.433 
 + --- dist(#5,#1) = 0.264 
 + --- dist(#6,#1) = 0.281 
 + --- dist(#7,#1) = 0.327 
 + --- dist(#8,#1) = 0.327 
 + --- dist(#9,#1) = 0.313 
 + --- dist(#10,#1) = 0.428 
 + --- dist(#11,#1) = 0.414 
 + --- dist(#12,#1) = 0.327 
 + - Total coarse refinement net CPU time = 0.0 s; 3064 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=70 usiz=185
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 19170 total points stored in 211 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.447016 *
 + -- Parameters = -0.3019 -1.1519 -0.5695 0.0856 -2.7260 -0.0720 0.9970 1.0174 0.9928 -0.0041 0.0028 -0.0337
 + - cost(#2)=-0.445901  
 + -- Parameters = -0.2757 -1.0869 -0.4347 0.1973 -2.4814 -0.1440 1.0014 1.0182 1.0007 0.0002 0.0054 -0.0293
 + - cost(#3)=-0.052591  
 + -- Parameters = -8.2796 -24.3327 7.3222 -6.7932 -31.9382 4.5196 1.0128 1.0485 0.9425 0.0052 0.0091 -0.0002
 + - cost(#4)=-0.046119  
 + -- Parameters = -4.8289 -23.7458 3.5156 -10.5845 -41.7206 0.9865 1.0057 0.9699 0.8622 0.0149 0.0370 -0.0085
 + - cost(#5)=-0.039431  
 + -- Parameters = -11.8878 19.9478 1.0458 -21.3469 11.6868 12.5710 0.9984 1.0221 1.0193 0.0248 -0.0226 0.0038
 + - cost(#6)=-0.038694  
 + -- Parameters = -10.5259 21.3153 -0.3243 -9.3431 14.0235 9.5673 1.0361 0.9973 1.0004 0.0062 -0.0100 0.0060
 + - cost(#7)=-0.038562  
 + -- Parameters = -19.0272 -27.3136 8.5022 -1.0809 -29.0576 24.5205 1.0012 0.9439 0.9934 -0.0038 0.0032 0.0220
 + - cost(#8)=-0.036932  
 + -- Parameters = -11.4538 -27.3031 1.5310 -24.3150 -30.0509 8.4777 1.0010 1.0027 1.0065 -0.0064 0.0265 -0.0003
 + - cost(#9)=-0.032421  
 + -- Parameters = -14.8543 -26.1793 11.6140 -2.1890 -30.8392 15.7534 1.0005 0.9923 0.9867 0.0036 -0.0030 0.0049
 + - cost(#10)=-0.030608  
 + -- Parameters = -20.9481 -35.4188 1.5617 -8.0955 -38.7264 31.5212 0.9857 0.9926 0.9953 0.0004 0.0102 -0.0053
 + - cost(#11)=-0.028628  
 + -- Parameters = -23.2501 -34.2460 1.3974 -8.0667 -37.1760 33.2425 0.9996 1.0144 0.9996 -0.0037 -0.0056 0.0082
 + - cost(#12)=-0.026287  
 + -- Parameters = 4.9231 -27.2679 4.8764 -15.4091 -32.1214 -27.6746 0.9923 0.9829 0.9787 0.0139 0.0009 -0.0067
 + - cost(#13)=-0.084838  
 + -- Parameters = -0.6490 -0.8347 -4.3116 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.448724 *
 + -- Parameters = -0.3391 -1.2407 -0.5619 0.1617 -2.9507 0.0281 1.0005 1.0169 0.9929 -0.0025 -0.0013 -0.0396
 + - cost(#2)=-0.448165  
 + -- Parameters = -0.3212 -1.2679 -0.5565 0.1219 -2.9198 -0.1089 0.9971 1.0181 0.9934 -0.0038 0.0012 -0.0384
 + - cost(#3)=-0.053578  
 + -- Parameters = -8.2593 -24.0333 7.3077 -6.8588 -32.0375 4.5645 1.0096 1.0524 0.9380 0.0121 0.0066 -0.0007
 + - cost(#4)=-0.048989  
 + -- Parameters = -5.2433 -23.7172 3.1103 -11.6956 -41.8502 1.4430 1.0071 0.9687 0.8561 0.0140 0.0382 -0.0068
 + - cost(#5)=-0.039696  
 + -- Parameters = -11.8119 19.9171 1.2529 -21.3398 11.8260 12.5287 1.0000 1.0240 1.0239 0.0263 -0.0220 0.0025
 + - cost(#6)=-0.039712  
 + -- Parameters = -10.1874 21.3290 -0.6441 -9.2710 13.9771 9.4033 1.0451 0.9940 0.9986 0.0066 -0.0103 0.0064
 + - cost(#7)=-0.039665  
 + -- Parameters = -18.8802 -27.6248 8.3430 -0.9828 -29.1802 24.7043 0.9991 0.9443 0.9872 -0.0048 0.0039 0.0236
 + - cost(#8)=-0.037898  
 + -- Parameters = -11.3681 -27.6314 1.4779 -24.4783 -30.1331 8.4894 1.0012 1.0100 1.0082 -0.0067 0.0265 -0.0007
 + - cost(#9)=-0.034912  
 + -- Parameters = -14.4763 -25.4014 11.2229 -1.1692 -31.1258 17.2679 1.0112 0.9934 0.9806 0.0040 -0.0020 0.0050
 + - cost(#10)=-0.031932  
 + -- Parameters = -20.6341 -35.3209 1.4367 -8.7155 -39.0916 30.8958 0.9777 0.9916 0.9948 0.0010 0.0086 -0.0059
 + - cost(#11)=-0.029527  
 + -- Parameters = -22.9177 -34.1039 1.3885 -8.2028 -37.3944 33.5965 0.9988 1.0138 0.9958 -0.0021 -0.0074 0.0084
 + - cost(#12)=-0.026965  
 + -- Parameters = 4.9462 -27.1895 4.7084 -15.3466 -32.5037 -27.6412 0.9950 0.9809 0.9819 0.0202 -0.0019 -0.0055
 + - cost(#13)=-0.444488  
 + -- Parameters = -0.2750 -1.1772 -0.3897 -0.0353 -2.4417 -0.1717 1.0005 1.0175 1.0023 -0.0107 0.0027 -0.0299
 + - case #1 is now the best
 + - Initial  cost = -0.448724
 + - Initial fine Parameters = -0.3391 -1.2407 -0.5619 0.1617 -2.9507 0.0281 1.0005 1.0169 0.9929 -0.0025 -0.0013 -0.0396
 + - Finalish cost = -0.449069 ; 245 funcs
 + - Final    cost = -0.449072 ; 122 funcs
 + Final fine fit Parameters:
       x-shift=-0.3300   y-shift=-1.2886   z-shift=-0.6024
       z-angle= 0.1416   x-angle=-3.2313   y-angle=-0.0398
       x-scale= 1.0002   y-scale= 1.0164   z-scale= 0.9902
     y/x-shear=-0.0034 z/x-shear=-0.0003 z/y-shear=-0.0450
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.3300 -1.2886 -0.6024 0.1416 -3.2313 -0.0398 1.0002 1.0164 0.9902 -0.0034 -0.0003 -0.0450
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 18.4
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 4.200019 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0060 -1.0128 0.0155 248.1472 -0.0005 0.0642 0.9928 66.6574 -1.0002 0.0025 -0.0007 198.3279
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 16.5 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3892.720100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 78.1133 46.3892   ITER = 8/137
78.1133

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 6s 150ms]
lev=0 0..171 0..213 0..166: [first cost=-0.70128] ... done [cost:-0.70128==>-0.78843]
lev=1 patch=129x161x125 [clock= 14m 38s 67ms]........:[cost=-0.82376]:........ done [cost:-0.78843==>-0.82801 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 22m 41s 840ms]......................... done [cost:-0.82801==>-0.89338 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 29m 28s 222ms].............. done [cost:-0.89338==>-0.95205 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 34m 28s 488ms]......... done [cost:-0.95205==>-0.98828 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 38m 17s 758ms]................ done [cost:-0.98828==>-1.08419 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 42m 3s 73ms]..................... done [cost:-1.08419==>-1.11850 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 45m 46s 173ms].................... done [cost:-1.11850==>-1.21914 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 49m 32s 742ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6704/tb6704.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.3 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb6704.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.200019 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6704.r01.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ Reading input dataset ./pb01.tb6704.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 23277 voxels
 + 3933 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.662  pitch=-0.147  yaw=-0.249  dS=-0.272  dL=-0.669  dP=-0.294
++ Mean: roll=-0.992  pitch=+0.192  yaw=+0.062  dS=+0.531  dL=-0.327  dP=+0.013
++ Max : roll=+0.160  pitch=+0.545  yaw=+0.355  dS=+1.278  dL=+0.041  dP=+0.204
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.39(0.39) 0.41(0.11) 0.45(0.05) 0.47(0.04) 0.52(0.06) 0.47(0.06) 0.45(0.09) 0.51(0.07) 0.51(0.03) 0.43(0.10) 0.38(0.07) 0.37(0.10) 0.33(0.07) 0.27(0.09) 0.25(0.02) 0.23(0.08) 0.20(0.08) 0.22(0.10) 0.24(0.05) 0.31(0.09) 0.38(0.09) 0.39(0.04) 0.48(0.10) 0.48(0.03) 0.60(0.13) 0.67(0.09) 0.67(0.14) 0.70(0.05) 0.76(0.08) 0.79(0.06) 0.86(0.08) 0.84(0.10) 0.90(0.12) 0.98(0.10) 1.11(0.14) 1.17(0.13) 1.25(0.12) 1.29(0.10) 1.31(0.06) 1.35(0.15) 1.36(0.10) 1.36(0.06) 1.40(0.07) 1.42(0.05) 1.42(0.05) 1.46(0.19) 1.41(0.20) 1.39(0.14) 1.48(0.13) 1.55(0.13) 1.75(0.22) 1.74(0.04) 1.77(0.04) 1.83(0.07) 1.83(0.21) 1.73(0.50) 1.73(0.29) 1.88(0.24) 1.97(0.09) 1.97(0.11) 2.00(0.10) 2.11(0.15) 2.14(0.09) 2.19(0.09) 2.20(0.06) 2.19(0.09) 2.27(0.14) 2.27(0.24) 2.24(0.21) 2.36(0.23) 2.38(0.12) 2.48(0.16) 2.53(0.23) 2.58(0.10) 2.66(0.15) 2.42(0.38) 2.26(0.49) 2.35(0.28) 2.29(0.24) 2.28(0.27) 2.35(0.16) 2.44(0.11) 2.42(0.10) 2.43(0.04) 2.46(0.04) 2.50(0.07) 2.51(0.09) 2.50(0.13) 2.52(0.06) 2.55(0.09) 2.56(0.03) 2.63(0.09) 2.60(0.05) 2.57(0.14) 2.62(0.06) 2.58(0.11) 2.52(0.11) 2.67(0.20) 2.94(0.47) 2.86(0.18) 2.72(0.33) 2.68(0.09) 2.74(0.12) 2.80(0.07) 2.87(0.08) 2.86(0.17) 2.78(0.13) 2.79(0.06) 2.77(0.10) 2.87(0.10) 2.89(0.02) 2.87(0.04) 2.89(0.07) 2.90(0.17) 2.68(0.25) 2.69(0.14) 2.83(0.16) 2.98(0.22) 3.02(0.24) 2.92(0.22) 2.98(0.41) 3.03(0.41) 2.90(0.36) 2.88(0.10) 2.83(0.51) 2.67(0.44) 2.86(0.28) 2.94(0.24) 2.74(0.28) 2.62(0.58) 2.69(0.12) 2.68(0.27) 2.75(0.25) 2.82(0.08) 2.67(0.29) 2.83(0.18) 2.92(0.10) 2.91(0.04) 2.95(0.08) 2.98(0.05) 2.88(0.17) 2.76(0.29) 2.48(0.29) 2.32(0.28) 2.34(0.12) 2.22(0.12) 2.14(0.11) 2.16(0.05) 2.01(0.26)
++ Max displacement in automask = 3.03 (mm) at sub-brick 122
++ Max delta displ  in automask = 0.58 (mm) at sub-brick 130
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb6704.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6704.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6704.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6704.r01.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ Source dataset: ./pb01.tb6704.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.3
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.200019 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb6704.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.200019 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6704.r02.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ Reading input dataset ./pb01.tb6704.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 23348 voxels
 + 4043 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.358  pitch=-0.498  yaw=-0.381  dS=-1.090  dL=-0.547  dP=-0.790
++ Mean: roll=-0.243  pitch=-0.259  yaw=-0.093  dS=-0.609  dL=-0.281  dP=-0.662
++ Max : roll=-0.150  pitch=+0.044  yaw=+0.034  dS=-0.337  dL=-0.105  dP=-0.561
++ Max displacements (mm) for each sub-brick:
 1.07(0.00) 1.16(0.13) 1.13(0.07) 1.08(0.17) 1.08(0.13) 1.14(0.09) 1.14(0.02) 1.11(0.05) 1.12(0.04) 1.10(0.04) 1.10(0.02) 1.08(0.05) 1.10(0.04) 1.10(0.02) 1.09(0.04) 1.12(0.04) 1.13(0.09) 1.12(0.03) 1.08(0.05) 1.07(0.01) 1.09(0.03) 1.08(0.04) 1.09(0.06) 1.13(0.05) 1.11(0.11) 1.08(0.06) 1.06(0.05) 1.05(0.05) 1.05(0.11) 1.04(0.08) 1.30(0.69) 1.40(0.17) 1.09(0.58) 1.19(0.22) 1.18(0.08) 1.14(0.06) 1.18(0.07) 1.21(0.05) 1.15(0.08) 1.15(0.02) 1.16(0.13) 1.18(0.08) 1.22(0.11) 1.18(0.09) 1.20(0.07) 1.20(0.06) 1.08(0.18) 1.14(0.24) 1.13(0.27) 1.19(0.11) 1.22(0.14) 1.25(0.16) 1.25(0.18) 1.22(0.07) 1.18(0.12) 1.20(0.09) 1.20(0.04) 1.19(0.05) 1.21(0.10) 1.24(0.08) 1.27(0.11) 1.24(0.06) 1.22(0.06) 1.24(0.04) 1.27(0.07) 1.24(0.03) 1.25(0.04) 1.29(0.06) 1.23(0.14) 1.38(0.73) 1.73(0.49) 1.27(0.90) 1.34(0.10) 1.26(0.10) 1.28(0.04) 1.24(0.08) 1.27(0.06) 1.34(0.12) 1.31(0.08) 1.29(0.09) 1.29(0.08) 1.30(0.06) 1.34(0.09) 1.32(0.07) 1.35(0.09) 1.36(0.05) 1.38(0.09) 1.40(0.07) 1.40(0.09) 1.40(0.10) 1.29(0.11) 1.33(0.20) 1.34(0.15) 1.34(0.18) 1.33(0.28) 1.35(0.14) 1.47(0.14) 1.45(0.05) 1.44(0.04) 1.35(0.09) 1.42(0.37) 1.26(0.29) 1.36(0.23) 1.47(0.20) 1.38(0.11) 1.34(0.08) 1.33(0.07) 1.41(0.09) 1.40(0.04) 1.41(0.07) 1.39(0.07) 1.37(0.04) 1.45(0.09) 1.45(0.04) 1.48(0.05) 1.46(0.04) 1.44(0.06) 1.51(0.10) 1.46(0.06) 1.50(0.04) 1.51(0.02) 1.42(0.11) 1.48(0.07) 1.49(0.04) 1.50(0.03) 1.48(0.08) 1.47(0.15) 1.55(0.15) 1.51(0.05) 1.50(0.03) 1.52(0.04) 1.49(0.08) 1.34(0.18) 1.34(0.08) 1.44(0.13) 1.45(0.04) 1.38(0.10) 1.45(0.09) 1.47(0.09) 1.48(0.08) 1.47(0.06) 1.55(0.11) 1.38(0.32) 1.47(0.23) 1.50(0.07) 1.44(0.15) 1.44(0.07) 1.37(0.18) 1.34(0.22) 1.40(0.24)
++ Max displacement in automask = 1.73 (mm) at sub-brick 70
++ Max delta displ  in automask = 0.90 (mm) at sub-brick 71
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb6704.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6704.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6704.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6704.r02.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ Source dataset: ./pb01.tb6704.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 18.3
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.200019 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.3
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb6704.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.200019 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6704.r03.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ Reading input dataset ./pb01.tb6704.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 23317 voxels
 + 4030 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.335  pitch=-0.325  yaw=-0.694  dS=-1.724  dL=-0.397  dP=-1.084
++ Mean: roll=-0.191  pitch=-0.046  yaw=-0.355  dS=-1.256  dL=-0.280  dP=-0.851
++ Max : roll=+0.009  pitch=+0.937  yaw=-0.023  dS=-0.823  dL=-0.124  dP=-0.668
++ Max displacements (mm) for each sub-brick:
 1.69(0.00) 1.78(0.15) 1.79(0.03) 1.80(0.03) 1.82(0.05) 1.90(0.08) 1.91(0.05) 1.90(0.06) 1.91(0.02) 1.94(0.03) 1.84(0.15) 1.84(0.08) 1.87(0.06) 1.92(0.32) 1.76(0.19) 1.74(0.09) 1.76(0.08) 1.77(0.03) 1.82(0.07) 1.77(0.14) 1.57(0.32) 1.57(0.03) 1.65(0.22) 1.79(0.17) 1.75(0.08) 1.69(0.10) 1.74(0.06) 1.74(0.04) 1.68(0.13) 1.71(0.05) 1.72(0.06) 1.69(0.06) 1.73(0.22) 1.90(0.28) 1.80(0.22) 1.77(0.10) 1.69(0.19) 1.71(0.10) 1.84(0.29) 1.68(0.27) 1.69(0.05) 1.68(0.04) 1.69(0.04) 1.65(0.10) 1.64(0.11) 1.72(0.28) 1.71(0.20) 1.69(0.09) 1.73(0.13) 1.73(0.07) 1.73(0.02) 1.70(0.09) 1.68(0.04) 1.71(0.08) 1.73(0.04) 1.71(0.09) 1.67(0.07) 1.66(0.07) 1.70(0.06) 1.74(0.05) 1.68(0.07) 1.67(0.04) 1.71(0.05) 1.69(0.04) 1.68(0.02) 1.66(0.21) 1.85(0.26) 1.89(0.09) 1.85(0.08) 1.77(0.19) 1.76(0.04) 1.75(0.07) 1.73(0.08) 1.74(0.03) 1.78(0.06) 1.79(0.02) 1.76(0.04) 1.76(0.05) 1.76(0.08) 1.75(0.06) 1.66(0.19) 1.71(0.13) 1.80(0.09) 1.76(0.09) 1.79(0.08) 1.78(0.06) 1.75(0.05) 1.83(0.11) 1.82(0.07) 1.81(0.07) 1.80(0.02) 1.81(0.07) 1.79(0.06) 1.82(0.05) 1.85(0.07) 1.82(0.06) 1.79(0.07) 1.82(0.08) 1.83(0.08) 1.83(0.11) 1.89(0.11) 1.83(0.20) 1.82(0.10) 1.83(0.09) 1.80(0.05) 1.81(0.06) 1.85(0.09) 1.90(0.14) 1.83(0.12) 1.89(0.15) 1.71(0.58) 1.97(0.88) 2.15(1.00) 2.01(0.43) 1.91(0.20) 1.93(0.09) 1.93(0.07) 1.91(0.07) 1.94(0.09) 1.97(0.05) 1.98(0.04) 1.96(0.04) 1.98(0.12) 2.01(0.07) 2.02(0.06) 2.01(0.08) 1.96(0.07) 2.06(0.16) 2.03(0.07) 2.06(0.08) 2.06(0.05) 2.10(0.16) 2.15(0.14) 2.09(0.23) 2.07(0.13) 1.91(0.20) 2.04(0.29) 2.09(0.07) 1.93(0.19) 1.95(0.16) 1.98(0.10) 2.01(0.12) 2.01(0.12) 2.06(0.26) 3.40(1.62) 2.52(1.04) 2.28(0.71) 2.42(0.35) 2.21(0.31) 2.23(0.11)
++ Max displacement in automask = 3.40 (mm) at sub-brick 144
++ Max delta displ  in automask = 1.62 (mm) at sub-brick 144
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb6704.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6704.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6704.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6704.r03.tshift+orig.BRIK is 4.200019 degrees from plumb.
++ Source dataset: ./pb01.tb6704.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.200019 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6704.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6704.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6704.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6704.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6704.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6704.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.200019 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb6704
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb6704+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb6704+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1085420 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 260775 voxels [61.2%] in weight mask
++ Number of points for matching = 122564
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.105576
   sp   = 0.35773
   mi   = -0.509449
   crM  = 0.0239984
   nmi  = 0.81998
   je   = 2.3205
   hel  = -0.104357
   crA  = 0.155171
   crU  = 0.164086
   lss  = 0.894424
   lpc  = 0.367765
   lpa  = 0.632235
   lpc+ = 0.479525
   ncd  = 0.981178
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.7
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb6704+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb6704+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 44.1 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6704.r01.blur pb02.tb6704.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6704.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb6704.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6704.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6704.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6704.r02.blur pb02.tb6704.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6704.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb6704.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6704.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6704.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6704.r03.blur pb02.tb6704.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6704.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb6704.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6704.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6704.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb6704.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6704.r01.blur+orig
++ Forming automask
 + Fixed clip level = 366.953156
 + Used gradual clip level = 305.337585 .. 412.717804
 + Number voxels above clip level = 39588
 + Clustering voxels ...
 + Largest cluster has 39417 voxels
 + Clustering voxels ...
 + Largest cluster has 39355 voxels
 + Filled    34 voxels in small holes; now have 39389 voxels
 + Filled     3 voxels in large holes; now have 39392 voxels
 + Clustering voxels ...
 + Largest cluster has 39391 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 386884 voxels
 + Mask now has 39391 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 380059 voxels
++ 46216 voxels in the mask [out of 426275: 10.84%]
++ first  19 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  24 y-planes are zero [from I]
++ last   19 y-planes are zero [from S]
++ first  10 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb6704.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6704.r02.blur+orig
++ Forming automask
 + Fixed clip level = 367.846283
 + Used gradual clip level = 306.714050 .. 414.574310
 + Number voxels above clip level = 39430
 + Clustering voxels ...
 + Largest cluster has 39260 voxels
 + Clustering voxels ...
 + Largest cluster has 39227 voxels
 + Filled    28 voxels in small holes; now have 39255 voxels
 + Filled     1 voxels in large holes; now have 39256 voxels
 + Clustering voxels ...
 + Largest cluster has 39256 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 387019 voxels
 + Mask now has 39256 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 380254 voxels
++ 46021 voxels in the mask [out of 426275: 10.80%]
++ first  19 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  24 y-planes are zero [from I]
++ last   19 y-planes are zero [from S]
++ first  10 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb6704.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6704.r03.blur+orig
++ Forming automask
 + Fixed clip level = 368.540955
 + Used gradual clip level = 308.043274 .. 415.342712
 + Number voxels above clip level = 39411
 + Clustering voxels ...
 + Largest cluster has 39244 voxels
 + Clustering voxels ...
 + Largest cluster has 39222 voxels
 + Filled    28 voxels in small holes; now have 39250 voxels
 + Clustering voxels ...
 + Largest cluster has 39250 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 387025 voxels
 + Mask now has 39250 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 380219 voxels
++ 46056 voxels in the mask [out of 426275: 10.80%]
++ first  19 x-planes are zero [from A]
++ last   11 x-planes are zero [from P]
++ first  24 y-planes are zero [from I]
++ last   19 y-planes are zero [from S]
++ first  10 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb6704
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 46311 survived, 379964 were zero
++ writing result full_mask.tb6704...
3dresample -master full_mask.tb6704+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb6704
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 42398 survived, 383877 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb6704...
3dABoverlap -no_automask full_mask.tb6704+orig mask_anat.tb6704+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb6704+orig.BRIK  B=./mask_anat.tb6704+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
46311        42398        48032        40677        5634         1721         12.1656      4.0592     0.8789     0.9822     0.9152
3ddot -dodice full_mask.tb6704+orig mask_anat.tb6704+orig
tee out.mask_ae_dice.txt
0.917088	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb6704
total number of censored TRs (simple form) = 28
1deval -a motion_tb6704_censor.1D -b outcount_tb6704_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb6704_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb6704.r01.blur+orig.HEAD pb03.tb6704.r02.blur+orig.HEAD pb03.tb6704.r03.blur+orig.HEAD -censor censor_tb6704_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb6704 -errts errts.tb6704 -bucket stats.tb6704
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb6704.r01.blur+orig.HEAD pb03.tb6704.r02.blur+orig.HEAD pb03.tb6704.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,394 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 39295 voxels (out of 426275 = 9.2%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 422 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,417 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb6704.r01.blur+orig.HEAD pb03.tb6704.r02.blur+orig.HEAD pb03.tb6704.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb6704_REML -Rvar stats.tb6704_REMLvar \
 -Rfitts fitts.tb6704_REML -Rerrts errts.tb6704_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (422x24):  4.7551  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (422x6):  1.03772  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (422x18):  4.54557  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (422x6):  3.20671  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (422x12):  1.07856  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.40123e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.53 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.221
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.239
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.256
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.275
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.294
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.313
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.338
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.358
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.378
++ Job #0: processing voxels 0 to 42626; elapsed time=7.380
++ voxel loop:0123456789.0123456789.0123456789.01++ Job #4 finished; elapsed time=31.881
234++ Job #2 finished; elapsed time=34.587
5++ Job #5 finished; elapsed time=35.574
++ Job #1 finished; elapsed time=35.621
++ Job #7 finished; elapsed time=35.639
++ Job #8 finished; elapsed time=35.652
6789.01234++ Job #3 finished; elapsed time=38.670
5++ Job #6 finished; elapsed time=38.715
6789.
++ Job #0 waiting for children to finish; elapsed time=39.603
++ Job #9 finished; elapsed time=39.645
++ Job #0 now finishing up; elapsed time=39.654
++ Smallest FDR q [0 Full_Fstat] = 2.14364e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 1.90672e-13
++ Smallest FDR q [3 uns1_Fstat] = 1.90687e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 3.4245e-11
++ Smallest FDR q [6 uns2_Fstat] = 3.42449e-11
++ Smallest FDR q [8 uns3#0_Tstat] = 2.5238e-12
++ Smallest FDR q [9 uns3_Fstat] = 2.524e-12
++ Smallest FDR q [11 str1#0_Tstat] = 1.70529e-13
++ Smallest FDR q [12 str1_Fstat] = 1.70498e-13
++ Smallest FDR q [14 str2#0_Tstat] = 3.62501e-12
++ Smallest FDR q [15 str2_Fstat] = 3.62466e-12
++ Smallest FDR q [17 str3#0_Tstat] = 1.99494e-12
++ Smallest FDR q [18 str3_Fstat] = 1.99514e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 4.93768e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 4.93942e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 7.34022e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 7.34091e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 4.0193e-08
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 4.0181e-08
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 1.78523e-06
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 1.78523e-06
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 3.16725e-09
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 3.16778e-09
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 3.00458e-08
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 3.00413e-08
++ Wrote bucket dataset into ./stats.tb6704+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb6704+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb6704+orig.BRIK
++ Program finished; elapsed time=68.476
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.730       0.795  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.725       0.788  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.710       0.778  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.489       0.567  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.484       0.561  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.475       0.550  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.418      -0.368  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb6704.r01.blur+orig.HEAD pb03.tb6704.r02.blur+orig.HEAD pb03.tb6704.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb6704_REML -Rvar stats.tb6704_REMLvar -Rfitts fitts.tb6704_REML -Rerrts errts.tb6704_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 39295 voxels (out of 426275 = 9.2%)
++ -----  matrix condition (422x24):  4.7551  ++ VERY GOOD ++
 + masked off 247228 voxels for being all zero; 179047 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 323 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=26.54
 + X matrix: 46.673% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=422 cols=24; 109*1 cases; total CPU=0.00 Elapsed=26.59
 +  average case bandwidth = 11.84
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=91.23
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=136.69
++ Output dataset ./stats.tb6704_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb6704_REML+orig.BRIK
++ Output dataset ./errts.tb6704_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb6704_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 6.29339e-08
++ Smallest FDR q [2 uns1#0_Tstat] = 3.56376e-08
++ Smallest FDR q [3 uns1_Fstat] = 3.56376e-08
[7m*+ WARNING:[0m Smallest FDR q [5 uns2#0_Tstat] = 0.184659 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [6 uns2_Fstat] = 0.184659 ==> few true single voxel detections
++ Smallest FDR q [8 uns3#0_Tstat] = 5.37536e-05
++ Smallest FDR q [9 uns3_Fstat] = 5.37537e-05
++ Smallest FDR q [11 str1#0_Tstat] = 3.1014e-11
++ Smallest FDR q [12 str1_Fstat] = 3.1014e-11
[7m*+ WARNING:[0m Smallest FDR q [14 str2#0_Tstat] = 0.328962 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [15 str2_Fstat] = 0.328961 ==> few true single voxel detections
++ Smallest FDR q [17 str3#0_Tstat] = 0.00159646
++ Smallest FDR q [18 str3_Fstat] = 0.00159646
++ Smallest FDR q [20 unstructured#0_Tstat] = 3.75506e-09
++ Smallest FDR q [21 unstructured_Fstat] = 3.75506e-09
++ Smallest FDR q [23 structured#0_Tstat] = 5.21509e-08
++ Smallest FDR q [24 structured_Fstat] = 5.2151e-08
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.273336 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.273336 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.458819 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.458819 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.00470002
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.00470003
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.970708 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.970708 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb6704_REML+orig
++ Output dataset ./stats.tb6704_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=158.26
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb6704 pb03.tb6704.r01.blur+orig.HEAD pb03.tb6704.r02.blur+orig.HEAD pb03.tb6704.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 15.7 s
3dTstat -mean -prefix rm.signal.all all_runs.tb6704+orig[0..54,57..75,78..97,100..119,122,123,126..128,131..178,183..217,222..408,413..442,447..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb6704_REML+orig[0..54,57..75,78..97,100..119,122,123,126..128,131..178,183..217,222..408,413..442,447..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb6704+orig -expr c*a/b -prefix TSNR.tb6704
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb6704_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb6704+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 46311 voxels survive the mask

*** failure while reading from brick file ./rm.errts.unit+orig.BRIK
*** desired 767295000 bytes but only got 322961408
*** Unix error message: No such file or directory
   THD_load_datablock
  3dmaskave main
** Command line was:
3dmaskave -quiet -mask full_mask.tb6704+orig rm.errts.unit+orig
[7m** FATAL ERROR:[0m Cannot read in input dataset BRIK!
** Program compile date = Jul 20 2017
