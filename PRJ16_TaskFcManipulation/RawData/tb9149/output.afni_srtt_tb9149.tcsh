echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb9149
endif
set output_dir = tb9149.srtt
if ( -d tb9149.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb9149.srtt
mkdir tb9149.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb9149.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb9149.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb9149.srtt/pb00.tb9149.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.1 s
3dTcat -prefix tb9149.srtt/pb00.tb9149.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.5 s
3dTcat -prefix tb9149.srtt/pb00.tb9149.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.6 s
set tr_counts = ( 150 150 150 )
cd tb9149.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9149.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9149.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9149.r01.tcat+orig.BRIK is 17.499992 degrees from plumb.
++ 23408 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9149.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9149.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9149.r02.tcat+orig.BRIK is 17.499992 degrees from plumb.
++ 23447 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9149.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9149.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9149.r03.tcat+orig.BRIK is 17.499992 degrees from plumb.
++ 23496 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb9149.r01.tshift -tpattern alt+z2 pb00.tb9149.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9149.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9149.r01.tcat+orig.BRIK is 17.499992 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb9149.r02.tshift -tpattern alt+z2 pb00.tb9149.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9149.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9149.r02.tcat+orig.BRIK is 17.499992 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb9149.r03.tshift -tpattern alt+z2 pb00.tb9149.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9149.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9149.r03.tcat+orig.BRIK is 17.499992 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb9149.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 17.499992 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 386.012207
 + Used gradual clip level = 345.017395 .. 435.492401
 + Number voxels above clip level = 24039
 + Clustering voxels ...
 + Largest cluster has 23752 voxels
 + Clustering voxels ...
 + Largest cluster has 23153 voxels
 + Filled   272 voxels in small holes; now have 23425 voxels
 + Clustering voxels ...
 + Largest cluster has 23425 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 107644 voxels
 + Mask now has 23428 voxels
++ 23428 voxels in the mask [out of 131072: 17.87%]
++ first  15 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   7 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 953.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/953.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 17.499992 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 17.499992 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1267083 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 23428 voxels [14.3%] in weight mask
++ Number of points for matching = 23428
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.102 28.853 21.658 (index)
 + source center of mass = 88.277 176.720 200.381 (index)
 + source-target CM = -0.680 0.653 -9.241 (xyz)
 + center of mass shifts = -0.680 0.653 -9.241
++ shift param auto-range: -70.2..68.8 -68.9..70.2 -59.3..40.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.679756 .. 9.320244
 + Range param#2 [y-shift] = -9.346680 .. 10.653320
 + Range param#3 [z-shift] = -19.241150 .. 0.758850
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.679756 .. 39.320244
 + Range param#2 [y-shift] = -39.346680 .. 40.653320
 + Range param#3 [z-shift] = -49.241150 .. 30.758850
 + 12 free parameters
++ Normalized convergence radius = 0.000479
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1267083 [out of 18248384] voxels
 + base mask has 32838 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=59 usiz=192
 + - copying weight image
 + - using 23428 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 19982 total points stored in 189 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=0.00398847] **[#2=-0.0203541] *o+...o-o.*[#28=-0.0318521] *+oo*[#60=-0.0571569] *++++o-+o.+---+$o
 + - best 45 costs found:
    0 v=-0.057157: -14.01 -12.68   4.09 -15.00 -15.00 -15.00  [grid]
    1 v=-0.055932: -16.90 -13.46  25.89 -15.74 -34.09  -7.78  [rand]
    2 v=-0.055536: -14.01 -12.68  17.43 -15.00 -30.00  15.00  [grid]
    3 v=-0.050646:  12.65 -26.01  17.43  15.00 -30.00 -30.00  [grid]
    4 v=-0.046942: -14.01 -12.68  17.43 -15.00 -30.00 -15.00  [grid]
    5 v=-0.045263: -14.01 -26.01  17.43 -15.00 -30.00  30.00  [grid]
    6 v=-0.044176: -14.01 -12.68  17.43 -15.00 -30.00  30.00  [grid]
    7 v=-0.044167: -15.62 -23.44  20.68 -19.13 -33.53  22.48  [rand]
    8 v=-0.043971:  12.65 -12.68  17.43  30.00 -15.00 -30.00  [grid]
    9 v=-0.043874: -14.01 -12.68  17.43 -15.00 -15.00 -15.00  [grid]
   10 v=-0.042935: -14.01 -12.68   4.09 -15.00 -30.00 -15.00  [grid]
   11 v=-0.041967: -14.01 -12.68  17.43 -30.00 -30.00  30.00  [grid]
   12 v=-0.040174: -14.01 -26.01  17.43 -30.00 -30.00  30.00  [grid]
   13 v=-0.040086: -15.97 -20.23  21.15 -14.56 -29.40  15.92  [rand]
   14 v=-0.039611: -16.82  10.12  15.11 -20.99 -15.73  16.09  [rand]
   15 v=-0.039321: -16.90 -13.46  25.89 -15.74 -34.09   7.78  [rand]
   16 v=-0.038014:  12.65 -26.01  17.43  30.00 -30.00 -30.00  [grid]
   17 v=-0.036720:  12.65 -12.68  17.43  15.00 -30.00 -15.00  [grid]
   18 v=-0.035966:  14.26 -23.44  20.68  19.13 -33.53 -22.48  [rand]
   19 v=-0.035500:   4.28 -10.53  13.99  35.24 -13.60 -30.23  [rand]
   20 v=-0.035457:   5.31  -2.75  15.29  29.81  -4.26 -23.54  [rand]
   21 v=-0.035059:  15.54 -13.46  25.89  15.74 -34.09   7.78  [rand]
   22 v=-0.034757:  12.65 -26.01   4.09  30.00 -15.00 -30.00  [grid]
   23 v=-0.034082: -14.01 -12.68  17.43 -15.00 -15.00  30.00  [grid]
   24 v=-0.034079: -14.01 -26.01   4.09 -30.00 -30.00 -15.00  [grid]
   25 v=-0.033695: -19.42 -35.75  23.81 -24.90  -4.74  17.23  [rand]
   26 v=-0.033151:   5.14 -13.54  20.39  38.21 -15.41 -13.51  [rand]
   27 v=-0.032925: -15.62 -23.44  20.68 -19.13 -33.53 -22.48  [rand]
   28 v=-0.032562:  -6.67   4.06  15.29 -29.81   4.26  23.54  [rand]
   29 v=-0.031852: -14.01 -12.68   4.09 -15.00 -15.00  15.00  [grid]
   30 v=-0.031813: -14.01 -12.68  17.43 -30.00 -15.00  15.00  [grid]
   31 v=-0.031759: -14.01 -12.68  17.43 -30.00 -15.00  30.00  [grid]
   32 v=-0.031712: -14.01 -12.68  17.43 -15.00 -15.00  15.00  [grid]
   33 v=-0.031175: -14.01 -26.01  17.43 -15.00 -30.00 -15.00  [grid]
   34 v=-0.031098: -14.01  13.99   4.09 -30.00  15.00  30.00  [grid]
   35 v=-0.031022:   6.37 -19.16  26.51  25.15 -27.05 -27.90  [rand]
   36 v=-0.030835: -14.01 -12.68  17.43 -30.00 -30.00  15.00  [grid]
   37 v=-0.030513: -14.01  13.99  17.43 -15.00 -15.00  15.00  [grid]
   38 v=-0.030390:  -9.32 -19.78   8.23 -25.20 -18.50 -13.54  [rand]
   39 v=-0.030382: -14.01 -12.68   4.09 -15.00 -15.00 -30.00  [grid]
   40 v=-0.030364:  12.65 -12.68  17.43  30.00 -15.00 -15.00  [grid]
   41 v=-0.030182:  12.65 -12.68  17.43  30.00  15.00 -30.00  [grid]
   42 v=-0.030159:   9.64 -28.16   5.77  30.67 -17.79 -20.52  [rand]
   43 v=-0.030028:  14.26 -23.44  20.68  19.13 -33.53  22.48  [rand]
   44 v=-0.029836:  12.65 -26.01  17.43  30.00 -30.00  15.00  [grid]
*[#8007=-0.0679496] *[#8010=-0.0688691] *[#8012=-0.0746079] *[#8014=-0.0808343] *[#8015=-0.0899882] *[#8017=-0.0966945] *[#8024=-0.0967983] *[#8027=-0.0969776] *[#8028=-0.098045] *[#8029=-0.0999214] *[#8030=-0.100605] *[#8031=-0.101846] *[#8034=-0.104813] *[#8035=-0.106802] *[#8036=-0.107422] *[#8038=-0.107793] *[#8039=-0.108659] *[#8040=-0.109571] *[#8041=-0.110681] *[#8043=-0.111058] *[#8046=-0.111329] *[#8047=-0.111922] *[#8048=-0.112506] *[#8049=-0.113004] *[#8054=-0.11319] *[#8056=-0.11352] *[#8058=-0.113644] *[#8059=-0.113742]  + - costs of the above after a little optimization:
  * 0 v=-0.113742:  -7.17 -11.42   5.49  -6.96 -19.43  -2.00  [grid]
    1 v=-0.073595: -15.25 -14.61  26.71 -16.27 -37.12  -4.23  [rand]
    2 v=-0.098005: -11.31 -13.49  14.86  -9.20 -32.03   9.68  [grid]
    3 v=-0.064503:  10.52 -23.35  15.96  20.10 -34.37 -32.30  [grid]
    4 v=-0.083588:  -8.42 -12.76  19.17 -12.54 -30.51 -11.57  [grid]
    5 v=-0.066393: -14.49 -19.77  21.22 -13.23 -33.17  21.92  [grid]
    6 v=-0.062016: -16.10 -13.53  20.55  -7.79 -31.96  31.97  [grid]
    7 v=-0.067844: -14.44 -19.93  21.12 -12.52 -35.35  18.08  [rand]
    8 v=-0.051621:   9.08 -12.65  16.68  28.97 -14.56 -29.75  [grid]
    9 v=-0.059120: -11.43  -8.65  18.16 -13.77 -14.93 -16.26  [grid]
   10 v=-0.073501: -11.73 -14.15  14.02 -12.30 -26.36  -9.26  [grid]
   11 v=-0.051495: -14.56 -12.91  20.70 -29.93 -30.20  29.60  [grid]
   12 v=-0.055626: -15.32 -26.61  16.87 -26.11 -38.92  37.55  [grid]
   13 v=-0.079281: -13.87 -15.83  21.49  -8.20 -38.14  21.21  [rand]
   14 v=-0.056948: -15.06   9.22  13.43 -16.01 -14.32  15.12  [rand]
   15 v=-0.082789: -12.77 -12.29  24.42  -8.60 -36.31   8.22  [rand]
   16 v=-0.049609:  13.09 -22.74  14.78  26.27 -27.54 -35.54  [grid]
   17 v=-0.062338:  11.15 -14.02  15.44   8.84 -31.95 -12.10  [grid]
   18 v=-0.055914:  12.70 -23.12  16.88  16.19 -33.22 -28.51  [rand]
   19 v=-0.055303:   9.38 -12.68  13.26  31.89 -11.46 -29.45  [rand]
   20 v=-0.058383:   8.22  -9.45  13.39  30.02  -7.07 -24.47  [rand]
   21 v=-0.045256:  13.85 -14.93  25.72  13.07 -31.33   5.12  [rand]
   22 v=-0.057496:  13.70 -17.69   9.83  35.43 -14.64 -34.66  [grid]
   23 v=-0.044549: -11.04 -12.08  17.64 -15.38 -16.13  29.62  [grid]
   24 v=-0.054325: -13.65 -25.73   7.92 -30.21 -30.80 -14.75  [grid]
   25 v=-0.039486: -19.20 -30.84  25.37 -24.86  -3.45  17.41  [rand]
   26 v=-0.041705:   7.96 -11.36  17.63  36.89 -16.59 -14.74  [rand]
   27 v=-0.080823: -10.53 -16.77  14.92 -15.20 -35.55 -16.89  [rand]
   28 v=-0.044646:  -8.63   3.30  13.12 -31.10   3.81  28.65  [rand]
   29 v=-0.075750: -10.55  -4.33   9.84  -8.89 -18.07  14.60  [grid]
   30 v=-0.056034: -16.33 -16.57  18.82 -25.74 -16.85  24.52  [grid]
   31 v=-0.060154: -15.70 -17.20  20.81 -22.28 -19.91  28.13  [grid]
   32 v=-0.051151: -11.85  -9.66  21.83 -19.54 -10.75  18.63  [grid]
   33 v=-0.076823: -12.24 -17.62  15.79 -17.24 -35.85 -15.17  [grid]
   34 v=-0.054831:  -8.32  11.82   4.26 -29.08  14.19  31.32  [grid]
   35 v=-0.059703:  10.23 -21.48  18.30  24.81 -35.17 -31.07  [rand]
   36 v=-0.080903: -15.20 -14.89  13.53 -13.24 -32.62  12.55  [grid]
   37 v=-0.053435: -12.26  10.46  15.98 -14.65 -15.49  13.78  [grid]
   38 v=-0.037227:  -9.60 -16.07   8.23 -24.55 -18.61 -13.88  [rand]
   39 v=-0.047198: -11.60 -11.42   9.75 -14.56 -15.07 -29.15  [grid]
   40 v=-0.054620:  10.63 -14.61  15.59  29.67  -9.87 -18.33  [grid]
   41 v=-0.041654:  13.10  -9.19  14.66  32.33  13.98 -27.18  [grid]
   42 v=-0.038098:  10.19 -27.08   4.38  27.90 -19.54 -23.77  [rand]
   43 v=-0.053412:  11.89 -21.30  18.99  16.33 -36.48  16.09  [rand]
   44 v=-0.042796:  12.59 -22.96  16.45  28.17 -33.22  11.46  [grid]
 + - save # 0 for twobest
 + - save # 2 for twobest
 + - save # 4 for twobest
 + - save #15 for twobest
 + - skip #36 for twobest: too close to set # 2
 + - save #27 for twobest
 + - save #13 for twobest
 + - skip #33 for twobest: too close to set #27
 + - save #29 for twobest
 + - save # 1 for twobest
 + - save #10 for twobest
 + - save # 7 for twobest
 + - skip # 5 for twobest: too close to set # 7
 + - save # 3 for twobest
 + - save #17 for twobest
 + - save # 6 for twobest
 + - save #31 for twobest
 + - save #35 for twobest
 + - save # 9 for twobest
 + - save #20 for twobest
 + - save #22 for twobest
 + - save #14 for twobest
 + - skip #30 for twobest: too close to set #31
 + - skip #18 for twobest: too close to set # 3
 + - save #12 for twobest
 + - save #19 for twobest
 + - save #34 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=59 usiz=192
 + - retaining old weight image
 + - using 23428 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 19903 total points stored in 201 'RHDD(13.7332)' bloks
 + - param set #1 has cost=-0.092981
 + -- Parameters = -6.2600 -11.3400 4.9930 -6.5121 -19.4486 -1.4356 0.9987 1.0169 1.0003 0.0001 0.0002 0.0002
 + - param set #2 has cost=-0.075201
 + -- Parameters = -11.5685 -12.4554 15.2098 -10.3111 -30.3664 6.2725 1.0069 1.0183 0.9813 -0.0004 0.0056 0.0023
 + - param set #3 has cost=-0.073733
 + -- Parameters = -8.1180 -14.2265 17.8282 -11.3355 -30.2000 -3.7772 0.9938 1.0016 1.0022 -0.0013 0.0059 -0.0013
 + - param set #4 has cost=-0.065991
 + -- Parameters = -12.4365 -11.6587 24.3944 -8.3074 -36.0576 7.8198 1.0012 1.0143 1.0004 0.0002 0.0010 0.0011
 + - param set #5 has cost=-0.072634
 + -- Parameters = -9.7015 -15.5880 12.8361 -13.5395 -34.0508 -11.3274 0.9914 1.0076 0.9981 -0.0047 -0.0036 0.0007
 + - param set #6 has cost=-0.058446
 + -- Parameters = -13.6173 -16.1214 19.8652 -6.5115 -37.4387 21.7202 0.9959 0.9994 0.9992 -0.0044 0.0016 0.0002
*[#10409=-0.114167] 
 + - param set #7 has cost=-0.114167
 + -- Parameters = -4.7101 -2.5282 7.0969 -4.4822 -12.7800 3.1506 1.0025 1.0060 1.0462 -0.0004 0.0227 0.0265
 + - param set #8 has cost=-0.053339
 + -- Parameters = -14.5139 -14.6154 26.4306 -16.0112 -36.1930 -3.8234 1.0165 0.9976 0.9975 -0.0012 -0.0016 -0.0014
 + - param set #9 has cost=-0.072499
 + -- Parameters = -8.8636 -12.9888 18.0428 -11.0996 -30.8723 -4.7402 0.9978 1.0158 0.9992 -0.0038 -0.0031 -0.0048
 + - param set #10 has cost=-0.055791
 + -- Parameters = -13.1189 -18.8523 20.2376 -9.4849 -40.0600 15.2757 1.0216 0.9855 0.9895 0.0086 -0.0036 0.0309
 + - param set #11 has cost=-0.049762
 + -- Parameters = 10.5795 -23.8447 16.6889 19.5697 -32.2424 -31.8141 0.9768 1.0183 1.0037 0.0017 0.0054 -0.0017
*[#10735=-0.193192] *[#10739=-0.23676] *[#10740=-0.243479] *[#10741=-0.248703] *[#10742=-0.263345] *[#10756=-0.307755] *[#10757=-0.309299] *[#10758=-0.336994] *[#10762=-0.338018] *[#10764=-0.341092] *[#10767=-0.34211] *[#10769=-0.343792] *[#10770=-0.345291] *[#10773=-0.34616] *[#10774=-0.348854] *[#10775=-0.350346] *[#10776=-0.357962] *[#10780=-0.358991] *[#10781=-0.36144] *[#10782=-0.36211] *[#10783=-0.364874] *[#10785=-0.368115] *[#10787=-0.369031] *[#10788=-0.371802] *[#10789=-0.372429] *[#10790=-0.373172] *[#10791=-0.374742] *[#10792=-0.375663] *[#10794=-0.375913] *[#10795=-0.378814] *[#10798=-0.379946] *[#10799=-0.380173] *[#10801=-0.380877] *[#10804=-0.381666] *[#10805=-0.384102] *[#10806=-0.38459] *[#10807=-0.385921] *[#10808=-0.386151] *[#10810=-0.387726] *[#10813=-0.389765] *[#10814=-0.39203] 
 + - param set #12 has cost=-0.392030
 + -- Parameters = 0.3927 -0.6327 -1.7071 0.8206 -2.4839 -0.3583 1.0039 1.0089 0.9991 -0.0002 -0.0011 0.0234
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.128 
 + --- dist(#3,#1) = 0.188 
 + --- dist(#4,#1) = 0.31 
 + --- dist(#5,#1) = 0.308 
 + --- dist(#6,#1) = 0.351 
 + --- dist(#7,#1) = 0.315 
 + --- dist(#8,#1) = 0.373 
 + --- dist(#9,#1) = 0.388 
 + --- dist(#10,#1) = 0.418 
 + --- dist(#11,#1) = 0.375 
 + --- dist(#12,#1) = 0.35 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=59 usiz=192
 + - retaining old weight image
 + - using 23428 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 20389 total points stored in 213 'RHDD(13.5933)' bloks
*[#10818=-0.393005] *[#10826=-0.405731] *[#10837=-0.407136] *[#10841=-0.408371] *[#10842=-0.409659] *[#10845=-0.409992] *[#10853=-0.41008] *[#10854=-0.410411] *[#10855=-0.412677] *[#10858=-0.412806] *[#10859=-0.412839] *[#10861=-0.413112] *[#10864=-0.413199] *[#10865=-0.413215] *[#10866=-0.413268] *[#10868=-0.413495] *[#10869=-0.413669] *[#10870=-0.413735] *[#10872=-0.413781] *[#10873=-0.41389] *[#10876=-0.413991] *[#10877=-0.414152] *[#10878=-0.414174] *[#10882=-0.414269] *[#10885=-0.414312] *[#10886=-0.414718] *[#10889=-0.414789] *[#10890=-0.414849] *[#10895=-0.414962] *[#10902=-0.415056] *[#10905=-0.41509] 
 + - param set #1 has cost=-0.415090
 + -- Parameters = 0.2408 -0.3415 -1.5861 0.6125 -2.5590 -0.3293 1.0002 1.0284 0.9891 0.0010 0.0025 0.0220
 + - param set #2 has cost=-0.129866
 + -- Parameters = -3.2654 -2.1828 1.9179 -3.0175 -9.0823 0.1894 1.0194 1.0183 1.0094 0.0396 0.0137 -0.0041
 + - param set #3 has cost=-0.079102
 + -- Parameters = -6.2560 -10.6130 5.0752 -6.6456 -19.9101 -1.7992 1.0128 1.0231 1.0028 0.0008 0.0022 0.0001
 + - param set #4 has cost=-0.060829
 + -- Parameters = -11.6521 -11.1050 13.8200 -12.0733 -29.1967 5.8316 1.0078 1.0306 0.9533 0.0005 0.0118 0.0194
 + - param set #5 has cost=-0.053970
 + -- Parameters = -8.5484 -13.9670 17.7639 -11.0175 -30.2475 -4.1356 0.9874 1.0003 0.9980 0.0109 0.0055 -0.0002
 + - param set #6 has cost=-0.066239
 + -- Parameters = -9.5146 -16.3108 12.3312 -13.8391 -34.8777 -11.0338 0.9816 1.0062 0.9844 -0.0048 -0.0033 -0.0005
 + - param set #7 has cost=-0.055914
 + -- Parameters = -8.1300 -13.1001 17.8895 -10.0036 -32.2865 -3.8492 0.9938 1.0188 0.9846 -0.0053 -0.0036 -0.0090
 + - param set #8 has cost=-0.052383
 + -- Parameters = -11.9690 -11.5256 24.4964 -7.7489 -36.0344 8.1289 0.9988 1.0183 1.0022 -0.0019 0.0084 0.0003
 + - param set #9 has cost=-0.046210
 + -- Parameters = -13.3285 -16.3846 19.9562 -6.3672 -37.4396 21.9502 0.9914 0.9954 0.9967 -0.0046 0.0079 -0.0001
 + - param set #10 has cost=-0.047479
 + -- Parameters = -12.9029 -18.8970 19.9157 -9.1589 -39.6824 15.1025 1.0158 0.9933 0.9924 0.0095 0.0002 0.0378
 + - param set #11 has cost=-0.040961
 + -- Parameters = -15.0136 -14.8581 26.0604 -15.5485 -35.6872 -3.6073 1.0153 1.0098 0.9944 0.0004 -0.0044 -0.0008
 + - param set #12 has cost=-0.037469
 + -- Parameters = 10.6007 -23.4691 17.1084 19.5295 -32.6913 -31.8194 0.9738 1.0357 1.0037 0.0006 0.0049 -0.0018
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.174 
 + --- dist(#3,#1) = 0.193 
 + --- dist(#4,#1) = 0.359 
 + --- dist(#5,#1) = 0.296 
 + --- dist(#6,#1) = 0.33 
 + --- dist(#7,#1) = 0.308 
 + --- dist(#8,#1) = 0.372 
 + --- dist(#9,#1) = 0.412 
 + --- dist(#10,#1) = 0.388 
 + --- dist(#11,#1) = 0.368 
 + --- dist(#12,#1) = 0.35 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=59 usiz=192
 + - retaining old weight image
 + - using 23428 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 20658 total points stored in 223 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.396489
 + -- Parameters = 0.4172 0.1392 -1.4279 0.8263 -3.1939 -0.3237 1.0021 1.0295 0.9856 0.0097 0.0050 0.0124
 + - param set #2 has cost=-0.333295
 + -- Parameters = 1.1545 2.5247 -0.7293 2.1359 -6.4514 -0.0182 1.0022 1.0457 0.9604 0.0694 0.0081 -0.0419
 + - param set #3 has cost=-0.067121
 + -- Parameters = -5.8110 -9.3160 5.0335 -6.4070 -21.2445 -0.8413 1.0158 1.0426 1.0079 -0.0085 -0.0071 -0.0226
 + - param set #4 has cost=-0.056408
 + -- Parameters = -9.0090 -16.8556 11.7463 -13.7471 -33.2812 -10.4570 0.9774 1.0067 0.9712 -0.0103 0.0028 -0.0053
 + - param set #5 has cost=-0.050568
 + -- Parameters = -11.8654 -11.2842 13.9215 -12.4097 -29.2590 5.9855 1.0160 1.0309 0.9470 -0.0017 0.0147 0.0196
 + - param set #6 has cost=-0.044861
 + -- Parameters = -8.1037 -13.1386 18.0589 -9.9479 -32.2604 -3.7661 0.9939 1.0191 0.9843 -0.0004 -0.0037 -0.0089
 + - param set #7 has cost=-0.047165
 + -- Parameters = -7.8499 -14.4388 18.6547 -9.9951 -31.9261 -3.2925 0.9866 1.0007 0.9708 0.0243 0.0129 -0.0127
 + - param set #8 has cost=-0.042591
 + -- Parameters = -11.7141 -12.1484 24.2535 -7.0895 -35.7911 8.3667 0.9974 1.0129 1.0047 -0.0033 0.0100 -0.0015
 + - param set #9 has cost=-0.035735
 + -- Parameters = -13.1698 -18.8886 19.9432 -9.3169 -39.7436 15.0784 1.0080 0.9937 0.9899 0.0089 -0.0001 0.0374
 + - param set #10 has cost=-0.035256
 + -- Parameters = -13.5161 -16.2812 20.4274 -6.5111 -37.4782 22.2137 0.9920 0.9955 0.9941 0.0001 0.0083 0.0028
 + - param set #11 has cost=-0.029867
 + -- Parameters = -15.0836 -14.6374 25.8352 -15.3320 -34.6197 -4.0275 1.0112 1.0076 0.9933 -0.0005 -0.0075 0.0072
 + - param set #12 has cost=-0.034168
 + -- Parameters = 10.7127 -22.1681 16.6607 20.2259 -32.6528 -31.5445 0.9672 1.0357 1.0010 0.0002 0.0001 -0.0030
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.268 
 + --- dist(#3,#1) = 0.201 
 + --- dist(#4,#1) = 0.334 
 + --- dist(#5,#1) = 0.29 
 + --- dist(#6,#1) = 0.319 
 + --- dist(#7,#1) = 0.323 
 + --- dist(#8,#1) = 0.362 
 + --- dist(#9,#1) = 0.406 
 + --- dist(#10,#1) = 0.381 
 + --- dist(#11,#1) = 0.347 
 + --- dist(#12,#1) = 0.349 
 + - Total coarse refinement net CPU time = 0.0 s; 3217 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=59 usiz=192
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 20624 total points stored in 223 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.376107 *
 + -- Parameters = 0.4172 0.1392 -1.4279 0.8263 -3.1939 -0.3237 1.0021 1.0295 0.9856 0.0097 0.0050 0.0124
 + - cost(#2)=-0.314575  
 + -- Parameters = 1.1545 2.5247 -0.7293 2.1359 -6.4514 -0.0182 1.0022 1.0457 0.9604 0.0694 0.0081 -0.0419
 + - cost(#3)=-0.063685  
 + -- Parameters = -5.8110 -9.3160 5.0335 -6.4070 -21.2445 -0.8413 1.0158 1.0426 1.0079 -0.0085 -0.0071 -0.0226
 + - cost(#4)=-0.052742  
 + -- Parameters = -9.0090 -16.8556 11.7463 -13.7471 -33.2812 -10.4570 0.9774 1.0067 0.9712 -0.0103 0.0028 -0.0053
 + - cost(#5)=-0.044309  
 + -- Parameters = -11.8654 -11.2842 13.9215 -12.4097 -29.2590 5.9855 1.0160 1.0309 0.9470 -0.0017 0.0147 0.0196
 + - cost(#6)=-0.042599  
 + -- Parameters = -7.8499 -14.4388 18.6547 -9.9951 -31.9261 -3.2925 0.9866 1.0007 0.9708 0.0243 0.0129 -0.0127
 + - cost(#7)=-0.038529  
 + -- Parameters = -8.1037 -13.1386 18.0589 -9.9479 -32.2604 -3.7661 0.9939 1.0191 0.9843 -0.0004 -0.0037 -0.0089
 + - cost(#8)=-0.036473  
 + -- Parameters = -11.7141 -12.1484 24.2535 -7.0895 -35.7911 8.3667 0.9974 1.0129 1.0047 -0.0033 0.0100 -0.0015
 + - cost(#9)=-0.030026  
 + -- Parameters = -13.1698 -18.8886 19.9432 -9.3169 -39.7436 15.0784 1.0080 0.9937 0.9899 0.0089 -0.0001 0.0374
 + - cost(#10)=-0.032806  
 + -- Parameters = -13.5161 -16.2812 20.4274 -6.5111 -37.4782 22.2137 0.9920 0.9955 0.9941 0.0001 0.0083 0.0028
 + - cost(#11)=-0.033237  
 + -- Parameters = 10.7127 -22.1681 16.6607 20.2259 -32.6528 -31.5445 0.9672 1.0357 1.0010 0.0002 0.0001 -0.0030
 + - cost(#12)=-0.024550  
 + -- Parameters = -15.0836 -14.6374 25.8352 -15.3320 -34.6197 -4.0275 1.0112 1.0076 0.9933 -0.0005 -0.0075 0.0072
 + - cost(#13)=-0.001642  
 + -- Parameters = -0.6798 0.6533 -9.2411 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.378030 *
 + -- Parameters = 0.3506 0.2600 -1.4334 0.8151 -3.5319 -0.3524 1.0007 1.0279 0.9870 0.0104 0.0058 0.0060
 + - cost(#2)=-0.351640  
 + -- Parameters = 1.2696 1.8568 -0.8484 1.6152 -5.8889 0.6158 1.0126 1.0373 0.9630 0.0349 -0.0113 -0.0375
 + - cost(#3)=-0.064920  
 + -- Parameters = -5.4306 -9.0089 5.2053 -6.0000 -21.5051 -0.5283 1.0195 1.0487 0.9999 -0.0108 -0.0061 -0.0223
 + - cost(#4)=-0.054125  
 + -- Parameters = -8.4596 -16.9018 11.8549 -13.2647 -33.5950 -9.9647 0.9783 1.0088 0.9653 -0.0107 0.0040 -0.0037
 + - cost(#5)=-0.045008  
 + -- Parameters = -11.8913 -11.0701 13.9188 -12.4179 -29.3857 5.7356 1.0203 1.0315 0.9449 -0.0006 0.0181 0.0175
 + - cost(#6)=-0.043495  
 + -- Parameters = -7.6962 -14.8086 18.7426 -9.9563 -32.1187 -3.1981 0.9854 1.0047 0.9681 0.0265 0.0103 -0.0096
 + - cost(#7)=-0.039967  
 + -- Parameters = -7.7236 -13.4118 18.0632 -9.8343 -32.2018 -3.0607 0.9843 1.0165 0.9805 0.0003 -0.0052 -0.0101
 + - cost(#8)=-0.037178  
 + -- Parameters = -11.5989 -12.3341 23.8614 -7.1429 -35.4563 8.8051 0.9984 1.0115 1.0026 -0.0076 0.0107 -0.0006
 + - cost(#9)=-0.031184  
 + -- Parameters = -13.1836 -18.5182 20.1270 -9.3453 -39.8224 15.2145 1.0003 0.9961 0.9894 0.0074 -0.0006 0.0379
 + - cost(#10)=-0.033672  
 + -- Parameters = -13.1102 -16.4235 20.6877 -6.1951 -37.2611 22.2989 0.9941 0.9935 0.9899 0.0031 0.0093 0.0119
 + - cost(#11)=-0.033839  
 + -- Parameters = 10.7267 -22.1382 16.5475 20.2439 -32.6347 -31.4369 0.9649 1.0355 0.9950 0.0008 0.0007 -0.0008
 + - cost(#12)=-0.025624  
 + -- Parameters = -14.8803 -14.6171 25.4949 -15.5738 -34.6021 -4.5108 1.0112 1.0086 0.9940 -0.0019 -0.0133 0.0060
 + - cost(#13)=-0.373803  
 + -- Parameters = 0.3772 0.1856 -1.7789 0.6068 -3.5498 0.0278 1.0024 1.0270 0.9946 0.0008 -0.0086 0.0013
 + - case #1 is now the best
 + - Initial  cost = -0.378030
 + - Initial fine Parameters = 0.3506 0.2600 -1.4334 0.8151 -3.5319 -0.3524 1.0007 1.0279 0.9870 0.0104 0.0058 0.0060
 + - Finalish cost = -0.380062 ; 306 funcs
 + - Final    cost = -0.380180 ; 266 funcs
 + Final fine fit Parameters:
       x-shift= 0.2487   y-shift= 0.4718   z-shift=-1.5457
       z-angle= 0.7506   x-angle=-3.9577   y-angle=-0.6006
       x-scale= 1.0031   y-scale= 1.0296   z-scale= 0.9908
     y/x-shear= 0.0079 z/x-shear= 0.0138 z/y-shear=-0.0038
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.2487 0.4718 -1.5457 0.7506 -3.9577 -0.6006 1.0031 1.0296 0.9908 0.0079 0.0138 -0.0038
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.2
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 17.499992 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0044 -0.9990 0.2296 239.5225 0.0042 0.2473 0.9644 72.2589 -1.0029 0.0139 -0.0105 197.2027
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.4 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2426.620100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 96.6704 47.4157   ITER = 14/137
96.6704

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 831ms]
lev=0 0..171 0..213 0..166: [first cost=-0.67875] ... done [cost:-0.67875==>-0.73771]
lev=1 patch=129x161x125 [clock= 14m 37s 827ms]........:[cost=-0.76739]:........ done [cost:-0.73771==>-0.77129 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 22m 27s 202ms]......................... done [cost:-0.77129==>-0.83689 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 28m 50s 602ms]................ done [cost:-0.83689==>-0.89015 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 33m 24s 862ms]................ done [cost:-0.89015==>-0.94371 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 37m 14s 617ms]................ done [cost:-0.94371==>-1.01546 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 40m 47s 224ms]...................... done [cost:-1.01546==>-1.04321 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 44m 14s 634ms].............................. done [cost:-1.04321==>-1.12877 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 47m 55s 350ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9149/tb9149.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.2 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb9149.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 17.499992 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9149.r01.tshift+orig.BRIK is 17.499992 degrees from plumb.
++ Reading input dataset ./pb01.tb9149.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 25253 voxels
 + 4313 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.799  pitch=-0.218  yaw=-0.141  dS=-0.947  dL=-1.173  dP=-0.186
++ Mean: roll=-0.372  pitch=+0.525  yaw=+0.053  dS=-0.554  dL=-0.585  dP=+0.097
++ Max : roll=+0.249  pitch=+1.062  yaw=+0.438  dS=+0.172  dL=+0.258  dP=+0.250
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.48(0.48) 0.54(0.15) 0.37(0.21) 0.32(0.12) 0.32(0.38) 1.05(0.91) 0.54(0.57) 0.24(0.41) 0.30(0.11) 0.35(0.14) 0.39(0.10) 0.41(0.05) 0.57(0.18) 0.77(0.22) 0.80(0.06) 0.74(0.07) 0.69(0.09) 0.62(0.14) 0.72(0.15) 0.74(0.13) 0.79(0.21) 0.84(0.09) 0.83(0.06) 0.81(0.05) 0.81(0.07) 0.84(0.05) 0.88(0.07) 0.88(0.13) 0.83(0.23) 0.89(0.07) 1.02(0.15) 0.92(0.11) 0.93(0.06) 0.94(0.05) 0.99(0.06) 1.05(0.15) 0.92(0.21) 1.06(0.14) 1.08(0.06) 1.16(0.11) 1.43(0.29) 1.40(0.13) 1.31(0.10) 1.39(0.09) 1.39(0.10) 1.43(0.06) 1.64(0.32) 2.21(0.68) 1.61(0.87) 1.32(0.45) 1.60(0.43) 1.65(0.15) 1.47(0.22) 1.38(0.13) 1.32(0.09) 1.31(0.04) 1.23(0.12) 1.21(0.03) 1.30(0.09) 1.34(0.06) 1.44(0.12) 1.45(0.09) 1.44(0.08) 1.36(0.11) 1.39(0.09) 1.44(0.07) 1.45(0.06) 1.48(0.07) 1.56(0.11) 1.60(0.16) 1.59(0.14) 1.62(0.09) 1.79(0.33) 2.25(1.03) 2.24(0.24) 2.37(0.32) 2.49(0.16) 2.42(0.12) 2.36(0.10) 2.38(0.09) 2.43(0.11) 2.44(0.12) 2.41(0.06) 2.35(0.08) 2.29(0.11) 2.44(0.16) 2.45(0.03) 2.41(0.08) 2.40(0.03) 2.40(0.05) 2.41(0.06) 2.46(0.08) 2.47(0.05) 2.45(0.06) 2.43(0.03) 2.46(0.05) 2.47(0.03) 2.47(0.06) 2.55(0.12) 2.64(0.18) 2.63(0.04) 2.81(0.19) 2.63(0.48) 2.74(0.14) 2.92(0.24) 2.96(0.11) 3.16(0.23) 3.14(0.08) 3.13(0.16) 2.97(0.59) 2.90(0.20) 3.21(0.49) 3.18(0.08) 3.18(0.11) 3.16(0.06) 3.16(0.07) 3.14(0.06) 3.14(0.01) 3.16(0.06) 3.17(0.05) 3.17(0.03) 3.18(0.04) 3.20(0.03) 3.17(0.04) 3.12(0.07) 3.10(0.08) 3.07(0.18) 3.06(0.11) 3.02(0.08) 3.02(0.03) 3.03(0.05) 2.97(0.07) 3.04(0.07) 3.02(0.04) 3.00(0.12) 3.01(0.05) 2.97(0.06) 2.96(0.03) 2.98(0.07) 2.83(0.24) 2.24(0.81) 2.38(0.28) 2.47(0.24) 2.47(0.17) 2.38(0.32) 2.29(0.25) 2.47(0.32) 2.56(0.21) 2.41(0.23)
++ Max displacement in automask = 3.21 (mm) at sub-brick 112
++ Max delta displ  in automask = 1.03 (mm) at sub-brick 74
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb9149.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9149.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9149.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9149.r01.tshift+orig.BRIK is 17.499992 degrees from plumb.
++ Source dataset: ./pb01.tb9149.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.4
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 17.499992 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb9149.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 17.499992 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9149.r02.tshift+orig.BRIK is 17.499992 degrees from plumb.
++ Reading input dataset ./pb01.tb9149.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 25243 voxels
 + 4305 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.405  pitch=-0.975  yaw=+0.212  dS=-1.007  dL=-0.560  dP=-0.404
++ Mean: roll=-0.099  pitch=+0.151  yaw=+0.571  dS=-0.311  dL=-0.177  dP=-0.036
++ Max : roll=+0.396  pitch=+1.615  yaw=+1.276  dS=+0.238  dL=+0.365  dP=+0.175
++ Max displacements (mm) for each sub-brick:
 1.62(0.00) 1.42(0.32) 1.45(0.05) 1.51(0.11) 1.58(0.09) 1.64(0.07) 1.57(0.10) 1.57(0.04) 1.68(0.17) 1.76(0.09) 1.88(0.25) 1.72(0.17) 1.65(0.12) 1.63(0.03) 1.72(0.12) 1.61(0.14) 1.30(0.41) 1.33(0.10) 1.48(0.18) 1.46(0.07) 1.43(0.06) 1.33(0.12) 1.40(0.09) 1.43(0.06) 1.40(0.05) 1.39(0.07) 1.33(0.14) 1.36(0.19) 1.35(0.10) 1.12(0.37) 1.13(0.08) 1.15(0.15) 1.12(0.06) 1.08(0.08) 1.13(0.06) 1.18(0.09) 1.14(0.06) 1.16(0.13) 1.33(0.26) 1.32(0.05) 1.17(0.18) 1.17(0.31) 1.14(0.20) 1.35(0.31) 1.36(0.14) 1.00(0.49) 0.99(0.06) 1.02(0.05) 1.01(0.05) 1.01(0.06) 0.97(0.11) 0.99(0.08) 1.01(0.07) 0.97(0.06) 0.96(0.07) 1.00(0.06) 0.98(0.04) 0.96(0.06) 0.94(0.15) 1.02(0.12) 0.99(0.07) 0.99(0.05) 0.98(0.04) 0.99(0.10) 0.93(0.29) 1.31(1.55) 1.09(0.34) 0.97(0.27) 1.01(0.21) 1.00(0.22) 1.00(0.13) 1.03(0.07) 0.93(0.23) 0.96(0.06) 0.94(0.08) 0.92(0.07) 0.94(0.04) 0.92(0.15) 0.97(0.17) 1.07(0.19) 1.09(0.04) 1.05(0.05) 1.05(0.06) 1.16(0.32) 1.48(0.51) 1.41(0.15) 3.78(2.56) 4.07(0.36) 3.69(0.52) 3.49(0.21) 3.42(0.16) 3.33(0.10) 3.24(0.18) 3.13(0.13) 3.02(0.15) 2.82(0.21) 2.99(0.22) 3.03(0.10) 2.99(0.06) 2.95(0.06) 2.96(0.06) 3.06(0.13) 3.00(0.07) 2.94(0.07) 2.80(0.15) 3.03(0.24) 3.45(0.44) 3.32(0.20) 3.29(0.06) 3.12(0.20) 2.95(0.23) 3.15(0.24) 3.06(0.12) 3.07(0.04) 3.01(0.06) 3.04(0.06) 3.03(0.05) 3.00(0.04) 2.87(0.22) 1.76(3.63) 1.99(0.39) 1.57(0.80) 1.54(0.25) 1.58(0.32) 2.43(1.98) 3.13(0.88) 2.84(0.45) 2.89(0.14) 2.88(0.12) 2.62(0.27) 2.77(0.22) 2.82(0.11) 2.72(0.17) 2.69(0.13) 2.70(0.09) 2.69(0.05) 2.58(0.19) 2.72(0.18) 2.75(0.08) 2.95(0.52) 3.22(0.70) 2.41(1.01) 2.36(0.13) 2.28(0.15) 2.07(0.25) 2.05(0.07) 2.00(0.07) 1.95(0.05) 1.85(0.26) 1.73(0.16)
++ Max displacement in automask = 4.07 (mm) at sub-brick 87
++ Max delta displ  in automask = 3.63 (mm) at sub-brick 119
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb9149.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9149.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9149.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9149.r02.tshift+orig.BRIK is 17.499992 degrees from plumb.
++ Source dataset: ./pb01.tb9149.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.4
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 17.499992 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb9149.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 17.499992 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9149.r03.tshift+orig.BRIK is 17.499992 degrees from plumb.
++ Reading input dataset ./pb01.tb9149.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 25556 voxels
 + 4305 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-2.066  pitch=-0.104  yaw=-1.901  dS=-3.010  dL=-3.166  dP=-0.561
++ Mean: roll=+0.015  pitch=+2.227  yaw=+1.164  dS=-1.441  dL=-0.157  dP=-0.128
++ Max : roll=+1.615  pitch=+5.894  yaw=+2.578  dS=-0.585  dL=+1.369  dP=+0.536
++ Max displacements (mm) for each sub-brick:
 1.89(0.00) 1.68(0.81) 1.68(0.16) 2.84(1.47) 4.51(1.75) 2.22(2.86) 2.24(0.18) 1.88(0.65) 3.30(3.20) 2.46(1.54) 2.42(0.50) 2.32(0.16) 2.26(0.09) 2.18(0.09) 2.11(0.11) 2.07(0.10) 1.99(0.12) 1.95(0.10) 1.93(0.06) 1.76(0.21) 1.79(0.17) 1.87(0.10) 1.86(0.06) 1.93(0.12) 2.00(0.19) 1.97(0.15) 2.02(0.10) 4.37(3.14) 5.25(0.91) 4.41(0.89) 4.02(0.43) 4.02(0.18) 4.07(0.13) 3.99(0.13) 3.96(0.19) 3.87(0.14) 3.90(0.15) 3.31(0.76) 2.34(1.10) 2.64(0.32) 2.76(0.13) 2.82(0.10) 2.86(0.13) 2.88(0.09) 2.82(0.09) 2.83(0.10) 2.89(0.07) 2.98(0.10) 3.66(0.79) 3.72(0.09) 3.76(0.12) 3.77(0.16) 5.97(2.35) 7.75(1.88) 6.51(1.39) 6.25(0.39) 6.33(0.20) 6.33(0.05) 6.35(0.06) 6.36(0.03) 6.31(0.06) 6.35(0.07) 6.44(0.17) 6.29(0.20) 6.27(0.09) 6.21(0.08) 6.32(0.12) 6.52(0.23) 6.93(1.62) 6.38(0.59) 6.23(0.61) 6.33(0.15) 6.38(0.16) 6.41(0.11) 6.40(0.08) 6.40(0.07) 6.55(0.17) 6.52(0.08) 6.51(0.07) 6.55(0.05) 6.50(0.10) 6.50(0.05) 6.49(0.04) 6.58(0.10) 6.64(0.11) 6.61(0.24) 6.62(0.82) 6.65(0.10) 6.72(0.20) 6.89(0.20) 6.83(0.16) 7.26(0.46) 7.50(0.37) 7.23(0.42) 7.13(0.21) 6.97(0.22) 7.11(0.17) 7.13(0.06) 7.17(0.04) 7.31(0.16) 6.10(1.30) 5.48(0.85) 6.53(1.14) 6.80(0.55) 5.94(1.18) 5.90(0.17) 6.17(0.33) 6.73(0.67) 7.14(0.45) 7.08(0.13) 7.01(0.12) 7.10(0.18) 7.19(0.10) 6.63(0.69) 6.32(0.39) 7.05(0.84) 7.09(0.05) 7.14(0.09) 7.03(0.43) 8.28(5.00) 8.29(0.29) 8.34(1.03) 8.23(0.36) 8.18(0.21) 7.84(1.23) 7.16(1.01) 7.40(0.27) 7.55(0.18) 7.66(0.15) 7.69(0.12) 7.53(0.19) 7.57(0.06) 7.62(0.11) 7.64(0.05) 7.68(0.09) 7.64(0.11) 6.81(0.95) 6.67(0.19) 7.51(1.74) 11.58(7.74) 10.96(1.29) 6.41(4.68) 5.80(0.94) 6.00(0.37) 5.98(0.23) 6.02(0.09) 6.04(0.14) 6.04(0.09) 6.24(0.32) 6.32(0.27)
++ Max displacement in automask = 11.58 (mm) at sub-brick 139
++ Max delta displ  in automask = 7.74 (mm) at sub-brick 139
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb9149.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9149.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9149.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9149.r03.tshift+orig.BRIK is 17.499992 degrees from plumb.
++ Source dataset: ./pb01.tb9149.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.0
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 17.499992 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.1
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9149.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9149.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9149.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9149.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9149.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9149.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 17.499992 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb9149
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb9149+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb9149+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1157580 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 265050 voxels [62.2%] in weight mask
++ Number of points for matching = 124573
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.13557
   sp   = 0.349481
   mi   = -0.492587
   crM  = 0.037194
   nmi  = 0.834235
   je   = 2.47897
   hel  = -0.097622
   crA  = 0.193296
   crU  = 0.206308
   lss  = 0.86443
   lpc  = 0.250013
   lpa  = 0.749987
   lpc+ = 0.39175
   ncd  = 0.996656
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.0
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb9149+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb9149+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 37.3 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9149.r01.blur pb02.tb9149.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9149.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb9149.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9149.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9149.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9149.r02.blur pb02.tb9149.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9149.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb9149.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9149.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9149.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9149.r03.blur pb02.tb9149.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9149.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb9149.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9149.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9149.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb9149.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9149.r01.blur+orig
++ Forming automask
 + Fixed clip level = 375.542480
 + Used gradual clip level = 283.736145 .. 428.087036
 + Number voxels above clip level = 43049
 + Clustering voxels ...
 + Largest cluster has 42904 voxels
 + Clustering voxels ...
 + Largest cluster has 42867 voxels
 + Filled    36 voxels in small holes; now have 42903 voxels
 + Clustering voxels ...
 + Largest cluster has 42903 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 383372 voxels
 + Mask now has 42903 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 376293 voxels
++ 49982 voxels in the mask [out of 426275: 11.73%]
++ first  21 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    9 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb9149.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9149.r02.blur+orig
++ Forming automask
 + Fixed clip level = 375.743439
 + Used gradual clip level = 283.366211 .. 429.331726
 + Number voxels above clip level = 43040
 + Clustering voxels ...
 + Largest cluster has 42877 voxels
 + Clustering voxels ...
 + Largest cluster has 42845 voxels
 + Filled    36 voxels in small holes; now have 42881 voxels
 + Clustering voxels ...
 + Largest cluster has 42881 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 383394 voxels
 + Mask now has 42881 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 376315 voxels
++ 49960 voxels in the mask [out of 426275: 11.72%]
++ first  21 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    9 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb9149.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9149.r03.blur+orig
++ Forming automask
 + Fixed clip level = 374.378723
 + Used gradual clip level = 282.503235 .. 428.204803
 + Number voxels above clip level = 43272
 + Clustering voxels ...
 + Largest cluster has 43104 voxels
 + Clustering voxels ...
 + Largest cluster has 43046 voxels
 + Filled    38 voxels in small holes; now have 43084 voxels
 + Clustering voxels ...
 + Largest cluster has 43084 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 383191 voxels
 + Mask now has 43084 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 375973 voxels
++ 50302 voxels in the mask [out of 426275: 11.80%]
++ first  21 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    9 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb9149
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 50487 survived, 375788 were zero
++ writing result full_mask.tb9149...
3dresample -master full_mask.tb9149+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb9149
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 45656 survived, 380619 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb9149...
3dABoverlap -no_automask full_mask.tb9149+orig mask_anat.tb9149+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb9149+orig.BRIK  B=./mask_anat.tb9149+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
50487        45656        52696        43447        7040         2209         13.9442      4.8384     0.8674     0.9478     0.9257
3ddot -dodice full_mask.tb9149+orig mask_anat.tb9149+orig
tee out.mask_ae_dice.txt
0.9038	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb9149
total number of censored TRs (simple form) = 94
1deval -a motion_tb9149_censor.1D -b outcount_tb9149_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb9149_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb9149.r01.blur+orig.HEAD pb03.tb9149.r02.blur+orig.HEAD pb03.tb9149.r03.blur+orig.HEAD -censor censor_tb9149_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb9149 -errts errts.tb9149 -bucket stats.tb9149
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb9149.r01.blur+orig.HEAD pb03.tb9149.r02.blur+orig.HEAD pb03.tb9149.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 42972 voxels (out of 426275 = 10.1%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 354 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb9149.r01.blur+orig.HEAD pb03.tb9149.r02.blur+orig.HEAD pb03.tb9149.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb9149_REML -Rvar stats.tb9149_REMLvar \
 -Rfitts fitts.tb9149_REML -Rerrts errts.tb9149_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (354x24):  6.16705  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (354x6):  1.03886  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (354x18):  5.95145  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (354x6):  3.48522  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (354x12):  1.2912  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.20726e-15  ++ VERY GOOD ++
++ Matrix setup time = 0.99 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.976
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.989
++ Job #3: processing voxels 127881 to 170507; elapsed time=6.003
++ Job #4: processing voxels 170508 to 213134; elapsed time=6.018
++ Job #5: processing voxels 213135 to 255761; elapsed time=6.033
++ Job #6: processing voxels 255762 to 298388; elapsed time=6.048
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.075
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.085
++ Job #0: processing voxels 0 to 42626; elapsed time=6.102
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=6.105
0123456789.0123456789.0123456789.0123++ Job #2 finished; elapsed time=27.965
4++ Job #4 finished; elapsed time=28.537
5++ Job #5 finished; elapsed time=29.351
++ Job #1 finished; elapsed time=29.484
6++ Job #7 finished; elapsed time=30.059
++ Job #8 finished; elapsed time=30.066
789.012345678++ Job #3 finished; elapsed time=32.373
9.
++ Job #0 waiting for children to finish; elapsed time=32.431
++ Job #6 finished; elapsed time=33.422
++ Job #9 finished; elapsed time=33.450
++ Job #0 now finishing up; elapsed time=33.457
++ Smallest FDR q [0 Full_Fstat] = 1.21464e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 1.6952e-13
++ Smallest FDR q [3 uns1_Fstat] = 1.69482e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 5.22651e-13
++ Smallest FDR q [6 uns2_Fstat] = 5.22651e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 1.80055e-07
++ Smallest FDR q [9 uns3_Fstat] = 1.80073e-07
++ Smallest FDR q [11 str1#0_Tstat] = 5.61326e-14
++ Smallest FDR q [12 str1_Fstat] = 5.61189e-14
++ Smallest FDR q [14 str2#0_Tstat] = 1.94833e-12
++ Smallest FDR q [15 str2_Fstat] = 1.94816e-12
++ Smallest FDR q [17 str3#0_Tstat] = 3.40707e-12
++ Smallest FDR q [18 str3_Fstat] = 3.40637e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 4.8392e-12
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 4.8384e-12
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 5.74436e-11
++ Smallest FDR q [24 structured_GLT_Fstat] = 5.74439e-11
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 1.2638e-11
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 1.2637e-11
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 6.26757e-08
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 6.26757e-08
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 0.0112495
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 0.0112508
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 3.22161e-13
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 3.22073e-13
++ Wrote bucket dataset into ./stats.tb9149+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb9149+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb9149+orig.BRIK
++ Program finished; elapsed time=59.189
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.751       0.796  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.711       0.790  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.697       0.774  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.525       0.580  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.478       0.564  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.566  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.428       0.000  ( 4 vs. 15)  Run#2Pol#0  vs.  str1#0
  medium:      -0.419       0.000  ( 0 vs. 16)  Run#1Pol#0  vs.  str2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb9149.r01.blur+orig.HEAD pb03.tb9149.r02.blur+orig.HEAD pb03.tb9149.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb9149_REML -Rvar stats.tb9149_REMLvar -Rfitts fitts.tb9149_REML -Rerrts errts.tb9149_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 42972 voxels (out of 426275 = 10.1%)
++ -----  matrix condition (354x24):  6.16705  ++ VERY GOOD ++
 + masked off 254427 voxels for being all zero; 171848 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 310 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=57.10
 + X matrix: 46.787% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=354 cols=24; 109*1 cases; total CPU=0.00 Elapsed=57.12
 +  average case bandwidth = 10.56
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=107.92
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=145.24
++ Output dataset ./stats.tb9149_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb9149_REML+orig.BRIK
++ Output dataset ./errts.tb9149_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb9149_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.00759e-09
++ Smallest FDR q [2 uns1#0_Tstat] = 0.000305888
++ Smallest FDR q [3 uns1_Fstat] = 0.000305889
++ Smallest FDR q [5 uns2#0_Tstat] = 4.13013e-06
++ Smallest FDR q [6 uns2_Fstat] = 4.13014e-06
++ Smallest FDR q [8 uns3#0_Tstat] = 0.00206062
++ Smallest FDR q [9 uns3_Fstat] = 0.00206063
++ Smallest FDR q [11 str1#0_Tstat] = 1.5784e-05
++ Smallest FDR q [12 str1_Fstat] = 1.5784e-05
++ Smallest FDR q [14 str2#0_Tstat] = 0.00217009
++ Smallest FDR q [15 str2_Fstat] = 0.00217009
++ Smallest FDR q [17 str3#0_Tstat] = 0.0105622
++ Smallest FDR q [18 str3_Fstat] = 0.0105622
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.30147e-08
++ Smallest FDR q [21 unstructured_Fstat] = 1.30147e-08
++ Smallest FDR q [23 structured#0_Tstat] = 5.82493e-06
++ Smallest FDR q [24 structured_Fstat] = 5.82493e-06
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.367302 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.367302 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.679143 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.679144 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999891 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999891 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.019005
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.019005
 + Added 25 FDR curves to dataset stats.tb9149_REML+orig
++ Output dataset ./stats.tb9149_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=189.32
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb9149 pb03.tb9149.r01.blur+orig.HEAD pb03.tb9149.r02.blur+orig.HEAD pb03.tb9149.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 51.7 s
3dTstat -mean -prefix rm.signal.all all_runs.tb9149+orig[0..4,8..46,50..72,75..108,113..139,142..213,216..232,239..267,276..287,292..299,311..325,330..335,339..346,349,350,355..366,371..384,387..389,393..398,405,409..411,416,417,426..434,443..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb9149_REML+orig[0..4,8..46,50..72,75..108,113..139,142..213,216..232,239..267,276..287,292..299,311..325,330..335,339..346,349,350,355..366,371..384,387..389,393..398,405,409..411,416,417,426..434,443..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb9149+orig -expr c*a/b -prefix TSNR.tb9149
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb9149_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb9149+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 50487 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.224906
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox

*** failure while reading from brick file ./rm.DP+orig.BRIK
*** desired 767295000 bytes but only got 461519644
*** Unix error message: Success
   THD_load_datablock
  3dTstat main
** Command line was:
3dTstat -sum -prefix corr_brain rm.DP+orig
[7m** FATAL ERROR:[0m Unable to compute output dataset!
** Program compile date = Jul 20 2017
