echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb8111
endif
set output_dir = tb8111.srtt
if ( -d tb8111.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb8111.srtt
mkdir tb8111.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb8111.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs003a1001.nii.gz tb8111.srtt/Sag3DMPRAGEs003a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb8111.srtt/pb00.tb8111.r01.tcat func_srtt/ep2dbold156s005a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.6 s
3dTcat -prefix tb8111.srtt/pb00.tb8111.r02.tcat func_srtt/ep2dbold156s007a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.7 s
3dTcat -prefix tb8111.srtt/pb00.tb8111.r03.tcat func_srtt/ep2dbold156s009a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.8 s
set tr_counts = ( 150 150 150 )
cd tb8111.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8111.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8111.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8111.r01.tcat+orig.BRIK is 12.800005 degrees from plumb.
++ 28053 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8111.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8111.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8111.r02.tcat+orig.BRIK is 12.800005 degrees from plumb.
++ 28246 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb8111.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8111.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8111.r03.tcat+orig.BRIK is 12.800005 degrees from plumb.
++ 28155 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb8111.r01.tshift -tpattern alt+z2 pb00.tb8111.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8111.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8111.r01.tcat+orig.BRIK is 12.800005 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8111.r02.tshift -tpattern alt+z2 pb00.tb8111.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8111.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8111.r02.tcat+orig.BRIK is 12.800005 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb8111.r03.tshift -tpattern alt+z2 pb00.tb8111.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb8111.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb8111.r03.tcat+orig.BRIK is 12.800005 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb8111.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs003a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs003a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs003a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs003a1001+orig ./__tt_Sag3DMPRAGEs003a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs003a1001+orig -prefix ./__tt_Sag3DMPRAGEs003a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs003a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/__tt_Sag3DMPRAGEs003a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs003a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs003a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs003a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs003a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.800005 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 390.529205
 + Used gradual clip level = 359.062195 .. 444.551392
 + Number voxels above clip level = 28676
 + Clustering voxels ...
 + Largest cluster has 28293 voxels
 + Clustering voxels ...
 + Largest cluster has 27628 voxels
 + Filled   297 voxels in small holes; now have 27925 voxels
 + Clustering voxels ...
 + Largest cluster has 27924 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 103147 voxels
 + Mask now has 27925 voxels
++ 27925 voxels in the mask [out of 131072: 21.31%]
++ first  11 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   7 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 958.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/958.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs003a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs003a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs003a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs003a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 12.800005 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.800005 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs003a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1535050 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 27925 voxels [17.9%] in weight mask
++ Number of points for matching = 27925
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 30.029 29.431 19.155 (index)
 + source center of mass = 83.560 164.513 180.130 (index)
 + source-target CM = -1.481 0.367 -4.553 (xyz)
 + center of mass shifts = -1.481 0.367 -4.553
++ shift param auto-range: -71.0..68.0 -69.1..69.9 -52.1..43.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.481079 .. 8.518921
 + Range param#2 [y-shift] = -9.632820 .. 10.367180
 + Range param#3 [z-shift] = -14.552986 .. 5.447014
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.481079 .. 38.518921
 + Range param#2 [y-shift] = -39.632820 .. 40.367180
 + Range param#3 [z-shift] = -44.552986 .. 35.447014
 + 12 free parameters
++ Normalized convergence radius = 0.000469
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1535050 [out of 16587824] voxels
 + base mask has 38411 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=78 usiz=177
 + - copying weight image
 + - using 27925 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 23848 total points stored in 222 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo+.o.+o.o-*[#60=-0.0561637] *-o..$--oo-+
 + - best 45 costs found:
    0 v=-0.056164: -14.81 -12.97   8.78 -15.00 -15.00 -15.00  [grid]
    1 v=-0.043226: -15.69  -9.09   0.29 -15.99 -13.53 -29.93  [rand]
    2 v=-0.036934: -17.62  -9.10  19.80 -20.99 -15.73 -16.09  [rand]
    3 v=-0.035793: -15.69   9.82   0.29 -15.99  13.53 -29.93  [rand]
    4 v=-0.035691: -17.62   9.83  19.80 -20.99 -15.73  16.09  [rand]
    5 v=-0.035681: -14.81 -12.97  22.11 -15.00 -15.00 -15.00  [grid]
    6 v=-0.034256:  -1.48   0.37  -4.55   0.00   0.00   0.00  [grid]
    7 v=-0.034006:   8.34 -24.39   6.83   3.10 -34.36  -2.55  [rand]
    8 v=-0.033930: -13.08  -4.19  -0.66 -24.53 -29.49 -26.10  [rand]
    9 v=-0.033511: -14.81  13.70   8.78 -15.00  15.00 -15.00  [grid]
   10 v=-0.031302:  -5.56   6.59   3.24   4.32  22.85 -18.95  [rand]
   11 v=-0.030564: -14.81 -12.97   8.78 -15.00 -15.00 -30.00  [grid]
   12 v=-0.030557: -14.81 -12.97   8.78 -15.00 -30.00 -15.00  [grid]
   13 v=-0.029011: -14.81 -12.97   8.78 -30.00 -30.00 -30.00  [grid]
   14 v=-0.028637:  -5.56   6.59   3.24  -4.32  22.85 -18.95  [rand]
   15 v=-0.028039:  -5.56  -5.86   3.24  -4.32 -22.85 -18.95  [rand]
   16 v=-0.027952: -14.81  27.03 -17.89 -15.00 -15.00  15.00  [grid]
   17 v=-0.027589:  25.19  13.70 -31.22  30.00  15.00  30.00  [grid]
   18 v=-0.027466:  11.85  13.70 -31.22  15.00 -15.00  30.00  [grid]
   19 v=-0.027404: -15.69   9.82   0.29 -15.99 -13.53 -29.93  [rand]
   20 v=-0.027344: -14.81  13.70  22.11 -30.00 -30.00 -30.00  [grid]
   21 v=-0.027285:  -5.56   6.59   3.24  -4.32 -22.85 -18.95  [rand]
   22 v=-0.027175: -15.51  16.09 -19.22 -24.25  37.55   4.41  [rand]
   23 v=-0.027086:  17.26  36.77 -37.60  24.90   4.74  17.23  [rand]
   24 v=-0.027064:   2.60   6.59 -12.35  -4.32  22.85  18.95  [rand]
   25 v=-0.026985: -14.81 -12.97  22.11 -30.00 -30.00 -30.00  [grid]
   26 v=-0.026870: -14.81 -12.97   8.78 -15.00 -15.00  15.00  [grid]
   27 v=-0.026639: -14.81 -12.97   8.78 -30.00 -30.00 -15.00  [grid]
   28 v=-0.026303: -28.15 -12.97  22.11 -30.00 -30.00  30.00  [grid]
   29 v=-0.026263: -14.81  13.70  22.11 -15.00 -15.00  15.00  [grid]
   30 v=-0.026164: -14.81  13.70   8.78 -15.00 -15.00 -15.00  [grid]
   31 v=-0.025858:  -7.30 -13.82  25.08 -38.21 -15.41 -13.51  [rand]
   32 v=-0.025594:  11.85 -12.97   8.78  30.00 -15.00 -30.00  [grid]
   33 v=-0.025542: -14.81 -26.30   8.78 -30.00 -30.00 -30.00  [grid]
   34 v=-0.025187: -10.12 -20.07  12.92 -25.20 -18.50 -13.54  [rand]
   35 v=-0.025109: -35.81  16.95   4.05 -16.34   8.64  40.54  [rand]
   36 v=-0.024902:  32.85 -16.22 -13.16  16.34  -8.64 -40.54  [rand]
   37 v=-0.024799:  12.72   9.82   0.29  15.99  13.53 -29.93  [rand]
   38 v=-0.024658: -17.46  19.86   1.17 -20.53   3.14  10.08  [rand]
   39 v=-0.024654: -14.64  38.25 -41.75  14.03  -8.39 -25.20  [rand]
   40 v=-0.024274:  -5.56  -5.86   3.24   4.32  22.85 -18.95  [rand]
   41 v=-0.024251: -14.81  13.70 -17.89 -30.00  30.00  30.00  [grid]
   42 v=-0.024038: -14.81 -12.97  22.11 -15.00  15.00  30.00  [grid]
   43 v=-0.023925: -20.97  17.04  -7.15 -30.54  19.59  20.03  [rand]
   44 v=-0.023900: -14.81 -12.97  22.11  30.00  30.00 -30.00  [grid]
*[#8003=-0.0598641] *[#8011=-0.0678798] *[#8013=-0.0694608] *[#8015=-0.0702008] *[#8017=-0.071855] *[#8018=-0.0740116] *[#8019=-0.0767689] *[#8020=-0.0794448] *[#8022=-0.0795402] *[#8025=-0.0801709] *[#8026=-0.0822323] *[#8027=-0.0843594] *[#8028=-0.0848216] *[#8029=-0.086107] *[#8031=-0.0874482] *[#8032=-0.0896428] *[#8034=-0.0911861] *[#8035=-0.0923519] *[#8036=-0.0930913] *[#8039=-0.0948177] *[#8040=-0.0964362] *[#8043=-0.0986181] *[#8044=-0.10173] *[#8045=-0.102765] *[#8046=-0.104194] *[#8051=-0.104735] *[#8054=-0.105563] *[#8055=-0.107223] *[#8056=-0.114039] *[#8057=-0.11802] *[#8059=-0.122709] *[#8064=-0.12605] *[#8065=-0.130674] *[#8068=-0.132519] *[#8069=-0.133544] *[#8072=-0.134565] *[#8075=-0.13729] *[#8076=-0.138144] *[#8077=-0.13884] *[#8079=-0.138861] *[#8083=-0.139842] *[#8332=-0.195352] *[#8337=-0.213634] *[#8340=-0.220143] *[#8341=-0.261149] *[#8343=-0.28336] *[#8344=-0.296335] *[#8345=-0.319323] *[#8348=-0.340365] *[#8349=-0.363912] *[#8352=-0.370509] *[#8355=-0.388135] *[#8356=-0.420305] *[#8357=-0.433389] *[#8358=-0.437311] *[#8361=-0.443924] *[#8364=-0.451675] *[#8365=-0.460943] *[#8368=-0.465304] *[#8371=-0.466133] *[#8373=-0.472414]  + - costs of the above after a little optimization:
    0 v=-0.139842:  -4.67 -11.04   4.30  -4.76 -13.39  -5.25  [grid]
    1 v=-0.049525: -14.69 -12.68   0.90 -16.05 -13.42 -30.93  [rand]
    2 v=-0.067350: -15.07  -8.15  16.87 -15.25 -14.78 -14.60  [rand]
    3 v=-0.039693: -15.72  10.04   0.12 -11.62  13.24 -29.99  [rand]
    4 v=-0.061045: -15.66   6.89  19.39 -12.37 -11.24  18.48  [rand]
    5 v=-0.098439:  -9.30  -7.94  13.54  -6.96 -13.76  -1.93  [grid]
  * 6 v=-0.472414:  -0.25  -3.26   0.07   0.70  -2.94  -0.71  [grid]
    7 v=-0.081861:   4.17 -25.23   8.09   3.38 -31.68  -2.88  [rand]
    8 v=-0.042518: -13.13  -5.56   0.45 -17.21 -30.21 -29.10  [rand]
    9 v=-0.050472: -13.58  12.44   4.98  -8.28  13.19 -13.13  [grid]
   10 v=-0.043905:  -8.50   6.25   2.79   3.65  23.17 -19.12  [rand]
   11 v=-0.075595: -12.32 -12.40   7.03 -15.08 -15.82 -18.80  [grid]
   12 v=-0.095371:  -5.64 -20.44  11.32  -8.74 -29.71  -9.26  [grid]
   13 v=-0.040524: -13.41 -10.24   9.56 -26.25 -31.77 -29.94  [grid]
   14 v=-0.062279:  -7.26   4.70   0.81  -5.66  10.87 -13.87  [rand]
   15 v=-0.066494:  -9.36 -10.70   4.46 -10.62 -13.72 -24.03  [rand]
   16 v=-0.034237: -16.18  27.89 -16.98 -16.51 -16.80  12.69  [grid]
   17 v=-0.032838:  24.97  10.18 -31.17  29.95  15.70  29.74  [grid]
   18 v=-0.034068:  15.39  13.74 -31.16  14.51 -15.31  30.49  [grid]
   19 v=-0.039946: -14.09   9.04   0.26 -14.57 -16.31 -24.25  [rand]
   20 v=-0.039383: -14.24  12.51  21.42 -31.56 -32.55 -27.18  [grid]
   21 v=-0.070796:  -9.03   6.51  10.94  -9.43 -22.94 -11.36  [rand]
   22 v=-0.045653: -12.00  16.14 -19.98 -23.74  37.36   4.77  [rand]
   23 v=-0.027344:  17.56  36.94 -37.88  24.69   4.85  17.14  [rand]
   24 v=-0.096272:  -0.16  16.99 -13.05  -0.91  25.45   7.41  [rand]
   25 v=-0.037370: -12.81 -13.00  20.33 -23.35 -29.94 -30.18  [grid]
   26 v=-0.076168: -13.90 -11.63  11.38  -7.64 -18.61   8.94  [grid]
   27 v=-0.063706: -11.19  -4.15  15.55 -26.00 -37.01 -20.83  [grid]
   28 v=-0.049304: -31.39 -11.26  18.21 -36.90 -26.43  33.21  [grid]
   29 v=-0.052258: -15.34   9.34  21.14 -15.22 -13.61  16.90  [grid]
   30 v=-0.046521: -12.73  16.28   9.17 -14.68 -19.29 -11.15  [grid]
   31 v=-0.034080:  -6.15 -17.21  24.78 -38.40 -14.91 -15.17  [rand]
   32 v=-0.039733:  12.26  -9.55   7.64  28.03 -14.94 -27.34  [grid]
   33 v=-0.070404: -11.79 -30.40   4.51 -24.74 -36.29 -27.52  [grid]
   34 v=-0.048834:  -7.18 -17.27  10.55 -21.65 -18.37 -13.38  [rand]
   35 v=-0.037394: -38.45  17.38   2.45 -21.60   8.61  41.04  [rand]
   36 v=-0.037603:  38.39 -13.39 -13.17  21.97  -8.06 -43.59  [rand]
   37 v=-0.035015:  13.22   5.81   0.27  15.99  13.53 -29.93  [rand]
   38 v=-0.064663: -15.70   8.04   1.93 -14.35   2.25   8.36  [rand]
   39 v=-0.034155: -12.04  38.43 -43.21  13.08  -8.86 -26.03  [rand]
   40 v=-0.047886:  -4.59  -5.22   2.06   4.07  14.97 -14.79  [rand]
   41 v=-0.040160: -13.34  18.48 -18.58 -29.31  31.74  30.52  [grid]
   42 v=-0.038492: -15.59 -12.35  18.48 -19.18  20.75  29.38  [grid]
   43 v=-0.035776: -17.85  15.24  -7.26 -27.58  20.59  20.64  [rand]
   44 v=-0.031654: -15.35 -10.51  19.71  26.86  30.86 -32.50  [grid]
 + - save # 6 for twobest
 + - save # 0 for twobest
 + - save # 5 for twobest
 + - save #24 for twobest
 + - save #12 for twobest
 + - save # 7 for twobest
 + - save #26 for twobest
 + - save #11 for twobest
 + - save #21 for twobest
 + - save #33 for twobest
 + - save # 2 for twobest
 + - save #15 for twobest
 + - save #38 for twobest
 + - save #27 for twobest
 + - save #14 for twobest
 + - save # 4 for twobest
 + - skip #29 for twobest: too close to set # 4
 + - save # 9 for twobest
 + - save # 1 for twobest
 + - save #28 for twobest
 + - save #34 for twobest
 + - save #40 for twobest
 + - save #30 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=78 usiz=177
 + - retaining old weight image
 + - using 27925 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24296 total points stored in 245 'RHDD(13.7332)' bloks
*[#9885=-0.500426] *[#9906=-0.502756] *[#9907=-0.505231] *[#9912=-0.506419] *[#9913=-0.50701] *[#9914=-0.507094] *[#9916=-0.507147] *[#9917=-0.50715] *[#9919=-0.5076] *[#9920=-0.507769] *[#9921=-0.507845] *[#9922=-0.507928] *[#9925=-0.508449] *[#9927=-0.508801] *[#9932=-0.508934] *[#9934=-0.509164] *[#9935=-0.509286] 
 + - param set #1 has cost=-0.509286
 + -- Parameters = -0.4172 -2.9142 0.3079 0.5781 -3.3740 -0.5317 0.9997 1.0008 0.9987 0.0006 -0.0001 0.0001
 + - param set #2 has cost=-0.378443
 + -- Parameters = 0.0869 -2.5353 2.1329 0.1098 -4.3405 1.7191 1.0020 1.0024 0.9862 -0.0153 -0.0061 -0.0136
 + - param set #3 has cost=-0.442887
 + -- Parameters = -1.0881 -2.6940 0.6987 -0.8016 -4.1491 -0.9803 1.0336 1.0150 0.9822 -0.0480 -0.0010 -0.0044
 + - param set #4 has cost=-0.072366
 + -- Parameters = -0.2208 16.7582 -12.7680 -1.0720 25.8087 7.8768 1.0029 1.0031 1.0023 0.0020 0.0127 0.0016
 + - param set #5 has cost=-0.086686
 + -- Parameters = -4.2395 -20.5184 8.9905 -6.5396 -27.1174 -5.6558 1.0023 1.0063 0.9827 -0.0025 0.0040 0.0096
 + - param set #6 has cost=-0.076707
 + -- Parameters = 4.5176 -24.7818 7.7344 3.5372 -31.3782 -3.3227 0.9951 1.0072 0.9926 0.0114 -0.0006 -0.0006
 + - param set #7 has cost=-0.073033
 + -- Parameters = -13.1944 -11.7065 11.7775 -7.2631 -19.3013 9.0217 1.0130 1.0163 1.0155 -0.0049 -0.0023 -0.0017
 + - param set #8 has cost=-0.057772
 + -- Parameters = -11.6376 -12.2214 6.4487 -14.5369 -16.0618 -18.7906 0.9956 1.0043 1.0073 -0.0020 0.0002 0.0097
 + - param set #9 has cost=-0.058368
 + -- Parameters = -7.0702 5.6300 10.1018 -8.1527 -22.1460 -9.0126 1.0187 0.9993 0.9924 0.0064 -0.0037 0.0016
 + - param set #10 has cost=-0.056637
 + -- Parameters = -11.4152 -31.4194 4.2634 -23.3517 -36.1545 -25.6787 1.0037 0.9976 1.0044 -0.0001 0.0147 -0.0055
 + - param set #11 has cost=-0.051450
 + -- Parameters = -14.6014 -8.1563 12.9591 -14.7194 -14.0901 -14.8161 0.9942 1.0014 0.9932 0.0056 0.0025 0.0027
 + - param set #12 has cost=-0.506340
 + -- Parameters = -0.5031 -3.1581 0.4121 0.5187 -2.9367 -0.7656 0.9934 0.9948 0.9915 -0.0028 0.0078 0.0083
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0366 
 + --- dist(#3,#1) = 0.219 
 + --- dist(#4,#1) = 0.0717 
 + --- dist(#5,#1) = 0.264 
 + --- dist(#6,#1) = 0.311 
 + --- dist(#7,#1) = 0.177 
 + --- dist(#8,#1) = 0.324 
 + --- dist(#9,#1) = 0.209 
 + --- dist(#10,#1) = 0.203 
 + --- dist(#11,#1) = 0.364 
 + --- dist(#12,#1) = 0.177 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=78 usiz=177
 + - retaining old weight image
 + - using 27925 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24650 total points stored in 256 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.485137
 + -- Parameters = -0.3475 -2.9376 0.3260 0.7330 -3.4769 -0.5669 0.9961 0.9973 0.9939 0.0016 0.0021 -0.0035
 + - param set #2 has cost=-0.483279
 + -- Parameters = -0.3445 -2.8385 0.5807 0.7081 -3.6333 -0.9850 1.0018 1.0016 0.9833 0.0018 0.0104 -0.0001
 + - param set #3 has cost=-0.454192
 + -- Parameters = -0.9293 -2.4959 0.6318 -0.1766 -4.3435 -2.1500 1.0192 1.0114 0.9862 -0.0226 0.0238 -0.0101
 + - param set #4 has cost=-0.480692
 + -- Parameters = -0.4565 -2.5392 0.5990 0.4364 -4.4607 -0.1651 0.9965 1.0092 0.9813 -0.0086 -0.0121 -0.0095
 + - param set #5 has cost=-0.070467
 + -- Parameters = -3.7486 -20.5175 8.9071 -6.2630 -27.2970 -5.4538 0.9973 1.0099 0.9856 -0.0049 0.0100 0.0096
 + - param set #6 has cost=-0.070619
 + -- Parameters = 4.0738 -24.8074 8.5375 3.5396 -31.6669 -3.3151 0.9823 0.9967 0.9813 0.0106 0.0024 -0.0073
 + - param set #7 has cost=-0.100969
 + -- Parameters = -3.4203 -9.6321 5.8424 -4.1557 -16.4174 -1.1783 1.0227 1.0535 1.0316 -0.0237 0.0138 0.0061
 + - param set #8 has cost=-0.063363
 + -- Parameters = 0.1035 16.1876 -12.1178 -2.0336 24.4316 9.2052 1.0136 1.0344 0.9824 -0.0043 0.0173 -0.0001
 + - param set #9 has cost=-0.052341
 + -- Parameters = -6.0723 4.4975 9.0203 -6.8543 -20.7243 -6.9554 1.0074 0.9833 0.9923 0.0013 0.0122 0.0010
 + - param set #10 has cost=-0.060604
 + -- Parameters = -10.9876 -10.2418 4.2562 -12.9926 -16.6417 -15.5035 0.9953 1.0666 1.0056 -0.0479 -0.0052 -0.0119
 + - param set #11 has cost=-0.046607
 + -- Parameters = -10.3031 -31.8674 3.5476 -22.9089 -36.6018 -24.4435 0.9976 0.9891 1.0019 -0.0030 0.0133 -0.0089
 + - param set #12 has cost=-0.054915
 + -- Parameters = -12.4256 -7.3246 11.4402 -12.5065 -15.2295 -8.7974 0.9716 1.0151 1.0106 0.0010 -0.0022 0.0087
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0374 
 + --- dist(#3,#1) = 0.0638 
 + --- dist(#4,#1) = 0.109 
 + --- dist(#5,#1) = 0.153 
 + --- dist(#6,#1) = 0.313 
 + --- dist(#7,#1) = 0.265 
 + --- dist(#8,#1) = 0.31 
 + --- dist(#9,#1) = 0.223 
 + --- dist(#10,#1) = 0.151 
 + --- dist(#11,#1) = 0.192 
 + --- dist(#12,#1) = 0.368 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=78 usiz=177
 + - retaining old weight image
 + - using 27925 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24508 total points stored in 258 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.486198
 + -- Parameters = -0.4542 -2.5849 0.3492 0.6529 -4.7260 -0.6276 0.9999 1.0031 0.9854 -0.0013 0.0022 -0.0267
 + - param set #2 has cost=-0.484471
 + -- Parameters = -0.3341 -2.5293 0.5170 0.7300 -4.3583 -0.6283 1.0004 1.0051 0.9917 0.0004 0.0039 -0.0163
 + - param set #3 has cost=-0.485126
 + -- Parameters = -0.2181 -2.5523 0.4583 0.8613 -4.4337 -0.3613 1.0005 1.0052 0.9902 0.0021 -0.0035 -0.0182
 + - param set #4 has cost=-0.470054
 + -- Parameters = -0.7134 -2.5786 0.6094 0.2461 -4.5381 -1.6205 1.0041 1.0101 0.9837 -0.0140 0.0202 -0.0130
 + - param set #5 has cost=-0.177253
 + -- Parameters = -2.1731 -0.0377 6.1956 -1.9564 -8.8698 -5.1830 1.0324 1.0779 1.0058 -0.0419 0.0213 0.0101
 + - param set #6 has cost=-0.064576
 + -- Parameters = 4.2970 -24.4031 8.5055 4.3512 -31.9262 -2.8921 0.9843 0.9947 0.9671 0.0054 -0.0040 -0.0156
 + - param set #7 has cost=-0.068432
 + -- Parameters = -2.6030 -18.7648 7.5758 -4.5830 -27.1824 -4.8032 1.0011 1.0335 0.9492 -0.0026 0.0210 0.0017
 + - param set #8 has cost=-0.056964
 + -- Parameters = 0.3997 16.0281 -12.1648 -2.0362 24.2015 8.6393 1.0241 1.0354 0.9758 -0.0101 0.0156 -0.0030
 + - param set #9 has cost=-0.053740
 + -- Parameters = -10.9629 -10.1936 4.3613 -13.0531 -16.7237 -15.4266 0.9960 1.0662 1.0057 -0.0481 -0.0051 -0.0111
 + - param set #10 has cost=-0.051504
 + -- Parameters = -12.4826 -7.1346 11.6620 -12.6130 -15.1885 -8.6145 0.9669 1.0174 1.0129 -0.0001 -0.0022 0.0101
 + - param set #11 has cost=-0.051031
 + -- Parameters = -5.4969 4.3979 7.4242 -6.0965 -19.5690 -7.1775 1.0082 0.9889 1.0141 0.0057 0.0112 0.0049
 + - param set #12 has cost=-0.039274
 + -- Parameters = -10.3359 -31.8967 3.5820 -22.8978 -36.6560 -24.5632 0.9967 0.9884 1.0018 -0.0034 0.0176 -0.0091
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0382 
 + --- dist(#3,#1) = 0.0467 
 + --- dist(#4,#1) = 0.0811 
 + --- dist(#5,#1) = 0.204 
 + --- dist(#6,#1) = 0.25 
 + --- dist(#7,#1) = 0.302 
 + --- dist(#8,#1) = 0.321 
 + --- dist(#9,#1) = 0.21 
 + --- dist(#10,#1) = 0.166 
 + --- dist(#11,#1) = 0.165 
 + --- dist(#12,#1) = 0.366 
 + - Total coarse refinement net CPU time = 0.0 s; 3223 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=78 usiz=177
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24620 total points stored in 261 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.469102 *
 + -- Parameters = -0.4542 -2.5849 0.3492 0.6529 -4.7260 -0.6276 0.9999 1.0031 0.9854 -0.0013 0.0022 -0.0267
 + - cost(#2)=-0.468719  
 + -- Parameters = -0.2181 -2.5523 0.4583 0.8613 -4.4337 -0.3613 1.0005 1.0052 0.9902 0.0021 -0.0035 -0.0182
 + - cost(#3)=-0.467398  
 + -- Parameters = -0.3341 -2.5293 0.5170 0.7300 -4.3583 -0.6283 1.0004 1.0051 0.9917 0.0004 0.0039 -0.0163
 + - cost(#4)=-0.452395  
 + -- Parameters = -0.7134 -2.5786 0.6094 0.2461 -4.5381 -1.6205 1.0041 1.0101 0.9837 -0.0140 0.0202 -0.0130
 + - cost(#5)=-0.163668  
 + -- Parameters = -2.1731 -0.0377 6.1956 -1.9564 -8.8698 -5.1830 1.0324 1.0779 1.0058 -0.0419 0.0213 0.0101
 + - cost(#6)=-0.063235  
 + -- Parameters = -2.6030 -18.7648 7.5758 -4.5830 -27.1824 -4.8032 1.0011 1.0335 0.9492 -0.0026 0.0210 0.0017
 + - cost(#7)=-0.056733  
 + -- Parameters = 4.2970 -24.4031 8.5055 4.3512 -31.9262 -2.8921 0.9843 0.9947 0.9671 0.0054 -0.0040 -0.0156
 + - cost(#8)=-0.052805  
 + -- Parameters = 0.3997 16.0281 -12.1648 -2.0362 24.2015 8.6393 1.0241 1.0354 0.9758 -0.0101 0.0156 -0.0030
 + - cost(#9)=-0.046757  
 + -- Parameters = -10.9629 -10.1936 4.3613 -13.0531 -16.7237 -15.4266 0.9960 1.0662 1.0057 -0.0481 -0.0051 -0.0111
 + - cost(#10)=-0.044928  
 + -- Parameters = -12.4826 -7.1346 11.6620 -12.6130 -15.1885 -8.6145 0.9669 1.0174 1.0129 -0.0001 -0.0022 0.0101
 + - cost(#11)=-0.043049  
 + -- Parameters = -5.4969 4.3979 7.4242 -6.0965 -19.5690 -7.1775 1.0082 0.9889 1.0141 0.0057 0.0112 0.0049
 + - cost(#12)=-0.032280  
 + -- Parameters = -10.3359 -31.8967 3.5820 -22.8978 -36.6560 -24.5632 0.9967 0.9884 1.0018 -0.0034 0.0176 -0.0091
 + - cost(#13)=-0.056197  
 + -- Parameters = -1.4811 0.3672 -4.5530 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.472198 *
 + -- Parameters = -0.2891 -2.3733 0.4133 0.7340 -5.1175 -0.4192 1.0032 1.0074 0.9855 0.0009 -0.0041 -0.0315
 + - cost(#2)=-0.471068  
 + -- Parameters = -0.2864 -2.4550 0.3924 0.7483 -4.7474 -0.4333 1.0033 1.0067 0.9849 0.0015 -0.0042 -0.0234
 + - cost(#3)=-0.470093  
 + -- Parameters = -0.2823 -2.5007 0.4188 0.7657 -4.4947 -0.4627 1.0039 1.0047 0.9911 0.0015 -0.0041 -0.0197
 + - cost(#4)=-0.462822  
 + -- Parameters = -0.4885 -2.3645 0.4836 0.5232 -4.3335 -1.4038 1.0028 1.0071 0.9936 -0.0022 0.0168 -0.0169
 + - cost(#5)=-0.405948  
 + -- Parameters = -0.2596 -2.6618 0.8666 0.0827 -3.9441 -1.6782 1.0266 1.0234 0.9987 -0.0120 0.0204 0.0069
 + - cost(#6)=-0.075193  
 + -- Parameters = -3.3689 -18.3478 7.5406 -3.8546 -27.2015 -1.4820 1.0022 1.0396 0.9294 0.0037 0.0265 -0.0045
 + - cost(#7)=-0.062105  
 + -- Parameters = 4.5945 -24.1010 7.6630 5.4464 -32.5226 -1.7611 0.9926 1.0069 0.9287 0.0093 0.0063 -0.0233
 + - cost(#8)=-0.053095  
 + -- Parameters = 0.4027 15.9990 -12.0644 -2.0503 24.4443 8.5681 1.0242 1.0355 0.9788 -0.0150 0.0170 -0.0008
 + - cost(#9)=-0.046843  
 + -- Parameters = -10.8813 -10.1948 4.3675 -13.0773 -16.6918 -15.4304 0.9961 1.0663 1.0069 -0.0485 -0.0053 -0.0109
 + - cost(#10)=-0.045072  
 + -- Parameters = -12.4790 -7.1031 11.6309 -12.6242 -15.0710 -8.6202 0.9672 1.0176 1.0130 0.0000 -0.0021 0.0137
 + - cost(#11)=-0.254555  
 + -- Parameters = -0.1798 -0.5857 0.5405 -0.1572 -6.3443 -2.6627 1.0356 1.0378 0.9876 0.0284 0.0275 0.0062
 + - cost(#12)=-0.032707  
 + -- Parameters = -10.4363 -31.8700 3.4303 -22.9623 -36.7315 -24.8281 0.9973 0.9856 1.0026 -0.0035 0.0178 -0.0138
 + - cost(#13)=-0.461850  
 + -- Parameters = -0.4070 -2.7761 0.5195 0.6522 -4.0094 -0.5174 0.9975 0.9992 0.9853 -0.0038 -0.0028 -0.0093
 + - case #1 is now the best
 + - Initial  cost = -0.472198
 + - Initial fine Parameters = -0.2891 -2.3733 0.4133 0.7340 -5.1175 -0.4192 1.0032 1.0074 0.9855 0.0009 -0.0041 -0.0315
 + - Finalish cost = -0.472532 ; 181 funcs
 + - Final    cost = -0.472536 ; 143 funcs
 + Final fine fit Parameters:
       x-shift=-0.2792   y-shift=-2.3720   z-shift= 0.3582
       z-angle= 0.7805   x-angle=-5.1710   y-angle=-0.4253
       x-scale= 1.0034   y-scale= 1.0076   z-scale= 0.9879
     y/x-shear= 0.0027 z/x-shear=-0.0040 z/y-shear=-0.0333
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.2792 -2.3720 0.3582 0.7805 -5.1710 -0.4253 1.0034 1.0076 0.9879 0.0027 -0.0040 -0.0333
++ Output dataset ./__tt_Sag3DMPRAGEs003a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs003a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 23.5
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs003a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs003a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs003a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs003a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs003a1001_al_junk -input ./__tt_Sag3DMPRAGEs003a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.800005 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs003a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0133 -0.9908 0.1301 237.9093 -0.0094 0.1682 0.9824 78.5999 -1.0033 0.0143 -0.0074 194.3496
++ Output dataset ./Sag3DMPRAGEs003a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/__tt_Sag3DMPRAGEs003a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/Sag3DMPRAGEs003a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs003a1001_ns+orig Sag3DMPRAGEs003a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs003a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs003a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs003a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs003a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/Sag3DMPRAGEs003a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 18.6 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3377.470100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 80.3844 47.582   ITER = 7/137
80.3844

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 944ms]
lev=0 0..171 0..213 0..166: [first cost=-0.67234] ... done [cost:-0.67234==>-0.73896]
lev=1 patch=129x161x125 [clock= 14m 18s 96ms]........:[cost=-0.77188]:........ done [cost:-0.73896==>-0.77549 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 23m 21s 287ms]......................... done [cost:-0.77549==>-0.83057 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 30m 11s 378ms]............. done [cost:-0.83057==>-0.88602 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 35m 28s 558ms]....... done [cost:-0.88602==>-0.93499 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 39m 34s 297ms]................ done [cost:-0.93499==>-1.01567 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 43m 31s 240ms]................... done [cost:-1.01567==>-1.05563 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 47m 23s 671ms]....................... done [cost:-1.05563==>-1.13881 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 51m 13s 573ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/Sag3DMPRAGEs003a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/Sag3DMPRAGEs003a1001_ns+orig -prefix ./Sag3DMPRAGEs003a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb8111/tb8111.srtt/Sag3DMPRAGEs003a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs003a1001_ns.aw.nii
++ total Elapsed time = 10.0 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs003a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs003a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs003a1001_ns awpy/Sag3DMPRAGEs003a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb8111.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.800005 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8111.r01.tshift+orig.BRIK is 12.800005 degrees from plumb.
++ Reading input dataset ./pb01.tb8111.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30891 voxels
 + 5176 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.123  pitch=-2.737  yaw=-0.749  dS=-0.919  dL=-0.298  dP=-0.967
++ Mean: roll=+0.077  pitch=+0.750  yaw=-0.256  dS=-0.556  dL=-0.136  dP=-0.224
++ Max : roll=+0.242  pitch=+2.629  yaw=+0.070  dS=+0.228  dL=+0.120  dP=+0.953
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 2.49(2.49) 1.86(0.66) 1.90(0.09) 1.85(0.06) 1.53(0.33) 1.48(0.22) 1.83(0.38) 1.80(0.21) 1.86(0.14) 1.82(0.06) 1.35(0.51) 0.94(0.46) 0.82(0.17) 0.82(0.06) 0.77(0.08) 0.65(0.16) 0.45(0.22) 0.28(0.20) 0.20(0.27) 0.26(0.10) 0.48(0.33) 3.12(2.68) 3.67(0.69) 3.62(0.59) 3.64(0.16) 3.71(0.15) 3.77(0.06) 3.80(0.06) 3.80(0.06) 3.85(0.13) 3.88(0.02) 3.88(0.04) 3.91(0.04) 3.97(0.07) 3.93(0.05) 3.86(0.09) 3.98(0.12) 4.04(0.06) 3.94(0.11) 3.92(0.09) 3.99(0.10) 3.95(0.33) 3.76(0.30) 3.86(0.11) 3.95(0.13) 4.01(0.06) 4.02(0.05) 4.08(0.08) 4.10(0.14) 4.07(0.12) 4.34(0.36) 4.49(0.17) 4.58(0.11) 4.57(0.07) 4.56(0.04) 4.58(0.04) 4.56(0.03) 4.58(0.03) 4.52(0.09) 4.54(0.08) 4.59(0.06) 4.67(0.10) 4.73(0.06) 4.82(0.14) 4.69(0.15) 4.21(0.52) 4.29(0.11) 4.65(0.37) 4.74(0.11) 4.82(0.09) 4.87(0.04) 4.73(0.15) 4.28(0.53) 3.70(0.62) 4.08(0.44) 4.27(0.24) 4.32(0.07) 3.92(0.47) 3.06(1.16) 2.50(0.63) 1.56(1.32) 2.14(1.36) 1.87(1.91) 2.68(1.07) 3.03(0.47) 3.14(0.12) 3.19(0.09) 3.30(0.14) 3.79(0.55) 4.12(0.39) 4.21(0.14) 4.27(0.07) 4.29(0.03) 4.31(0.05) 4.17(0.18) 4.03(0.30) 4.06(0.36) 4.25(0.21) 4.52(0.31) 4.32(0.27) 3.14(1.44) 2.21(1.01) 2.49(0.41) 2.99(0.61) 2.94(0.20) 2.55(0.65) 1.40(1.35) 1.70(0.53) 2.10(0.43) 1.44(1.44) 1.93(0.90) 1.84(0.13) 1.73(0.20) 1.43(0.46) 1.38(0.15) 1.76(0.57) 2.36(0.70) 2.18(0.19) 1.65(0.59) 1.49(0.24) 1.60(0.19) 2.07(0.50) 2.24(0.24) 1.65(0.62) 2.09(0.45) 3.17(1.26) 4.36(1.20) 3.43(0.93) 2.41(1.02) 2.59(0.26) 3.28(0.70) 4.38(1.11) 4.52(0.41) 4.15(0.38) 4.34(0.24) 4.24(0.37) 3.88(0.37) 3.76(0.19) 4.45(0.69) 5.04(0.59) 5.28(0.49) 5.35(0.12) 4.91(0.45) 4.01(0.95) 3.50(0.54) 3.33(0.19) 3.12(0.22) 3.37(0.26) 4.12(0.77)
++ Max displacement in automask = 5.35 (mm) at sub-brick 142
++ Max delta displ  in automask = 2.68 (mm) at sub-brick 22
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb8111.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs003a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs003a1001_ns+orig -input pb01.tb8111.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8111.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8111.r01.tshift+orig.BRIK is 12.800005 degrees from plumb.
++ Source dataset: ./pb01.tb8111.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs003a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.0
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs003a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.800005 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb8111.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.800005 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8111.r02.tshift+orig.BRIK is 12.800005 degrees from plumb.
++ Reading input dataset ./pb01.tb8111.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31005 voxels
 + 5201 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.307  pitch=-0.619  yaw=-0.351  dS=-1.417  dL=-0.329  dP=-2.635
++ Mean: roll=-0.325  pitch=+1.192  yaw=+0.022  dS=+0.646  dL=+0.089  dP=-0.781
++ Max : roll=+0.026  pitch=+3.502  yaw=+0.881  dS=+4.370  dL=+0.586  dP=+0.249
++ Max displacements (mm) for each sub-brick:
 1.60(0.00) 2.46(1.14) 2.39(0.12) 2.36(0.10) 2.28(0.13) 2.08(0.22) 2.02(0.11) 1.93(0.15) 1.90(0.08) 1.71(0.33) 2.10(0.78) 2.21(0.18) 2.18(0.06) 2.16(0.08) 2.25(0.13) 2.34(0.09) 2.28(0.08) 1.75(0.71) 1.90(0.54) 2.04(0.36) 2.21(0.28) 2.33(0.14) 2.33(0.04) 2.33(0.09) 2.28(0.06) 2.35(0.12) 2.74(0.43) 2.84(0.27) 2.08(0.86) 2.41(0.38) 2.64(0.27) 2.79(0.17) 2.87(0.08) 2.91(0.08) 3.03(0.13) 3.06(0.10) 3.04(0.07) 3.20(0.18) 3.31(0.26) 3.20(0.43) 3.35(2.06) 4.13(0.83) 3.96(0.33) 3.87(0.38) 3.17(0.77) 2.46(0.98) 2.73(0.39) 2.84(0.30) 2.79(0.17) 2.77(0.09) 2.80(0.06) 2.88(0.18) 2.69(0.32) 2.77(0.39) 2.39(0.52) 2.18(0.29) 1.53(0.85) 1.49(1.12) 1.26(0.36) 1.52(0.76) 1.90(0.53) 2.24(0.41) 2.40(0.20) 2.40(0.06) 2.44(0.08) 2.31(0.23) 3.07(1.65) 4.95(1.89) 6.50(1.57) 6.23(0.57) 5.82(0.57) 4.99(0.88) 4.30(0.74) 2.12(2.21) 2.07(0.30) 2.45(0.53) 2.64(0.27) 2.86(0.23) 2.89(0.27) 3.06(0.51) 3.64(0.62) 4.11(1.14) 4.20(0.98) 4.26(1.21) 3.96(1.72) 2.95(1.02) 2.80(0.15) 2.73(0.18) 2.57(0.23) 2.82(0.32) 3.21(0.47) 3.01(0.26) 3.83(1.46) 4.69(1.49) 3.95(0.77) 2.92(1.03) 2.64(0.55) 3.05(0.50) 3.09(0.22) 2.92(0.18) 3.06(0.97) 4.98(2.02) 4.68(1.34) 3.57(1.77) 3.65(2.43) 4.46(0.94) 4.63(0.20) 4.57(0.17) 4.56(0.09) 4.69(0.24) 4.67(0.04) 4.69(0.14) 4.73(0.11) 4.72(0.11) 4.81(0.17) 4.85(0.20) 4.86(0.27) 5.02(0.24) 5.12(0.20) 5.21(0.19) 5.31(0.26) 5.25(0.10) 5.16(0.12) 5.01(0.17) 4.94(0.07) 4.92(0.06) 4.92(0.04) 4.89(0.05) 4.88(0.07) 4.88(0.10) 4.95(0.07) 4.90(0.12) 5.19(0.50) 7.63(2.51) 10.39(2.78) 8.64(1.86) 6.68(2.58) 6.56(0.44) 6.13(0.47) 5.68(0.69) 5.16(0.58) 4.08(1.10) 4.06(0.18) 4.46(0.48) 4.40(0.09) 4.05(0.35) 3.80(0.26) 3.70(0.10) 3.59(0.13) 3.28(0.32)
++ Max displacement in automask = 10.39 (mm) at sub-brick 134
++ Max delta displ  in automask = 2.78 (mm) at sub-brick 134
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb8111.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs003a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs003a1001_ns+orig -input pb01.tb8111.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8111.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8111.r02.tshift+orig.BRIK is 12.800005 degrees from plumb.
++ Source dataset: ./pb01.tb8111.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs003a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.4
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs003a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.800005 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.2
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb8111.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.800005 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb8111.r03.tshift+orig.BRIK is 12.800005 degrees from plumb.
++ Reading input dataset ./pb01.tb8111.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30878 voxels
 + 5197 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.449  pitch=-0.416  yaw=-0.041  dS=+0.432  dL=-0.072  dP=-2.911
++ Mean: roll=-0.846  pitch=+2.507  yaw=+0.563  dS=+1.791  dL=+0.297  dP=-1.854
++ Max : roll=-0.395  pitch=+4.435  yaw=+1.079  dS=+5.097  dL=+1.075  dP=-0.504
++ Max displacements (mm) for each sub-brick:
 2.37(0.00) 2.56(0.48) 2.25(0.38) 1.61(1.58) 1.64(0.67) 1.69(0.19) 1.77(0.17) 1.83(0.50) 1.74(0.56) 2.12(1.18) 2.14(0.53) 2.05(0.18) 2.01(0.13) 1.98(0.06) 1.98(0.03) 1.98(0.03) 1.97(0.08) 1.94(0.07) 1.98(0.15) 2.09(0.21) 2.15(0.12) 2.26(0.17) 2.29(0.10) 2.33(0.07) 2.39(0.08) 2.41(0.04) 2.44(0.05) 2.50(0.09) 2.55(0.06) 2.57(0.02) 2.55(0.06) 2.54(0.07) 2.60(0.09) 2.62(0.07) 2.60(0.10) 2.60(0.14) 2.68(0.18) 2.73(0.08) 2.68(0.08) 3.04(0.44) 3.74(0.75) 3.47(0.34) 3.29(0.22) 3.47(0.28) 3.63(0.19) 3.74(0.14) 3.74(0.11) 3.75(0.07) 3.75(0.10) 3.70(0.31) 5.00(1.31) 8.26(3.26) 10.34(2.08) 10.53(0.48) 8.95(1.60) 8.72(0.28) 8.41(0.32) 8.17(0.26) 7.81(0.57) 8.63(0.90) 10.63(2.24) 10.96(0.66) 10.85(0.63) 9.82(1.07) 9.05(0.90) 8.82(0.58) 9.25(1.14) 8.23(1.14) 8.34(0.49) 7.96(0.38) 7.79(0.20) 7.61(0.19) 7.33(0.31) 7.23(0.13) 7.02(0.21) 7.05(0.12) 7.10(0.18) 7.11(0.06) 7.19(0.14) 7.24(0.10) 7.17(0.08) 7.17(0.08) 7.21(0.09) 7.15(0.07) 7.57(0.43) 10.13(2.63) 10.08(0.14) 10.02(0.22) 10.24(0.31) 10.53(0.42) 11.01(0.63) 10.80(0.38) 10.29(0.53) 10.00(0.29) 9.83(0.19) 9.58(0.32) 9.51(0.17) 9.32(0.20) 9.31(0.13) 9.30(0.11) 9.20(0.11) 9.07(0.14) 8.96(0.11) 8.70(0.34) 8.85(1.33) 9.29(0.44) 8.83(0.59) 8.56(0.35) 7.40(1.17) 8.25(0.94) 8.53(0.35) 8.17(0.44) 8.17(0.23) 8.06(0.11) 8.28(0.30) 8.31(0.36) 8.23(0.08) 8.21(0.10) 8.16(0.07) 8.11(0.07) 8.08(0.13) 8.12(0.38) 8.05(0.15) 7.98(0.09) 7.90(0.08) 7.85(0.05) 7.99(0.17) 8.14(0.20) 7.87(0.32) 8.27(2.21) 10.11(1.85) 10.30(0.53) 9.22(1.10) 7.95(1.29) 7.61(0.43) 7.81(0.58) 7.93(0.30) 8.54(0.68) 8.76(0.27) 8.47(0.33) 7.95(0.85) 7.79(0.37) 8.00(0.24) 7.76(0.26) 7.62(0.14) 7.61(0.03) 7.56(0.06) 7.49(0.10) 7.46(0.07) 7.18(0.27)
++ Max displacement in automask = 11.01 (mm) at sub-brick 90
++ Max delta displ  in automask = 3.26 (mm) at sub-brick 51
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb8111.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs003a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs003a1001_ns+orig -input pb01.tb8111.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb8111.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb8111.r03.tshift+orig.BRIK is 12.800005 degrees from plumb.
++ Source dataset: ./pb01.tb8111.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs003a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.9
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs003a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.800005 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8111.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8111.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8111.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8111.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb8111.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb8111.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs003a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs003a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.800005 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs003a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.1
++ ###########################################################
3dcopy Sag3DMPRAGEs003a1001_ns+orig anat_final.tb8111
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb8111+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb8111+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1404204 voxels in source_automask+0
++ Zero-pad: zbot=0 ztop=1
++ Computing -autobox
++ 276040 voxels [63.7%] in weight mask
++ Number of points for matching = 129738
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.121104
   sp   = 0.314004
   mi   = -0.558511
   crM  = 0.0301261
   nmi  = 0.832932
   je   = 2.78451
   hel  = -0.11583
   crA  = 0.173925
   crU  = 0.185058
   lss  = 0.878896
   lpc  = 0.213531
   lpa  = 0.786469
   lpc+ = 0.334957
   ncd  = 0.977365
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.7
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs003a1001+orig -master anat_final.tb8111+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs003a1001+orig'
++ -master dataset is 'anat_final.tb8111+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 42.4 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8111.r01.blur pb02.tb8111.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8111.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb8111.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8111.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8111.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8111.r02.blur pb02.tb8111.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8111.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb8111.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8111.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8111.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb8111.r03.blur pb02.tb8111.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb8111.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb8111.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb8111.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb8111.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb8111.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8111.r01.blur+orig
++ Forming automask
 + Fixed clip level = 381.537201
 + Used gradual clip level = 341.536621 .. 434.395599
 + Number voxels above clip level = 49830
 + Clustering voxels ...
 + Largest cluster has 49478 voxels
 + Clustering voxels ...
 + Largest cluster has 49442 voxels
 + Filled    34 voxels in small holes; now have 49476 voxels
 + Filled     2 voxels in large holes; now have 49478 voxels
 + Clustering voxels ...
 + Largest cluster has 49478 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376797 voxels
 + Mask now has 49478 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 369123 voxels
++ 57152 voxels in the mask [out of 426275: 13.41%]
++ first  16 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb8111.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8111.r02.blur+orig
++ Forming automask
 + Fixed clip level = 380.086548
 + Used gradual clip level = 340.709015 .. 432.982025
 + Number voxels above clip level = 49888
 + Clustering voxels ...
 + Largest cluster has 49603 voxels
 + Clustering voxels ...
 + Largest cluster has 49560 voxels
 + Filled    25 voxels in small holes; now have 49585 voxels
 + Clustering voxels ...
 + Largest cluster has 49584 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376691 voxels
 + Mask now has 49584 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 369009 voxels
++ 57266 voxels in the mask [out of 426275: 13.43%]
++ first  16 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb8111.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb8111.r03.blur+orig
++ Forming automask
 + Fixed clip level = 377.892975
 + Used gradual clip level = 337.679626 .. 431.614288
 + Number voxels above clip level = 50055
 + Clustering voxels ...
 + Largest cluster has 49752 voxels
 + Clustering voxels ...
 + Largest cluster has 49705 voxels
 + Filled    27 voxels in small holes; now have 49732 voxels
 + Clustering voxels ...
 + Largest cluster has 49732 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376543 voxels
 + Mask now has 49732 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368822 voxels
++ 57453 voxels in the mask [out of 426275: 13.48%]
++ first  16 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb8111
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 57623 survived, 368652 were zero
++ writing result full_mask.tb8111...
3dresample -master full_mask.tb8111+orig -input Sag3DMPRAGEs003a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb8111
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 55214 survived, 371061 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb8111...
3dABoverlap -no_automask full_mask.tb8111+orig mask_anat.tb8111+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb8111+orig.BRIK  B=./mask_anat.tb8111+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
57623        55214        61191        51646        5977         3568         10.3726      6.4621     0.8734     1.1317     0.8991
3ddot -dodice full_mask.tb8111+orig mask_anat.tb8111+orig
tee out.mask_ae_dice.txt
0.915409	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb8111
total number of censored TRs (simple form) = 189
1deval -a motion_tb8111_censor.1D -b outcount_tb8111_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb8111_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb8111.r01.blur+orig.HEAD pb03.tb8111.r02.blur+orig.HEAD pb03.tb8111.r03.blur+orig.HEAD -censor censor_tb8111_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb8111 -errts errts.tb8111 -bucket stats.tb8111
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb8111.r01.blur+orig.HEAD pb03.tb8111.r02.blur+orig.HEAD pb03.tb8111.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 49608 voxels (out of 426275 = 11.6%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 259 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb8111.r01.blur+orig.HEAD pb03.tb8111.r02.blur+orig.HEAD pb03.tb8111.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb8111_REML -Rvar stats.tb8111_REMLvar \
 -Rfitts fitts.tb8111_REML -Rerrts errts.tb8111_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (259x24):  6.57774  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (259x6):  1.03531  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (259x18):  5.9652  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (259x6):  4.58715  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (259x12):  1.28714  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 4.05619e-15  ++ VERY GOOD ++
++ Matrix setup time = 0.77 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.537
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.556
++ Job #3: processing voxels 127881 to 170507; elapsed time=5.575
++ Job #4: processing voxels 170508 to 213134; elapsed time=5.597
++ Job #5: processing voxels 213135 to 255761; elapsed time=5.618
++ Job #6: processing voxels 255762 to 298388; elapsed time=5.640
++ Job #7: processing voxels 298389 to 341015; elapsed time=5.674
++ Job #8: processing voxels 341016 to 383642; elapsed time=5.694
++ Job #9: processing voxels 383643 to 426274; elapsed time=5.724
++ Job #0: processing voxels 0 to 42626; elapsed time=5.726
++ voxel loop:0123456789.0123456789.0123456789.0123++ Job #7 finished; elapsed time=23.650
4++ Job #1 finished; elapsed time=23.950
5++ Job #4 finished; elapsed time=24.361
++ Job #2 finished; elapsed time=24.610
++ Job #6 finished; elapsed time=24.648
++ Job #9 finished; elapsed time=24.666
6789.0123++ Job #3 finished; elapsed time=26.602
4++ Job #5 finished; elapsed time=26.891
56++ Job #8 finished; elapsed time=27.162
789.
++ Job #0 waiting for children to finish; elapsed time=27.558
++ Job #0 now finishing up; elapsed time=27.558
++ Smallest FDR q [0 Full_Fstat] = 1.66994e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 2.21428e-12
++ Smallest FDR q [3 uns1_Fstat] = 2.21362e-12
++ Smallest FDR q [5 uns2#0_Tstat] = 1.52368e-12
++ Smallest FDR q [6 uns2_Fstat] = 1.52349e-12
++ Smallest FDR q [8 uns3#0_Tstat] = 2.82758e-12
++ Smallest FDR q [9 uns3_Fstat] = 2.82775e-12
++ Smallest FDR q [11 str1#0_Tstat] = 3.50471e-09
++ Smallest FDR q [12 str1_Fstat] = 3.50448e-09
++ Smallest FDR q [14 str2#0_Tstat] = 5.66122e-14
++ Smallest FDR q [15 str2_Fstat] = 5.6605e-14
++ Smallest FDR q [17 str3#0_Tstat] = 1.34955e-12
++ Smallest FDR q [18 str3_Fstat] = 1.34956e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.01534e-12
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.01529e-12
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 4.62759e-13
++ Smallest FDR q [24 structured_GLT_Fstat] = 4.62716e-13
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 7.22956e-06
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 7.22787e-06
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 5.27184e-11
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 5.27181e-11
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 2.04935e-08
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 2.04901e-08
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.19944e-10
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.19944e-10
++ Wrote bucket dataset into ./stats.tb8111+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb8111+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb8111+orig.BRIK
++ Program finished; elapsed time=49.805
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.771       0.825  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.733       0.802  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.665       0.737  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.556       0.633  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.449       0.531  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.437       0.431  (15 vs. 19)      str1#0  vs.  pitch#0
  medium:       0.414       0.440  ( 3 vs. 15)  Run#1Pol#3  vs.  str1#0
  medium:      -0.414      -0.392  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb8111.r01.blur+orig.HEAD pb03.tb8111.r02.blur+orig.HEAD pb03.tb8111.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb8111_REML -Rvar stats.tb8111_REMLvar -Rfitts fitts.tb8111_REML -Rerrts errts.tb8111_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 49608 voxels (out of 426275 = 11.6%)
++ -----  matrix condition (259x24):  6.57774  ++ VERY GOOD ++
 + masked off 259746 voxels for being all zero; 166529 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 300 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=11.97
 + X matrix: 46.429% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=259 cols=24; 109*1 cases; total CPU=0.00 Elapsed=11.99
 +  average case bandwidth = 8.51
++ REML voxel loop: [6 threads]0123456789.0123456789.
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=46.42
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=76.50
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./stats.tb8111_REMLvar+orig.BRIK
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./fitts.tb8111_REML+orig.BRIK
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./errts.tb8111_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb8111_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 1.06824e-05
++ Smallest FDR q [2 uns1#0_Tstat] = 0.0152577
++ Smallest FDR q [3 uns1_Fstat] = 0.0152576
++ Smallest FDR q [5 uns2#0_Tstat] = 0.00178401
++ Smallest FDR q [6 uns2_Fstat] = 0.00178401
++ Smallest FDR q [8 uns3#0_Tstat] = 0.000815513
++ Smallest FDR q [9 uns3_Fstat] = 0.000815513
[7m*+ WARNING:[0m Smallest FDR q [11 str1#0_Tstat] = 0.879811 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [12 str1_Fstat] = 0.879811 ==> few true single voxel detections
++ Smallest FDR q [14 str2#0_Tstat] = 4.82958e-06
++ Smallest FDR q [15 str2_Fstat] = 4.82959e-06
++ Smallest FDR q [17 str3#0_Tstat] = 0.0080525
++ Smallest FDR q [18 str3_Fstat] = 0.00805251
++ Smallest FDR q [20 unstructured#0_Tstat] = 0.00141276
++ Smallest FDR q [21 unstructured_Fstat] = 0.00141276
++ Smallest FDR q [23 structured#0_Tstat] = 0.00204044
++ Smallest FDR q [24 structured_Fstat] = 0.00204044
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.655136 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.655136 ==> few true single voxel detections
++ Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.0271934
++ Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.0271934
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.0365506
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.0365506
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.476032 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.476032 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb8111_REML+orig
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./stats.tb8111_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=3466.68
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb8111 pb03.tb8111.r01.blur+orig.HEAD pb03.tb8111.r02.blur+orig.HEAD pb03.tb8111.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
