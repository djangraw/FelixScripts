echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb9392
endif
set output_dir = tb9392.srtt
if ( -d tb9392.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb9392.srtt
mkdir tb9392.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb9392.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb9392.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb9392.srtt/pb00.tb9392.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.9 s
3dTcat -prefix tb9392.srtt/pb00.tb9392.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.3 s
3dTcat -prefix tb9392.srtt/pb00.tb9392.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.7 s
set tr_counts = ( 150 150 150 )
cd tb9392.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9392.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9392.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9392.r01.tcat+orig.BRIK is 11.199991 degrees from plumb.
++ 25918 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9392.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9392.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9392.r02.tcat+orig.BRIK is 11.199991 degrees from plumb.
++ 25891 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9392.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9392.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9392.r03.tcat+orig.BRIK is 11.199991 degrees from plumb.
++ 25845 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb9392.r01.tshift -tpattern alt+z2 pb00.tb9392.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9392.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9392.r01.tcat+orig.BRIK is 11.199991 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb9392.r02.tshift -tpattern alt+z2 pb00.tb9392.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9392.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9392.r02.tcat+orig.BRIK is 11.199991 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb9392.r03.tshift -tpattern alt+z2 pb00.tb9392.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9392.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9392.r03.tcat+orig.BRIK is 11.199991 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb9392.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 11.199991 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 382.509705
 + Used gradual clip level = 340.515991 .. 419.054993
 + Number voxels above clip level = 27243
 + Clustering voxels ...
 + Largest cluster has 26649 voxels
 + Clustering voxels ...
 + Largest cluster has 25620 voxels
 + Filled   289 voxels in small holes; now have 25909 voxels
 + Filled     2 voxels in large holes; now have 25911 voxels
 + Clustering voxels ...
 + Largest cluster has 25908 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 105163 voxels
 + Mask now has 25909 voxels
++ 25909 voxels in the mask [out of 131072: 19.77%]
++ first  12 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last   10 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 963.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/963.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 11.199991 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 11.199991 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1321806 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 25909 voxels [15.8%] in weight mask
++ Number of points for matching = 25909
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 30.334 28.122 22.098 (index)
 + source center of mass = 85.409 161.512 187.140 (index)
 + source-target CM = -0.750 2.684 -7.523 (xyz)
 + center of mass shifts = -0.750 2.684 -7.523
++ shift param auto-range: -70.3..68.8 -66.8..72.2 -57.6..42.6
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.749741 .. 9.250259
 + Range param#2 [y-shift] = -7.316406 .. 12.683594
 + Range param#3 [z-shift] = -17.523232 .. 2.476768
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.749741 .. 39.250259
 + Range param#2 [y-shift] = -37.316406 .. 42.683594
 + Range param#3 [z-shift] = -47.523232 .. 32.476768
 + 12 free parameters
++ Normalized convergence radius = 0.000466
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1321806 [out of 15945776] voxels
 + base mask has 35779 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=57 usiz=185
 + - copying weight image
 + - using 25909 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 22245 total points stored in 209 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.00715996] **[#2=-0.0159778] *++.+-o-*[#16=-0.0226435] *o.*[#28=-0.0491841] *+oo+--o-.--o--+$-*[#4240=-0.0574492] **[#4613=-0.0607947] *+-
 + - best 45 costs found:
    0 v=-0.060795:   9.07  27.44 -18.91   3.10  34.36   2.55  [rand]
    1 v=-0.057449: -16.73 -16.81 -13.25 -20.53   3.14  10.08  [rand]
    2 v=-0.056763:   9.07  27.44 -18.91   3.10  34.36  -2.55  [rand]
    3 v=-0.053506: -20.24  19.35 -10.12 -30.54  19.59  20.03  [rand]
    4 v=-0.049184: -14.08 -10.65   5.81 -15.00 -15.00  15.00  [grid]
    5 v=-0.048527:   3.33   8.91 -15.32  -4.32  22.85  18.95  [rand]
    6 v=-0.043738: -14.08 -23.98   5.81 -15.00 -30.00  15.00  [grid]
    7 v=-0.041767: -14.78  18.40 -22.19 -24.25  37.55   4.41  [rand]
    8 v=-0.040254: -14.08  29.35 -20.86 -30.00  30.00  15.00  [grid]
    9 v=-0.040178: -20.24  19.35  -4.92 -30.54  19.59  20.03  [rand]
   10 v=-0.040090: -16.73  22.18  -1.80 -20.53   3.14  10.08  [rand]
   11 v=-0.037552: -14.08  29.35   5.81 -15.00  15.00  15.00  [grid]
   12 v=-0.036859: -14.08 -10.65   5.81 -30.00 -30.00  15.00  [grid]
   13 v=-0.036653:  -4.83   8.91 -15.32   4.32  22.85 -18.95  [rand]
   14 v=-0.036580:  12.58  29.35 -20.86  15.00  30.00 -15.00  [grid]
   15 v=-0.036171:  16.11  21.27 -21.98  19.57  37.09 -16.59  [rand]
   16 v=-0.035731:   9.07  27.44 -18.91  -3.10  34.36   2.55  [rand]
   17 v=-0.035650:  15.23 -16.81 -13.25  20.53   3.14 -10.08  [rand]
   18 v=-0.035532:  12.58 -10.65 -20.86  15.00  15.00 -15.00  [grid]
   19 v=-0.034219: -16.73 -16.81 -13.25 -20.53  -3.14  10.08  [rand]
   20 v=-0.034083:  12.58  16.02 -20.86  15.00  30.00 -15.00  [grid]
   21 v=-0.034057:  -9.39 -17.75   9.95 -25.20 -18.50 -13.54  [rand]
   22 v=-0.033695:  12.58 -10.65  19.14  15.00 -15.00  15.00  [grid]
   23 v=-0.032055:  31.09  14.48  -4.78 -23.31   3.26 -40.47  [rand]
   24 v=-0.031948: -14.08  16.02 -20.86 -30.00  30.00  15.00  [grid]
   25 v=-0.031825: -14.08  29.35 -20.86 -15.00 -15.00  15.00  [grid]
   26 v=-0.031421: -14.08 -10.65  19.14 -30.00 -30.00 -15.00  [grid]
   27 v=-0.031289: -14.08  16.02  19.14 -15.00 -15.00  15.00  [grid]
   28 v=-0.031122: -14.08  29.35 -20.86 -15.00  30.00  15.00  [grid]
   29 v=-0.031054: -10.57 -22.08   3.86  -3.10 -34.36   2.55  [rand]
   30 v=-0.030799:  -4.83  -3.54   0.27   4.32 -22.85  18.95  [rand]
   31 v=-0.030538:  25.92  29.35 -20.86  30.00  30.00 -15.00  [grid]
   32 v=-0.030405:  18.74  19.35 -10.12  30.54  19.59 -20.03  [rand]
   33 v=-0.030379: -14.08 -23.98   5.81 -15.00 -15.00 -15.00  [grid]
   34 v=-0.030370: -14.08  16.02   5.81 -15.00  15.00 -15.00  [grid]
   35 v=-0.030325: -16.89  -6.78  16.83 -20.99 -15.73 -16.09  [rand]
   36 v=-0.030090:  34.11  38.36 -21.77 -40.22  24.26 -41.52  [rand]
   37 v=-0.030085:  15.47 -11.43 -42.65  15.74  34.09  -7.78  [rand]
   38 v=-0.029920: -35.62  33.24 -23.30  11.68  29.04  39.38  [rand]
   39 v=-0.029620:   9.07  27.44 -18.91  -3.10  34.36  -2.55  [rand]
   40 v=-0.029564: -14.08 -10.65 -34.19 -15.00  15.00  15.00  [grid]
   41 v=-0.029424:  12.58 -10.65   5.81  15.00 -15.00 -15.00  [grid]
   42 v=-0.029144: -14.08 -10.65 -34.19 -30.00  30.00  30.00  [grid]
   43 v=-0.028840:  31.09  14.48 -10.26 -23.31   3.26 -40.47  [rand]
   44 v=-0.028474: -16.89  12.15  16.83 -20.99 -15.73  16.09  [rand]
*[#8009=-0.0615461] *[#8016=-0.0618735] *[#8017=-0.0621614] *[#8022=-0.062404] *[#8023=-0.0624159] *[#8024=-0.063387] *[#8025=-0.063833] *[#8032=-0.0640001] *[#8070=-0.0719222] *[#8074=-0.0721008] *[#8076=-0.0733519] *[#8077=-0.0750306] *[#8078=-0.0776788] *[#8083=-0.0782275] *[#8139=-0.0829778] *[#8140=-0.0877355] *[#8141=-0.0967891] *[#8142=-0.0985283] *[#8145=-0.10084] *[#8146=-0.110703] *[#8147=-0.124987] *[#8150=-0.132725] *[#8152=-0.135336] *[#8153=-0.139715] *[#8156=-0.140748] *[#8157=-0.144116] *[#8160=-0.147303] *[#8161=-0.151745] *[#8162=-0.15654] *[#8167=-0.161275] *[#8170=-0.161686] *[#8173=-0.162722] *[#8174=-0.163025] *[#8176=-0.1631] *[#8177=-0.163546] *[#8179=-0.164855] *[#8181=-0.165058] *[#8183=-0.165824] *[#8184=-0.165832] *[#8185=-0.167268] *[#8186=-0.168511] *[#8187=-0.1698] *[#8188=-0.171112] *[#8190=-0.171305] *[#8191=-0.173031] *[#8192=-0.174841] *[#8197=-0.177575] *[#8198=-0.177919] *[#8200=-0.179575] *[#8201=-0.181209] *[#8204=-0.183338] *[#9658=-0.193178] *[#9662=-0.199728]  + - costs of the above after a little optimization:
    0 v=-0.064000:   8.59  23.60 -17.96   2.99  35.26   1.51  [rand]
    1 v=-0.060859: -16.70 -16.66 -12.19 -20.28   2.01   9.94  [rand]
    2 v=-0.078228:   4.80  27.86 -17.74   2.71  33.53  -3.36  [rand]
    3 v=-0.070211: -21.60  22.18  -9.49 -30.70  16.50  15.11  [rand]
    4 v=-0.183338:  -2.76  -9.29   4.56  -4.02 -12.10   0.78  [grid]
    5 v=-0.064437:   3.07  12.02 -15.02  -5.32  22.57  17.86  [rand]
    6 v=-0.060960: -18.60 -24.11   7.46 -14.52 -30.92  15.43  [grid]
    7 v=-0.043377: -14.19  18.87 -21.86 -23.89  36.91   4.19  [rand]
    8 v=-0.045933: -17.63  29.01 -20.58 -29.35  29.92  14.32  [grid]
    9 v=-0.070956: -20.31  21.30  -9.52 -31.34  18.34  14.15  [rand]
   10 v=-0.084705: -15.81  15.11  -5.53 -23.84  11.12   5.78  [rand]
   11 v=-0.062055: -11.47  27.82  -2.82 -16.43  12.63  10.88  [grid]
   12 v=-0.042608: -14.07 -14.73   5.64 -30.67 -29.89  14.71  [grid]
   13 v=-0.066318:  -1.97   7.16 -12.58   4.05  20.58 -18.61  [rand]
   14 v=-0.048019:  12.53  29.18 -16.93  14.88  30.55 -14.80  [grid]
   15 v=-0.044309:  17.07  21.77 -22.87  19.26  36.82 -12.48  [rand]
   16 v=-0.079834:   1.72  27.94 -18.26  -3.68  33.85   2.00  [rand]
   17 v=-0.056316:  16.60 -16.42 -12.30  18.71   2.98  -9.78  [rand]
   18 v=-0.045698:  12.27  -9.75 -22.89  13.07  12.81 -11.01  [grid]
   19 v=-0.065168: -17.37 -16.87  -8.78 -20.71  -3.49  10.50  [rand]
   20 v=-0.067797:   9.58  20.07 -17.12   9.89  29.61 -11.10  [grid]
   21 v=-0.168015:  -3.55 -10.90   4.23  -2.29 -14.03   4.71  [rand]
   22 v=-0.046566:  13.80  -6.82  18.56  13.38 -14.03  11.94  [grid]
   23 v=-0.045923:  31.38  10.59  -5.43 -23.37   2.77 -40.29  [rand]
   24 v=-0.063061: -10.31  17.35 -18.04 -23.92  29.14  17.65  [grid]
   25 v=-0.037504: -14.25  30.71 -21.42 -14.64 -11.72  14.30  [grid]
   26 v=-0.040426: -14.16 -10.36  18.43 -25.44 -29.12 -16.64  [grid]
   27 v=-0.035784: -14.06  15.62  18.71 -16.46 -15.60  11.68  [grid]
   28 v=-0.062757:  -9.75  26.55 -17.42 -19.96  31.09  12.38  [grid]
   29 v=-0.128488:  -2.94 -14.30   9.46  -2.34 -20.73   3.00  [rand]
   30 v=-0.039637:  -4.27  -2.05   0.89   9.33 -23.08  18.33  [rand]
   31 v=-0.032384:  25.49  29.07 -20.28  28.88  30.87 -14.51  [grid]
   32 v=-0.041090:  22.46  19.46 -10.69  29.52  19.33 -20.75  [rand]
   33 v=-0.058871: -10.33 -19.07   5.89 -12.55 -17.04 -17.20  [grid]
   34 v=-0.035823: -14.17  15.68   5.38 -14.00  14.84 -15.72  [grid]
   35 v=-0.038498: -16.56  -8.95  15.81 -20.89 -17.15 -19.63  [rand]
   36 v=-0.034207:  34.17  34.40 -21.21 -40.53  24.16 -41.44  [rand]
   37 v=-0.033675:  14.87 -12.53 -41.45  15.31  34.29  -8.18  [rand]
   38 v=-0.033600: -34.51  32.84 -18.54  11.13  29.13  40.05  [rand]
   39 v=-0.094653:  -0.81  31.62 -15.81  -1.75  27.99  -6.92  [rand]
   40 v=-0.041977: -14.54 -11.70 -28.20 -15.72  16.62  12.24  [grid]
   41 v=-0.064817:  15.45 -10.08   4.96  13.37 -14.28 -13.30  [grid]
   42 v=-0.033830: -13.29  -7.34 -34.23 -29.79  30.30  29.87  [grid]
   43 v=-0.049714:  33.64   9.38  -7.70 -18.46   0.37 -42.17  [rand]
  *44 v=-0.199728:  -4.58   3.66   0.71  -6.80  -0.06   3.18  [rand]
 + - save #44 for twobest
 + - save # 4 for twobest
 + - skip #21 for twobest: too close to set # 4
 + - save #29 for twobest
 + - save #39 for twobest
 + - save #10 for twobest
 + - save #16 for twobest
 + - save # 2 for twobest
 + - save # 9 for twobest
 + - skip # 3 for twobest: too close to set # 9
 + - save #20 for twobest
 + - save #13 for twobest
 + - save #19 for twobest
 + - save #41 for twobest
 + - save # 5 for twobest
 + - save # 0 for twobest
 + - save #24 for twobest
 + - save #28 for twobest
 + - save #11 for twobest
 + - save # 6 for twobest
 + - save # 1 for twobest
 + - save #33 for twobest
 + - save #17 for twobest
 + - save #43 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=57 usiz=185
 + - retaining old weight image
 + - using 25909 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22768 total points stored in 232 'RHDD(13.7332)' bloks
*[#9682=-0.203082] *[#9686=-0.204276] *[#9689=-0.222577] *[#9690=-0.253904] *[#9692=-0.255544] *[#9693=-0.26959] *[#9694=-0.273482] *[#9695=-0.273721] *[#9696=-0.280099] *[#9697=-0.294203] *[#9698=-0.314428] *[#9699=-0.324388] *[#9702=-0.335278] *[#9705=-0.360337] *[#9706=-0.37582] *[#9707=-0.415198] *[#9708=-0.456476] *[#9712=-0.457753] *[#9713=-0.459271] *[#9715=-0.46227] *[#9716=-0.472971] *[#9717=-0.494647] *[#9718=-0.524232] *[#9721=-0.528999] *[#9723=-0.529068] *[#9728=-0.533255] *[#9730=-0.535817] *[#9732=-0.537448] *[#9733=-0.538269] *[#9734=-0.539462] *[#9735=-0.539547] *[#9739=-0.539729] *[#9743=-0.539805] *[#9747=-0.541507] *[#9748=-0.541963] *[#9749=-0.542354] *[#9751=-0.543846] *[#9752=-0.546022] *[#9761=-0.547051] 
 + - param set #1 has cost=-0.547051
 + -- Parameters = -0.1377 -0.2288 0.3225 -0.5096 -1.8811 -0.1126 0.9982 1.0465 1.0044 -0.0025 -0.0125 0.0001
 + - param set #2 has cost=-0.459814
 + -- Parameters = -0.0327 -1.1206 -0.2365 -0.6197 -1.1852 -1.5960 1.0337 1.0100 1.0711 -0.0070 0.0199 -0.0028
 + - param set #3 has cost=-0.278420
 + -- Parameters = 0.7263 -0.0320 -0.0435 -0.5103 -6.9356 -2.0585 1.0896 1.1409 1.0145 0.0076 0.0334 -0.0519
 + - param set #4 has cost=-0.069870
 + -- Parameters = -0.4765 31.8120 -15.6008 -2.3396 28.1937 -6.3859 1.0167 1.0005 1.0028 0.0027 -0.0000 0.0014
 + - param set #5 has cost=-0.076296
 + -- Parameters = -15.2058 15.1381 -5.6121 -23.2935 10.8334 5.2860 0.9967 1.0188 1.0088 0.0031 -0.0010 -0.0012
 + - param set #6 has cost=-0.058953
 + -- Parameters = 2.9329 28.7690 -18.8375 -3.0252 32.9060 3.0239 1.0044 1.0012 1.0257 0.0016 0.0017 0.0012
 + - param set #7 has cost=-0.057750
 + -- Parameters = 4.9601 28.1914 -21.0176 2.6675 33.6849 -3.4071 1.0008 1.0018 0.9997 -0.0004 0.0000 -0.0001
 + - param set #8 has cost=-0.062461
 + -- Parameters = -20.5082 20.3880 -10.8802 -27.7979 18.4319 13.1758 0.9926 0.9829 0.9893 -0.0006 -0.0045 -0.0052
 + - param set #9 has cost=-0.059386
 + -- Parameters = 9.1867 19.4934 -17.2593 10.2713 28.7386 -10.3956 0.9994 0.9974 0.9981 0.0002 0.0003 0.0115
 + - param set #10 has cost=-0.069061
 + -- Parameters = -2.0835 7.2948 -12.4513 3.5205 20.9370 -18.0562 1.0229 0.9996 1.0058 -0.0001 -0.0031 0.0028
 + - param set #11 has cost=-0.053402
 + -- Parameters = -17.1833 -15.4944 -8.5390 -19.4362 -2.7726 10.0020 0.9974 1.0001 0.9968 0.0096 -0.0016 -0.0001
*[#10589=-0.550962] *[#10592=-0.554977] *[#10593=-0.55605] *[#10600=-0.556443] *[#10601=-0.557074] *[#10602=-0.557717] *[#10604=-0.55833] *[#10605=-0.558397] *[#10607=-0.558981] *[#10608=-0.559306] *[#10609=-0.559306] *[#10613=-0.559513] *[#10614=-0.559535] *[#10616=-0.561026] *[#10623=-0.561611] *[#10624=-0.562742] *[#10625=-0.563005] *[#10627=-0.563507] 
 + - param set #12 has cost=-0.563507
 + -- Parameters = 0.1810 -0.7240 0.2695 -0.0965 -1.7018 -0.5626 1.0020 1.0140 0.9851 0.0145 0.0080 0.0024
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0922 
 + --- dist(#3,#1) = 0.234 
 + --- dist(#4,#1) = 0.346 
 + --- dist(#5,#1) = 0.258 
 + --- dist(#6,#1) = 0.407 
 + --- dist(#7,#1) = 0.252 
 + --- dist(#8,#1) = 0.308 
 + --- dist(#9,#1) = 0.338 
 + --- dist(#10,#1) = 0.385 
 + --- dist(#11,#1) = 0.393 
 + --- dist(#12,#1) = 0.217 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=57 usiz=185
 + - retaining old weight image
 + - using 25909 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23089 total points stored in 242 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.560105
 + -- Parameters = 0.1006 -0.7388 0.1809 -0.1504 -1.9966 -0.5428 0.9992 1.0182 0.9749 0.0107 -0.0031 -0.0035
 + - param set #2 has cost=-0.557480
 + -- Parameters = -0.0087 -0.6326 0.0853 -0.4006 -2.1251 -0.3329 1.0010 1.0211 0.9757 -0.0016 -0.0088 -0.0075
 + - param set #3 has cost=-0.550765
 + -- Parameters = -0.1494 -0.7867 0.0002 -0.3928 -2.0441 -1.5055 1.0005 1.0190 1.0059 0.0055 0.0205 -0.0093
 + - param set #4 has cost=-0.531092
 + -- Parameters = -0.0336 -0.3632 0.0210 -0.4007 -4.6735 -1.3754 1.0065 1.0271 0.9855 0.0033 0.0250 -0.0653
 + - param set #5 has cost=-0.071979
 + -- Parameters = -13.3559 14.8132 -5.4357 -19.7816 10.9906 5.3582 0.9682 1.0027 1.0082 0.0004 -0.0034 -0.0004
 + - param set #6 has cost=-0.060704
 + -- Parameters = -0.5049 30.2172 -15.0571 -1.4487 27.9266 -6.5317 1.0509 0.9502 1.0201 0.0104 0.0001 0.0142
 + - param set #7 has cost=-0.065407
 + -- Parameters = -2.1949 7.1467 -12.5873 3.2379 21.3007 -18.2615 1.0236 0.9992 1.0069 0.0004 -0.0034 0.0089
 + - param set #8 has cost=-0.064613
 + -- Parameters = -18.6412 18.6273 -10.9090 -25.4080 18.5961 11.7058 0.9854 0.9350 0.9404 0.0100 -0.0270 -0.0007
 + - param set #9 has cost=-0.054639
 + -- Parameters = 8.5328 19.2132 -16.3629 8.2692 27.9343 -10.1561 1.0089 0.9997 1.0086 0.0025 -0.0000 0.0222
 + - param set #10 has cost=-0.050835
 + -- Parameters = 3.7337 28.0709 -20.8460 -2.0977 31.3530 1.0171 1.0229 1.0038 1.0805 0.0128 0.0024 -0.0038
 + - param set #11 has cost=-0.051999
 + -- Parameters = 4.4127 27.0218 -20.9937 2.3285 33.4465 -3.9716 1.0004 1.0055 1.0014 -0.0012 0.0024 -0.0014
 + - param set #12 has cost=-0.052202
 + -- Parameters = -16.2894 -15.0902 -8.6342 -18.4480 -2.7591 9.3439 0.9642 0.9916 0.9634 0.0149 -0.0067 -0.0216
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0554 
 + --- dist(#3,#1) = 0.106 
 + --- dist(#4,#1) = 0.278 
 + --- dist(#5,#1) = 0.218 
 + --- dist(#6,#1) = 0.259 
 + --- dist(#7,#1) = 0.281 
 + --- dist(#8,#1) = 0.387 
 + --- dist(#9,#1) = 0.333 
 + --- dist(#10,#1) = 0.205 
 + --- dist(#11,#1) = 0.394 
 + --- dist(#12,#1) = 0.371 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=57 usiz=185
 + - retaining old weight image
 + - using 25909 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23455 total points stored in 254 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.531455
 + -- Parameters = 0.1144 -0.7636 0.0972 -0.1375 -1.9115 -0.5803 1.0011 1.0213 0.9746 0.0069 -0.0029 -0.0060
 + - param set #2 has cost=-0.531502
 + -- Parameters = 0.0873 -0.6969 0.0641 -0.1680 -2.1145 -0.4029 0.9991 1.0215 0.9743 0.0059 -0.0080 -0.0101
 + - param set #3 has cost=-0.530120
 + -- Parameters = 0.0403 -0.7833 0.0378 -0.2431 -2.0386 -1.1460 1.0040 1.0206 0.9857 0.0048 0.0104 -0.0105
 + - param set #4 has cost=-0.517059
 + -- Parameters = -0.0229 -0.6115 -0.0324 -0.3633 -4.0160 -1.2869 1.0047 1.0237 0.9827 -0.0033 0.0164 -0.0503
 + - param set #5 has cost=-0.066206
 + -- Parameters = -13.3079 14.8656 -5.5135 -19.7312 10.7272 5.5915 0.9724 1.0044 1.0125 0.0047 -0.0055 -0.0034
 + - param set #6 has cost=-0.060417
 + -- Parameters = -2.2497 7.0304 -12.8022 3.2394 21.5098 -17.7168 1.0344 0.9975 1.0104 0.0016 -0.0082 0.0118
 + - param set #7 has cost=-0.064362
 + -- Parameters = -18.2692 18.6117 -10.9378 -24.6118 18.6087 12.3430 0.9788 0.9440 0.9465 0.0350 -0.0605 -0.0190
 + - param set #8 has cost=-0.049401
 + -- Parameters = -0.1727 30.3556 -14.3764 -1.5389 27.7466 -6.0844 1.0689 0.9496 1.0150 0.0100 0.0013 0.0143
 + - param set #9 has cost=-0.051538
 + -- Parameters = 8.0326 18.9606 -15.8204 7.6854 27.6073 -9.8328 1.0139 1.0009 1.0152 0.0023 -0.0006 0.0230
 + - param set #10 has cost=-0.045456
 + -- Parameters = -15.9323 -15.1774 -8.3298 -18.5848 -2.8928 9.5232 0.9585 0.9918 0.9375 0.0158 -0.0075 -0.0156
 + - param set #11 has cost=-0.044323
 + -- Parameters = 4.7614 26.9683 -20.9822 2.2982 33.3777 -3.8923 1.0123 1.0032 1.0048 -0.0032 0.0021 -0.0041
 + - param set #12 has cost=-0.041853
 + -- Parameters = 3.8329 28.1326 -20.7686 -2.0681 31.4240 0.8157 1.0234 0.9988 1.0786 0.0139 0.0020 -0.0042
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0229 
 + --- dist(#3,#1) = 0.0825 
 + --- dist(#4,#1) = 0.181 
 + --- dist(#5,#1) = 0.217 
 + --- dist(#6,#1) = 0.272 
 + --- dist(#7,#1) = 0.262 
 + --- dist(#8,#1) = 0.33 
 + --- dist(#9,#1) = 0.388 
 + --- dist(#10,#1) = 0.205 
 + --- dist(#11,#1) = 0.394 
 + --- dist(#12,#1) = 0.373 
 + - Total coarse refinement net CPU time = 0.0 s; 3205 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=57 usiz=185
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 23525 total points stored in 256 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.503338 *
 + -- Parameters = 0.0873 -0.6969 0.0641 -0.1680 -2.1145 -0.4029 0.9991 1.0215 0.9743 0.0059 -0.0080 -0.0101
 + - cost(#2)=-0.503367 *
 + -- Parameters = 0.1144 -0.7636 0.0972 -0.1375 -1.9115 -0.5803 1.0011 1.0213 0.9746 0.0069 -0.0029 -0.0060
 + - cost(#3)=-0.506499 *
 + -- Parameters = 0.0403 -0.7833 0.0378 -0.2431 -2.0386 -1.1460 1.0040 1.0206 0.9857 0.0048 0.0104 -0.0105
 + - cost(#4)=-0.491081  
 + -- Parameters = -0.0229 -0.6115 -0.0324 -0.3633 -4.0160 -1.2869 1.0047 1.0237 0.9827 -0.0033 0.0164 -0.0503
 + - cost(#5)=-0.056653  
 + -- Parameters = -13.3079 14.8656 -5.5135 -19.7312 10.7272 5.5915 0.9724 1.0044 1.0125 0.0047 -0.0055 -0.0034
 + - cost(#6)=-0.056094  
 + -- Parameters = -18.2692 18.6117 -10.9378 -24.6118 18.6087 12.3430 0.9788 0.9440 0.9465 0.0350 -0.0605 -0.0190
 + - cost(#7)=-0.052798  
 + -- Parameters = -2.2497 7.0304 -12.8022 3.2394 21.5098 -17.7168 1.0344 0.9975 1.0104 0.0016 -0.0082 0.0118
 + - cost(#8)=-0.043709  
 + -- Parameters = 8.0326 18.9606 -15.8204 7.6854 27.6073 -9.8328 1.0139 1.0009 1.0152 0.0023 -0.0006 0.0230
 + - cost(#9)=-0.040940  
 + -- Parameters = -0.1727 30.3556 -14.3764 -1.5389 27.7466 -6.0844 1.0689 0.9496 1.0150 0.0100 0.0013 0.0143
 + - cost(#10)=-0.039466  
 + -- Parameters = -15.9323 -15.1774 -8.3298 -18.5848 -2.8928 9.5232 0.9585 0.9918 0.9375 0.0158 -0.0075 -0.0156
 + - cost(#11)=-0.036218  
 + -- Parameters = 4.7614 26.9683 -20.9822 2.2982 33.3777 -3.8923 1.0123 1.0032 1.0048 -0.0032 0.0021 -0.0041
 + - cost(#12)=-0.034184  
 + -- Parameters = 3.8329 28.1326 -20.7686 -2.0681 31.4240 0.8157 1.0234 0.9988 1.0786 0.0139 0.0020 -0.0042
 + - cost(#13)=-0.001754  
 + -- Parameters = -0.7497 2.6836 -7.5232 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.510438 *
 + -- Parameters = 0.1542 -0.7612 0.0617 -0.1350 -2.2071 -0.4737 1.0013 1.0207 0.9893 0.0084 -0.0032 -0.0131
 + - cost(#2)=-0.508851  
 + -- Parameters = 0.1520 -0.8474 0.1295 -0.1478 -1.8904 -0.5992 1.0017 1.0188 0.9900 0.0070 0.0005 -0.0066
 + - cost(#3)=-0.510253  
 + -- Parameters = 0.1046 -0.8076 0.0876 -0.1810 -2.1563 -0.8729 1.0004 1.0185 0.9918 0.0074 0.0077 -0.0120
 + - cost(#4)=-0.503263  
 + -- Parameters = 0.0944 -0.5826 -0.0633 -0.2697 -3.7206 -0.9064 1.0037 1.0189 0.9915 0.0050 0.0105 -0.0444
 + - cost(#5)=-0.056994  
 + -- Parameters = -13.4305 14.9235 -5.6321 -19.6978 10.7612 5.7009 0.9738 1.0033 1.0083 0.0052 -0.0077 -0.0048
 + - cost(#6)=-0.058030  
 + -- Parameters = -18.0758 18.3776 -11.1765 -24.4888 18.7959 12.3379 0.9924 0.9167 0.9450 0.0383 -0.0728 -0.0238
 + - cost(#7)=-0.055550  
 + -- Parameters = -1.8986 6.1526 -11.6813 3.7802 20.8666 -17.7873 1.0365 0.9879 1.0108 0.0006 -0.0092 0.0126
 + - cost(#8)=-0.044230  
 + -- Parameters = 8.0490 18.7921 -15.7530 7.6556 27.7251 -9.5372 1.0141 0.9981 1.0151 0.0028 -0.0074 0.0241
 + - cost(#9)=-0.041949  
 + -- Parameters = 0.0733 30.4375 -14.3546 -1.4892 27.5903 -6.2287 1.0749 0.9510 1.0146 0.0054 0.0005 0.0139
 + - cost(#10)=-0.039934  
 + -- Parameters = -16.0317 -15.4659 -8.4350 -18.6120 -2.8644 9.5251 0.9541 0.9914 0.9366 0.0154 -0.0072 -0.0161
 + - cost(#11)=-0.037898  
 + -- Parameters = 4.7803 26.1190 -21.1540 2.6293 33.0381 -5.0813 1.0150 1.0013 1.0013 -0.0086 0.0020 -0.0034
 + - cost(#12)=-0.034707  
 + -- Parameters = 3.8998 28.2065 -20.5645 -1.9339 31.4068 0.4420 1.0244 0.9956 1.0798 0.0198 0.0030 -0.0038
 + - cost(#13)=-0.502919  
 + -- Parameters = 0.1722 -0.8722 0.2410 -0.1749 -2.0227 -0.1398 1.0044 1.0165 0.9877 0.0039 -0.0131 -0.0054
 + - case #1 is now the best
 + - Initial  cost = -0.510438
 + - Initial fine Parameters = 0.1542 -0.7612 0.0617 -0.1350 -2.2071 -0.4737 1.0013 1.0207 0.9893 0.0084 -0.0032 -0.0131
 + - Finalish cost = -0.511821 ; 290 funcs
 + - Final    cost = -0.512057 ; 233 funcs
 + Final fine fit Parameters:
       x-shift= 0.1494   y-shift=-0.6884   z-shift= 0.0640
       z-angle=-0.1507   x-angle=-2.5185   y-angle=-0.6140
       x-scale= 1.0014   y-scale= 1.0208   z-scale= 0.9925
     y/x-shear= 0.0076 z/x-shear= 0.0008 z/y-shear=-0.0191
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.1494 -0.6884 0.0640 -0.1507 -2.5185 -0.6140 1.0014 1.0208 0.9925 0.0076 0.0008 -0.0191
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 20.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 11.199991 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0082 -1.0051 0.1488 230.6171 -0.0116 0.1744 0.9822 81.0164 -1.0014 -0.0022 -0.0107 195.3770
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.9 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3165.750100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 94.7537 49.4395   ITER = 10/137
94.7537

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 804ms]
lev=0 0..171 0..213 0..166: [first cost=-0.67355] ... done [cost:-0.67355==>-0.72717]
lev=1 patch=129x161x125 [clock= 14m 44s 355ms]........:[cost=-0.75862]:........ done [cost:-0.72717==>-0.76479 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 22m 39s 355ms]......................... done [cost:-0.76479==>-0.83942 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 28m 42s 109ms].............. done [cost:-0.83942==>-0.90011 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 33m 24s 553ms]......... done [cost:-0.90011==>-0.94300 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 37m 17s 926ms]................ done [cost:-0.94300==>-1.03579 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 40m 56s 829ms]........................... done [cost:-1.03579==>-1.06220 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 44m 25s 19ms]............................... done [cost:-1.06220==>-1.15728 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 48m 7s 788ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9392/tb9392.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.9 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb9392.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.199991 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9392.r01.tshift+orig.BRIK is 11.199991 degrees from plumb.
++ Reading input dataset ./pb01.tb9392.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28848 voxels
 + 5038 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.132  pitch=-0.300  yaw=-0.008  dS=-0.421  dL=-0.125  dP=-0.047
++ Mean: roll=-0.024  pitch=-0.087  yaw=+0.039  dS=-0.003  dL=+0.025  dP=-0.008
++ Max : roll=+0.112  pitch=+0.200  yaw=+0.164  dS=+0.089  dL=+0.113  dP=+0.132
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.12(0.12) 0.10(0.04) 0.11(0.03) 0.11(0.05) 0.14(0.04) 0.13(0.12) 0.16(0.06) 0.15(0.07) 0.17(0.05) 0.15(0.05) 0.12(0.05) 0.13(0.02) 0.15(0.03) 0.16(0.02) 0.16(0.05) 0.15(0.04) 0.16(0.02) 0.18(0.03) 0.18(0.03) 0.16(0.04) 0.16(0.02) 0.17(0.14) 0.24(0.15) 0.21(0.05) 0.21(0.02) 0.20(0.03) 0.19(0.03) 0.19(0.02) 0.18(0.02) 0.19(0.01) 0.17(0.05) 0.17(0.03) 0.16(0.01) 0.16(0.01) 0.16(0.03) 0.17(0.03) 0.17(0.03) 0.16(0.02) 0.15(0.02) 0.16(0.02) 0.15(0.02) 0.16(0.02) 0.17(0.03) 0.16(0.03) 0.16(0.03) 0.15(0.02) 0.16(0.03) 0.16(0.02) 0.15(0.02) 0.16(0.02) 0.17(0.01) 0.18(0.02) 0.19(0.04) 0.17(0.06) 0.17(0.02) 0.18(0.02) 0.18(0.02) 0.19(0.03) 0.19(0.02) 0.20(0.02) 0.21(0.04) 0.23(0.02) 0.22(0.01) 0.22(0.02) 0.24(0.03) 0.25(0.02) 0.25(0.04) 0.24(0.02) 0.24(0.02) 0.25(0.02) 0.23(0.03) 0.20(0.05) 0.22(0.04) 0.24(0.03) 0.25(0.03) 0.27(0.04) 0.27(0.02) 0.25(0.02) 0.24(0.03) 0.24(0.02) 0.22(0.08) 0.19(0.03) 0.19(0.04) 0.20(0.04) 0.23(0.06) 0.22(0.03) 0.23(0.04) 0.24(0.02) 0.24(0.03) 0.24(0.02) 0.28(0.05) 0.31(0.03) 0.31(0.04) 0.34(0.03) 0.28(0.07) 0.30(0.03) 0.30(0.03) 0.32(0.04) 0.33(0.04) 0.33(0.02) 0.31(0.05) 0.31(0.01) 0.31(0.02) 0.31(0.03) 0.33(0.02) 0.35(0.02) 0.37(0.03) 0.36(0.02) 0.36(0.03) 0.36(0.02) 0.34(0.04) 0.34(0.02) 0.36(0.03) 0.37(0.03) 0.32(0.05) 0.33(0.03) 0.35(0.04) 0.36(0.02) 0.38(0.06) 0.37(0.04) 0.38(0.04) 0.32(0.13) 0.32(0.06) 0.31(0.05) 0.33(0.02) 0.32(0.04) 0.32(0.03) 0.33(0.04) 0.35(0.04) 0.33(0.02) 0.34(0.04) 0.36(0.05) 0.37(0.02) 0.37(0.03) 0.39(0.02) 0.40(0.03) 0.40(0.02) 0.42(0.03) 0.41(0.03) 0.40(0.02) 0.44(0.10) 0.41(0.07) 0.57(0.60) 0.67(0.11) 0.66(1.00) 0.57(0.34) 0.56(0.12) 0.56(0.07) 0.60(0.09)
++ Max displacement in automask = 0.67 (mm) at sub-brick 144
++ Max delta displ  in automask = 1.00 (mm) at sub-brick 145
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb9392.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9392.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9392.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9392.r01.tshift+orig.BRIK is 11.199991 degrees from plumb.
++ Source dataset: ./pb01.tb9392.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.6
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.199991 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb9392.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.199991 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9392.r02.tshift+orig.BRIK is 11.199991 degrees from plumb.
++ Reading input dataset ./pb01.tb9392.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29111 voxels
 + 5215 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.396  pitch=-0.648  yaw=+0.055  dS=-1.106  dL=+0.415  dP=+0.028
++ Mean: roll=+0.821  pitch=-0.368  yaw=+0.148  dS=-0.635  dL=+1.015  dP=+0.218
++ Max : roll=+1.336  pitch=+0.072  yaw=+0.330  dS=-0.530  dL=+1.703  dP=+0.654
++ Max displacements (mm) for each sub-brick:
 1.33(0.00) 1.37(0.16) 1.29(0.21) 1.32(0.09) 1.37(0.09) 1.41(0.10) 1.44(0.06) 1.50(0.23) 1.50(0.08) 1.50(0.11) 1.49(0.04) 1.50(0.04) 1.45(0.07) 1.46(0.05) 1.47(0.05) 1.47(0.06) 1.48(0.03) 1.49(0.02) 1.50(0.05) 1.50(0.02) 1.52(0.02) 1.55(0.03) 1.55(0.02) 1.53(0.03) 1.55(0.02) 1.55(0.02) 1.57(0.03) 1.58(0.02) 1.57(0.02) 1.60(0.04) 1.64(0.05) 1.68(0.04) 1.70(0.02) 1.70(0.02) 1.72(0.03) 1.76(0.05) 1.78(0.06) 1.79(0.03) 1.79(0.02) 1.79(0.03) 1.82(0.03) 1.87(0.06) 1.89(0.03) 1.87(0.03) 1.88(0.03) 1.86(0.05) 1.87(0.03) 1.88(0.03) 1.89(0.04) 1.89(0.02) 1.89(0.03) 1.90(0.01) 1.91(0.03) 1.92(0.03) 1.92(0.02) 1.95(0.04) 1.97(0.02) 1.96(0.04) 1.98(0.02) 2.00(0.04) 2.04(0.05) 2.08(0.05) 2.07(0.05) 2.06(0.03) 2.09(0.03) 2.11(0.06) 2.12(0.04) 2.15(0.07) 2.14(0.14) 2.15(0.03) 2.18(0.05) 2.22(0.06) 2.24(0.06) 2.25(0.06) 2.30(0.06) 2.32(0.04) 2.31(0.15) 2.36(0.06) 2.37(0.06) 2.41(0.06) 2.46(0.07) 2.48(0.02) 2.51(0.05) 2.55(0.05) 2.58(0.06) 2.61(0.04) 2.62(0.03) 2.64(0.03) 2.66(0.04) 2.72(0.06) 2.76(0.06) 2.79(0.04) 2.81(0.04) 2.80(0.03) 2.83(0.04) 2.86(0.05) 2.86(0.05) 2.86(0.05) 2.86(0.03) 2.90(0.05) 2.95(0.13) 2.99(0.09) 2.96(0.07) 2.99(0.07) 3.01(0.02) 3.01(0.02) 3.01(0.02) 3.05(0.07) 3.05(0.18) 3.01(0.09) 3.04(0.13) 3.02(0.09) 3.03(0.05) 3.06(0.04) 3.07(0.07) 3.09(0.05) 3.09(0.05) 3.09(0.04) 3.10(0.04) 3.10(0.03) 3.11(0.05) 3.10(0.02) 3.10(0.03) 3.13(0.05) 3.12(0.04) 3.13(0.04) 3.14(0.02) 3.14(0.05) 3.13(0.03) 3.11(0.04) 3.12(0.05) 3.11(0.04) 3.08(0.04) 3.07(0.02) 3.11(0.05) 3.05(0.07) 3.03(0.05) 3.05(0.05) 3.05(0.02) 3.06(0.02) 3.07(0.03) 3.33(0.60) 3.59(0.28) 3.69(0.29) 3.56(0.63) 3.66(0.23) 3.82(0.17) 3.81(0.17) 3.84(0.05) 3.92(0.10)
++ Max displacement in automask = 3.92 (mm) at sub-brick 149
++ Max delta displ  in automask = 0.63 (mm) at sub-brick 144
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb9392.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9392.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9392.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9392.r02.tshift+orig.BRIK is 11.199991 degrees from plumb.
++ Source dataset: ./pb01.tb9392.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.199991 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.3
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb9392.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.199991 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9392.r03.tshift+orig.BRIK is 11.199991 degrees from plumb.
++ Reading input dataset ./pb01.tb9392.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 28818 voxels
 + 5126 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+1.104  pitch=-0.562  yaw=+0.097  dS=-1.529  dL=+0.885  dP=-0.145
++ Mean: roll=+1.165  pitch=-0.402  yaw=+0.251  dS=-1.373  dL=+0.980  dP=+0.205
++ Max : roll=+1.259  pitch=+0.337  yaw=+0.354  dS=-1.270  dL=+1.053  dP=+0.266
++ Max displacements (mm) for each sub-brick:
 2.92(0.00) 2.96(0.08) 2.99(0.05) 2.99(0.08) 2.90(0.13) 2.85(0.09) 2.88(0.06) 2.89(0.05) 2.90(0.03) 2.94(0.04) 2.92(0.03) 2.92(0.04) 2.93(0.03) 2.93(0.02) 2.94(0.03) 2.93(0.02) 2.92(0.03) 2.92(0.02) 2.93(0.01) 2.93(0.01) 2.92(0.01) 2.92(0.01) 2.94(0.02) 2.93(0.02) 2.94(0.02) 2.95(0.02) 2.97(0.03) 2.94(0.11) 3.33(1.28) 3.19(0.28) 2.79(1.34) 2.89(0.22) 2.88(0.03) 2.89(0.02) 2.90(0.01) 2.90(0.02) 2.91(0.02) 2.90(0.04) 2.89(0.02) 2.90(0.02) 2.89(0.03) 2.89(0.02) 2.90(0.01) 2.89(0.02) 2.90(0.02) 2.91(0.05) 2.93(0.03) 2.92(0.01) 2.91(0.03) 2.92(0.02) 2.93(0.01) 2.92(0.02) 2.94(0.03) 2.94(0.02) 2.92(0.05) 2.93(0.02) 2.94(0.02) 2.94(0.02) 2.94(0.01) 2.93(0.02) 2.93(0.01) 2.95(0.01) 2.94(0.04) 2.93(0.01) 2.95(0.03) 2.95(0.01) 2.93(0.03) 2.95(0.03) 2.97(0.06) 2.98(0.03) 2.98(0.05) 3.00(0.02) 2.99(0.03) 3.00(0.02) 3.00(0.03) 3.05(0.06) 3.03(0.03) 3.00(0.03) 3.02(0.03) 3.01(0.01) 3.01(0.03) 3.01(0.01) 3.01(0.01) 3.02(0.03) 3.02(0.01) 3.00(0.02) 3.01(0.01) 3.00(0.02) 2.99(0.02) 2.99(0.02) 2.98(0.02) 2.99(0.03) 2.97(0.05) 2.92(0.05) 2.95(0.06) 2.95(0.03) 2.95(0.02) 2.95(0.03) 2.95(0.02) 2.95(0.03) 2.95(0.02) 2.95(0.03) 2.95(0.01) 2.94(0.04) 2.95(0.01) 2.94(0.03) 2.92(0.19) 2.93(0.13) 2.93(0.06) 2.94(0.02) 2.95(0.03) 2.96(0.03) 2.96(0.03) 2.96(0.02) 2.97(0.03) 2.96(0.01) 2.94(0.03) 2.94(0.03) 2.85(0.21) 2.90(0.09) 2.96(0.15) 2.93(0.14) 2.89(0.10) 3.03(0.21) 3.13(0.29) 3.07(0.21) 2.98(0.21) 3.01(0.10) 3.03(0.05) 3.05(0.03) 3.04(0.02) 3.04(0.02) 3.02(0.06) 3.12(0.15) 3.14(0.04) 3.15(0.02) 3.16(0.03) 3.18(0.03) 3.17(0.03) 3.18(0.04) 3.18(0.03) 3.19(0.02) 3.19(0.03) 3.22(0.05) 3.23(0.03) 3.25(0.02) 3.23(0.07) 3.20(0.04) 3.19(0.03) 3.22(0.06)
++ Max displacement in automask = 3.33 (mm) at sub-brick 28
++ Max delta displ  in automask = 1.34 (mm) at sub-brick 30
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb9392.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9392.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9392.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9392.r03.tshift+orig.BRIK is 11.199991 degrees from plumb.
++ Source dataset: ./pb01.tb9392.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.199991 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9392.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9392.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9392.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9392.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9392.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9392.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.199991 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb9392
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb9392+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb9392+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1205827 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=1
++ Zero-pad: zbot=0 ztop=1
++ Computing -autobox
++ 295974 voxels [67.5%] in weight mask
++ Number of points for matching = 139107
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.192096
   sp   = 0.372735
   mi   = -0.4534
   crM  = 0.0639204
   nmi  = 0.849688
   je   = 2.56298
   hel  = -0.0872387
   crA  = 0.252922
   crU  = 0.245922
   lss  = 0.807904
   lpc  = -0.0164069
   lpa  = 0.983593
   lpc+ = 0.158058
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.5
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb9392+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb9392+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 33.8 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9392.r01.blur pb02.tb9392.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9392.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb9392.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9392.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9392.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9392.r02.blur pb02.tb9392.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9392.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb9392.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9392.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9392.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9392.r03.blur pb02.tb9392.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9392.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb9392.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9392.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9392.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb9392.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9392.r01.blur+orig
++ Forming automask
 + Fixed clip level = 375.446320
 + Used gradual clip level = 295.847107 .. 414.375336
 + Number voxels above clip level = 47773
 + Clustering voxels ...
 + Largest cluster has 47532 voxels
 + Clustering voxels ...
 + Largest cluster has 47460 voxels
 + Filled    42 voxels in small holes; now have 47502 voxels
 + Clustering voxels ...
 + Largest cluster has 47500 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 378775 voxels
 + Mask now has 47500 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 370979 voxels
++ 55296 voxels in the mask [out of 426275: 12.97%]
++ first  17 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb9392.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9392.r02.blur+orig
++ Forming automask
 + Fixed clip level = 375.349579
 + Used gradual clip level = 292.891266 .. 415.940826
 + Number voxels above clip level = 47891
 + Clustering voxels ...
 + Largest cluster has 47629 voxels
 + Clustering voxels ...
 + Largest cluster has 47537 voxels
 + Filled    39 voxels in small holes; now have 47576 voxels
 + Clustering voxels ...
 + Largest cluster has 47576 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 378699 voxels
 + Mask now has 47576 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 370905 voxels
++ 55370 voxels in the mask [out of 426275: 12.99%]
++ first  17 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb9392.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9392.r03.blur+orig
++ Forming automask
 + Fixed clip level = 376.402161
 + Used gradual clip level = 301.263489 .. 417.414215
 + Number voxels above clip level = 47768
 + Clustering voxels ...
 + Largest cluster has 47539 voxels
 + Clustering voxels ...
 + Largest cluster has 47464 voxels
 + Filled    38 voxels in small holes; now have 47502 voxels
 + Filled     1 voxels in large holes; now have 47503 voxels
 + Clustering voxels ...
 + Largest cluster has 47502 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 378773 voxels
 + Mask now has 47502 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 371058 voxels
++ 55217 voxels in the mask [out of 426275: 12.95%]
++ first  17 x-planes are zero [from A]
++ last   10 x-planes are zero [from P]
++ first  30 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb9392
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 55525 survived, 370750 were zero
++ writing result full_mask.tb9392...
3dresample -master full_mask.tb9392+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb9392
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 47102 survived, 379173 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb9392...
3dABoverlap -no_automask full_mask.tb9392+orig mask_anat.tb9392+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb9392+orig.BRIK  B=./mask_anat.tb9392+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
55525        47102        57623        45004        10521        2098         18.9482      4.4542     0.8386     0.9238     0.8789
3ddot -dodice full_mask.tb9392+orig mask_anat.tb9392+orig
tee out.mask_ae_dice.txt
0.87704	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb9392
total number of censored TRs (simple form) = 12
1deval -a motion_tb9392_censor.1D -b outcount_tb9392_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb9392_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb9392.r01.blur+orig.HEAD pb03.tb9392.r02.blur+orig.HEAD pb03.tb9392.r03.blur+orig.HEAD -censor censor_tb9392_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb9392 -errts errts.tb9392 -bucket stats.tb9392
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb9392.r01.blur+orig.HEAD pb03.tb9392.r02.blur+orig.HEAD pb03.tb9392.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 47530 voxels (out of 426275 = 11.2%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 433 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb9392.r01.blur+orig.HEAD pb03.tb9392.r02.blur+orig.HEAD pb03.tb9392.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb9392_REML -Rvar stats.tb9392_REMLvar \
 -Rfitts fitts.tb9392_REML -Rerrts errts.tb9392_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (433x24):  5.87175  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (433x6):  1.03516  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (433x18):  5.56203  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (433x6):  3.70643  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (433x12):  1.27738  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.64771e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.24 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=6.068
++ Job #2: processing voxels 85254 to 127880; elapsed time=6.085
++ Job #3: processing voxels 127881 to 170507; elapsed time=6.102
++ Job #4: processing voxels 170508 to 213134; elapsed time=6.121
++ Job #5: processing voxels 213135 to 255761; elapsed time=6.141
++ Job #6: processing voxels 255762 to 298388; elapsed time=6.160
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.189
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.209
++ Job #0: processing voxels 0 to 42626; elapsed time=6.228
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=6.229
0123456789.0123456789.0123456789.01234++ Job #7 finished; elapsed time=33.404
++ Job #1 finished; elapsed time=33.900
5++ Job #2 finished; elapsed time=34.183
++ Job #8 finished; elapsed time=34.347
++ Job #5 finished; elapsed time=34.635
67++ Job #4 finished; elapsed time=35.218
89.0123++ Job #6 finished; elapsed time=37.574
++ Job #3 finished; elapsed time=37.600
45678++ Job #9 finished; elapsed time=39.025
9.
++ Job #0 waiting for children to finish; elapsed time=39.219
++ Job #0 now finishing up; elapsed time=39.219
++ Smallest FDR q [0 Full_Fstat] = 9.08354e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 5.77677e-14
++ Smallest FDR q [3 uns1_Fstat] = 5.77526e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 2.34371e-12
++ Smallest FDR q [6 uns2_Fstat] = 2.34375e-12
++ Smallest FDR q [8 uns3#0_Tstat] = 3.55395e-14
++ Smallest FDR q [9 uns3_Fstat] = 3.55258e-14
++ Smallest FDR q [11 str1#0_Tstat] = 6.67506e-14
++ Smallest FDR q [12 str1_Fstat] = 6.6763e-14
++ Smallest FDR q [14 str2#0_Tstat] = 1.2128e-12
++ Smallest FDR q [15 str2_Fstat] = 1.2128e-12
++ Smallest FDR q [17 str3#0_Tstat] = 6.88127e-14
++ Smallest FDR q [18 str3_Fstat] = 6.8792e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 2.70202e-13
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 2.70202e-13
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 5.86367e-13
++ Smallest FDR q [24 structured_GLT_Fstat] = 5.86285e-13
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 0.000115452
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 0.000115458
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.486223 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.484973 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 7.7006e-07
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 7.70051e-07
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 2.44803e-05
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 2.4483e-05
++ Wrote bucket dataset into ./stats.tb9392+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb9392+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb9392+orig.BRIK
++ Program finished; elapsed time=87.375
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.757       0.816  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.738       0.802  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.717       0.784  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.481       0.559  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.477       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.471       0.548  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb9392.r01.blur+orig.HEAD pb03.tb9392.r02.blur+orig.HEAD pb03.tb9392.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb9392_REML -Rvar stats.tb9392_REMLvar -Rfitts fitts.tb9392_REML -Rerrts errts.tb9392_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 47530 voxels (out of 426275 = 11.2%)
++ -----  matrix condition (433x24):  5.87175  ++ VERY GOOD ++
 + masked off 243556 voxels for being all zero; 182719 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 330 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=32.80
 + X matrix: 46.680% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=433 cols=24; 109*1 cases; total CPU=0.00 Elapsed=32.83
 +  average case bandwidth = 12.36
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=101.57
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=145.28
++ Output dataset ./stats.tb9392_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb9392_REML+orig.BRIK
++ Output dataset ./errts.tb9392_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb9392_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 1.47614e-09
++ Smallest FDR q [2 uns1#0_Tstat] = 9.16621e-09
++ Smallest FDR q [3 uns1_Fstat] = 9.16621e-09
++ Smallest FDR q [5 uns2#0_Tstat] = 3.00446e-05
++ Smallest FDR q [6 uns2_Fstat] = 3.00446e-05
++ Smallest FDR q [8 uns3#0_Tstat] = 1.32291e-06
++ Smallest FDR q [9 uns3_Fstat] = 1.32291e-06
++ Smallest FDR q [11 str1#0_Tstat] = 1.14683e-07
++ Smallest FDR q [12 str1_Fstat] = 1.14683e-07
++ Smallest FDR q [14 str2#0_Tstat] = 3.5163e-06
++ Smallest FDR q [15 str2_Fstat] = 3.5163e-06
++ Smallest FDR q [17 str3#0_Tstat] = 1.79021e-07
++ Smallest FDR q [18 str3_Fstat] = 1.79021e-07
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.87682e-09
++ Smallest FDR q [21 unstructured_Fstat] = 1.87682e-09
++ Smallest FDR q [23 structured#0_Tstat] = 3.49812e-07
++ Smallest FDR q [24 structured_Fstat] = 3.49812e-07
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.999878 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.999878 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999888 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999888 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.942083 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.942083 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.188149 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.188149 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb9392_REML+orig
++ Output dataset ./stats.tb9392_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=187.52
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb9392 pb03.tb9392.r01.blur+orig.HEAD pb03.tb9392.r02.blur+orig.HEAD pb03.tb9392.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 39.9 s
3dTstat -mean -prefix rm.signal.all all_runs.tb9392+orig[0..141,146..289,292,300..326,331..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb9392_REML+orig[0..141,146..289,292,300..326,331..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb9392+orig -expr c*a/b -prefix TSNR.tb9392
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb9392_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb9392+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
** Can't read ANY data from file 'rm.errts.unit+orig.HEAD'
*** Cannot open input dataset rm.errts.unit+orig!
