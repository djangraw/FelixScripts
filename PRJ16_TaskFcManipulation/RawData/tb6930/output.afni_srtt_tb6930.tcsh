echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb6930
endif
set output_dir = tb6930.srtt
if ( -d tb6930.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb6930.srtt
mkdir tb6930.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb6930.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb6930.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb6930.srtt/pb00.tb6930.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.2 s
3dTcat -prefix tb6930.srtt/pb00.tb6930.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.0 s
3dTcat -prefix tb6930.srtt/pb00.tb6930.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.7 s
set tr_counts = ( 150 150 150 )
cd tb6930.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6930.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6930.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6930.r01.tcat+orig.BRIK is 10.700003 degrees from plumb.
++ 27993 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6930.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6930.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6930.r02.tcat+orig.BRIK is 10.700003 degrees from plumb.
++ 27964 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6930.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6930.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6930.r03.tcat+orig.BRIK is 10.700003 degrees from plumb.
++ 28220 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb6930.r01.tshift -tpattern alt+z2 pb00.tb6930.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6930.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6930.r01.tcat+orig.BRIK is 10.700003 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6930.r02.tshift -tpattern alt+z2 pb00.tb6930.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6930.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6930.r02.tcat+orig.BRIK is 10.700003 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6930.r03.tshift -tpattern alt+z2 pb00.tb6930.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6930.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6930.r03.tcat+orig.BRIK is 10.700003 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb6930.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 10.700003 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 432.589600
 + Used gradual clip level = 393.975006 .. 489.030792
 + Number voxels above clip level = 28739
 + Clustering voxels ...
 + Largest cluster has 28296 voxels
 + Clustering voxels ...
 + Largest cluster has 27722 voxels
 + Filled   267 voxels in small holes; now have 27989 voxels
 + Clustering voxels ...
 + Largest cluster has 27989 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 103078 voxels
 + Mask now has 27994 voxels
++ 27994 voxels in the mask [out of 131072: 21.36%]
++ first  13 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 1099.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/1099.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 10.700003 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.700003 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1432922 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 27994 voxels [17.1%] in weight mask
++ Number of points for matching = 27994
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.190 29.093 20.141 (index)
 + source center of mass = 86.248 163.732 171.267 (index)
 + source-target CM = -1.369 0.062 -6.425 (xyz)
 + center of mass shifts = -1.369 0.062 -6.425
++ shift param auto-range: -70.9..68.1 -69.5..69.6 -56.5..43.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.369087 .. 8.630913
 + Range param#2 [y-shift] = -9.938080 .. 10.061920
 + Range param#3 [z-shift] = -16.425385 .. 3.574615
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.369087 .. 38.630913
 + Range param#2 [y-shift] = -39.938080 .. 40.061920
 + Range param#3 [z-shift] = -46.425385 .. 33.574615
 + 12 free parameters
++ Normalized convergence radius = 0.000460
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1432922 [out of 15840000] voxels
 + base mask has 38460 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=66 usiz=204.5
 + - copying weight image
 + - using 27994 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24208 total points stored in 226 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#o+--.o++*[#19=-0.0476952] *.o+o.-..o++..-$.+
 + - best 45 costs found:
    0 v=-0.047695:  11.96 -13.27   6.91  15.00 -15.00  15.00  [grid]
    1 v=-0.043877:  11.96 -26.60   6.91  15.00 -30.00  15.00  [grid]
    2 v=-0.041635:  14.85 -14.05  28.71  15.74 -34.09   7.78  [rand]
    3 v=-0.039874:  11.96 -13.27  20.24  15.00 -30.00  15.00  [grid]
    4 v=-0.038439:  11.96 -26.60   6.91  15.00 -30.00  30.00  [grid]
    5 v=-0.035736:   8.45  24.82 -17.81   3.10  34.36   2.55  [rand]
    6 v=-0.035265: -14.70 -26.60   6.91 -15.00 -30.00 -15.00  [grid]
    7 v=-0.034314: -14.70 -13.27  20.24 -30.00 -15.00  30.00  [grid]
    8 v=-0.034086:  11.96 -26.60   6.91  30.00 -30.00  15.00  [grid]
    9 v=-0.033244:  11.96 -13.27   6.91  15.00 -15.00  30.00  [grid]
   10 v=-0.033182:  15.49  18.65 -20.88  19.57  37.09 -16.59  [rand]
   11 v=-0.032810:  11.96  13.40 -19.76 -15.00  30.00  30.00  [grid]
   12 v=-0.032053:   2.71   6.29 -14.22  -4.32  22.85  18.95  [rand]
   13 v=-0.030893:  -7.35   3.47  18.10  29.81   4.26  23.54  [rand]
   14 v=-0.030393:  11.96 -13.27   6.91  15.00 -15.00 -15.00  [grid]
   15 v=-0.030047: -14.70 -13.27  20.24 -15.00 -15.00  30.00  [grid]
   16 v=-0.029737:  11.96 -13.27   6.91  30.00 -30.00  30.00  [grid]
   17 v=-0.029225:  13.92 -20.83  23.96  14.56 -29.40  15.92  [rand]
   18 v=-0.028670:  -7.18 -14.13  23.21  38.21  15.41  13.51  [rand]
   19 v=-0.028537:  25.30  26.73 -19.76  30.00  30.00 -15.00  [grid]
   20 v=-0.028406: -17.35 -19.43 -12.15 -20.53   3.14  10.08  [rand]
   21 v=-0.028132:  11.96  13.40   6.91  30.00  15.00 -30.00  [grid]
   22 v=-0.027511:  11.96 -26.60   6.91  30.00 -15.00 -30.00  [grid]
   23 v=-0.027211: -14.70 -13.27   6.91 -15.00 -15.00  15.00  [grid]
   24 v=-0.026700: -14.70 -13.27 -19.76  15.00  15.00  30.00  [grid]
   25 v=-0.026625: -36.57 -34.63  15.15  18.41 -40.28  -7.49  [rand]
   26 v=-0.026563:   3.97  29.82   7.25 -22.21   7.92 -40.02  [rand]
   27 v=-0.026471:  -7.35  -3.34  18.10  29.81   4.26  23.54  [rand]
   28 v=-0.025725:  11.96 -26.60   6.91  30.00 -30.00  30.00  [grid]
   29 v=-0.025446:  11.96 -13.27   6.91  15.00 -30.00  30.00  [grid]
   30 v=-0.025300: -33.85  14.75   5.38 -11.16   9.40  34.39  [rand]
   31 v=-0.025213:   7.27 -20.37  11.05  25.20 -18.50  13.54  [rand]
   32 v=-0.025144: -18.23 -18.52   8.03 -19.57 -37.09  16.59  [rand]
   33 v=-0.024913: -17.35  19.55  -0.70 -20.53   3.14 -10.08  [rand]
   34 v=-0.024885:  11.96 -13.27  20.24  15.00 -30.00 -15.00  [grid]
   35 v=-0.024862:   8.45  24.82 -17.81   3.10  34.36  -2.55  [rand]
   36 v=-0.024737: -14.70 -13.27   6.91 -15.00 -15.00 -15.00  [grid]
   37 v=-0.024725:  17.37 -36.34  26.63 -24.90   4.74 -17.23  [rand]
   38 v=-0.024599: -14.70 -13.27  20.24 -15.00 -30.00 -15.00  [grid]
   39 v=-0.024299:  -7.35  -3.34  18.10 -29.81  -4.26  23.54  [rand]
   40 v=-0.024220:  11.96 -13.27 -33.09  15.00  30.00 -15.00  [grid]
   41 v=-0.024158:  16.96  26.21  -0.38   6.51  20.18   7.56  [rand]
   42 v=-0.024059:  11.96 -26.60   6.91  30.00 -30.00 -15.00  [grid]
   43 v=-0.023902:  11.96 -13.27  20.24  30.00 -15.00 -30.00  [grid]
   44 v=-0.023899: -35.70 -16.52 -15.03 -16.34   8.64  40.54  [rand]
*[#8003=-0.053008] *[#8011=-0.0563911] *[#8012=-0.0605667] *[#8014=-0.0687249] *[#8018=-0.0712823] *[#8019=-0.0735764] *[#8020=-0.0756844] *[#8023=-0.0760352] *[#8024=-0.0783047] *[#8025=-0.0807589] *[#8028=-0.0830584] *[#8029=-0.090735] *[#8034=-0.0912253] *[#8038=-0.0915161] *[#8039=-0.091715] *[#8521=-0.0919104] *[#8522=-0.0919999] *[#8526=-0.0923826] *[#8596=-0.0946768] *[#8597=-0.0979822] *[#8598=-0.116811] *[#8599=-0.133438] *[#8600=-0.162264] *[#8603=-0.169308] *[#8606=-0.190878] *[#8607=-0.215319] *[#8609=-0.22848] *[#8610=-0.24949] *[#8611=-0.288691] *[#8615=-0.298549] *[#8616=-0.314105] *[#8617=-0.325959] *[#8619=-0.327888] *[#8620=-0.348136] *[#8621=-0.393885] *[#8622=-0.450034] *[#8625=-0.516737] *[#8628=-0.58375] *[#8629=-0.606164] *[#8632=-0.634643] *[#8635=-0.644691] *[#8636=-0.65784] *[#8637=-0.66592] *[#8642=-0.666072]  + - costs of the above after a little optimization:
    0 v=-0.091715:   7.70 -11.33   8.43   9.30 -18.91  18.65  [grid]
    1 v=-0.061460:   8.23 -26.53   8.16  15.45 -30.89  16.58  [grid]
    2 v=-0.049192:  14.80 -18.77  27.80  15.39 -34.45   7.69  [rand]
    3 v=-0.046207:  10.90 -13.05  19.53  14.53 -28.83  14.60  [grid]
    4 v=-0.060838:  10.00 -22.58   9.86  15.02 -30.63  27.79  [grid]
    5 v=-0.061210:   7.72  18.72 -18.62   2.44  33.25   2.76  [rand]
    6 v=-0.077972:  -8.37 -28.01   8.59 -10.54 -32.16 -12.59  [grid]
    7 v=-0.049321: -12.84 -15.60  18.39 -31.87 -16.20  28.20  [grid]
    8 v=-0.059419:   8.42 -32.69   7.23  29.97 -32.24  18.16  [grid]
    9 v=-0.086941:   7.53 -12.00   8.12   8.34 -20.50  20.23  [grid]
   10 v=-0.048802:  11.94  17.66 -20.72  19.09  36.68 -16.38  [rand]
   11 v=-0.038296:  11.43  13.24 -20.91 -16.29  29.68  28.89  [grid]
   12 v=-0.092383:   4.83   8.65 -14.31  -3.40  22.57  10.81  [rand]
   13 v=-0.034403:  -8.61   3.71  18.67  29.59   3.71  24.00  [rand]
  *14 v=-0.666072:  -0.04  -0.73  -0.27   0.08  -0.12  -0.28  [grid]
   15 v=-0.035841: -14.55 -12.77  20.98 -10.24 -15.33  30.19  [grid]
   16 v=-0.036412:  10.07 -15.90   7.05  30.00 -30.45  30.88  [grid]
   17 v=-0.046271:  13.36 -17.40  28.57  14.32 -32.92   9.90  [rand]
   18 v=-0.040752:  -5.54 -12.64  23.11  44.21  15.30  13.06  [rand]
   19 v=-0.043575:  24.01  26.67 -16.57  25.47  32.20 -14.73  [grid]
   20 v=-0.060392: -11.37 -19.79 -12.36 -16.70   5.01   8.09  [rand]
   21 v=-0.042241:   7.10  11.58   7.00  30.72  15.95 -29.06  [grid]
   22 v=-0.034593:  15.81 -26.34   6.22  30.22 -14.66 -29.37  [grid]
   23 v=-0.069773: -11.10  -8.19   6.88 -12.32 -15.29  13.87  [grid]
   24 v=-0.029666: -14.32 -12.70 -18.93  15.08  21.21  30.31  [grid]
   25 v=-0.035039: -37.07 -27.74  17.95  14.26 -41.53  -6.87  [rand]
   26 v=-0.036099:   0.10  28.80   6.69 -24.48   7.78 -43.63  [rand]
   27 v=-0.031916:  -7.85   0.75  17.83  29.39   4.71  24.27  [rand]
   28 v=-0.053866:   9.88 -33.99   7.27  30.80 -32.57  23.97  [grid]
   29 v=-0.087115:   8.46 -12.08   7.22   8.65 -18.86  20.86  [grid]
   30 v=-0.036964: -33.64   6.60   3.15  -7.83   8.83  36.63  [rand]
   31 v=-0.048213:   6.74 -13.64   9.96  23.85 -15.12  12.73  [rand]
   32 v=-0.036265: -18.31 -17.34  12.28 -20.21 -36.20  17.16  [rand]
   33 v=-0.031345: -16.51  19.48  -0.39 -20.26   3.37  -6.21  [rand]
   34 v=-0.087888:   8.58  -9.49  16.71   7.75 -21.91  -1.18  [grid]
   35 v=-0.037089:   8.40  24.32 -17.58   2.98  34.09   2.14  [rand]
   36 v=-0.057119: -13.47 -15.05  10.42 -11.99 -15.85 -15.85  [grid]
   37 v=-0.028033:  16.92 -37.26  26.79 -20.09   4.57 -17.34  [rand]
   38 v=-0.070626: -11.19 -13.47  18.71 -11.50 -24.38 -11.50  [grid]
   39 v=-0.039253: -10.37  -4.60  17.53 -31.18  -3.60  24.57  [rand]
   40 v=-0.058142:  13.29 -13.45 -30.68  16.65  32.04  -9.81  [grid]
   41 v=-0.031109:  17.70  30.25  -0.13   7.22  20.06   8.24  [rand]
   42 v=-0.029464:  12.23 -26.33   6.53  29.53 -30.18 -10.43  [grid]
   43 v=-0.032793:  12.27  -9.26  23.40  28.87 -13.80 -31.05  [grid]
   44 v=-0.038078: -36.05 -16.57 -16.90 -10.32   5.74  38.69  [rand]
 + - save #14 for twobest
 + - save #12 for twobest
 + - save # 0 for twobest
 + - save #34 for twobest
 + - skip #29 for twobest: too close to set # 0
 + - skip # 9 for twobest: too close to set # 0
 + - save # 6 for twobest
 + - save #38 for twobest
 + - save #23 for twobest
 + - save # 1 for twobest
 + - save # 5 for twobest
 + - save # 4 for twobest
 + - save #20 for twobest
 + - save # 8 for twobest
 + - save #40 for twobest
 + - save #36 for twobest
 + - save #28 for twobest
 + - save # 7 for twobest
 + - save # 2 for twobest
 + - save #10 for twobest
 + - save #31 for twobest
 + - skip #17 for twobest: too close to set # 2
 + - save # 3 for twobest
 + - save #19 for twobest
 + - save #21 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=66 usiz=204.5
 + - retaining old weight image
 + - using 27994 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24555 total points stored in 249 'RHDD(13.7332)' bloks
*[#9750=-0.685501] *[#9765=-0.685541] *[#9766=-0.689675] *[#9768=-0.689745] *[#9775=-0.694403] *[#9776=-0.6953] *[#9781=-0.696746] *[#9784=-0.697482] *[#9785=-0.697492] *[#9788=-0.697673] *[#9792=-0.698067] *[#9793=-0.698192] *[#9794=-0.698228] 
 + - param set #1 has cost=-0.698228
 + -- Parameters = -0.1596 -0.5885 0.0833 0.1179 -0.5037 -0.5134 1.0017 1.0178 0.9999 -0.0000 0.0001 0.0002
 + - param set #2 has cost=-0.074365
 + -- Parameters = 4.5079 8.2775 -12.5132 -2.2323 20.5967 8.6215 0.9842 0.9957 1.0094 -0.0026 -0.0016 -0.0049
 + - param set #3 has cost=-0.077689
 + -- Parameters = 6.0568 -11.5657 9.3072 6.8999 -20.1838 14.8527 1.0051 0.9944 0.9944 0.0120 -0.0033 -0.0010
 + - param set #4 has cost=-0.063217
 + -- Parameters = 8.4066 -9.0523 16.6035 7.7637 -22.0971 -1.5995 1.0013 0.9994 1.0011 -0.0002 -0.0002 -0.0007
 + - param set #5 has cost=-0.065685
 + -- Parameters = -6.1738 -27.5215 9.0784 -8.4053 -37.3862 -6.8483 0.9919 0.9996 0.9960 -0.0043 0.0063 0.0014
 + - param set #6 has cost=-0.092115
 + -- Parameters = -6.4103 -11.9384 13.0637 -6.8753 -23.9454 -4.3155 0.9762 0.9844 0.9151 -0.0310 0.0097 -0.0642
 + - param set #7 has cost=-0.071580
 + -- Parameters = -9.1109 -8.8244 6.8789 -6.5032 -15.6181 12.2853 1.0055 0.9990 0.9978 -0.0046 -0.0027 -0.0050
 + - param set #8 has cost=-0.053047
 + -- Parameters = 8.8546 -23.5370 8.5182 15.6645 -32.2000 18.3025 1.0010 0.9925 0.9981 -0.0033 0.0002 -0.0009
 + - param set #9 has cost=-0.052012
 + -- Parameters = 5.9231 18.3357 -21.1221 1.6782 33.5033 2.6321 0.9930 1.0191 0.9963 -0.0057 0.0065 0.0019
 + - param set #10 has cost=-0.048769
 + -- Parameters = 10.0233 -22.6130 9.8321 14.9914 -30.5981 27.7803 0.9998 1.0006 1.0002 0.0097 -0.0000 -0.0002
 + - param set #11 has cost=-0.051365
 + -- Parameters = -11.0788 -20.0587 -12.0888 -17.0455 4.3477 7.3597 1.0036 0.9939 1.0200 0.0033 0.0008 0.0020
 + - param set #12 has cost=-0.649744
 + -- Parameters = -0.0917 -1.0799 0.3931 0.2332 0.0814 -0.3643 1.0053 0.9968 0.9871 0.0075 -0.0044 0.0080
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0572 
 + --- dist(#3,#1) = 0.29 
 + --- dist(#4,#1) = 0.219 
 + --- dist(#5,#1) = 0.234 
 + --- dist(#6,#1) = 0.168 
 + --- dist(#7,#1) = 0.41 
 + --- dist(#8,#1) = 0.24 
 + --- dist(#9,#1) = 0.352 
 + --- dist(#10,#1) = 0.378 
 + --- dist(#11,#1) = 0.243 
 + --- dist(#12,#1) = 0.334 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=66 usiz=204.5
 + - retaining old weight image
 + - using 27994 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24934 total points stored in 260 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.668267
 + -- Parameters = -0.0751 -0.5368 0.1014 0.1901 -0.5351 -0.4528 1.0022 1.0195 0.9985 0.0077 0.0001 0.0005
 + - param set #2 has cost=-0.665460
 + -- Parameters = -0.1067 -0.6563 0.1964 0.2294 -0.3805 -0.5159 1.0006 1.0172 0.9961 0.0070 0.0005 0.0038
 + - param set #3 has cost=-0.102071
 + -- Parameters = -5.7294 -10.0794 10.4337 -5.4621 -22.7600 -0.4962 1.0050 0.9957 0.8518 -0.0426 0.0186 -0.0644
 + - param set #4 has cost=-0.093198
 + -- Parameters = 4.3648 -10.5750 7.0091 6.8726 -18.2104 8.7849 1.0273 0.9659 0.8874 -0.0063 -0.0552 -0.0574
 + - param set #5 has cost=-0.055898
 + -- Parameters = 4.5226 8.0529 -12.3006 -2.2416 20.6197 8.6190 0.9969 0.9947 1.0101 -0.0025 -0.0011 -0.0046
 + - param set #6 has cost=-0.512166
 + -- Parameters = -1.4066 1.3977 1.1239 -1.1462 -2.9902 -1.5702 1.0262 1.0411 0.9552 -0.0451 0.0129 -0.0255
 + - param set #7 has cost=-0.053554
 + -- Parameters = -5.9897 -27.1613 8.9600 -8.3417 -34.7138 -6.6279 0.9859 0.9953 0.9849 -0.0029 0.0048 -0.0014
 + - param set #8 has cost=-0.059318
 + -- Parameters = 8.1245 -6.8420 17.3096 7.3317 -21.1767 -3.0937 0.9974 1.0000 0.9956 0.0055 -0.0011 -0.0052
 + - param set #9 has cost=-0.043915
 + -- Parameters = 9.0216 -23.6641 8.5022 13.6713 -31.6651 18.9611 1.0011 0.9895 1.0014 -0.0023 -0.0005 -0.0001
 + - param set #10 has cost=-0.045600
 + -- Parameters = 5.5729 15.9316 -21.2683 1.5704 33.9792 2.7326 0.9938 1.0202 0.9979 -0.0056 0.0069 0.0011
 + - param set #11 has cost=-0.046150
 + -- Parameters = -11.1345 -19.7408 -11.5209 -17.1011 4.0208 7.4693 1.0010 0.9873 1.0136 0.0131 0.0042 0.0035
 + - param set #12 has cost=-0.044743
 + -- Parameters = 9.9487 -22.2191 9.7660 14.9409 -30.3984 28.0082 1.0004 1.0010 1.0008 0.0170 0.0005 -0.0010
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0149 XXX
 + --- dist(#3,#1) = 0.4 
 + --- dist(#4,#1) = 0.303 
 + --- dist(#5,#1) = 0.229 
 + --- dist(#6,#1) = 0.235 
 + --- dist(#7,#1) = 0.38 
 + --- dist(#8,#1) = 0.24 
 + --- dist(#9,#1) = 0.383 
 + --- dist(#10,#1) = 0.332 
 + --- dist(#11,#1) = 0.346 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=66 usiz=204.5
 + - retaining old weight image
 + - using 27994 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24890 total points stored in 266 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.631286
 + -- Parameters = -0.0623 -0.4198 0.1179 0.1775 -0.6944 -0.4462 1.0022 1.0198 0.9992 0.0070 -0.0001 -0.0014
 + - param set #2 has cost=-0.560511
 + -- Parameters = -0.7877 0.4434 1.0940 -0.5198 -1.9341 -1.4099 1.0117 1.0269 0.9714 -0.0240 0.0058 -0.0205
 + - param set #3 has cost=-0.114079
 + -- Parameters = -5.6552 -9.0173 9.0428 -5.2824 -20.6311 -1.5605 1.0094 1.0001 0.8369 -0.0260 0.0110 -0.0819
 + - param set #4 has cost=-0.150536
 + -- Parameters = 1.5415 -3.5601 4.6778 2.4467 -13.4284 2.6344 0.9739 1.0366 0.8339 -0.0050 -0.0411 -0.0857
 + - param set #5 has cost=-0.059717
 + -- Parameters = 7.6497 -7.4934 17.0799 6.8189 -20.4389 -1.8505 1.0190 0.9999 0.9694 0.0116 -0.0000 0.0071
 + - param set #6 has cost=-0.052386
 + -- Parameters = 3.9788 7.9869 -11.6821 -0.9471 20.7058 8.7661 1.0018 0.9856 1.0089 0.0004 -0.0022 -0.0030
 + - param set #7 has cost=-0.050792
 + -- Parameters = -5.8936 -26.6545 8.9128 -7.7095 -34.5543 -6.2578 0.9731 0.9941 0.9815 -0.0031 0.0041 -0.0012
 + - param set #8 has cost=-0.054765
 + -- Parameters = -11.6200 -19.3786 -11.3890 -16.0005 4.3495 7.1644 0.9789 0.9340 1.0328 0.0086 0.0059 0.0040
 + - param set #9 has cost=-0.043653
 + -- Parameters = 5.6911 15.8235 -21.2311 1.3142 33.9798 2.8825 0.9935 1.0193 1.0083 -0.0071 0.0062 -0.0011
 + - param set #10 has cost=-0.040398
 + -- Parameters = 9.9223 -22.1183 9.2453 14.2444 -30.0590 27.8609 0.9969 0.9920 0.9985 0.0105 -0.0002 -0.0060
 + - param set #11 has cost=-0.041732
 + -- Parameters = 8.9042 -23.7322 8.4973 13.4428 -32.5879 19.2179 1.0121 0.9889 0.9822 0.0150 -0.0112 -0.0038
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.139 
 + --- dist(#3,#1) = 0.45 
 + --- dist(#4,#1) = 0.442 
 + --- dist(#5,#1) = 0.219 
 + --- dist(#6,#1) = 0.237 
 + --- dist(#7,#1) = 0.238 
 + --- dist(#8,#1) = 0.376 
 + --- dist(#9,#1) = 0.385 
 + --- dist(#10,#1) = 0.354 
 + --- dist(#11,#1) = 0.326 
 + - Total coarse refinement net CPU time = 0.0 s; 2954 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=66 usiz=204.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 25136 total points stored in 272 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.589182 *
 + -- Parameters = -0.0623 -0.4198 0.1179 0.1775 -0.6944 -0.4462 1.0022 1.0198 0.9992 0.0070 -0.0001 -0.0014
 + - cost(#2)=-0.528048  
 + -- Parameters = -0.7877 0.4434 1.0940 -0.5198 -1.9341 -1.4099 1.0117 1.0269 0.9714 -0.0240 0.0058 -0.0205
 + - cost(#3)=-0.139235  
 + -- Parameters = 1.5415 -3.5601 4.6778 2.4467 -13.4284 2.6344 0.9739 1.0366 0.8339 -0.0050 -0.0411 -0.0857
 + - cost(#4)=-0.106757  
 + -- Parameters = -5.6552 -9.0173 9.0428 -5.2824 -20.6311 -1.5605 1.0094 1.0001 0.8369 -0.0260 0.0110 -0.0819
 + - cost(#5)=-0.053585  
 + -- Parameters = 7.6497 -7.4934 17.0799 6.8189 -20.4389 -1.8505 1.0190 0.9999 0.9694 0.0116 -0.0000 0.0071
 + - cost(#6)=-0.050302  
 + -- Parameters = -11.6200 -19.3786 -11.3890 -16.0005 4.3495 7.1644 0.9789 0.9340 1.0328 0.0086 0.0059 0.0040
 + - cost(#7)=-0.046107  
 + -- Parameters = 3.9788 7.9869 -11.6821 -0.9471 20.7058 8.7661 1.0018 0.9856 1.0089 0.0004 -0.0022 -0.0030
 + - cost(#8)=-0.045920  
 + -- Parameters = -5.8936 -26.6545 8.9128 -7.7095 -34.5543 -6.2578 0.9731 0.9941 0.9815 -0.0031 0.0041 -0.0012
 + - cost(#9)=-0.037969  
 + -- Parameters = 5.6911 15.8235 -21.2311 1.3142 33.9798 2.8825 0.9935 1.0193 1.0083 -0.0071 0.0062 -0.0011
 + - cost(#10)=-0.040003  
 + -- Parameters = 8.9042 -23.7322 8.4973 13.4428 -32.5879 19.2179 1.0121 0.9889 0.9822 0.0150 -0.0112 -0.0038
 + - cost(#11)=-0.038242  
 + -- Parameters = 9.9223 -22.1183 9.2453 14.2444 -30.0590 27.8609 0.9969 0.9920 0.9985 0.0105 -0.0002 -0.0060
 + - cost(#12)=-0.020429  
 + -- Parameters = -1.3691 0.0619 -6.4254 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.589964 *
 + -- Parameters = -0.1137 -0.4303 0.1172 0.1516 -0.6965 -0.4308 1.0063 1.0205 0.9996 0.0073 -0.0004 -0.0016
 + - cost(#2)=-0.571759  
 + -- Parameters = -0.3395 0.1751 0.4960 -0.2016 -1.9021 -0.8645 0.9986 1.0239 0.9834 -0.0106 0.0055 -0.0243
 + - cost(#3)=-0.224426  
 + -- Parameters = 0.7417 0.9991 2.6066 0.8131 -9.5202 2.2980 0.9412 1.0810 0.8917 0.0368 -0.0698 -0.0940
 + - cost(#4)=-0.116411  
 + -- Parameters = -5.6586 -8.9519 7.4691 -5.4497 -20.3498 -2.0009 1.0324 1.0012 0.8362 -0.0535 -0.0028 -0.1109
 + - cost(#5)=-0.056398  
 + -- Parameters = 7.6890 -7.2287 17.5164 7.0584 -20.4495 -1.6212 1.0248 0.9983 0.9538 0.0168 0.0037 0.0121
 + - cost(#6)=-0.076835  
 + -- Parameters = -11.6769 -14.8094 -9.1397 -10.5947 4.7457 2.8181 1.0512 0.8939 1.0023 -0.0169 0.0085 -0.0176
 + - cost(#7)=-0.049346  
 + -- Parameters = 4.4017 6.9350 -11.1294 -0.0007 20.9590 8.5247 1.0196 0.9776 1.0131 0.0024 -0.0044 -0.0018
 + - cost(#8)=-0.046498  
 + -- Parameters = -5.8520 -26.5488 9.3751 -7.6323 -34.3799 -6.4672 0.9750 0.9942 0.9823 -0.0031 0.0044 -0.0052
 + - cost(#9)=-0.039365  
 + -- Parameters = 5.6781 15.3665 -21.3977 1.1191 34.1826 3.1315 0.9939 1.0166 1.0074 -0.0115 0.0072 -0.0019
 + - cost(#10)=-0.040375  
 + -- Parameters = 8.9805 -23.8676 8.4746 13.4244 -32.6147 19.2523 1.0184 0.9892 0.9819 0.0150 -0.0112 -0.0036
 + - cost(#11)=-0.040463  
 + -- Parameters = 9.8991 -22.0220 9.3265 13.7121 -30.0848 26.9216 0.9984 0.9922 0.9910 0.0095 -0.0023 -0.0074
 + - cost(#12)=-0.586303  
 + -- Parameters = -0.1978 -0.1450 0.3335 0.0747 -1.0018 -0.5584 1.0067 1.0238 0.9876 0.0014 0.0010 -0.0074
 + - case #1 is now the best
 + - Initial  cost = -0.589964
 + - Initial fine Parameters = -0.1137 -0.4303 0.1172 0.1516 -0.6965 -0.4308 1.0063 1.0205 0.9996 0.0073 -0.0004 -0.0016
 + - Finalish cost = -0.592242 ; 339 funcs
 + - Final    cost = -0.592243 ; 118 funcs
 + Final fine fit Parameters:
       x-shift=-0.1151   y-shift=-0.0225   z-shift= 0.1635
       z-angle= 0.1154   x-angle=-1.4125   y-angle=-0.4486
       x-scale= 1.0063   y-scale= 1.0232   z-scale= 0.9967
     y/x-shear= 0.0050 z/x-shear= 0.0001 z/y-shear=-0.0142
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.1151 -0.0225 0.1635 0.1154 -1.4125 -0.4486 1.0063 1.0232 0.9967 0.0050 0.0001 -0.0142
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.2
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.700003 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0015 -1.0069 0.1603 237.2456 -0.0082 0.1801 0.9841 70.2658 -1.0063 0.0022 -0.0079 200.2910
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 18.2 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3268.390100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 80.8765 47.4898   ITER = 13/137
80.8765

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 781ms]
lev=0 0..171 0..213 0..166: [first cost=-0.68519] ... done [cost:-0.68519==>-0.75717]
lev=1 patch=129x161x125 [clock= 14m 7s 437ms]........:[cost=-0.77569]:........ done [cost:-0.75717==>-0.78152 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 21m 41s 221ms]......................... done [cost:-0.78152==>-0.86547 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 28m 14s 468ms]............. done [cost:-0.86547==>-0.93576 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 33m 21s 175ms]....... done [cost:-0.93576==>-0.98181 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 37m 11s 864ms].......................... done [cost:-0.98181==>-1.05823 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 40m 52s 66ms]..................... done [cost:-1.05823==>-1.10330 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 44m 21s 915ms]............................. done [cost:-1.10330==>-1.18181 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 48m 2s 362ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6930/tb6930.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.9 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb6930.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.700003 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6930.r01.tshift+orig.BRIK is 10.700003 degrees from plumb.
++ Reading input dataset ./pb01.tb6930.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29705 voxels
 + 4688 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.356  pitch=-1.767  yaw=-0.096  dS=-0.328  dL=-0.251  dP=-0.039
++ Mean: roll=+0.010  pitch=-0.909  yaw=+0.213  dS=+0.068  dL=-0.003  dP=+0.210
++ Max : roll=+0.188  pitch=+0.040  yaw=+0.422  dS=+0.268  dL=+0.230  dP=+0.496
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.34(0.34) 0.26(0.11) 0.28(0.09) 0.27(0.05) 0.30(0.07) 0.26(0.12) 0.31(0.08) 0.35(0.06) 0.40(0.14) 0.41(0.24) 0.38(0.08) 0.38(0.09) 0.42(0.07) 0.46(0.12) 0.63(0.18) 0.64(0.05) 0.64(0.07) 0.63(0.13) 0.62(0.04) 0.58(0.13) 0.67(0.16) 0.75(0.09) 0.86(0.12) 0.93(0.08) 0.99(0.09) 0.88(0.12) 0.89(0.07) 0.83(0.07) 0.82(0.06) 0.87(0.07) 0.81(0.12) 0.95(0.16) 1.02(0.08) 1.16(0.14) 1.16(0.03) 1.10(0.09) 1.16(0.07) 1.17(0.05) 1.14(0.09) 1.16(0.05) 1.17(0.03) 1.17(0.07) 1.15(0.05) 1.15(0.07) 1.14(0.08) 1.10(0.07) 1.18(0.08) 1.04(0.15) 0.84(0.23) 0.98(0.15) 1.02(0.09) 1.03(0.04) 1.03(0.11) 1.04(0.06) 0.98(0.12) 0.94(0.13) 1.04(0.10) 1.09(0.09) 1.06(0.08) 0.98(0.10) 0.99(0.05) 1.06(0.10) 1.04(0.08) 1.02(0.17) 1.00(0.05) 1.14(0.17) 1.30(0.17) 1.34(0.05) 1.36(0.12) 1.39(0.04) 1.41(0.06) 1.53(0.14) 1.51(0.06) 1.55(0.08) 1.64(0.09) 1.67(0.07) 1.71(0.05) 1.73(0.07) 1.74(0.05) 1.60(0.13) 1.61(0.07) 1.66(0.13) 1.74(0.12) 1.81(0.07) 1.79(0.05) 1.76(0.04) 1.79(0.04) 1.89(0.10) 1.92(0.11) 1.90(0.07) 1.85(0.08) 1.94(0.11) 1.91(0.05) 1.89(0.06) 1.97(0.11) 1.72(0.32) 1.31(1.09) 1.59(0.91) 1.73(0.30) 1.96(0.24) 2.01(0.08) 2.09(0.12) 2.20(0.12) 2.31(0.16) 2.28(0.04) 2.16(0.12) 2.27(0.12) 2.35(0.11) 2.32(0.08) 2.29(0.11) 2.31(0.09) 2.31(0.15) 2.33(0.07) 2.36(0.04) 2.39(0.10) 2.51(0.13) 2.53(0.05) 2.53(0.04) 2.52(0.05) 2.53(0.04) 2.51(0.07) 2.50(0.11) 2.55(0.18) 2.69(0.18) 2.71(0.13) 2.67(0.08) 2.73(0.07) 2.79(0.11) 2.79(0.06) 2.73(0.09) 2.75(0.07) 2.64(0.14) 2.61(0.08) 2.79(0.23) 2.73(0.08) 2.69(0.16) 2.78(0.15) 2.56(0.42) 2.42(0.26) 2.37(0.12) 2.57(0.20) 2.63(0.14) 2.59(0.16) 2.67(0.14) 2.73(0.08) 2.73(0.01) 2.75(0.08) 2.77(0.04) 2.74(0.08)
++ Max displacement in automask = 2.79 (mm) at sub-brick 129
++ Max delta displ  in automask = 1.09 (mm) at sub-brick 97
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb6930.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6930.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6930.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6930.r01.tshift+orig.BRIK is 10.700003 degrees from plumb.
++ Source dataset: ./pb01.tb6930.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.700003 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb6930.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.700003 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6930.r02.tshift+orig.BRIK is 10.700003 degrees from plumb.
++ Reading input dataset ./pb01.tb6930.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29763 voxels
 + 4675 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.364  pitch=-1.732  yaw=+0.653  dS=+0.182  dL=-1.297  dP=-0.530
++ Mean: roll=-0.951  pitch=-1.250  yaw=+0.810  dS=+0.786  dL=-0.795  dP=-0.315
++ Max : roll=-0.615  pitch=-0.552  yaw=+0.943  dS=+1.134  dL=-0.336  dP=-0.157
++ Max displacements (mm) for each sub-brick:
 3.74(0.00) 3.72(0.13) 3.72(0.06) 3.69(0.05) 3.69(0.12) 3.75(0.08) 3.72(0.08) 3.78(0.09) 3.87(0.10) 3.92(0.08) 4.01(0.11) 4.07(0.09) 4.05(0.06) 4.04(0.09) 4.09(0.06) 4.10(0.07) 3.96(0.17) 4.10(0.18) 4.11(0.06) 4.15(0.06) 4.14(0.04) 3.98(0.20) 3.98(0.09) 4.11(0.14) 4.19(0.11) 4.09(0.13) 4.04(0.06) 4.15(0.12) 4.26(0.13) 4.21(0.07) 4.15(0.07) 4.28(0.14) 4.44(0.17) 4.50(0.10) 4.48(0.06) 4.56(0.11) 4.51(0.09) 4.55(0.12) 3.84(0.91) 3.16(1.08) 3.38(0.41) 3.45(0.09) 3.53(0.12) 3.58(0.11) 3.63(0.07) 3.67(0.06) 3.65(0.16) 3.75(0.15) 3.78(0.07) 3.88(0.14) 3.47(0.65) 3.20(0.49) 3.53(0.60) 3.72(0.24) 3.81(0.13) 3.34(0.82) 3.27(0.23) 3.66(0.68) 3.71(0.12) 3.49(0.25) 3.15(0.52) 3.19(0.15) 3.27(0.10) 3.40(0.15) 3.45(0.13) 3.33(0.17) 3.31(0.24) 3.22(0.12) 3.00(0.31) 3.17(0.19) 3.21(0.05) 3.27(0.16) 3.46(0.26) 3.56(0.17) 3.53(0.07) 3.55(0.11) 3.57(0.07) 3.67(0.11) 3.69(0.11) 3.73(0.07) 3.81(0.10) 3.87(0.07) 3.85(0.12) 3.87(0.06) 3.89(0.05) 3.94(0.07) 3.99(0.09) 4.13(0.16) 4.23(0.12) 4.26(0.09) 4.34(0.09) 4.41(0.10) 4.31(0.15) 3.54(1.64) 3.87(0.46) 4.17(0.67) 4.31(0.34) 4.49(0.26) 4.61(0.17) 4.65(0.07) 4.58(0.11) 4.72(0.17) 4.87(0.20) 4.78(0.10) 4.66(0.13) 4.63(0.10) 4.66(0.18) 4.84(0.24) 4.86(0.08) 4.81(0.06) 4.76(0.09) 4.67(0.14) 4.72(0.12) 4.76(0.11) 4.63(0.22) 4.54(0.14) 4.57(0.18) 4.73(0.22) 4.87(0.18) 4.87(0.09) 4.86(0.04) 4.69(0.23) 3.81(1.55) 3.85(0.18) 4.04(0.41) 4.28(0.48) 4.35(0.28) 4.44(0.10) 4.52(0.10) 4.57(0.16) 4.64(0.10) 4.68(0.06) 4.70(0.09) 4.80(0.13) 4.85(0.09) 4.82(0.10) 4.93(0.13) 4.57(0.45) 3.72(1.32) 3.77(0.06) 3.82(0.10) 3.70(0.16) 3.69(0.12) 3.63(0.33) 3.53(0.24) 3.68(0.41) 3.72(0.13) 3.66(0.09) 3.73(0.15) 3.50(0.25)
++ Max displacement in automask = 4.93 (mm) at sub-brick 136
++ Max delta displ  in automask = 1.64 (mm) at sub-brick 93
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb6930.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6930.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6930.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6930.r02.tshift+orig.BRIK is 10.700003 degrees from plumb.
++ Source dataset: ./pb01.tb6930.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.4
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.700003 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb6930.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.700003 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6930.r03.tshift+orig.BRIK is 10.700003 degrees from plumb.
++ Reading input dataset ./pb01.tb6930.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29866 voxels
 + 4665 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.855  pitch=-0.268  yaw=+1.069  dS=+0.912  dL=-1.401  dP=-0.799
++ Mean: roll=-0.548  pitch=+0.604  yaw=+1.263  dS=+1.423  dL=-1.104  dP=-0.605
++ Max : roll=-0.392  pitch=+1.626  yaw=+1.491  dS=+1.813  dL=-0.699  dP=-0.447
++ Max displacements (mm) for each sub-brick:
 3.24(0.00) 3.08(0.25) 2.97(0.16) 3.03(0.09) 3.14(0.26) 3.10(0.09) 3.13(0.11) 3.14(0.07) 3.24(0.10) 3.29(0.06) 3.39(0.14) 3.48(0.14) 3.60(0.13) 3.58(0.06) 3.53(0.08) 3.64(0.15) 3.71(0.07) 3.74(0.05) 3.77(0.09) 3.82(0.07) 3.79(0.05) 3.86(0.10) 3.97(0.12) 4.01(0.07) 4.09(0.08) 4.13(0.07) 4.02(0.13) 3.97(0.09) 4.05(0.13) 4.11(0.08) 4.14(0.04) 4.14(0.02) 4.14(0.06) 4.19(0.06) 4.26(0.08) 4.07(0.30) 3.54(1.09) 3.50(0.19) 3.60(0.27) 3.68(0.23) 3.80(0.28) 3.87(0.22) 3.89(0.08) 3.83(0.07) 3.93(0.13) 4.01(0.10) 4.04(0.07) 4.07(0.04) 4.05(0.05) 3.70(0.55) 3.31(1.73) 3.93(0.97) 3.94(0.17) 3.92(0.14) 3.75(0.28) 3.57(0.30) 3.57(0.31) 3.55(0.10) 3.51(0.15) 3.39(0.44) 3.32(0.15) 3.30(0.46) 3.31(0.27) 3.39(0.18) 3.43(0.05) 3.45(0.19) 3.50(0.17) 3.49(0.08) 3.51(0.08) 3.55(0.06) 3.62(0.08) 3.69(0.08) 3.73(0.06) 3.48(0.49) 3.63(1.53) 3.73(0.48) 3.68(0.13) 3.61(0.10) 3.64(0.07) 3.70(0.12) 3.71(0.11) 3.72(0.08) 3.71(0.19) 3.72(0.07) 3.74(0.06) 3.74(0.10) 3.74(0.14) 3.75(0.14) 3.68(0.12) 3.64(0.20) 3.62(0.11) 3.59(0.11) 3.57(0.15) 3.61(0.27) 3.68(0.10) 3.76(0.17) 3.78(0.08) 3.80(0.05) 3.85(0.16) 3.89(0.09) 3.93(0.08) 4.00(0.13) 4.08(0.13) 4.11(0.08) 3.94(0.36) 3.78(0.96) 3.98(0.41) 3.95(0.22) 3.81(0.45) 3.65(0.24) 3.67(0.07) 3.74(0.11) 3.75(0.09) 3.83(0.11) 3.88(0.15) 3.90(0.12) 3.81(0.12) 3.64(0.55) 3.74(0.24) 3.73(0.30) 3.87(0.38) 3.75(0.17) 3.59(0.26) 3.70(0.20) 3.73(0.16) 3.76(0.17) 3.73(0.06) 3.64(0.14) 3.63(0.27) 3.62(0.72) 3.56(0.61) 3.63(0.26) 3.65(0.12) 3.67(0.15) 3.66(0.08) 3.62(0.08) 3.69(0.13) 3.76(0.15) 3.89(0.20) 3.91(0.02) 3.96(0.06) 3.91(0.06) 3.87(0.13) 3.83(0.12) 3.83(0.06) 3.88(0.06) 3.85(0.11) 3.88(0.15) 3.85(0.03) 3.87(0.14)
++ Max displacement in automask = 4.26 (mm) at sub-brick 34
++ Max delta displ  in automask = 1.73 (mm) at sub-brick 50
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb6930.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6930.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6930.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6930.r03.tshift+orig.BRIK is 10.700003 degrees from plumb.
++ Source dataset: ./pb01.tb6930.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.3
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.700003 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6930.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6930.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6930.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6930.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6930.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6930.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.700003 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb6930
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb6930+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb6930+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1313403 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 288196 voxels [67.6%] in weight mask
++ Number of points for matching = 135452
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.179491
   sp   = 0.344907
   mi   = -0.500967
   crM  = 0.0475407
   nmi  = 0.841748
   je   = 2.66466
   hel  = -0.0983799
   crA  = 0.218219
   crU  = 0.227098
   lss  = 0.820509
   lpc  = -0.0255521
   lpa  = 0.974448
   lpc+ = 0.133134
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.6
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb6930+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb6930+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 44.4 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6930.r01.blur pb02.tb6930.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6930.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb6930.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6930.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6930.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6930.r02.blur pb02.tb6930.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6930.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb6930.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6930.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6930.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6930.r03.blur pb02.tb6930.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6930.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb6930.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6930.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6930.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb6930.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6930.r01.blur+orig
++ Forming automask
 + Fixed clip level = 425.234528
 + Used gradual clip level = 361.260986 .. 481.165588
 + Number voxels above clip level = 52005
 + Clustering voxels ...
 + Largest cluster has 51619 voxels
 + Clustering voxels ...
 + Largest cluster has 51594 voxels
 + Filled    38 voxels in small holes; now have 51632 voxels
 + Clustering voxels ...
 + Largest cluster has 51632 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374643 voxels
 + Mask now has 51632 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366574 voxels
++ 59701 voxels in the mask [out of 426275: 14.01%]
++ first  17 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  27 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb6930.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6930.r02.blur+orig
++ Forming automask
 + Fixed clip level = 424.675659
 + Used gradual clip level = 358.156921 .. 479.809448
 + Number voxels above clip level = 52149
 + Clustering voxels ...
 + Largest cluster has 51752 voxels
 + Clustering voxels ...
 + Largest cluster has 51723 voxels
 + Filled    46 voxels in small holes; now have 51769 voxels
 + Clustering voxels ...
 + Largest cluster has 51769 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374506 voxels
 + Mask now has 51769 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366450 voxels
++ 59825 voxels in the mask [out of 426275: 14.03%]
++ first  17 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  27 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb6930.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6930.r03.blur+orig
++ Forming automask
 + Fixed clip level = 422.035858
 + Used gradual clip level = 356.535889 .. 477.507233
 + Number voxels above clip level = 52595
 + Clustering voxels ...
 + Largest cluster has 52178 voxels
 + Clustering voxels ...
 + Largest cluster has 52149 voxels
 + Filled    51 voxels in small holes; now have 52200 voxels
 + Filled     1 voxels in large holes; now have 52201 voxels
 + Clustering voxels ...
 + Largest cluster has 52201 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374074 voxels
 + Mask now has 52201 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366064 voxels
++ 60211 voxels in the mask [out of 426275: 14.12%]
++ first  17 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  26 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb6930
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 60331 survived, 365944 were zero
++ writing result full_mask.tb6930...
3dresample -master full_mask.tb6930+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb6930
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 51255 survived, 375020 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb6930...
3dABoverlap -no_automask full_mask.tb6930+orig mask_anat.tb6930+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb6930+orig.BRIK  B=./mask_anat.tb6930+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
60331        51255        62343        49243        11088        2012         18.3786      3.9255     0.8487     0.9091     0.8937
3ddot -dodice full_mask.tb6930+orig mask_anat.tb6930+orig
tee out.mask_ae_dice.txt
0.882602	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb6930
total number of censored TRs (simple form) = 37
1deval -a motion_tb6930_censor.1D -b outcount_tb6930_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb6930_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb6930.r01.blur+orig.HEAD pb03.tb6930.r02.blur+orig.HEAD pb03.tb6930.r03.blur+orig.HEAD -censor censor_tb6930_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb6930 -errts errts.tb6930 -bucket stats.tb6930
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb6930.r01.blur+orig.HEAD pb03.tb6930.r02.blur+orig.HEAD pb03.tb6930.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 51908 voxels (out of 426275 = 12.2%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 412 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb6930.r01.blur+orig.HEAD pb03.tb6930.r02.blur+orig.HEAD pb03.tb6930.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb6930_REML -Rvar stats.tb6930_REMLvar \
 -Rfitts fitts.tb6930_REML -Rerrts errts.tb6930_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (412x24):  3.96511  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (412x6):  1.03561  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (412x18):  3.69448  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (412x6):  2.65187  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (412x12):  1.06958  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.39124e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.19 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=29.283
++ Job #2: processing voxels 85254 to 127880; elapsed time=29.304
++ Job #3: processing voxels 127881 to 170507; elapsed time=29.325
++ Job #4: processing voxels 170508 to 213134; elapsed time=29.348
++ Job #5: processing voxels 213135 to 255761; elapsed time=29.371
++ Job #6: processing voxels 255762 to 298388; elapsed time=29.394
++ Job #7: processing voxels 298389 to 341015; elapsed time=29.427
++ Job #8: processing voxels 341016 to 383642; elapsed time=29.447
++ Job #0: processing voxels 0 to 42626; elapsed time=29.476
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=29.477
0123456789.0123456789.0123456789.01234++ Job #2 finished; elapsed time=55.230
++ Job #7 finished; elapsed time=55.767
5++ Job #5 finished; elapsed time=56.033
++ Job #4 finished; elapsed time=56.455
6++ Job #1 finished; elapsed time=56.699
789.++ Job #8 finished; elapsed time=57.464
0123456789.
++ Job #0 waiting for children to finish; elapsed time=59.411
++ Job #9 finished; elapsed time=59.654
++ Job #3 finished; elapsed time=61.206
++ Job #6 finished; elapsed time=61.267
++ Job #0 now finishing up; elapsed time=61.280
++ Smallest FDR q [0 Full_Fstat] = 4.69624e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 4.16499e-14
++ Smallest FDR q [3 uns1_Fstat] = 4.16429e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 8.74381e-14
++ Smallest FDR q [6 uns2_Fstat] = 8.7427e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 2.73684e-13
++ Smallest FDR q [9 uns3_Fstat] = 2.73714e-13
++ Smallest FDR q [11 str1#0_Tstat] = 1.90644e-13
++ Smallest FDR q [12 str1_Fstat] = 1.90632e-13
++ Smallest FDR q [14 str2#0_Tstat] = 2.80546e-14
++ Smallest FDR q [15 str2_Fstat] = 2.80466e-14
++ Smallest FDR q [17 str3#0_Tstat] = 1.54348e-12
++ Smallest FDR q [18 str3_Fstat] = 1.54296e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 8.75753e-15
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 8.75529e-15
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.3573e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.3569e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 2.00736e-08
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 2.00734e-08
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 1.49776e-05
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 1.49789e-05
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 9.77391e-09
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 9.77394e-09
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.54868e-12
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.54856e-12
++ Wrote bucket dataset into ./stats.tb6930+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb6930+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb6930+orig.BRIK
++ Program finished; elapsed time=89.821
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.736       0.796  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.729       0.799  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.696       0.763  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.502       0.577  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.456       0.539  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.448       0.519  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb6930.r01.blur+orig.HEAD pb03.tb6930.r02.blur+orig.HEAD pb03.tb6930.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb6930_REML -Rvar stats.tb6930_REMLvar -Rfitts fitts.tb6930_REML -Rerrts errts.tb6930_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 51908 voxels (out of 426275 = 12.2%)
++ -----  matrix condition (412x24):  3.96511  ++ VERY GOOD ++
 + masked off 246105 voxels for being all zero; 180170 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 325 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=36.45
 + X matrix: 46.541% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=412 cols=24; 109*1 cases; total CPU=0.00 Elapsed=36.48
 +  average case bandwidth = 11.53
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=98.83
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=141.85
++ Output dataset ./stats.tb6930_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb6930_REML+orig.BRIK
++ Output dataset ./errts.tb6930_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb6930_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 1.05687e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 6.52361e-11
++ Smallest FDR q [3 uns1_Fstat] = 6.52361e-11
++ Smallest FDR q [5 uns2#0_Tstat] = 3.3004e-11
++ Smallest FDR q [6 uns2_Fstat] = 3.3004e-11
++ Smallest FDR q [8 uns3#0_Tstat] = 2.90117e-09
++ Smallest FDR q [9 uns3_Fstat] = 2.90117e-09
++ Smallest FDR q [11 str1#0_Tstat] = 2.07982e-07
++ Smallest FDR q [12 str1_Fstat] = 2.07982e-07
++ Smallest FDR q [14 str2#0_Tstat] = 9.55238e-12
++ Smallest FDR q [15 str2_Fstat] = 9.55238e-12
++ Smallest FDR q [17 str3#0_Tstat] = 5.38981e-06
++ Smallest FDR q [18 str3_Fstat] = 5.38981e-06
++ Smallest FDR q [20 unstructured#0_Tstat] = 6.50813e-14
++ Smallest FDR q [21 unstructured_Fstat] = 6.50813e-14
++ Smallest FDR q [23 structured#0_Tstat] = 3.96547e-13
++ Smallest FDR q [24 structured_Fstat] = 3.96547e-13
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.329157 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.329157 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999836 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999836 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.0630042
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.0630042
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 3.9067e-06
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 3.9067e-06
 + Added 25 FDR curves to dataset stats.tb6930_REML+orig
++ Output dataset ./stats.tb6930_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=171.98
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb6930 pb03.tb6930.r01.blur+orig.HEAD pb03.tb6930.r02.blur+orig.HEAD pb03.tb6930.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 20.0 s
3dTstat -mean -prefix rm.signal.all all_runs.tb6930+orig[0..95,99..186,190..198,203,208..241,246..270,273..286,289..334,337..347,353..372,375..403,406..415,418..427,431..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb6930_REML+orig[0..95,99..186,190..198,203,208..241,246..270,273..286,289..334,337..347,353..372,375..403,406..415,418..427,431..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb6930+orig -expr c*a/b -prefix TSNR.tb6930
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb6930_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb6930+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 60331 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.204895
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
** Can't read ANY data from file 'rm.DP+orig.HEAD'
[7m** FATAL ERROR:[0m Can't open dataset rm.DP+orig
** Program compile date = Jul 20 2017
