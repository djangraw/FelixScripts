echo auto-generated by afni_proc.py, Wed Aug  9 09:32:17 2017
auto-generated by afni_proc.py, Wed Aug  9 09:32:17 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 09:32:17 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0717
endif
set output_dir = tb0717.srtt
if ( -d tb0717.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0717.srtt
mkdir tb0717.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0717.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0717.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0717.srtt/pb00.tb0717.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0717.srtt/pb00.tb0717.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0717.srtt/pb00.tb0717.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.9 s
set tr_counts = ( 150 150 150 )
cd tb0717.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0717.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0717.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0717.r01.tcat+orig.BRIK is 5.100004 degrees from plumb.
++ 27376 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0717.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0717.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0717.r02.tcat+orig.BRIK is 5.100004 degrees from plumb.
++ 27507 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0717.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0717.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0717.r03.tcat+orig.BRIK is 5.100004 degrees from plumb.
++ 27602 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0717.r01.tshift -tpattern alt+z2 pb00.tb0717.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0717.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0717.r01.tcat+orig.BRIK is 5.100004 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0717.r02.tshift -tpattern alt+z2 pb00.tb0717.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0717.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0717.r02.tcat+orig.BRIK is 5.100004 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0717.r03.tshift -tpattern alt+z2 pb00.tb0717.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0717.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0717.r03.tcat+orig.BRIK is 5.100004 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0717.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 5.100004 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 313.016113
 + Used gradual clip level = 283.477814 .. 354.061798
 + Number voxels above clip level = 28064
 + Clustering voxels ...
 + Largest cluster has 27578 voxels
 + Clustering voxels ...
 + Largest cluster has 27166 voxels
 + Filled   282 voxels in small holes; now have 27448 voxels
 + Clustering voxels ...
 + Largest cluster has 27448 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 103622 voxels
 + Mask now has 27450 voxels
++ 27450 voxels in the mask [out of 131072: 20.94%]
++ first  13 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 776.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/776.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 5.100004 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 5.100004 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1382901 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 27450 voxels [17.6%] in weight mask
++ Number of points for matching = 27450
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.689 28.748 19.481 (index)
 + source center of mass = 83.059 155.238 162.853 (index)
 + source-target CM = 0.445 0.646 -1.845 (xyz)
 + center of mass shifts = 0.445 0.646 -1.845
++ shift param auto-range: -69.1..70.0 -68.9..70.2 -49.4..45.7
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.555122 .. 10.444878
 + Range param#2 [y-shift] = -9.353523 .. 10.646477
 + Range param#3 [z-shift] = -11.845253 .. 8.154747
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.555122 .. 40.444878
 + Range param#2 [y-shift] = -39.353523 .. 40.646477
 + Range param#3 [z-shift] = -41.845253 .. 38.154747
 + 12 free parameters
++ Normalized convergence radius = 0.000468
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1382901 [out of 13601984] voxels
 + base mask has 37695 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=71 usiz=159
 + - copying weight image
 + - using 27450 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 23620 total points stored in 221 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--+o-.o-o-o-++o.-.$+-+ + - best 45 costs found:
    0 v=-0.099755:   0.44   0.65  -1.85   0.00   0.00   0.00  [grid]
    1 v=-0.061610: -26.22 -12.69  11.49 -15.00 -15.00  15.00  [grid]
    2 v=-0.052150: -15.54 -18.85  -7.57 -20.53  -3.14  10.08  [rand]
    3 v=-0.043923: -15.54  20.14   3.88 -20.53   3.14  10.08  [rand]
    4 v=-0.040539: -15.54 -18.85  -7.57 -20.53   3.14  10.08  [rand]
    5 v=-0.040191: -12.89 -12.69  11.49 -15.00 -15.00  15.00  [grid]
    6 v=-0.039660: -12.89  27.31  11.49 -15.00  15.00  15.00  [grid]
    7 v=-0.035615:  -9.38 -24.11   9.54  -3.10 -34.36   2.55  [rand]
    8 v=-0.035439: -34.41  36.32 -16.10 -40.22  24.26  41.52  [rand]
    9 v=-0.034802:  32.93 -14.05   9.96  11.16  -9.40 -34.39  [rand]
   10 v=-0.033979: -12.89 -26.02  11.49 -15.00 -30.00  15.00  [grid]
   11 v=-0.032286: -20.53 -27.74  30.40  -3.65 -28.33  14.78  [rand]
   12 v=-0.032087: -26.22 -26.02  11.49 -15.00 -30.00  30.00  [grid]
   13 v=-0.031926: -33.88  17.23   6.76 -16.34   8.64  40.54  [rand]
   14 v=-0.031794:  -9.38 -24.11   9.54   3.10 -34.36   2.55  [rand]
   15 v=-0.031443: -19.34  17.40  15.83  -2.96  -2.59  18.65  [rand]
   16 v=-0.031432:  13.78 -12.69  11.49 -15.00 -15.00 -15.00  [grid]
   17 v=-0.031177: -19.34  17.40  15.83  -2.96   2.59  18.65  [rand]
   18 v=-0.031085: -26.69 -18.22  25.89  -5.55 -17.35 -23.42  [rand]
   19 v=-0.031021: -26.22 -12.69  11.49 -15.00 -15.00  30.00  [grid]
   20 v=-0.031017:  27.11 -26.02  11.49  15.00 -15.00 -30.00  [grid]
   21 v=-0.030737:  27.11 -12.69  11.49  15.00 -15.00 -15.00  [grid]
   22 v=-0.030305: -22.41 -22.93   8.57  -5.91 -29.74  29.45  [rand]
   23 v=-0.029462:  34.77  17.23 -10.45  16.34   8.64 -40.54  [rand]
   24 v=-0.029409: -34.42 -29.91  13.93 -11.68 -29.04  39.38  [rand]
   25 v=-0.029364: -26.22  13.98 -15.18 -15.00 -15.00  30.00  [grid]
   26 v=-0.029223:  34.77 -15.94   6.76  16.34  -8.64 -40.54  [rand]
   27 v=-0.029067: -26.22  27.31 -15.18 -30.00  15.00  30.00  [grid]
   28 v=-0.029033: -12.89  27.31  11.49 -30.00  15.00  15.00  [grid]
   29 v=-0.028984: -26.22 -26.02 -15.18 -15.00 -30.00  30.00  [grid]
   30 v=-0.028680: -34.35 -13.13  32.17 -10.62  -7.10 -10.42  [rand]
   31 v=-0.028473: -26.69 -18.22  25.89  -5.55 -17.35  23.42  [rand]
   32 v=-0.028446:  27.11 -26.02  11.49  30.00 -15.00 -30.00  [grid]
   33 v=-0.028437: -34.97  30.15  -4.95  13.33   5.58 -13.04  [rand]
   34 v=-0.027792:  27.11  27.31  11.49 -15.00 -30.00  15.00  [grid]
   35 v=-0.027788: -30.94  30.60   2.56 -42.54   9.20  25.31  [rand]
   36 v=-0.027604:  27.11 -26.02  11.49 -30.00 -15.00 -30.00  [grid]
   37 v=-0.027554: -26.22  13.98 -15.18 -15.00 -30.00  15.00  [grid]
   38 v=-0.027165:   4.52  -5.58  -9.64  -4.32 -22.85 -18.95  [rand]
   39 v=-0.027057:  13.78 -12.69  11.49 -30.00 -15.00 -15.00  [grid]
   40 v=-0.026875:  32.28  12.44   0.90  23.31   3.26 -40.47  [rand]
   41 v=-0.026806: -33.88  17.23 -10.45 -16.34  -8.64  40.54  [rand]
   42 v=-0.026257:  27.11 -12.69  11.49  30.00 -15.00 -30.00  [grid]
   43 v=-0.026244: -17.89 -25.50   4.20  -6.51 -20.18   7.56  [rand]
   44 v=-0.026108: -23.90 -29.05 -14.87  28.68 -38.91  32.36  [rand]
*[#8004=-0.251496] *[#8015=-0.269627] *[#8016=-0.281196] *[#8017=-0.314601] *[#8019=-0.318597] *[#8020=-0.338082] *[#8022=-0.34061] *[#8024=-0.350646] *[#8025=-0.363015] *[#8026=-0.370025] *[#8028=-0.376592] *[#8029=-0.390088] *[#8030=-0.396549] *[#8032=-0.402442] *[#8033=-0.411743] *[#8036=-0.422749] *[#8039=-0.431668] *[#8042=-0.434321] *[#8046=-0.435614] *[#8048=-0.438075] *[#8050=-0.43939]  + - costs of the above after a little optimization:
  * 0 v=-0.439390:  -0.46  -2.63   2.55   0.74  -3.11   1.06  [grid]
    1 v=-0.071773: -25.57 -12.08  10.89 -13.12 -14.97  14.67  [grid]
    2 v=-0.073378: -15.53 -16.96  -5.81 -19.25  -2.18   8.72  [rand]
    3 v=-0.089938: -14.03  14.02   3.67 -12.98   3.39   8.26  [rand]
    4 v=-0.074481: -14.15 -13.83  -6.78 -17.68   0.71   8.13  [rand]
    5 v=-0.104508: -14.45 -12.19   8.00  -7.58 -12.87   9.68  [grid]
    6 v=-0.050252: -12.51  27.23   7.02 -19.06  12.41  11.64  [grid]
    7 v=-0.123863:  -6.51 -22.64  10.30  -6.37 -21.63   2.30  [rand]
    8 v=-0.036662: -34.82  36.23 -16.27 -40.70  24.54  41.75  [rand]
    9 v=-0.038289:  34.07 -13.88  10.18  11.53  -9.55 -35.25  [rand]
   10 v=-0.102212: -11.38 -26.79   9.51  -4.51 -25.56   8.70  [grid]
   11 v=-0.045523: -19.66 -24.52  26.13  -4.27 -29.34  14.84  [rand]
   12 v=-0.058080: -29.27 -23.63  10.28 -11.71 -20.79  21.98  [grid]
   13 v=-0.038315: -35.20  21.02   5.29 -16.12   7.27  40.20  [rand]
   14 v=-0.122242:  -6.39 -25.49  12.09  -5.52 -24.77   2.97  [rand]
   15 v=-0.099202: -18.06   9.17   6.65  -9.38  -0.03  13.30  [rand]
   16 v=-0.098052:   9.22 -14.34  10.70  -3.82 -15.06 -14.29  [grid]
   17 v=-0.159243: -10.95  -2.81   7.57  -5.23  -6.86   8.60  [rand]
   18 v=-0.040873: -29.21 -18.56  26.25  -7.46 -19.72 -18.95  [rand]
   19 v=-0.078608: -25.16 -14.99  11.39  -3.99 -17.99  23.90  [grid]
   20 v=-0.039966:  28.14 -26.44   8.80  11.94 -16.17 -32.38  [grid]
   21 v=-0.044071:  26.10 -13.18  10.03  13.15 -15.50 -15.02  [grid]
   22 v=-0.052127: -27.18 -28.46   9.18  -3.76 -29.07  31.16  [rand]
   23 v=-0.036109:  31.02  17.33 -10.17  15.90   8.51 -40.77  [rand]
   24 v=-0.032637: -33.37 -29.49  14.05 -12.01 -29.66  38.84  [rand]
   25 v=-0.046149: -25.14  14.18 -10.64 -15.39 -11.76  28.52  [grid]
   26 v=-0.037735:  38.16 -15.02   5.05  17.86  -9.47 -42.55  [rand]
   27 v=-0.037577: -26.30  27.65 -15.96 -27.13  16.64  28.78  [grid]
   28 v=-0.049751: -13.53  25.13   7.69 -23.18  11.71  14.93  [grid]
   29 v=-0.029190: -26.36 -26.09 -15.47 -14.97 -29.93  30.24  [grid]
   30 v=-0.036681: -33.44  -8.93  32.75 -10.03  -7.39 -10.58  [rand]
   31 v=-0.036459: -25.64 -18.42  28.68  -5.79 -17.62  22.91  [rand]
   32 v=-0.037366:  25.98 -28.11  10.19  28.38 -19.74 -31.46  [grid]
   33 v=-0.039453: -39.02  31.00  -4.88  12.88   4.84 -13.35  [rand]
   34 v=-0.030241:  27.28  27.32  10.79 -15.71 -32.11  13.14  [grid]
   35 v=-0.033850: -35.07  29.90   1.93 -42.25   9.49  24.33  [rand]
   36 v=-0.034939:  25.38 -26.30  10.26 -31.70 -14.80 -29.83  [grid]
   37 v=-0.033045: -24.18  13.75 -14.97 -15.46 -30.32  13.97  [grid]
   38 v=-0.057066:   5.53  -9.87  -1.54  -4.68 -25.34 -16.76  [rand]
   39 v=-0.034134:  15.36 -13.53   8.58 -30.90 -17.48 -14.62  [grid]
   40 v=-0.039445:  33.61   7.35  -0.17  23.00   5.30 -43.75  [rand]
   41 v=-0.033505: -33.79  14.48 -12.75 -17.17  -8.78  36.54  [rand]
   42 v=-0.038614:  27.05 -12.14  11.43  30.62 -10.48 -30.09  [grid]
   43 v=-0.094211: -15.22 -23.96   7.69  -8.25 -21.90  10.18  [rand]
   44 v=-0.041497: -24.15 -25.37 -17.38  27.68 -43.75  31.27  [rand]
 + - save # 0 for twobest
 + - save #17 for twobest
 + - save # 7 for twobest
 + - skip #14 for twobest: too close to set # 7
 + - save # 5 for twobest
 + - save #10 for twobest
 + - save #15 for twobest
 + - save #16 for twobest
 + - skip #43 for twobest: too close to set #10
 + - save # 3 for twobest
 + - save #19 for twobest
 + - save # 4 for twobest
 + - skip # 2 for twobest: too close to set # 4
 + - save # 1 for twobest
 + - save #12 for twobest
 + - save #38 for twobest
 + - save #22 for twobest
 + - save # 6 for twobest
 + - skip #28 for twobest: too close to set # 6
 + - save #25 for twobest
 + - save #11 for twobest
 + - save #21 for twobest
 + - save #44 for twobest
 + - save #18 for twobest
 + - save #20 for twobest
 + - save #33 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=71 usiz=159
 + - retaining old weight image
 + - using 27450 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23659 total points stored in 240 'RHDD(13.7332)' bloks
*[#9798=-0.513206] *[#9809=-0.514208] *[#9821=-0.514781] *[#9822=-0.515106] *[#9825=-0.515793] *[#9829=-0.51689] *[#9830=-0.520006] *[#9832=-0.520358] *[#9833=-0.520538] *[#9837=-0.521702] *[#9838=-0.522135] *[#9841=-0.522608] *[#9852=-0.523617] *[#9853=-0.524766] *[#9854=-0.525203] *[#9857=-0.526452] *[#9858=-0.527132] *[#9859=-0.527708] *[#9860=-0.527957] *[#9861=-0.528034] *[#9862=-0.528201] *[#9864=-0.529111] *[#9865=-0.529879] *[#9868=-0.530315] *[#9873=-0.531074] *[#9874=-0.53136] *[#9875=-0.531495] *[#9876=-0.531539] *[#9877=-0.531693] *[#9878=-0.532242] *[#9880=-0.532692] *[#9881=-0.532739] *[#9884=-0.532883] *[#9888=-0.533596] *[#9895=-0.533921] *[#9896=-0.534439] 
 + - param set #1 has cost=-0.534439
 + -- Parameters = -0.3450 -2.7713 2.4703 0.4069 -3.3430 0.6319 0.9957 0.9872 0.9933 -0.0117 0.0120 -0.0057
 + - param set #2 has cost=-0.364750
 + -- Parameters = -2.2450 -1.3032 4.0300 -0.7910 -3.0012 2.6137 0.9586 0.9994 1.0396 -0.0002 -0.0064 0.0001
 + - param set #3 has cost=-0.107669
 + -- Parameters = -7.0332 -21.9861 10.0022 -6.7275 -21.3381 2.4975 1.0116 1.0027 0.9978 0.0009 0.0009 -0.0015
 + - param set #4 has cost=-0.107028
 + -- Parameters = -12.9444 -11.0544 7.5159 -5.1880 -11.6654 9.0277 1.0013 0.9973 1.0221 0.0004 -0.0015 0.0029
 + - param set #5 has cost=-0.099454
 + -- Parameters = -9.8490 -25.3353 9.6292 -4.8044 -24.0364 6.9385 1.0202 1.0041 1.0008 0.0023 -0.0051 -0.0014
 + - param set #6 has cost=-0.115472
 + -- Parameters = -13.3448 4.3880 5.8769 -7.5968 -2.5181 8.0018 0.9826 1.0071 1.0119 0.0048 0.0066 -0.0061
 + - param set #7 has cost=-0.102479
 + -- Parameters = 8.1266 -12.0739 9.5322 -3.7873 -13.6502 -12.2208 1.0285 0.9998 0.9963 0.0066 0.0016 0.0038
 + - param set #8 has cost=-0.148827
 + -- Parameters = -10.7758 2.4447 4.8757 -6.1054 -3.2027 8.1639 0.9717 1.0046 0.9815 -0.0249 -0.0246 -0.0052
 + - param set #9 has cost=-0.061319
 + -- Parameters = -25.4548 -14.5095 11.7520 -4.3335 -18.1289 24.1225 0.9983 0.9966 0.9970 -0.0012 0.0098 -0.0004
 + - param set #10 has cost=-0.062742
 + -- Parameters = -13.1511 -13.8475 -6.7723 -17.3726 0.8409 8.0165 0.9988 1.0000 0.9975 -0.0007 0.0108 -0.0014
 + - param set #11 has cost=-0.117569
 + -- Parameters = -11.6216 1.1659 7.1044 -6.4922 -4.7538 9.2899 1.0353 1.0004 1.0299 -0.0203 0.0278 -0.0367
 + - param set #12 has cost=-0.526360
 + -- Parameters = -0.5205 -2.6280 2.4877 0.7078 -3.0994 1.1923 1.0030 0.9921 0.9926 -0.0022 0.0013 0.0024
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0483 
 + --- dist(#3,#1) = 0.126 
 + --- dist(#4,#1) = 0.165 
 + --- dist(#5,#1) = 0.141 
 + --- dist(#6,#1) = 0.162 
 + --- dist(#7,#1) = 0.24 
 + --- dist(#8,#1) = 0.157 
 + --- dist(#9,#1) = 0.143 
 + --- dist(#10,#1) = 0.282 
 + --- dist(#11,#1) = 0.198 
 + --- dist(#12,#1) = 0.314 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=71 usiz=159
 + - retaining old weight image
 + - using 27450 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23907 total points stored in 248 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.504604
 + -- Parameters = -0.2917 -2.8361 2.3389 0.6060 -3.2332 0.6413 1.0002 0.9812 0.9915 -0.0122 0.0107 -0.0058
 + - param set #2 has cost=-0.502264
 + -- Parameters = -0.2196 -2.7543 2.1451 0.8359 -2.9267 0.7485 0.9989 0.9812 0.9873 -0.0037 0.0103 -0.0007
 + - param set #3 has cost=-0.470309
 + -- Parameters = -0.7871 -2.6031 3.1646 0.6533 -2.7166 1.7921 1.0065 0.9799 1.0215 -0.0183 -0.0222 0.0004
 + - param set #4 has cost=-0.216174
 + -- Parameters = -7.2559 1.1629 5.4322 -3.2937 -1.8666 7.4144 0.9978 1.0596 1.0311 -0.0329 -0.1009 0.0591
 + - param set #5 has cost=-0.139408
 + -- Parameters = -8.4345 -0.8005 7.4428 -3.3106 -3.7559 7.5078 1.0006 0.9597 1.0275 -0.0062 0.0086 0.0064
 + - param set #6 has cost=-0.464252
 + -- Parameters = -0.5526 -2.6464 2.3624 0.7953 -3.4459 1.4328 1.0167 1.0059 0.9831 -0.0018 -0.0020 0.0004
 + - param set #7 has cost=-0.091350
 + -- Parameters = -6.4034 -18.7254 10.5219 -4.2761 -19.4743 2.5101 0.9924 0.9916 0.9645 -0.0029 -0.0021 -0.0090
 + - param set #8 has cost=-0.114733
 + -- Parameters = -9.5764 -6.4999 6.3895 -4.5506 -9.0120 7.3267 1.0470 0.9807 1.0012 -0.0124 0.0184 -0.0237
 + - param set #9 has cost=-0.086238
 + -- Parameters = 7.8143 -11.1931 9.1437 -3.0084 -12.9872 -11.1807 1.0423 1.0131 1.0091 -0.0058 0.0178 -0.0128
 + - param set #10 has cost=-0.076782
 + -- Parameters = -8.8894 -24.6312 9.0920 -5.1696 -23.3185 6.2236 1.0187 1.0058 1.0027 0.0018 0.0020 -0.0014
 + - param set #11 has cost=-0.057729
 + -- Parameters = -13.4688 -13.2599 -6.1107 -16.7369 1.3458 7.3220 0.9977 0.9860 0.9675 0.0092 0.0069 0.0116
 + - param set #12 has cost=-0.046071
 + -- Parameters = -25.4674 -14.5541 11.4202 -4.1712 -18.2734 24.1752 0.9985 0.9928 0.9950 0.0026 0.0177 -0.0026
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0384 
 + --- dist(#3,#1) = 0.148 
 + --- dist(#4,#1) = 0.0672 
 + --- dist(#5,#1) = 0.502 
 + --- dist(#6,#1) = 0.102 
 + --- dist(#7,#1) = 0.128 
 + --- dist(#8,#1) = 0.199 
 + --- dist(#9,#1) = 0.131 
 + --- dist(#10,#1) = 0.272 
 + --- dist(#11,#1) = 0.193 
 + --- dist(#12,#1) = 0.315 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=71 usiz=159
 + - retaining old weight image
 + - using 27450 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24039 total points stored in 256 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.485313
 + -- Parameters = -0.0791 -2.8915 2.3587 0.7559 -3.0693 0.5349 1.0047 0.9794 0.9963 -0.0097 0.0132 -0.0066
 + - param set #2 has cost=-0.484058
 + -- Parameters = -0.1276 -2.8200 2.2032 0.7908 -2.9160 0.6617 1.0043 0.9793 0.9908 -0.0087 0.0116 -0.0019
 + - param set #3 has cost=-0.476104
 + -- Parameters = -0.3192 -2.7538 2.4699 0.7596 -2.8375 1.0882 1.0060 0.9796 1.0004 -0.0146 -0.0048 -0.0041
 + - param set #4 has cost=-0.480080
 + -- Parameters = -0.2647 -2.8715 2.1986 0.9160 -3.0994 1.1675 1.0040 0.9794 0.9911 -0.0058 -0.0006 -0.0055
 + - param set #5 has cost=-0.346443
 + -- Parameters = -1.4888 -1.3098 3.8294 0.2826 -0.1222 3.3997 0.9893 0.9810 1.0362 -0.0130 -0.0702 0.0489
 + - param set #6 has cost=-0.241173
 + -- Parameters = -4.0974 -1.8364 6.8472 -2.2456 -4.5548 4.2367 0.9636 1.0252 1.0826 -0.0354 -0.0393 0.0137
 + - param set #7 has cost=-0.377688
 + -- Parameters = -1.4282 -3.2143 1.8146 0.3702 -4.3996 3.0324 1.0311 0.9774 0.9831 -0.0373 -0.0559 -0.0318
 + - param set #8 has cost=-0.081644
 + -- Parameters = -5.8399 -18.2936 10.1241 -3.7414 -18.8490 2.5592 0.9957 0.9828 0.9635 -0.0037 -0.0016 -0.0108
 + - param set #9 has cost=-0.169467
 + -- Parameters = 4.4242 -6.1110 3.9310 -0.2410 -9.5243 -4.2672 1.0332 1.0947 1.0160 -0.0381 0.1008 -0.0727
 + - param set #10 has cost=-0.066034
 + -- Parameters = -8.8479 -24.2867 10.1841 -5.1902 -23.4766 6.1840 1.0199 1.0126 1.0167 -0.0014 0.0017 -0.0001
 + - param set #11 has cost=-0.049397
 + -- Parameters = -12.9139 -13.1724 -6.1906 -16.2107 1.9477 7.3434 1.0103 0.9823 0.9686 0.0101 0.0057 0.0155
 + - param set #12 has cost=-0.037288
 + -- Parameters = -25.5469 -14.7825 11.2574 -3.9445 -18.1302 23.9864 0.9991 0.9929 0.9959 0.0037 0.0170 0.0027
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.021 
 + --- dist(#3,#1) = 0.0619 
 + --- dist(#4,#1) = 0.0811 
 + --- dist(#5,#1) = 0.311 
 + --- dist(#6,#1) = 0.375 
 + --- dist(#7,#1) = 0.236 
 + --- dist(#8,#1) = 0.394 
 + --- dist(#9,#1) = 0.193 
 + --- dist(#10,#1) = 0.267 
 + --- dist(#11,#1) = 0.189 
 + --- dist(#12,#1) = 0.318 
 + - Total coarse refinement net CPU time = 0.0 s; 3421 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=71 usiz=159
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24263 total points stored in 261 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.465939 *
 + -- Parameters = -0.0791 -2.8915 2.3587 0.7559 -3.0693 0.5349 1.0047 0.9794 0.9963 -0.0097 0.0132 -0.0066
 + - cost(#2)=-0.464579  
 + -- Parameters = -0.1276 -2.8200 2.2032 0.7908 -2.9160 0.6617 1.0043 0.9793 0.9908 -0.0087 0.0116 -0.0019
 + - cost(#3)=-0.461839  
 + -- Parameters = -0.2647 -2.8715 2.1986 0.9160 -3.0994 1.1675 1.0040 0.9794 0.9911 -0.0058 -0.0006 -0.0055
 + - cost(#4)=-0.458757  
 + -- Parameters = -0.3192 -2.7538 2.4699 0.7596 -2.8375 1.0882 1.0060 0.9796 1.0004 -0.0146 -0.0048 -0.0041
 + - cost(#5)=-0.363832  
 + -- Parameters = -1.4282 -3.2143 1.8146 0.3702 -4.3996 3.0324 1.0311 0.9774 0.9831 -0.0373 -0.0559 -0.0318
 + - cost(#6)=-0.330127  
 + -- Parameters = -1.4888 -1.3098 3.8294 0.2826 -0.1222 3.3997 0.9893 0.9810 1.0362 -0.0130 -0.0702 0.0489
 + - cost(#7)=-0.223107  
 + -- Parameters = -4.0974 -1.8364 6.8472 -2.2456 -4.5548 4.2367 0.9636 1.0252 1.0826 -0.0354 -0.0393 0.0137
 + - cost(#8)=-0.159444  
 + -- Parameters = 4.4242 -6.1110 3.9310 -0.2410 -9.5243 -4.2672 1.0332 1.0947 1.0160 -0.0381 0.1008 -0.0727
 + - cost(#9)=-0.074652  
 + -- Parameters = -5.8399 -18.2936 10.1241 -3.7414 -18.8490 2.5592 0.9957 0.9828 0.9635 -0.0037 -0.0016 -0.0108
 + - cost(#10)=-0.059541  
 + -- Parameters = -8.8479 -24.2867 10.1841 -5.1902 -23.4766 6.1840 1.0199 1.0126 1.0167 -0.0014 0.0017 -0.0001
 + - cost(#11)=-0.040149  
 + -- Parameters = -12.9139 -13.1724 -6.1906 -16.2107 1.9477 7.3434 1.0103 0.9823 0.9686 0.0101 0.0057 0.0155
 + - cost(#12)=-0.030822  
 + -- Parameters = -25.5469 -14.7825 11.2574 -3.9445 -18.1302 23.9864 0.9991 0.9929 0.9959 0.0037 0.0170 0.0027
 + - cost(#13)=-0.115812  
 + -- Parameters = 0.4449 0.6465 -1.8453 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.466294 *
 + -- Parameters = -0.1019 -2.9216 2.3491 0.7989 -3.0602 0.5573 1.0045 0.9797 0.9970 -0.0095 0.0135 -0.0067
 + - cost(#2)=-0.466219  
 + -- Parameters = -0.1104 -2.8975 2.3569 0.7790 -3.0042 0.5637 1.0044 0.9798 0.9977 -0.0096 0.0135 -0.0063
 + - cost(#3)=-0.465902  
 + -- Parameters = -0.1475 -2.9781 2.1869 0.8499 -3.2118 0.6577 1.0032 0.9794 0.9933 -0.0086 0.0101 -0.0100
 + - cost(#4)=-0.464103  
 + -- Parameters = -0.2803 -2.8570 2.3605 0.7928 -2.8837 0.9357 1.0029 0.9793 0.9985 -0.0098 0.0042 -0.0025
 + - cost(#5)=-0.434305  
 + -- Parameters = -0.8548 -3.3561 1.8381 0.9035 -3.7089 2.4163 1.0048 0.9749 0.9842 -0.0057 -0.0260 -0.0209
 + - cost(#6)=-0.382977  
 + -- Parameters = -0.8927 -1.6483 3.6598 0.7521 -0.4153 2.4292 1.0153 0.9842 1.0342 -0.0252 -0.0327 0.0446
 + - cost(#7)=-0.415206  
 + -- Parameters = -0.3024 -2.7286 2.5790 0.3419 -2.2604 1.1389 1.0204 0.9862 1.0108 -0.0372 -0.0107 0.0107
 + - cost(#8)=-0.304368  
 + -- Parameters = 0.6304 -3.4244 2.7650 -0.8278 -6.8195 -2.9235 0.9860 1.0340 1.0084 -0.0070 0.0917 -0.0797
 + - cost(#9)=-0.076533  
 + -- Parameters = -5.2171 -18.8222 9.9886 -3.3110 -19.1214 2.4206 1.0053 0.9774 0.9587 -0.0067 -0.0010 -0.0093
 + - cost(#10)=-0.060451  
 + -- Parameters = -8.6800 -24.1100 9.9358 -5.0870 -23.3244 6.1155 1.0150 1.0129 1.0169 -0.0011 0.0026 -0.0016
 + - cost(#11)=-0.040851  
 + -- Parameters = -12.8846 -13.2163 -6.2238 -16.1507 1.9756 7.3881 1.0110 0.9755 0.9683 0.0101 0.0058 0.0158
 + - cost(#12)=-0.032499  
 + -- Parameters = -25.6950 -15.5677 11.7846 -3.0539 -17.7519 24.1874 0.9973 0.9926 0.9884 0.0045 0.0190 0.0034
 + - cost(#13)=-0.464316  
 + -- Parameters = -0.0803 -2.9017 2.1936 0.9766 -3.0245 0.6764 1.0070 0.9816 0.9929 -0.0021 0.0110 -0.0064
 + - case #1 is now the best
 + - Initial  cost = -0.466294
 + - Initial fine Parameters = -0.1019 -2.9216 2.3491 0.7989 -3.0602 0.5573 1.0045 0.9797 0.9970 -0.0095 0.0135 -0.0067
 + - Finalish cost = -0.466337 ; 79 funcs
 + - Final    cost = -0.466351 ; 159 funcs
 + Final fine fit Parameters:
       x-shift=-0.1099   y-shift=-2.9170   z-shift= 2.3529
       z-angle= 0.8010   x-angle=-3.0758   y-angle= 0.5690
       x-scale= 1.0046   y-scale= 0.9802   z-scale= 0.9970
     y/x-shear=-0.0090 z/x-shear= 0.0135 z/y-shear=-0.0068
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.1099 -2.9170 2.3529 0.8010 -3.0758 0.5690 1.0046 0.9802 0.9970 -0.0090 0.0135 -0.0068
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 5.100004 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0206 -0.9789 0.0362 243.3159 0.0248 0.0400 0.9964 84.1667 -1.0045 0.0135 0.0100 200.9529
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.5 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 4553.120100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 84.0623 47.7012   ITER = 9/137
84.0623

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 90ms]
lev=0 0..171 0..213 0..166: [first cost=-0.67392] ... done [cost:-0.67392==>-0.75551]
lev=1 patch=129x161x125 [clock= 13m 16s 551ms]........:[cost=-0.77895]:........ done [cost:-0.75551==>-0.78209 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 17m 35s 887ms]......................... done [cost:-0.78209==>-0.85867 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 21m 22s 913ms].................. done [cost:-0.85867==>-0.91592 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 24m 5s 141ms]........ done [cost:-0.91592==>-0.97345 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 26m 2s 486ms]................. done [cost:-0.97345==>-1.04155 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 28m 12s 343ms]....................... done [cost:-1.04155==>-1.10065 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 30m 28s 758ms].............................. done [cost:-1.10065==>-1.17100 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 32m 56s 766ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0717/tb0717.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 7.4 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0717.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.100004 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0717.r01.tshift+orig.BRIK is 5.100004 degrees from plumb.
++ Reading input dataset ./pb01.tb0717.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29079 voxels
 + 4743 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.496  pitch=-1.750  yaw=-1.080  dS=-0.115  dL=-0.897  dP=-0.084
++ Mean: roll=-0.238  pitch=-0.805  yaw=-0.464  dS=+0.424  dL=-0.300  dP=+0.378
++ Max : roll=+0.038  pitch=+0.094  yaw=+0.014  dS=+0.839  dL=-0.000  dP=+0.826
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.27(0.27) 0.19(0.12) 0.21(0.12) 0.13(0.12) 0.14(0.13) 0.16(0.05) 0.24(0.09) 0.30(0.09) 0.21(0.10) 0.21(0.05) 0.15(0.09) 0.13(0.09) 0.10(0.05) 0.09(0.09) 0.10(0.04) 0.11(0.03) 0.08(0.08) 0.06(0.04) 0.13(0.08) 0.18(0.08) 0.19(0.05) 0.22(0.11) 0.25(0.06) 0.25(0.06) 0.29(0.04) 0.31(0.05) 0.36(0.07) 0.44(0.09) 0.42(0.03) 0.45(0.03) 0.57(0.23) 0.54(0.22) 0.51(0.28) 0.53(0.17) 0.62(0.10) 0.61(0.04) 0.62(0.05) 0.72(0.16) 0.66(0.09) 0.67(0.06) 0.76(0.15) 0.79(0.05) 0.82(0.04) 0.87(0.07) 0.96(0.09) 0.98(0.15) 1.05(0.12) 1.16(0.19) 1.23(0.09) 1.27(0.06) 1.29(0.03) 1.30(0.07) 1.29(0.06) 1.34(0.07) 1.39(0.07) 1.42(0.04) 1.42(0.06) 1.45(0.06) 1.39(0.16) 1.39(0.11) 1.43(0.08) 1.48(0.06) 1.53(0.07) 1.47(0.10) 1.46(0.06) 1.44(0.05) 1.52(0.17) 1.80(0.38) 1.85(0.22) 1.97(0.13) 1.86(0.13) 1.87(0.08) 1.97(0.11) 1.90(0.07) 1.99(0.09) 2.09(0.11) 2.13(0.06) 2.14(0.04) 2.22(0.09) 2.27(0.06) 2.23(0.35) 2.17(0.35) 2.35(0.21) 2.38(0.12) 2.47(0.10) 2.51(0.09) 2.64(0.14) 2.74(0.10) 2.77(0.04) 2.80(0.05) 2.79(0.07) 2.81(0.06) 2.85(0.05) 2.85(0.04) 2.88(0.06) 2.92(0.04) 2.91(0.04) 2.93(0.05) 2.94(0.07) 2.91(0.09) 2.92(0.06) 2.99(0.08) 3.00(0.07) 2.90(0.11) 2.95(0.69) 3.02(0.33) 3.12(0.17) 3.24(0.19) 3.31(0.10) 3.36(0.06) 3.35(0.02) 3.39(0.05) 3.47(0.10) 3.43(0.30) 3.37(0.34) 3.55(0.28) 3.59(0.16) 3.60(0.06) 3.61(0.05) 3.64(0.04) 3.62(0.03) 3.63(0.04) 3.70(0.08) 3.66(0.05) 3.67(0.04) 3.63(0.08) 3.73(0.11) 3.78(0.07) 3.80(0.06) 3.83(0.09) 3.82(0.04) 3.81(0.05) 3.88(0.09) 3.80(0.14) 3.78(0.19) 3.98(0.21) 4.02(0.09) 4.02(0.05) 4.00(0.04) 4.06(0.08) 4.00(0.06) 3.89(0.18) 3.64(0.76) 3.69(0.17) 3.84(0.31) 3.83(0.07) 3.72(0.36) 3.41(0.51) 3.54(0.22)
++ Max displacement in automask = 4.06 (mm) at sub-brick 140
++ Max delta displ  in automask = 0.76 (mm) at sub-brick 143
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0717.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0717.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0717.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0717.r01.tshift+orig.BRIK is 5.100004 degrees from plumb.
++ Source dataset: ./pb01.tb0717.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.100004 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0717.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.100004 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0717.r02.tshift+orig.BRIK is 5.100004 degrees from plumb.
++ Reading input dataset ./pb01.tb0717.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29215 voxels
 + 4791 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.577  pitch=-0.412  yaw=-0.246  dS=+0.142  dL=-0.404  dP=-0.148
++ Mean: roll=-0.394  pitch=-0.223  yaw=-0.081  dS=+0.419  dL=-0.122  dP=+0.213
++ Max : roll=-0.242  pitch=-0.083  yaw=+0.178  dS=+0.630  dL=+0.145  dP=+0.487
++ Max displacements (mm) for each sub-brick:
 1.19(0.00) 1.13(0.15) 1.10(0.08) 1.05(0.27) 1.00(0.17) 1.01(0.09) 1.08(0.14) 1.11(0.05) 1.03(0.10) 0.98(0.07) 1.01(0.07) 1.01(0.03) 1.02(0.06) 1.03(0.03) 1.05(0.05) 1.07(0.03) 1.07(0.07) 1.10(0.07) 1.14(0.06) 1.15(0.06) 1.17(0.07) 1.16(0.03) 1.20(0.11) 1.19(0.08) 1.18(0.10) 1.20(0.08) 1.17(0.04) 1.17(0.03) 1.18(0.06) 1.13(0.09) 1.13(0.07) 1.12(0.08) 1.11(0.04) 1.11(0.04) 1.10(0.04) 1.09(0.02) 1.17(0.09) 1.21(0.07) 1.21(0.08) 1.19(0.07) 1.15(0.08) 1.07(0.12) 1.09(0.09) 1.12(0.13) 1.08(0.32) 1.22(0.36) 1.18(0.17) 1.17(0.08) 1.16(0.10) 1.23(0.16) 1.22(0.02) 1.20(0.08) 1.22(0.09) 1.22(0.02) 1.26(0.08) 1.25(0.05) 1.23(0.03) 1.26(0.08) 1.21(0.08) 1.19(0.06) 1.20(0.05) 1.16(0.07) 1.19(0.08) 1.21(0.04) 1.18(0.13) 1.21(0.05) 1.22(0.04) 1.24(0.10) 1.24(0.04) 1.22(0.06) 1.27(0.12) 1.26(0.04) 1.27(0.06) 1.25(0.04) 1.21(0.08) 1.23(0.05) 1.20(0.08) 1.21(0.08) 1.23(0.10) 1.27(0.33) 1.40(0.57) 1.36(0.18) 1.32(0.13) 1.32(0.11) 1.31(0.13) 1.29(0.05) 1.27(0.04) 1.29(0.07) 1.30(0.06) 1.29(0.04) 1.30(0.04) 1.31(0.06) 1.28(0.05) 1.26(0.06) 1.22(0.04) 1.37(0.33) 1.39(0.25) 1.31(0.16) 1.28(0.17) 1.29(0.11) 1.23(0.12) 1.21(0.10) 1.21(0.03) 1.15(0.12) 1.13(0.09) 1.06(0.15) 1.07(0.08) 1.20(0.17) 1.14(0.12) 1.11(0.08) 1.16(0.12) 1.18(0.05) 1.22(0.08) 1.14(0.16) 1.13(0.15) 1.16(0.09) 1.10(0.06) 1.06(0.07) 1.07(0.07) 1.09(0.03) 1.11(0.05) 1.11(0.03) 1.06(0.07) 1.05(0.10) 0.83(0.35) 0.95(0.26) 0.94(0.21) 0.92(0.07) 0.90(0.07) 0.90(0.06) 0.95(0.05) 0.92(0.07) 0.87(0.06) 0.88(0.03) 0.90(0.06) 0.89(0.06) 0.90(0.06) 0.93(0.24) 0.96(0.29) 1.04(0.24) 1.05(0.20) 0.99(0.09) 0.89(0.16) 0.98(0.13) 0.98(0.03) 0.85(0.16) 0.81(0.09) 0.86(0.09) 0.91(0.08) 0.79(0.18)
++ Max displacement in automask = 1.40 (mm) at sub-brick 80
++ Max delta displ  in automask = 0.57 (mm) at sub-brick 80
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0717.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0717.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0717.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0717.r02.tshift+orig.BRIK is 5.100004 degrees from plumb.
++ Source dataset: ./pb01.tb0717.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.9
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.100004 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0717.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.100004 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0717.r03.tshift+orig.BRIK is 5.100004 degrees from plumb.
++ Reading input dataset ./pb01.tb0717.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29230 voxels
 + 4740 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.082  pitch=-0.428  yaw=+0.102  dS=-0.214  dL=+0.622  dP=-0.458
++ Mean: roll=+0.236  pitch=-0.153  yaw=+0.282  dS=-0.059  dL=+0.770  dP=-0.227
++ Max : roll=+0.392  pitch=+0.131  yaw=+0.508  dS=+0.253  dL=+1.002  dP=+0.075
++ Max displacements (mm) for each sub-brick:
 1.21(0.00) 1.20(0.12) 1.23(0.07) 1.27(0.07) 1.26(0.05) 1.37(0.24) 1.39(0.20) 1.32(0.18) 1.31(0.16) 1.30(0.03) 1.38(0.10) 1.44(0.10) 1.43(0.08) 1.44(0.04) 1.43(0.03) 1.44(0.04) 1.43(0.05) 1.39(0.17) 1.34(0.12) 1.34(0.07) 1.33(0.09) 1.30(0.03) 1.31(0.04) 1.34(0.05) 1.36(0.06) 1.33(0.07) 1.27(0.15) 1.27(0.06) 1.28(0.05) 1.28(0.07) 1.26(0.07) 1.32(0.07) 1.30(0.06) 1.30(0.03) 1.31(0.06) 1.29(0.06) 1.30(0.07) 1.31(0.05) 1.27(0.05) 1.25(0.05) 1.24(0.06) 1.25(0.16) 1.13(0.33) 1.12(0.12) 1.15(0.12) 1.13(0.06) 1.17(0.09) 1.16(0.03) 1.14(0.09) 1.20(0.11) 1.18(0.12) 1.18(0.06) 1.25(0.07) 1.29(0.06) 1.29(0.07) 1.32(0.06) 1.30(0.04) 1.28(0.03) 1.25(0.04) 1.22(0.06) 1.18(0.07) 1.16(0.11) 1.17(0.06) 1.16(0.08) 1.12(0.08) 1.08(0.05) 1.14(0.07) 1.11(0.07) 1.04(0.07) 1.06(0.11) 1.04(0.07) 1.01(0.06) 1.06(0.06) 1.09(0.05) 1.04(0.08) 1.08(0.09) 1.06(0.20) 0.90(0.29) 0.94(0.08) 0.99(0.08) 1.00(0.04) 1.00(0.08) 1.06(0.06) 1.07(0.05) 1.08(0.04) 1.14(0.07) 1.15(0.10) 1.15(0.04) 1.03(0.16) 1.06(0.08) 1.04(0.03) 1.09(0.08) 1.13(0.06) 1.12(0.08) 1.18(0.08) 1.25(0.15) 1.22(0.18) 1.18(0.16) 1.19(0.08) 1.25(0.07) 1.32(0.13) 1.32(0.05) 1.30(0.06) 1.32(0.10) 1.30(0.13) 1.40(0.12) 1.36(0.06) 1.41(0.07) 1.44(0.07) 1.51(0.09) 1.50(0.07) 1.45(0.19) 1.46(0.06) 1.53(0.15) 1.49(0.07) 1.51(0.11) 1.49(0.13) 1.50(0.07) 1.54(0.10) 1.54(0.03) 1.53(0.08) 1.58(0.08) 1.58(0.08) 1.59(0.11) 1.58(0.11) 1.49(0.13) 1.57(0.15) 1.65(0.14) 1.69(0.06) 1.67(0.04) 1.64(0.08) 1.64(0.03) 1.65(0.05) 1.71(0.11) 1.79(0.10) 1.79(0.11) 1.70(0.18) 1.53(0.17) 1.65(0.13) 1.69(0.08) 1.72(0.09) 1.76(0.11) 1.66(0.16) 1.57(0.25) 1.48(0.32) 1.49(0.11) 1.50(0.04) 1.52(0.37) 1.37(0.36) 1.44(0.12)
++ Max displacement in automask = 1.79 (mm) at sub-brick 134
++ Max delta displ  in automask = 0.37 (mm) at sub-brick 147
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0717.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0717.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0717.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0717.r03.tshift+orig.BRIK is 5.100004 degrees from plumb.
++ Source dataset: ./pb01.tb0717.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.9
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.100004 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 14.9
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0717.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0717.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0717.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0717.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0717.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0717.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.100004 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0717
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0717+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0717+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1268181 voxels in source_automask+0
++ Zero-pad: zbot=0 ztop=1
++ Computing -autobox
++ 272426 voxels [62.8%] in weight mask
++ Number of points for matching = 128040
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.124199
   sp   = 0.332922
   mi   = -0.549152
   crM  = 0.0268067
   nmi  = 0.827632
   je   = 2.63676
   hel  = -0.114582
   crA  = 0.164332
   crU  = 0.178417
   lss  = 0.875801
   lpc  = 0.206762
   lpa  = 0.793238
   lpc+ = 0.322234
   ncd  = 0.987445
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.2
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0717+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0717+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 27.8 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0717.r01.blur pb02.tb0717.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0717.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0717.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0717.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0717.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0717.r02.blur pb02.tb0717.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0717.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0717.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0717.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0717.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0717.r03.blur pb02.tb0717.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0717.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0717.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0717.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0717.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0717.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0717.r01.blur+orig
++ Forming automask
 + Fixed clip level = 304.604187
 + Used gradual clip level = 275.263397 .. 342.513245
 + Number voxels above clip level = 48411
 + Clustering voxels ...
 + Largest cluster has 48227 voxels
 + Clustering voxels ...
 + Largest cluster has 48217 voxels
 + Filled    23 voxels in small holes; now have 48240 voxels
 + Clustering voxels ...
 + Largest cluster has 48240 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 378035 voxels
 + Mask now has 48240 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 370643 voxels
++ 55632 voxels in the mask [out of 426275: 13.05%]
++ first  17 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  29 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   9 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0717.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0717.r02.blur+orig
++ Forming automask
 + Fixed clip level = 304.333710
 + Used gradual clip level = 266.998016 .. 341.573608
 + Number voxels above clip level = 48697
 + Clustering voxels ...
 + Largest cluster has 48495 voxels
 + Clustering voxels ...
 + Largest cluster has 48483 voxels
 + Filled    21 voxels in small holes; now have 48504 voxels
 + Clustering voxels ...
 + Largest cluster has 48504 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 377771 voxels
 + Mask now has 48504 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 370313 voxels
++ 55962 voxels in the mask [out of 426275: 13.13%]
++ first  17 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  29 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   9 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0717.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0717.r03.blur+orig
++ Forming automask
 + Fixed clip level = 307.036591
 + Used gradual clip level = 271.440735 .. 346.238495
 + Number voxels above clip level = 48710
 + Clustering voxels ...
 + Largest cluster has 48533 voxels
 + Clustering voxels ...
 + Largest cluster has 48519 voxels
 + Filled    23 voxels in small holes; now have 48542 voxels
 + Clustering voxels ...
 + Largest cluster has 48542 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 377733 voxels
 + Mask now has 48542 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 370327 voxels
++ 55948 voxels in the mask [out of 426275: 13.12%]
++ first  17 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  29 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   9 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0717
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 56126 survived, 370149 were zero
++ writing result full_mask.tb0717...
3dresample -master full_mask.tb0717+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0717
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 49815 survived, 376460 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0717...
3dABoverlap -no_automask full_mask.tb0717+orig mask_anat.tb0717+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0717+orig.BRIK  B=./mask_anat.tb0717+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
56126        49815        57557        48384        7742         1431         13.7940      2.8726     0.8730     0.9868     0.8869
3ddot -dodice full_mask.tb0717+orig mask_anat.tb0717+orig
tee out.mask_ae_dice.txt
0.913414	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0717
total number of censored TRs (simple form) = 9
1deval -a motion_tb0717_censor.1D -b outcount_tb0717_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0717_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0717.r01.blur+orig.HEAD pb03.tb0717.r02.blur+orig.HEAD pb03.tb0717.r03.blur+orig.HEAD -censor censor_tb0717_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0717 -errts errts.tb0717 -bucket stats.tb0717
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0717.r01.blur+orig.HEAD pb03.tb0717.r02.blur+orig.HEAD pb03.tb0717.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 48465 voxels (out of 426275 = 11.4%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 440 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0717.r01.blur+orig.HEAD pb03.tb0717.r02.blur+orig.HEAD pb03.tb0717.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0717_REML -Rvar stats.tb0717_REMLvar \
 -Rfitts fitts.tb0717_REML -Rerrts errts.tb0717_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (440x24):  5.79369  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (440x6):  1.03475  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (440x18):  5.72939  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (440x6):  3.20189  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (440x12):  1.08661  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.80426e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.34 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.954
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.968
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.982
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.996
++ Job #5: processing voxels 213135 to 255761; elapsed time=8.010
++ Job #6: processing voxels 255762 to 298388; elapsed time=8.024
++ Job #7: processing voxels 298389 to 341015; elapsed time=8.038
++ Job #8: processing voxels 341016 to 383642; elapsed time=8.052
++ Job #9: processing voxels 383643 to 426274; elapsed time=8.066
++ Job #0: processing voxels 0 to 42626; elapsed time=8.076
++ voxel loop:0123456789.0123456789.0123456789.0123456789.0123456789.
++ Job #0 waiting for children to finish; elapsed time=19.884
++ Job #5 finished; elapsed time=19.901
++ Job #1 finished; elapsed time=19.928
++ Job #7 finished; elapsed time=19.940
++ Job #4 finished; elapsed time=20.004
++ Job #3 finished; elapsed time=20.024
++ Job #2 finished; elapsed time=20.048
++ Job #6 finished; elapsed time=20.050
++ Job #9 finished; elapsed time=20.052
++ Job #8 finished; elapsed time=20.073
++ Job #0 now finishing up; elapsed time=20.085
++ Smallest FDR q [0 Full_Fstat] = 3.93361e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 1.79207e-14
++ Smallest FDR q [3 uns1_Fstat] = 1.79127e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 2.11449e-14
++ Smallest FDR q [6 uns2_Fstat] = 2.11427e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 3.84717e-14
++ Smallest FDR q [9 uns3_Fstat] = 3.84655e-14
++ Smallest FDR q [11 str1#0_Tstat] = 2.45389e-14
++ Smallest FDR q [12 str1_Fstat] = 2.45389e-14
++ Smallest FDR q [14 str2#0_Tstat] = 5.8731e-14
++ Smallest FDR q [15 str2_Fstat] = 5.8731e-14
++ Smallest FDR q [17 str3#0_Tstat] = 6.1775e-14
++ Smallest FDR q [18 str3_Fstat] = 6.17705e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 5.29934e-15
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 5.29838e-15
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 7.49143e-15
++ Smallest FDR q [24 structured_GLT_Fstat] = 7.49076e-15
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 6.6619e-05
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 6.66222e-05
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.000163593
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.000163596
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 0.0197548
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 0.0197526
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 0.0112799
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 0.0112772
++ Wrote bucket dataset into ./stats.tb0717+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0717+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0717+orig.BRIK
++ Program finished; elapsed time=39.691
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.735       0.797  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.724       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.720       0.786  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.480       0.557  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.479       0.554  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.473       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0717.r01.blur+orig.HEAD pb03.tb0717.r02.blur+orig.HEAD pb03.tb0717.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0717_REML -Rvar stats.tb0717_REMLvar -Rfitts fitts.tb0717_REML -Rerrts errts.tb0717_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 48465 voxels (out of 426275 = 11.4%)
++ -----  matrix condition (440x24):  5.79369  ++ VERY GOOD ++
 + masked off 251005 voxels for being all zero; 175270 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 316 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=9.18
 + X matrix: 46.638% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=440 cols=24; 109*1 cases; total CPU=0.00 Elapsed=9.20
 +  average case bandwidth = 12.34
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=53.16
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=101.91
++ Output dataset ./stats.tb0717_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0717_REML+orig.BRIK
++ Output dataset ./errts.tb0717_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0717_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.07932e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 1.33837e-09
++ Smallest FDR q [3 uns1_Fstat] = 1.33837e-09
++ Smallest FDR q [5 uns2#0_Tstat] = 4.48888e-08
++ Smallest FDR q [6 uns2_Fstat] = 4.48887e-08
++ Smallest FDR q [8 uns3#0_Tstat] = 7.71849e-08
++ Smallest FDR q [9 uns3_Fstat] = 7.71849e-08
++ Smallest FDR q [11 str1#0_Tstat] = 6.82114e-09
++ Smallest FDR q [12 str1_Fstat] = 6.82116e-09
++ Smallest FDR q [14 str2#0_Tstat] = 1.04214e-06
++ Smallest FDR q [15 str2_Fstat] = 1.04214e-06
++ Smallest FDR q [17 str3#0_Tstat] = 7.79199e-08
++ Smallest FDR q [18 str3_Fstat] = 7.79199e-08
++ Smallest FDR q [20 unstructured#0_Tstat] = 6.64111e-14
++ Smallest FDR q [21 unstructured_Fstat] = 6.64111e-14
++ Smallest FDR q [23 structured#0_Tstat] = 1.58305e-13
++ Smallest FDR q [24 structured_Fstat] = 1.58305e-13
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.999871 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.999871 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999885 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999886 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.999798 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.999798 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.999875 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.999875 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0717_REML+orig
++ Output dataset ./stats.tb0717_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=117.98
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0717 pb03.tb0717.r01.blur+orig.HEAD pb03.tb0717.r02.blur+orig.HEAD pb03.tb0717.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.4 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0717+orig[0..103,107..141,144..146,149..227,231..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0717_REML+orig[0..103,107..141,144..146,149..227,231..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0717+orig -expr c*a/b -prefix TSNR.tb0717
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0717_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0717+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 56126 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.176264
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0717.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..103,107..141,144..146,149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0717+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0717+orig[0..103,107..141,144..146,149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56126
[7m*+ WARNING:[0m removed 213 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 143 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.16 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..227,231..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0717+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0717+orig[150..227,231..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56126
[7m*+ WARNING:[0m removed 213 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 147 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.45 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0717+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0717+orig[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56126
[7m*+ WARNING:[0m removed 213 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.27 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 9.62684 9.09556 9.59109 9.43466
average errts FWHM blurs: 9.62684 9.09556 9.59109 9.43466
echo 9.62684 9.09556 9.59109 9.43466   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.482797 7.01374 12.2935 16.7019
average errts ACF blurs: 0.482797 7.01374 12.2935 16.7019
echo 0.482797 7.01374 12.2935 16.7019   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..103,107..141,144..146,149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0717+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0717_REML+orig[0..103,107..141,144..146,149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56126
[7m*+ WARNING:[0m removed 213 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 143 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.06 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..227,231..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0717+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0717_REML+orig[150..227,231..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56126
[7m*+ WARNING:[0m removed 213 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 147 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.34 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0717+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0717_REML+orig[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 56126
[7m*+ WARNING:[0m removed 213 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.22 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 9.59452 9.06643 9.56216 9.40453
average err_reml FWHM blurs: 9.59452 9.06643 9.56216 9.40453
echo 9.59452 9.06643 9.56216 9.40453   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.485681 6.94813 12.2999 16.5952
average err_reml ACF blurs: 0.485681 6.94813 12.2999 16.5952
echo 0.485681 6.94813 12.2999 16.5952   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0717.1D
3dClustSim -both -mask full_mask.tb0717+orig -acf 0.485681 6.94813 12.2999 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 56126 voxels in mask (13.17% of total)
++ Kernel function radius = 39.94 mm
++ ACF(0.49,6.95,12.30) => FWHM=16.60 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 519.4 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0717+orig stats.tb0717_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0717+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0717_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0717 -dsets pb00.tb0717.r01.tcat+orig.HEAD pb00.tb0717.r02.tcat+orig.HEAD pb00.tb0717.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0717.r01.blur+orig.BRIK rm.pb03.tb0717.r01.blur+orig.HEAD rm.pb03.tb0717.r02.blur+orig.BRIK rm.pb03.tb0717.r02.blur+orig.HEAD rm.pb03.tb0717.r03.blur+orig.BRIK rm.pb03.tb0717.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0717.txt
./@ss_review_basic

subject ID                : tb0717
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0717+orig.HEAD
final stats dset          : stats.tb0717_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 5
average motion (per TR)   : 0.0749178
average censored motion   : 0.070133
max motion displacement   : 3.11846
max censored displacement : 3.11846
outlier limit             : 0.1
average outlier frac (TR) : 0.00488011
num TRs above out limit   : 3

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 143 147 150
num TRs per run (censored): 7 3 0
fraction censored per run : 0.0466667 0.02 0
TRs total (uncensored)    : 450
TRs total                 : 440
degrees of freedom used   : 24
degrees of freedom left   : 416

TRs censored              : 10
censor fraction           : 0.022222
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 6 0 0 3 3 0
fraction TRs censored     : 0.088 0.000 0.000 0.027 0.027 0.000
ave mot per sresp (orig)  : 0.076997 0.070211 0.067427 0.077007 0.072791 0.061512
ave mot per sresp (cens)  : 0.056099 0.070211 0.067427 0.072354 0.068154 0.061512

TSNR average              : 296.421
global correlation (GCOR) : 0.176264
anat/EPI mask Dice coef   : 0.913414
maximum F-stat (masked)   : 26.4971
blur estimates (ACF)      : 0.485681 6.94813 12.2999
blur estimates (FWHM)     : 9.59452 9.06643 9.56216


cd ..
echo execution finished: `date`
date
execution finished: Wed Aug  9 10:25:43 EDT 2017
