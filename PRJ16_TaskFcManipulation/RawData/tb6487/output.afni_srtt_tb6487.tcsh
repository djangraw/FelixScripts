echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb6487
endif
set output_dir = tb6487.srtt
if ( -d tb6487.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb6487.srtt
mkdir tb6487.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb6487.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb6487.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb6487.srtt/pb00.tb6487.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.8 s
3dTcat -prefix tb6487.srtt/pb00.tb6487.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.7 s
3dTcat -prefix tb6487.srtt/pb00.tb6487.r03.tcat func_srtt/ep2dbold156s009a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.9 s
set tr_counts = ( 150 150 150 )
cd tb6487.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6487.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6487.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6487.r01.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 29144 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6487.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6487.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6487.r02.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 29585 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb6487.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6487.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6487.r03.tcat+orig.BRIK is 10.299996 degrees from plumb.
++ 29604 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb6487.r01.tshift -tpattern alt+z2 pb00.tb6487.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6487.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6487.r01.tcat+orig.BRIK is 10.299996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6487.r02.tshift -tpattern alt+z2 pb00.tb6487.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6487.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6487.r02.tcat+orig.BRIK is 10.299996 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb6487.r03.tshift -tpattern alt+z2 pb00.tb6487.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb6487.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb6487.r03.tcat+orig.BRIK is 10.299996 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb6487.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 10.299996 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 393.611389
 + Used gradual clip level = 361.522003 .. 440.015411
 + Number voxels above clip level = 29591
 + Clustering voxels ...
 + Largest cluster has 29408 voxels
 + Clustering voxels ...
 + Largest cluster has 28736 voxels
 + Filled   313 voxels in small holes; now have 29049 voxels
 + Clustering voxels ...
 + Largest cluster has 29049 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 102023 voxels
 + Mask now has 29049 voxels
++ 29049 voxels in the mask [out of 131072: 22.16%]
++ first  13 x-planes are zero [from R]
++ last   11 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    8 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 975.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/975.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 10.299996 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1470508 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 29049 voxels [18.2%] in weight mask
++ Number of points for matching = 29049
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.629 29.111 20.188 (index)
 + source center of mass = 87.914 161.398 181.603 (index)
 + source-target CM = -1.760 0.373 -7.951 (xyz)
 + center of mass shifts = -1.760 0.373 -7.951
++ shift param auto-range: -71.3..67.8 -69.1..69.9 -56.7..40.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.760109 .. 8.239891
 + Range param#2 [y-shift] = -9.626991 .. 10.373009
 + Range param#3 [z-shift] = -17.950966 .. 2.049034
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.760109 .. 38.239891
 + Range param#2 [y-shift] = -39.626991 .. 40.373009
 + Range param#3 [z-shift] = -47.950966 .. 32.049034
 + 12 free parameters
++ Normalized convergence radius = 0.000457
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1470508 [out of 15629504] voxels
 + base mask has 39933 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=60 usiz=195
 + - copying weight image
 + - using 29049 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 25069 total points stored in 233 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.001274] **[#2=-0.0248216] *++o.*[#10=-0.0338338] *--+-*[#28=-0.045783] *.-.-+-----++o+-$---o
 + - best 45 costs found:
    0 v=-0.045783: -15.09 -12.96   5.38 -15.00 -15.00  15.00  [grid]
    1 v=-0.043580:  14.38   9.84  16.40 -20.99  15.73 -16.09  [rand]
    2 v=-0.043217: -15.09 -26.29   5.38 -15.00 -30.00  15.00  [grid]
    3 v=-0.039265:  24.91 -12.96  18.72  30.00 -15.00 -30.00  [grid]
    4 v=-0.039140:   6.88  20.81   9.52  25.20  18.50 -13.54  [rand]
    5 v=-0.038445: -28.07 -25.58   9.84 -15.82 -17.65  37.25  [rand]
    6 v=-0.038183: -18.62 -18.21   6.50 -19.57 -37.09  16.59  [rand]
    7 v=-0.036250: -24.61 -23.20   2.46  -5.91 -29.74  29.45  [rand]
    8 v=-0.035285: -17.74 -19.12 -13.68 -20.53   3.14  10.08  [rand]
    9 v=-0.035072:  24.91 -26.29  18.72  30.00 -30.00 -30.00  [grid]
   10 v=-0.035034:   8.06  25.13 -19.33   3.10  34.36   2.55  [rand]
   11 v=-0.033834: -15.09  13.71   5.38 -15.00  15.00  15.00  [grid]
   12 v=-0.033489: -15.09 -12.96   5.38 -15.00 -30.00  15.00  [grid]
   13 v=-0.032928: -15.79 -15.35   6.72 -24.25 -37.55   4.41  [rand]
   14 v=-0.032897: -11.58 -24.39   3.43  -3.10 -34.36   2.55  [rand]
   15 v=-0.032650:  11.57  13.71  18.72 -30.00  15.00 -15.00  [grid]
   16 v=-0.032613:  24.91 -12.96   5.38  15.00 -15.00 -15.00  [grid]
   17 v=-0.032562: -15.09  13.71   5.38 -30.00  15.00  15.00  [grid]
   18 v=-0.032344: -17.74 -19.12 -13.68 -20.53  -3.14  10.08  [rand]
   19 v=-0.031986: -15.09  13.71   5.38  30.00  15.00  15.00  [grid]
   20 v=-0.031584: -15.09 -26.29   5.38 -30.00 -30.00  15.00  [grid]
   21 v=-0.031139:  11.57 -12.96   5.38 -30.00 -15.00 -15.00  [grid]
   22 v=-0.030843: -33.60 -11.42  -5.21 -23.31   3.26  40.47  [rand]
   23 v=-0.030511:   8.06  25.13 -19.33   3.10  34.36  -2.55  [rand]
   24 v=-0.029997:   8.06 -24.39   3.43   3.10 -34.36  -2.55  [rand]
   25 v=-0.029856:  21.77   8.92   8.02  26.66 -31.62 -32.06  [rand]
   26 v=-0.029680:  33.11 -30.18   7.82  11.68 -29.04 -39.38  [rand]
   27 v=-0.029287:  24.91  13.71  18.72 -15.00  15.00 -30.00  [grid]
   28 v=-0.029237: -10.40  20.81   9.52  25.20  18.50  13.54  [rand]
   29 v=-0.029175:  11.57 -26.29  18.72  30.00 -30.00 -15.00  [grid]
   30 v=-0.029130: -28.43 -26.29  18.72 -30.00 -15.00  30.00  [grid]
   31 v=-0.028103: -15.96   9.83  -3.11 -15.99  13.53  29.93  [rand]
   32 v=-0.028091: -17.90   9.84  16.40 -20.99  15.73  16.09  [rand]
   33 v=-0.027857: -15.18 -22.31  23.39  -4.37 -20.12  15.12  [rand]
   34 v=-0.027682:  24.91 -26.29   5.38  30.00 -15.00 -30.00  [grid]
   35 v=-0.027485:  24.91  13.71   5.38 -15.00  15.00 -30.00  [grid]
   36 v=-0.027385: -15.09  13.71   5.38 -30.00  15.00  30.00  [grid]
   37 v=-0.027359:  11.57  13.71  18.72 -15.00  15.00 -15.00  [grid]
   38 v=-0.027327:  24.91 -26.29  18.72  30.00 -15.00 -30.00  [grid]
   39 v=-0.027107: -15.09 -12.96 -34.62 -15.00  15.00  15.00  [grid]
   40 v=-0.027098: -15.09  13.71   5.38 -15.00  15.00  30.00  [grid]
   41 v=-0.027001: -15.09  13.71  18.72 -15.00  30.00  15.00  [grid]
   42 v=-0.026886:  24.91  13.71   5.38  30.00 -30.00 -30.00  [grid]
   43 v=-0.026663: -15.96   9.83  -3.11 -15.99 -13.53  29.93  [rand]
   44 v=-0.026659:  11.57 -12.96  18.72 -30.00  15.00 -30.00  [grid]
*[#8003=-0.0468985] *[#8005=-0.0621133] *[#8010=-0.064099] *[#8012=-0.073451] *[#8017=-0.0770958] *[#8020=-0.0828356] *[#8022=-0.0849291] *[#8023=-0.0862175] *[#8024=-0.0887618] *[#8025=-0.0901835] *[#8026=-0.0932987] *[#8027=-0.102477] *[#8028=-0.109425] *[#8029=-0.121303] *[#8030=-0.128104] *[#8034=-0.128217] *[#8037=-0.131749] *[#8038=-0.135051] *[#8041=-0.136971] *[#8044=-0.139872] *[#8045=-0.142157] *[#8050=-0.142923] *[#8051=-0.144136] *[#8052=-0.146145] *[#8054=-0.147453] *[#8055=-0.148821] *[#8056=-0.149846] *[#8059=-0.150457] *[#8064=-0.151058]  + - costs of the above after a little optimization:
  * 0 v=-0.151058:  -8.59 -10.12   1.07  -7.84  -8.80   3.33  [grid]
    1 v=-0.045393:  14.40  10.02  15.85 -21.00  14.95 -17.11  [rand]
    2 v=-0.079168: -17.37 -25.10   7.96  -5.45 -27.88  16.99  [grid]
    3 v=-0.046652:  24.85 -12.48  18.64  34.43 -15.04 -30.08  [grid]
    4 v=-0.039878:   7.28  20.81   9.52  25.20  18.50 -13.59  [rand]
    5 v=-0.049035: -25.93 -26.58  13.06 -17.97 -18.47  34.99  [rand]
    6 v=-0.045652: -17.30 -18.41   8.53 -21.29 -38.08  15.15  [rand]
    7 v=-0.062662: -24.01 -29.37   4.89  -4.16 -31.95  29.48  [rand]
    8 v=-0.065825: -17.73 -11.54 -13.72 -15.82   3.46   9.10  [rand]
    9 v=-0.054294:  20.79 -26.61  19.47  27.71 -23.34 -29.27  [grid]
   10 v=-0.074545:   3.79  27.77 -17.86   3.04  30.12  -2.51  [rand]
   11 v=-0.068137: -12.08  11.29   3.76 -16.36  11.41  18.94  [grid]
   12 v=-0.050063: -14.54 -14.06   6.35  -8.73 -29.50  15.50  [grid]
   13 v=-0.044351: -12.67 -16.67   7.46 -23.46 -37.58   5.86  [rand]
   14 v=-0.074032:  -7.16 -26.63   1.12  -8.19 -30.56   5.48  [rand]
   15 v=-0.039445:  12.60  12.78  19.09 -25.30  16.56 -15.38  [grid]
   16 v=-0.041222:  20.96 -11.84   5.77  15.93 -15.56 -14.42  [grid]
   17 v=-0.057575: -11.63  10.62   7.62 -31.18  15.78  21.78  [grid]
   18 v=-0.084950: -17.90 -15.88  -5.38 -15.04  -8.30   9.68  [rand]
   19 v=-0.039176: -16.24  16.39   4.55  30.08  15.20  14.68  [grid]
   20 v=-0.040111: -16.25 -26.10   6.84 -28.86 -28.94  21.47  [grid]
   21 v=-0.041742:  12.82  -9.94   5.64 -30.60 -16.11 -15.76  [grid]
   22 v=-0.036599: -33.00 -10.77  -1.59 -23.57   3.28  40.20  [rand]
   23 v=-0.076942:   2.60  28.09 -17.97   1.48  30.26  -1.90  [rand]
   24 v=-0.091934:   2.72 -23.89  16.24  -0.62 -30.15  -4.23  [rand]
   25 v=-0.039520:  18.70   6.61   5.25  27.16 -33.03 -32.35  [rand]
   26 v=-0.045537:  33.41 -33.71   7.40  10.14 -32.04 -44.67  [rand]
   27 v=-0.042977:  26.53  10.68  20.59 -17.17  20.19 -33.52  [grid]
   28 v=-0.040315: -10.21  21.39   9.01  30.52  19.09  14.00  [rand]
   29 v=-0.036779:  11.37 -27.17  16.91  29.96 -25.30 -19.01  [grid]
   30 v=-0.042701: -24.98 -27.26  18.66 -28.19 -13.75  28.74  [grid]
   31 v=-0.042422: -19.31  10.47  -2.28 -17.86  13.11  29.79  [rand]
   32 v=-0.039197: -14.05   9.83  15.67 -21.13  16.37  16.32  [rand]
   33 v=-0.038056: -14.11 -22.79  19.68  -2.74 -22.00  12.72  [rand]
   34 v=-0.030169:  25.22 -23.04   4.89  29.08 -14.94 -29.72  [grid]
   35 v=-0.048051:  23.31  14.20  13.02 -16.27  18.56 -30.56  [grid]
   36 v=-0.043937: -18.57  13.08   4.13 -30.73  14.84  28.26  [grid]
   37 v=-0.042044:  11.73  12.52  18.97 -16.29  19.82 -16.78  [grid]
   38 v=-0.043483:  20.55 -26.55  20.36  30.29 -18.51 -28.50  [grid]
   39 v=-0.042890: -13.77 -12.07 -30.62 -15.19  14.87  14.68  [grid]
   40 v=-0.059185: -16.72  11.76   3.27 -21.27  12.61  24.38  [grid]
   41 v=-0.036638: -16.87  17.82  19.94 -16.60  29.27  14.73  [grid]
   42 v=-0.032460:  21.25  12.87   5.25  29.53 -30.22 -30.05  [grid]
   43 v=-0.033053: -15.83   6.29  -2.66 -15.98 -13.56  30.05  [rand]
   44 v=-0.031312:  11.25 -13.14  19.23 -25.86  14.39 -30.46  [grid]
 + - save # 0 for twobest
 + - save #24 for twobest
 + - save #18 for twobest
 + - save # 2 for twobest
 + - save #23 for twobest
 + - skip #10 for twobest: too close to set #23
 + - save #14 for twobest
 + - save #11 for twobest
 + - save # 8 for twobest
 + - save # 7 for twobest
 + - save #40 for twobest
 + - save #17 for twobest
 + - save # 9 for twobest
 + - save #12 for twobest
 + - save # 5 for twobest
 + - save #35 for twobest
 + - save # 3 for twobest
 + - save # 6 for twobest
 + - save #26 for twobest
 + - save # 1 for twobest
 + - save #13 for twobest
 + - save #36 for twobest
 + - save #38 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=60 usiz=195
 + - retaining old weight image
 + - using 29049 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25371 total points stored in 257 'RHDD(13.7332)' bloks
*[#9626=-0.151557] *[#9630=-0.152262] *[#9632=-0.152642] *[#9633=-0.153405] *[#9634=-0.153752] *[#9636=-0.153807] *[#9637=-0.154412] *[#9638=-0.154995] *[#9639=-0.155333] *[#9640=-0.155667] *[#9641=-0.156892] *[#9642=-0.15784] *[#9645=-0.158048] *[#9650=-0.158845] *[#9652=-0.159368] *[#9653=-0.160693] *[#9654=-0.163006] *[#9655=-0.165067] *[#9657=-0.166509] *[#9658=-0.16916] *[#9659=-0.173197] *[#9660=-0.181964] *[#9663=-0.187483] *[#9664=-0.200955] *[#9665=-0.215676] *[#9666=-0.235862] *[#9669=-0.278134] *[#9671=-0.281839] *[#9676=-0.288041] *[#9677=-0.300464] *[#9678=-0.320902] *[#9679=-0.339858] *[#9683=-0.340417] *[#9685=-0.343065] *[#9687=-0.343232] *[#9688=-0.345492] *[#9689=-0.346022] *[#9690=-0.349116] *[#9691=-0.3502] *[#9692=-0.352583] 
 + - param set #1 has cost=-0.352583
 + -- Parameters = -0.8344 -2.7048 -1.5313 0.2852 -1.4665 -0.1263 1.0386 0.9771 1.0404 -0.0023 0.0032 -0.0078
 + - param set #2 has cost=-0.076077
 + -- Parameters = 2.0103 -22.3523 15.0037 0.8810 -28.0268 -1.5650 1.0297 1.0050 0.9971 0.0020 0.0014 0.0017
 + - param set #3 has cost=-0.092588
 + -- Parameters = -16.9469 -15.4342 -5.0393 -13.4082 -8.6207 9.1767 1.0220 0.9979 0.9984 0.0017 0.0046 0.0006
 + - param set #4 has cost=-0.071495
 + -- Parameters = -16.1090 -24.0822 7.7115 -5.9679 -27.6519 15.8762 1.0093 1.0074 1.0201 -0.0007 0.0031 0.0041
 + - param set #5 has cost=-0.067268
 + -- Parameters = 2.1606 28.1747 -17.7963 1.4509 30.1906 -1.9812 1.0004 1.0003 1.0003 0.0002 0.0002 0.0105
 + - param set #6 has cost=-0.080377
 + -- Parameters = -7.8278 -27.4669 1.2466 -8.4423 -23.9170 2.8035 1.0110 1.0089 0.9968 0.0037 0.0007 -0.0071
 + - param set #7 has cost=-0.045476
 + -- Parameters = -11.5528 11.3611 4.4595 -16.5693 11.4452 18.8308 1.0021 1.0018 0.9966 0.0012 0.0129 0.0041
 + - param set #8 has cost=-0.081844
 + -- Parameters = -15.4263 -11.7099 -12.9643 -13.3974 3.8726 7.0368 1.0280 0.9843 0.9814 0.0017 0.0036 0.0069
 + - param set #9 has cost=-0.047657
 + -- Parameters = -24.1893 -29.2533 4.7174 -4.4346 -31.6787 29.2642 1.0178 0.9991 0.9991 -0.0001 0.0002 -0.0002
 + - param set #10 has cost=-0.042046
 + -- Parameters = -15.8464 13.0541 3.5897 -21.7697 13.0315 24.2279 1.0153 0.9988 1.0005 0.0006 0.0025 0.0008
 + - param set #11 has cost=-0.039876
 + -- Parameters = -11.7917 10.8353 7.7097 -34.5953 16.1415 21.9232 1.0008 1.0024 1.0001 -0.0003 0.0000 -0.0006
*[#10493=-0.378404] *[#10494=-0.416111] *[#10495=-0.419649] *[#10500=-0.423747] *[#10501=-0.42881] *[#10503=-0.429474] *[#10504=-0.431887] *[#10505=-0.437151] *[#10506=-0.438276] *[#10508=-0.439185] *[#10509=-0.439746] *[#10512=-0.443158] *[#10513=-0.444316] *[#10516=-0.444325] *[#10519=-0.445038] *[#10520=-0.446407] *[#10522=-0.446932] *[#10525=-0.447454] *[#10528=-0.449004] *[#10531=-0.449032] *[#10533=-0.449552] *[#10535=-0.449813] *[#10538=-0.450405] *[#10545=-0.451384] *[#10553=-0.452761] 
 + - param set #12 has cost=-0.452761
 + -- Parameters = -0.5941 -1.3792 -0.5689 -0.0314 -0.8577 0.0034 0.9979 1.0051 1.0018 -0.0006 -0.0026 0.0233
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.14 
 + --- dist(#3,#1) = 0.204 
 + --- dist(#4,#1) = 0.185 
 + --- dist(#5,#1) = 0.326 
 + --- dist(#6,#1) = 0.302 
 + --- dist(#7,#1) = 0.298 
 + --- dist(#8,#1) = 0.369 
 + --- dist(#9,#1) = 0.348 
 + --- dist(#10,#1) = 0.209 
 + --- dist(#11,#1) = 0.269 
 + --- dist(#12,#1) = 0.384 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=60 usiz=195
 + - retaining old weight image
 + - using 29049 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25613 total points stored in 267 'RHDD(13.5933)' bloks
*[#10628=-0.452957] *[#10629=-0.452985] *[#10630=-0.453024] *[#10631=-0.453201] *[#10632=-0.453606] *[#10634=-0.454089] *[#10639=-0.454251] *[#10640=-0.454602] *[#10641=-0.454808] *[#10642=-0.455177] *[#10643=-0.455672] *[#10644=-0.456043] *[#10645=-0.456352] *[#10646=-0.456884] *[#10647=-0.45755] *[#10648=-0.458142] *[#10649=-0.458502] *[#10652=-0.459234] *[#10653=-0.459366] 
 + - param set #1 has cost=-0.459366
 + -- Parameters = -0.5621 -1.0249 -0.5245 0.1585 -1.8584 -0.1032 1.0047 1.0260 0.9882 0.0034 -0.0080 0.0040
 + - param set #2 has cost=-0.445378
 + -- Parameters = -0.6104 -1.5483 -0.6525 0.0367 -1.5168 -0.4551 1.0040 1.0082 0.9854 0.0032 0.0009 0.0106
 + - param set #3 has cost=-0.077343
 + -- Parameters = -16.6391 -15.5686 -4.9770 -13.4931 -8.6905 8.8482 1.0255 1.0012 0.9945 0.0008 0.0123 0.0007
 + - param set #4 has cost=-0.074454
 + -- Parameters = -14.6624 -11.4759 -13.5455 -12.7714 4.4701 7.1316 1.0425 0.9766 0.9703 -0.0065 0.0178 0.0028
 + - param set #5 has cost=-0.070879
 + -- Parameters = -8.5429 -26.2952 0.7312 -9.0337 -22.7884 2.8034 1.0126 1.0256 1.0046 0.0042 0.0055 -0.0202
 + - param set #6 has cost=-0.063667
 + -- Parameters = 1.7721 -22.2739 14.8517 1.3248 -27.4391 -1.2969 1.0259 1.0066 0.9792 0.0155 -0.0002 0.0002
 + - param set #7 has cost=-0.054562
 + -- Parameters = -16.1088 -24.1360 7.6629 -5.9528 -27.6232 15.8411 1.0094 1.0087 1.0205 0.0057 0.0036 0.0038
 + - param set #8 has cost=-0.061293
 + -- Parameters = 2.2217 28.5871 -17.3878 1.6242 30.3449 -2.5316 1.0043 1.0207 0.9991 -0.0014 -0.0141 0.0114
 + - param set #9 has cost=-0.042814
 + -- Parameters = -19.9686 -29.4359 4.8632 -5.1661 -31.2676 25.6514 1.0290 1.0040 1.0027 -0.0048 -0.0066 0.0010
 + - param set #10 has cost=-0.043155
 + -- Parameters = -11.7920 10.9457 5.1600 -15.5510 11.3349 19.1190 1.0243 0.9508 0.9962 0.0092 0.0410 0.0295
 + - param set #11 has cost=-0.033426
 + -- Parameters = -15.8187 13.3537 4.0815 -21.2078 12.7888 24.5029 1.0153 0.9987 1.0000 0.0006 0.0121 0.0018
 + - param set #12 has cost=-0.032959
 + -- Parameters = -11.8724 10.7637 7.6312 -34.6071 16.1915 21.7363 1.0005 1.0020 0.9993 0.0009 0.0002 0.0064
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0484 
 + --- dist(#3,#1) = 0.201 
 + --- dist(#4,#1) = 0.176 
 + --- dist(#5,#1) = 0.316 
 + --- dist(#6,#1) = 0.284 
 + --- dist(#7,#1) = 0.37 
 + --- dist(#8,#1) = 0.289 
 + --- dist(#9,#1) = 0.221 
 + --- dist(#10,#1) = 0.355 
 + --- dist(#11,#1) = 0.273 
 + --- dist(#12,#1) = 0.386 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=60 usiz=195
 + - retaining old weight image
 + - using 29049 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26008 total points stored in 280 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.438008
 + -- Parameters = -0.5710 -1.0406 -0.6603 0.1404 -2.4902 0.1697 1.0020 1.0200 0.9888 0.0035 -0.0098 -0.0091
 + - param set #2 has cost=-0.439144
 + -- Parameters = -0.6161 -0.9979 -0.6414 0.1866 -2.4567 -0.0627 1.0034 1.0207 0.9886 0.0071 -0.0036 -0.0097
 + - param set #3 has cost=-0.066864
 + -- Parameters = -16.0475 -15.9015 -4.5106 -13.5019 -9.0805 8.3236 1.0198 1.0018 0.9838 0.0034 0.0122 -0.0004
 + - param set #4 has cost=-0.064262
 + -- Parameters = -14.2718 -11.6855 -13.5088 -12.5331 4.3474 6.9695 1.0420 0.9635 0.9571 -0.0092 0.0245 -0.0025
 + - param set #5 has cost=-0.058937
 + -- Parameters = -8.6843 -25.9917 0.5945 -9.2951 -22.7399 2.6545 1.0089 1.0255 0.9894 0.0053 0.0153 -0.0230
 + - param set #6 has cost=-0.062305
 + -- Parameters = 1.7908 -20.9000 15.2351 1.1887 -27.1095 -1.1479 1.0230 1.0108 0.9663 0.0537 0.0334 -0.0278
 + - param set #7 has cost=-0.055178
 + -- Parameters = 2.4264 28.3715 -17.3743 1.9486 30.0503 -3.2523 1.0109 1.0280 0.9933 -0.0028 -0.0165 0.0105
 + - param set #8 has cost=-0.043751
 + -- Parameters = -15.8790 -24.4169 8.5447 -6.7323 -27.2827 15.0497 1.0032 1.0146 1.0132 0.0065 0.0050 0.0045
 + - param set #9 has cost=-0.036865
 + -- Parameters = -11.7951 11.0779 5.1248 -15.5999 11.2872 19.1043 1.0242 0.9584 0.9965 0.0089 0.0410 0.0303
 + - param set #10 has cost=-0.035659
 + -- Parameters = -19.9659 -28.9491 4.8788 -6.0110 -31.6163 25.9015 1.0295 1.0062 1.0012 -0.0065 -0.0061 0.0064
 + - param set #11 has cost=-0.026713
 + -- Parameters = -16.2776 13.2970 4.2697 -20.8089 12.9903 24.0724 1.0238 0.9991 0.9992 -0.0005 0.0123 0.0018
 + - param set #12 has cost=-0.025050
 + -- Parameters = -11.7330 10.9012 7.6572 -34.5844 16.3343 21.5102 1.0004 1.0029 0.9930 0.0001 0.0067 0.0064
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0279 
 + --- dist(#3,#1) = 0.193 
 + --- dist(#4,#1) = 0.171 
 + --- dist(#5,#1) = 0.274 
 + --- dist(#6,#1) = 0.312 
 + --- dist(#7,#1) = 0.367 
 + --- dist(#8,#1) = 0.293 
 + --- dist(#9,#1) = 0.213 
 + --- dist(#10,#1) = 0.349 
 + --- dist(#11,#1) = 0.268 
 + --- dist(#12,#1) = 0.386 
 + - Total coarse refinement net CPU time = 0.0 s; 3079 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=60 usiz=195
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 25841 total points stored in 278 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.417069 *
 + -- Parameters = -0.6161 -0.9979 -0.6414 0.1866 -2.4567 -0.0627 1.0034 1.0207 0.9886 0.0071 -0.0036 -0.0097
 + - cost(#2)=-0.415892  
 + -- Parameters = -0.5710 -1.0406 -0.6603 0.1404 -2.4902 0.1697 1.0020 1.0200 0.9888 0.0035 -0.0098 -0.0091
 + - cost(#3)=-0.060913  
 + -- Parameters = -16.0475 -15.9015 -4.5106 -13.5019 -9.0805 8.3236 1.0198 1.0018 0.9838 0.0034 0.0122 -0.0004
 + - cost(#4)=-0.061877  
 + -- Parameters = -14.2718 -11.6855 -13.5088 -12.5331 4.3474 6.9695 1.0420 0.9635 0.9571 -0.0092 0.0245 -0.0025
 + - cost(#5)=-0.054395  
 + -- Parameters = 1.7908 -20.9000 15.2351 1.1887 -27.1095 -1.1479 1.0230 1.0108 0.9663 0.0537 0.0334 -0.0278
 + - cost(#6)=-0.055529  
 + -- Parameters = -8.6843 -25.9917 0.5945 -9.2951 -22.7399 2.6545 1.0089 1.0255 0.9894 0.0053 0.0153 -0.0230
 + - cost(#7)=-0.048878  
 + -- Parameters = 2.4264 28.3715 -17.3743 1.9486 30.0503 -3.2523 1.0109 1.0280 0.9933 -0.0028 -0.0165 0.0105
 + - cost(#8)=-0.039363  
 + -- Parameters = -15.8790 -24.4169 8.5447 -6.7323 -27.2827 15.0497 1.0032 1.0146 1.0132 0.0065 0.0050 0.0045
 + - cost(#9)=-0.032334  
 + -- Parameters = -11.7951 11.0779 5.1248 -15.5999 11.2872 19.1043 1.0242 0.9584 0.9965 0.0089 0.0410 0.0303
 + - cost(#10)=-0.030395  
 + -- Parameters = -19.9659 -28.9491 4.8788 -6.0110 -31.6163 25.9015 1.0295 1.0062 1.0012 -0.0065 -0.0061 0.0064
 + - cost(#11)=-0.021503  
 + -- Parameters = -16.2776 13.2970 4.2697 -20.8089 12.9903 24.0724 1.0238 0.9991 0.9992 -0.0005 0.0123 0.0018
 + - cost(#12)=-0.021290  
 + -- Parameters = -11.7330 10.9012 7.6572 -34.5844 16.3343 21.5102 1.0004 1.0029 0.9930 0.0001 0.0067 0.0064
 + - cost(#13)=-0.003399  
 + -- Parameters = -1.7601 0.3730 -7.9510 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.423009 *
 + -- Parameters = -0.5171 -0.9023 -0.6483 0.2832 -3.2505 -0.3121 1.0037 1.0237 0.9861 0.0061 0.0038 -0.0213
 + - cost(#2)=-0.421400  
 + -- Parameters = -0.4790 -0.9220 -0.5693 0.2259 -3.1246 0.0575 1.0023 1.0252 0.9858 0.0032 -0.0048 -0.0182
 + - cost(#3)=-0.063627  
 + -- Parameters = -14.9450 -15.5597 -3.9120 -12.7246 -9.4999 7.6146 1.0136 0.9952 0.9796 0.0027 0.0128 -0.0075
 + - cost(#4)=-0.064049  
 + -- Parameters = -14.4429 -11.7044 -13.5533 -12.3915 4.2715 6.8384 1.0615 0.9642 0.9565 -0.0080 0.0309 -0.0020
 + - cost(#5)=-0.055221  
 + -- Parameters = 1.6927 -20.9397 15.0616 1.2217 -27.0017 -0.9454 1.0228 1.0103 0.9655 0.0557 0.0391 -0.0295
 + - cost(#6)=-0.055727  
 + -- Parameters = -8.6245 -25.9295 0.5673 -9.1723 -22.7664 2.7620 1.0090 1.0255 0.9897 0.0016 0.0154 -0.0227
 + - cost(#7)=-0.050036  
 + -- Parameters = 1.9514 28.1445 -17.1548 1.8865 30.0085 -3.5601 1.0206 1.0317 0.9887 -0.0017 -0.0170 0.0080
 + - cost(#8)=-0.042001  
 + -- Parameters = -15.9777 -26.0983 7.0765 -6.9342 -27.9065 15.2543 1.0043 1.0140 1.0135 0.0082 0.0059 0.0037
 + - cost(#9)=-0.032742  
 + -- Parameters = -11.7977 11.2245 5.1998 -15.4362 11.5082 19.0434 1.0229 0.9525 0.9956 0.0086 0.0408 0.0312
 + - cost(#10)=-0.032240  
 + -- Parameters = -20.2416 -29.1192 5.2952 -6.4202 -32.3527 25.4099 1.0275 1.0123 0.9888 -0.0141 -0.0062 0.0053
 + - cost(#11)=-0.021847  
 + -- Parameters = -16.2815 13.3088 4.2739 -20.7347 12.9387 23.9467 1.0243 0.9994 0.9988 -0.0007 0.0169 0.0012
 + - cost(#12)=-0.021819  
 + -- Parameters = -11.5336 10.8809 7.8101 -34.5420 16.2887 21.6366 1.0002 1.0028 0.9869 0.0006 0.0066 0.0073
 + - cost(#13)=-0.387479  
 + -- Parameters = -0.5729 -1.0286 -0.7091 0.0684 -1.3208 -1.0325 1.0099 1.0164 0.9645 -0.0028 0.0175 0.0173
 + - case #1 is now the best
 + - Initial  cost = -0.423009
 + - Initial fine Parameters = -0.5171 -0.9023 -0.6483 0.2832 -3.2505 -0.3121 1.0037 1.0237 0.9861 0.0061 0.0038 -0.0213
 + - Finalish cost = -0.424329 ; 378 funcs
 + - Final    cost = -0.424330 ; 123 funcs
 + Final fine fit Parameters:
       x-shift=-0.5026   y-shift=-0.9063   z-shift=-0.6233
       z-angle= 0.2716   x-angle=-3.5726   y-angle=-0.1360
       x-scale= 1.0041   y-scale= 1.0243   z-scale= 0.9866
     y/x-shear= 0.0057 z/x-shear=-0.0016 z/y-shear=-0.0280
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.5026 -0.9063 -0.6233 0.2716 -3.5726 -0.1360 1.0041 1.0243 0.9866 0.0057 -0.0016 -0.0280
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 21.9
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0001 -1.0117 0.1136 241.6087 -0.0042 0.1505 0.9820 84.9383 -1.0041 0.0049 -0.0024 199.4187
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.9
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 18.6 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3502.840100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 89.7982 48.2872   ITER = 7/137
89.7982

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 767ms]
lev=0 0..171 0..213 0..166: [first cost=-0.71541] ... done [cost:-0.71541==>-0.77426]
lev=1 patch=129x161x125 [clock= 15m 0s 405ms]........:[cost=-0.79492]:........ done [cost:-0.77426==>-0.79866 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 22m 32s 596ms]......................... done [cost:-0.79866==>-0.87793 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 28m 53s 159ms]................ done [cost:-0.87793==>-0.93891 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 33m 52s 597ms]........... done [cost:-0.93891==>-0.99776 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 37m 36s 751ms]............... done [cost:-0.99776==>-1.05992 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 41m 11s 550ms]........................... done [cost:-1.05992==>-1.11737 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 44m 40s 914ms]..................................... done [cost:-1.11737==>-1.19080 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 48m 22s 822ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb6487/tb6487.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.9 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb6487.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6487.r01.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb01.tb6487.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31106 voxels
 + 4937 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.481  pitch=-0.002  yaw=-0.032  dS=-0.167  dL=-0.653  dP=-0.140
++ Mean: roll=-0.248  pitch=+0.416  yaw=+0.013  dS=-0.053  dL=-0.360  dP=-0.062
++ Max : roll=+0.024  pitch=+0.890  yaw=+0.099  dS=+0.110  dL=+0.018  dP=+0.000
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.16(0.16) 0.11(0.06) 0.10(0.05) 0.10(0.04) 0.08(0.06) 0.11(0.07) 0.12(0.04) 0.14(0.06) 0.16(0.05) 0.17(0.07) 0.16(0.07) 0.12(0.07) 0.13(0.04) 0.12(0.04) 0.16(0.04) 0.18(0.07) 0.17(0.04) 0.19(0.03) 0.19(0.05) 0.20(0.04) 0.20(0.04) 0.21(0.02) 0.23(0.05) 0.21(0.06) 0.22(0.02) 0.25(0.06) 0.25(0.04) 0.25(0.07) 0.25(0.08) 0.26(0.05) 0.26(0.06) 0.28(0.03) 0.31(0.04) 0.30(0.05) 0.33(0.06) 0.33(0.05) 0.37(0.05) 0.38(0.02) 0.40(0.03) 0.43(0.05) 0.45(0.06) 0.46(0.02) 0.47(0.05) 0.52(0.05) 0.53(0.03) 0.56(0.04) 0.59(0.05) 0.59(0.03) 0.60(0.03) 0.61(0.02) 0.65(0.06) 0.70(0.05) 0.69(0.06) 0.72(0.05) 0.74(0.04) 0.74(0.04) 0.75(0.02) 0.77(0.03) 0.79(0.03) 0.79(0.05) 0.83(0.05) 0.88(0.05) 0.87(0.07) 0.90(0.07) 0.90(0.03) 0.91(0.04) 0.93(0.03) 0.93(0.03) 0.97(0.05) 0.99(0.03) 1.05(0.07) 1.05(0.03) 1.05(0.04) 1.08(0.05) 1.10(0.04) 1.21(0.13) 1.20(0.04) 1.24(0.05) 1.29(0.06) 1.27(0.06) 1.30(0.03) 1.29(0.04) 1.29(0.03) 1.31(0.04) 1.34(0.04) 1.38(0.04) 1.41(0.05) 1.42(0.06) 1.44(0.05) 1.44(0.06) 1.47(0.05) 1.49(0.06) 1.48(0.07) 1.53(0.06) 1.54(0.04) 1.56(0.05) 1.59(0.04) 1.59(0.04) 1.59(0.04) 1.57(0.04) 1.60(0.08) 1.63(0.04) 1.64(0.03) 1.67(0.05) 1.67(0.05) 1.68(0.02) 1.68(0.04) 1.67(0.06) 1.70(0.05) 1.73(0.04) 1.75(0.06) 1.78(0.07) 1.77(0.04) 1.80(0.06) 1.85(0.06) 1.85(0.06) 1.88(0.08) 1.86(0.02) 1.86(0.05) 1.84(0.03) 1.83(0.03) 1.86(0.04) 1.85(0.04) 1.85(0.02) 1.87(0.03) 1.86(0.03) 1.88(0.05) 1.86(0.06) 1.78(0.08) 1.76(0.04) 1.78(0.06) 1.82(0.06) 1.80(0.03) 1.79(0.04) 1.80(0.02) 1.80(0.03) 1.82(0.03) 1.84(0.04) 1.85(0.03) 1.85(0.08) 1.87(0.04) 1.94(0.13) 1.95(0.04) 2.00(0.07) 2.05(0.07) 2.04(0.05) 2.06(0.05) 2.04(0.06) 2.06(0.07)
++ Max displacement in automask = 2.06 (mm) at sub-brick 147
++ Max delta displ  in automask = 0.16 (mm) at sub-brick 1
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb6487.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6487.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6487.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6487.r01.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./pb01.tb6487.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb6487.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6487.r02.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb01.tb6487.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31499 voxels
 + 5022 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.188  pitch=+2.265  yaw=+0.361  dS=-2.398  dL=+0.087  dP=-0.465
++ Mean: roll=-0.150  pitch=+2.812  yaw=+0.500  dS=-2.025  dL=+0.120  dP=-0.330
++ Max : roll=-0.122  pitch=+3.466  yaw=+0.579  dS=-1.612  dL=+0.156  dP=-0.240
++ Max displacements (mm) for each sub-brick:
 5.44(0.00) 5.54(0.16) 5.57(0.07) 5.59(0.06) 5.59(0.07) 5.52(0.09) 5.51(0.03) 5.50(0.06) 5.51(0.04) 5.51(0.03) 5.45(0.06) 5.45(0.05) 5.60(0.16) 5.63(0.04) 5.67(0.04) 5.68(0.04) 5.70(0.03) 5.69(0.06) 5.77(0.08) 5.81(0.06) 5.80(0.04) 5.83(0.04) 5.81(0.04) 5.80(0.03) 5.83(0.05) 5.84(0.07) 5.85(0.02) 5.83(0.03) 5.88(0.06) 5.89(0.04) 5.89(0.03) 5.93(0.04) 5.91(0.02) 5.93(0.04) 5.94(0.04) 5.94(0.04) 5.95(0.04) 5.94(0.06) 5.98(0.10) 5.98(0.07) 5.99(0.02) 6.08(0.10) 6.05(0.04) 6.05(0.03) 6.04(0.04) 6.04(0.05) 6.07(0.03) 6.05(0.04) 6.09(0.05) 6.09(0.05) 6.12(0.05) 6.14(0.05) 6.13(0.04) 6.12(0.05) 6.08(0.05) 6.12(0.06) 6.14(0.04) 6.13(0.03) 6.17(0.05) 6.15(0.05) 6.19(0.05) 6.24(0.06) 6.22(0.05) 6.24(0.02) 6.23(0.06) 6.27(0.05) 6.27(0.05) 6.23(0.06) 6.25(0.03) 6.27(0.03) 6.28(0.05) 6.27(0.04) 6.24(0.04) 6.29(0.09) 6.32(0.04) 6.39(0.09) 6.36(0.07) 6.43(0.08) 6.55(0.13) 6.59(0.06) 6.59(0.02) 6.80(0.24) 6.85(0.10) 6.88(0.04) 6.86(0.04) 6.89(0.06) 6.88(0.05) 6.93(0.06) 6.94(0.02) 6.92(0.05) 6.93(0.04) 6.91(0.04) 6.96(0.06) 6.96(0.03) 6.94(0.03) 6.98(0.05) 6.95(0.05) 6.99(0.05) 7.02(0.04) 6.99(0.04) 7.04(0.05) 7.06(0.03) 7.08(0.03) 7.08(0.04) 7.09(0.04) 7.11(0.03) 7.08(0.03) 7.12(0.04) 7.11(0.03) 7.07(0.06) 7.10(0.04) 7.11(0.03) 7.16(0.07) 7.17(0.02) 7.27(0.11) 7.31(0.07) 7.29(0.04) 7.30(0.04) 7.35(0.06) 7.31(0.04) 7.33(0.04) 7.34(0.02) 7.34(0.03) 7.35(0.03) 7.36(0.04) 7.43(0.09) 7.46(0.04) 7.46(0.04) 7.46(0.06) 7.47(0.03) 7.47(0.07) 7.54(0.09) 7.57(0.05) 7.60(0.05) 7.57(0.07) 7.61(0.07) 7.61(0.03) 7.61(0.08) 7.67(0.06) 7.69(0.04) 7.68(0.05) 7.78(0.13) 7.80(0.10) 7.81(0.06) 7.77(0.07) 7.79(0.05) 7.81(0.06) 7.77(0.05) 7.69(0.11) 7.74(0.09)
++ Max displacement in automask = 7.81 (mm) at sub-brick 146
++ Max delta displ  in automask = 0.24 (mm) at sub-brick 81
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb6487.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6487.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6487.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6487.r02.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./pb01.tb6487.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb6487.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb6487.r03.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Reading input dataset ./pb01.tb6487.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31492 voxels
 + 5027 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.320  pitch=+1.245  yaw=-0.203  dS=-3.798  dL=-0.024  dP=-0.388
++ Mean: roll=-0.158  pitch=+2.103  yaw=+0.157  dS=-3.632  dL=+0.132  dP=-0.144
++ Max : roll=-0.004  pitch=+3.194  yaw=+0.451  dS=-3.528  dL=+0.303  dP=+0.055
++ Max displacements (mm) for each sub-brick:
 5.68(0.00) 5.77(0.17) 5.71(0.08) 5.74(0.13) 5.85(0.11) 5.85(0.11) 5.90(0.16) 5.89(0.05) 5.93(0.05) 5.89(0.05) 5.88(0.06) 5.90(0.04) 5.84(0.09) 5.90(0.11) 5.78(0.13) 5.83(0.05) 5.79(0.06) 5.76(0.06) 5.80(0.05) 5.78(0.05) 5.78(0.06) 5.80(0.02) 5.78(0.05) 5.79(0.03) 5.80(0.04) 5.82(0.09) 5.84(0.04) 5.84(0.03) 5.87(0.06) 5.89(0.06) 5.85(0.07) 5.89(0.07) 5.88(0.04) 5.87(0.05) 5.88(0.02) 5.89(0.06) 5.93(0.08) 5.93(0.03) 6.16(0.26) 6.46(0.31) 6.50(0.07) 6.53(0.06) 6.53(0.07) 6.48(0.05) 6.46(0.04) 6.45(0.03) 6.47(0.09) 6.46(0.04) 6.43(0.06) 6.43(0.06) 6.41(0.06) 6.43(0.06) 6.46(0.03) 6.40(0.08) 6.46(0.08) 6.45(0.07) 6.50(0.06) 6.44(0.08) 6.54(0.17) 6.63(0.09) 6.59(0.05) 6.59(0.03) 6.60(0.03) 6.63(0.09) 6.66(0.05) 6.66(0.06) 6.71(0.09) 6.86(0.21) 6.81(0.09) 6.86(0.05) 6.89(0.04) 6.95(0.08) 6.91(0.05) 6.89(0.05) 6.92(0.05) 6.89(0.05) 6.90(0.05) 6.91(0.03) 6.87(0.05) 6.84(0.05) 6.84(0.04) 6.89(0.07) 6.89(0.04) 6.91(0.07) 7.06(0.16) 7.11(0.07) 7.14(0.04) 7.16(0.07) 7.18(0.05) 7.17(0.10) 7.24(0.08) 7.21(0.07) 7.23(0.09) 7.30(0.08) 7.32(0.05) 7.45(0.13) 7.42(0.10) 7.45(0.11) 7.45(0.03) 7.41(0.04) 7.53(0.13) 7.79(0.26) 7.74(0.09) 7.78(0.05) 7.77(0.09) 7.73(0.05) 7.72(0.03) 7.71(0.02) 7.75(0.09) 7.69(0.09) 7.72(0.06) 7.72(0.06) 7.70(0.04) 7.75(0.05) 7.71(0.05) 7.73(0.08) 7.73(0.02) 7.70(0.05) 8.64(0.94) 8.90(0.29) 8.77(0.15) 8.68(0.15) 8.64(0.05) 8.53(0.13) 8.43(0.10) 8.43(0.06) 8.40(0.06) 8.45(0.06) 8.47(0.11) 8.52(0.07) 8.47(0.05) 8.44(0.05) 8.49(0.04) 8.46(0.04) 8.46(0.07) 8.49(0.03) 8.47(0.04) 8.46(0.04) 8.51(0.07) 8.49(0.03) 8.52(0.07) 8.58(0.09) 8.58(0.02) 8.63(0.06) 8.62(0.04) 8.29(0.35) 7.59(0.71) 7.86(0.41) 7.91(0.08) 8.04(0.14)
++ Max displacement in automask = 8.90 (mm) at sub-brick 119
++ Max delta displ  in automask = 0.94 (mm) at sub-brick 118
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb6487.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb6487.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb6487.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb6487.r03.tshift+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./pb01.tb6487.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.3
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 10.299996 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6487.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6487.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6487.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6487.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb6487.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb6487.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 10.299996 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb6487
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb6487+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb6487+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1340814 voxels in source_automask+0
++ Zero-pad: zbot=2 ztop=0
++ Computing -autobox
++ 281666 voxels [63.9%] in weight mask
++ Number of points for matching = 132383
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.170786
   sp   = 0.333636
   mi   = -0.505786
   crM  = 0.0496374
   nmi  = 0.846978
   je   = 2.79956
   hel  = -0.101162
   crA  = 0.223105
   crU  = 0.234881
   lss  = 0.829214
   lpc  = 0.0730309
   lpa  = 0.926969
   lpc+ = 0.234137
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.5
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb6487+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb6487+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 34.0 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6487.r01.blur pb02.tb6487.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6487.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb6487.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6487.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6487.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6487.r02.blur pb02.tb6487.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6487.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb6487.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6487.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6487.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb6487.r03.blur pb02.tb6487.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb6487.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb6487.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb6487.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb6487.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb6487.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6487.r01.blur+orig
++ Forming automask
 + Fixed clip level = 384.832092
 + Used gradual clip level = 334.959290 .. 426.024200
 + Number voxels above clip level = 53233
 + Clustering voxels ...
 + Largest cluster has 53231 voxels
 + Clustering voxels ...
 + Largest cluster has 53170 voxels
 + Filled    41 voxels in small holes; now have 53211 voxels
 + Clustering voxels ...
 + Largest cluster has 53211 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373064 voxels
 + Mask now has 53211 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 364764 voxels
++ 61511 voxels in the mask [out of 426275: 14.43%]
++ first  16 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb6487.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6487.r02.blur+orig
++ Forming automask
 + Fixed clip level = 384.282074
 + Used gradual clip level = 336.208527 .. 426.044617
 + Number voxels above clip level = 53881
 + Clustering voxels ...
 + Largest cluster has 53878 voxels
 + Clustering voxels ...
 + Largest cluster has 53828 voxels
 + Filled    35 voxels in small holes; now have 53863 voxels
 + Clustering voxels ...
 + Largest cluster has 53863 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 372412 voxels
 + Mask now has 53863 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 364067 voxels
++ 62208 voxels in the mask [out of 426275: 14.59%]
++ first  16 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb6487.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb6487.r03.blur+orig
++ Forming automask
 + Fixed clip level = 386.656006
 + Used gradual clip level = 337.989105 .. 428.322052
 + Number voxels above clip level = 53757
 + Clustering voxels ...
 + Largest cluster has 53752 voxels
 + Clustering voxels ...
 + Largest cluster has 53720 voxels
 + Filled    43 voxels in small holes; now have 53763 voxels
 + Clustering voxels ...
 + Largest cluster has 53763 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 372512 voxels
 + Mask now has 53763 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 364260 voxels
++ 62015 voxels in the mask [out of 426275: 14.55%]
++ first  16 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  31 y-planes are zero [from I]
++ last   10 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb6487
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 62441 survived, 363834 were zero
++ writing result full_mask.tb6487...
3dresample -master full_mask.tb6487+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb6487
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 53025 survived, 373250 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb6487...
3dABoverlap -no_automask full_mask.tb6487+orig mask_anat.tb6487+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb6487+orig.BRIK  B=./mask_anat.tb6487+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
62441        53025        64850        50616        11825        2409         18.9379      4.5431     0.8431     0.9060     0.9031
3ddot -dodice full_mask.tb6487+orig mask_anat.tb6487+orig
tee out.mask_ae_dice.txt
0.876726	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb6487
total number of censored TRs (simple form) = 4
1deval -a motion_tb6487_censor.1D -b outcount_tb6487_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb6487_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb6487.r01.blur+orig.HEAD pb03.tb6487.r02.blur+orig.HEAD pb03.tb6487.r03.blur+orig.HEAD -censor censor_tb6487_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb6487 -errts errts.tb6487 -bucket stats.tb6487
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb6487.r01.blur+orig.HEAD pb03.tb6487.r02.blur+orig.HEAD pb03.tb6487.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 53654 voxels (out of 426275 = 12.6%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 446 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb6487.r01.blur+orig.HEAD pb03.tb6487.r02.blur+orig.HEAD pb03.tb6487.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb6487_REML -Rvar stats.tb6487_REMLvar \
 -Rfitts fitts.tb6487_REML -Rerrts errts.tb6487_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (446x24):  7.26216  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (446x6):  1.03454  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (446x18):  6.80449  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (446x6):  4.55136  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (446x12):  1.04009  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 6.23466e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.27 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.998
++ Job #2: processing voxels 85254 to 127880; elapsed time=6.011
++ Job #3: processing voxels 127881 to 170507; elapsed time=6.025
++ Job #4: processing voxels 170508 to 213134; elapsed time=6.040
++ Job #5: processing voxels 213135 to 255761; elapsed time=6.054
++ Job #6: processing voxels 255762 to 298388; elapsed time=6.069
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.090
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.110
++ Job #9: processing voxels 383643 to 426274; elapsed time=6.120
++ Job #0: processing voxels 0 to 42626; elapsed time=6.123
++ voxel loop:0123456789.0123456789.0123456789.0123456789.01234567++ Job #6 finished; elapsed time=34.914
++ Job #2 finished; elapsed time=35.017
++ Job #3 finished; elapsed time=35.162
++ Job #8 finished; elapsed time=35.171
8++ Job #5 finished; elapsed time=35.508
9.
++ Job #0 waiting for children to finish; elapsed time=35.671
++ Job #9 finished; elapsed time=38.366
++ Job #4 finished; elapsed time=38.394
++ Job #1 finished; elapsed time=40.287
++ Job #7 finished; elapsed time=40.353
++ Job #0 now finishing up; elapsed time=40.360
++ Smallest FDR q [0 Full_Fstat] = 4.0035e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 2.18264e-14
++ Smallest FDR q [3 uns1_Fstat] = 2.18242e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 5.29696e-14
++ Smallest FDR q [6 uns2_Fstat] = 5.29696e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 1.63596e-14
++ Smallest FDR q [9 uns3_Fstat] = 1.63516e-14
++ Smallest FDR q [11 str1#0_Tstat] = 3.72244e-14
++ Smallest FDR q [12 str1_Fstat] = 3.72225e-14
++ Smallest FDR q [14 str2#0_Tstat] = 9.30107e-14
++ Smallest FDR q [15 str2_Fstat] = 9.3016e-14
++ Smallest FDR q [17 str3#0_Tstat] = 1.74068e-14
++ Smallest FDR q [18 str3_Fstat] = 1.74e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 9.56724e-15
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 9.56512e-15
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.93203e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.93196e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 1.66939e-07
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 1.66938e-07
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 1.16251e-07
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 1.1625e-07
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 2.70206e-06
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 2.7021e-06
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 8.58062e-10
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 8.58108e-10
++ Wrote bucket dataset into ./stats.tb6487+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb6487+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb6487+orig.BRIK
++ Program finished; elapsed time=73.787
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.730       0.793  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.725       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.725       0.791  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.483       0.558  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.474       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.474       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb6487.r01.blur+orig.HEAD pb03.tb6487.r02.blur+orig.HEAD pb03.tb6487.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb6487_REML -Rvar stats.tb6487_REMLvar -Rfitts fitts.tb6487_REML -Rerrts errts.tb6487_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 53654 voxels (out of 426275 = 12.6%)
++ -----  matrix condition (446x24):  7.26216  ++ VERY GOOD ++
 + masked off 249254 voxels for being all zero; 177021 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 319 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=41.31
 + X matrix: 46.646% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=446 cols=24; 109*1 cases; total CPU=0.00 Elapsed=41.34
 +  average case bandwidth = 12.46
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=107.47
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=152.17
++ Output dataset ./stats.tb6487_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb6487_REML+orig.BRIK
++ Output dataset ./errts.tb6487_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb6487_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.35408e-13
++ Smallest FDR q [2 uns1#0_Tstat] = 1.00412e-09
++ Smallest FDR q [3 uns1_Fstat] = 1.00412e-09
++ Smallest FDR q [5 uns2#0_Tstat] = 2.47304e-09
++ Smallest FDR q [6 uns2_Fstat] = 2.47305e-09
++ Smallest FDR q [8 uns3#0_Tstat] = 3.76005e-11
++ Smallest FDR q [9 uns3_Fstat] = 3.76005e-11
++ Smallest FDR q [11 str1#0_Tstat] = 5.72791e-08
++ Smallest FDR q [12 str1_Fstat] = 5.72793e-08
++ Smallest FDR q [14 str2#0_Tstat] = 9.56215e-07
++ Smallest FDR q [15 str2_Fstat] = 9.56217e-07
++ Smallest FDR q [17 str3#0_Tstat] = 2.29457e-11
++ Smallest FDR q [18 str3_Fstat] = 2.29457e-11
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.20336e-13
++ Smallest FDR q [21 unstructured_Fstat] = 1.20336e-13
++ Smallest FDR q [23 structured#0_Tstat] = 6.31959e-13
++ Smallest FDR q [24 structured_Fstat] = 6.31959e-13
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.398117 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.398118 ==> few true single voxel detections
++ Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.0799312
++ Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.0799312
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.690958 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.690958 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.00473319
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.00473319
 + Added 25 FDR curves to dataset stats.tb6487_REML+orig
++ Output dataset ./stats.tb6487_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=208.94
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb6487 pb03.tb6487.r01.blur+orig.HEAD pb03.tb6487.r02.blur+orig.HEAD pb03.tb6487.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ elapsed time = 876.5 s
3dTstat -mean -prefix rm.signal.all all_runs.tb6487+orig[0..416,419..444,447..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox

*** failure while reading from brick file ./all_runs.tb6487+orig.BRIK
*** desired 380237300 bytes but only got 190118650
*** Unix error message: Success
   THD_load_datablock
  3dTstat main
** Command line was:
3dTstat -mean -prefix rm.signal.all 'all_runs.tb6487+orig[0..416,419..444,447..449]'
[7m** FATAL ERROR:[0m Unable to compute output dataset!
** Program compile date = Jul 20 2017
