echo auto-generated by afni_proc.py, Wed Aug  9 07:40:04 2017
auto-generated by afni_proc.py, Wed Aug  9 07:40:04 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 07:40:04 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0593
endif
set output_dir = tb0593.srtt
if ( -d tb0593.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0593.srtt
mkdir tb0593.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0593.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0593.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0593.srtt/pb00.tb0593.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0593.srtt/pb00.tb0593.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0593.srtt/pb00.tb0593.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0593.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0593.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0593.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0593.r01.tcat+orig.BRIK is 4.699988 degrees from plumb.
++ 32842 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0593.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0593.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0593.r02.tcat+orig.BRIK is 4.699988 degrees from plumb.
++ 32950 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0593.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0593.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0593.r03.tcat+orig.BRIK is 4.699988 degrees from plumb.
++ 32631 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0593.r01.tshift -tpattern alt+z2 pb00.tb0593.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0593.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0593.r01.tcat+orig.BRIK is 4.699988 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0593.r02.tshift -tpattern alt+z2 pb00.tb0593.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0593.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0593.r02.tcat+orig.BRIK is 4.699988 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0593.r03.tshift -tpattern alt+z2 pb00.tb0593.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0593.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0593.r03.tcat+orig.BRIK is 4.699988 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0593.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 96, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 108, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 120, avoid_vent -1
Warning 3dSkullStrip: Stubborn intersection remaining at smoothing of 120. Ignoring it.#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 4.699988 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 341.504089
 + Used gradual clip level = 318.540588 .. 378.970215
 + Number voxels above clip level = 33219
 + Clustering voxels ...
 + Largest cluster has 33006 voxels
 + Clustering voxels ...
 + Largest cluster has 32449 voxels
 + Filled   297 voxels in small holes; now have 32746 voxels
 + Filled     1 voxels in large holes; now have 32747 voxels
 + Clustering voxels ...
 + Largest cluster has 32747 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 98311 voxels
 + Mask now has 32761 voxels
++ 32761 voxels in the mask [out of 131072: 24.99%]
++ first  12 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first   4 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 844.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/844.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 4.699988 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 4.699988 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1735196 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 32761 voxels [20.0%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 32761
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.319 29.051 20.274 (index)
 + source center of mass = 86.527 149.533 161.332 (index)
 + source-target CM = -0.284 1.702 -3.502 (xyz)
 + center of mass shifts = -0.284 1.702 -3.502
++ shift param auto-range: -69.8..69.2 -67.8..71.2 -53.6..46.6
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.283691 .. 9.716309
 + Range param#2 [y-shift] = -8.297874 .. 11.702126
 + Range param#3 [z-shift] = -13.502220 .. 6.497780
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.283691 .. 39.716309
 + Range param#2 [y-shift] = -38.297874 .. 41.702126
 + Range param#3 [z-shift] = -43.502220 .. 36.497780
 + 12 free parameters
++ Normalized convergence radius = 0.000447
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1735196 [out of 13504304] voxels
 + base mask has 44407 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=81 usiz=158
 + - copying weight image
 + - using 32761 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 28153 total points stored in 260 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--.o-+++.-oo-+$+-- + - best 45 costs found:
    0 v=-0.278187:  -0.28   1.70  -3.50   0.00   0.00   0.00  [grid]
    1 v=-0.049863: -13.62 -11.63   9.83 -15.00 -30.00  15.00  [grid]
    2 v=-0.048776: -16.27 -17.79  -9.23 -20.53  -3.14  10.08  [rand]
    3 v=-0.047182: -17.14 -16.88  10.95 -19.57 -37.09  16.59  [rand]
    4 v=-0.043379:   9.54 -23.06   7.88   3.10 -34.36  -2.55  [rand]
    5 v=-0.042547:   3.80   7.93   4.29   4.32 -22.85  18.95  [rand]
    6 v=-0.040924: -14.31 -14.02  11.17 -24.25 -37.55   4.41  [rand]
    7 v=-0.040300:  -4.36   7.93 -11.30   4.32  22.85 -18.95  [rand]
    8 v=-0.040167:  -4.36  -4.52   4.29  -4.32 -22.85  18.95  [rand]
    9 v=-0.040060:   3.80   7.93 -11.30  -4.32  22.85  18.95  [rand]
   10 v=-0.039915:  -4.36   7.93   4.29   4.32 -22.85  18.95  [rand]
   11 v=-0.039483: -13.62 -24.96   9.83 -15.00 -30.00  15.00  [grid]
   12 v=-0.038878: -13.62 -11.63  23.16 -15.00 -15.00  15.00  [grid]
   13 v=-0.038440: -13.62  28.37 -16.84 -15.00  30.00  15.00  [grid]
   14 v=-0.038350:   3.80  -4.52   4.29   4.32 -22.85 -18.95  [rand]
   15 v=-0.038226: -14.49  11.16   1.34 -15.99  13.53  29.93  [rand]
   16 v=-0.038134: -26.95 -24.96  23.16 -30.00 -15.00  30.00  [grid]
   17 v=-0.037918: -16.43  -7.76  20.85 -20.99 -15.73  16.09  [rand]
   18 v=-0.036304:  26.38 -24.96  23.16  30.00 -15.00 -30.00  [grid]
   19 v=-0.035502:  -8.92 -18.73  13.97 -25.20 -18.50 -13.54  [rand]
   20 v=-0.035442:  13.05  28.37 -16.84  15.00  30.00 -15.00  [grid]
   21 v=-0.034546: -13.62  15.04   9.83 -15.00  15.00  15.00  [grid]
   22 v=-0.034409: -26.95 -11.63   9.83 -30.00 -30.00  30.00  [grid]
   23 v=-0.034354:   9.54 -23.06   7.88   3.10 -34.36   2.55  [rand]
   24 v=-0.034221: -32.12  13.50  -0.76 -23.31   3.26  40.47  [rand]
   25 v=-0.033910:   9.54  26.46 -14.89   3.10  34.36   2.55  [rand]
   26 v=-0.033743: -13.62 -24.96   9.83 -30.00 -30.00 -15.00  [grid]
   27 v=-0.033546: -14.49  -7.75  -8.34 -15.99  13.53 -29.93  [rand]
   28 v=-0.033456:  -4.36   7.93   4.29  -4.32 -22.85  18.95  [rand]
   29 v=-0.033319: -26.95 -24.96   9.83 -15.00 -30.00  30.00  [grid]
   30 v=-0.033206:  -4.36  -4.52   4.29   4.32 -22.85  18.95  [rand]
   31 v=-0.033188: -13.62 -11.63 -16.84 -15.00  15.00 -15.00  [grid]
   32 v=-0.032913:  -4.36   7.93   4.29  -4.32 -22.85 -18.95  [rand]
   33 v=-0.032802:  -4.36   7.93 -11.30  -4.32  22.85  18.95  [rand]
   34 v=-0.032606: -13.62 -24.96   9.83 -30.00 -30.00  15.00  [grid]
   35 v=-0.032312: -26.95 -24.96   9.83 -30.00 -30.00  30.00  [grid]
   36 v=-0.032047:   3.80  -4.52   4.29  -4.32 -22.85 -18.95  [rand]
   37 v=-0.031977: -24.98  -2.91  12.88  -8.97 -18.72  30.56  [rand]
   38 v=-0.031845: -26.95 -11.63   9.83 -15.00 -15.00  30.00  [grid]
   39 v=-0.031839: -13.62 -24.96   9.83 -15.00 -30.00  30.00  [grid]
   40 v=-0.031588: -26.95 -24.96  23.16 -15.00 -15.00  30.00  [grid]
   41 v=-0.031354: -32.12  13.50  -0.76 -23.31  -3.26  40.47  [rand]
   42 v=-0.031351:   3.80   7.93 -11.30   4.32  22.85  18.95  [rand]
   43 v=-0.031118: -26.95  15.04   9.83 -30.00  15.00  30.00  [grid]
   44 v=-0.031101: -25.25 -27.35  31.95 -17.69 -14.58  34.92  [rand]
*[#8004=-0.371251] *[#8013=-0.448541] *[#8014=-0.458348] *[#8015=-0.475562] *[#8016=-0.525611] *[#8021=-0.536938] *[#8024=-0.541449] *[#8027=-0.544534] *[#8029=-0.558583]  + - costs of the above after a little optimization:
  * 0 v=-0.558583:  -0.26  -0.16  -1.46  -0.51   0.45   0.53  [grid]
    1 v=-0.068823: -11.62 -11.56   9.36 -10.11 -30.81  13.48  [grid]
    2 v=-0.056082: -14.05 -17.98 -10.11 -19.78  -2.84  10.33  [rand]
    3 v=-0.073388: -10.84 -16.87  10.93 -13.18 -37.69  11.14  [rand]
    4 v=-0.093465:   5.10 -22.56  12.18   1.63 -33.70  -4.57  [rand]
    5 v=-0.056541:   1.30   4.69   3.38   2.85 -23.12  20.66  [rand]
    6 v=-0.059110: -12.43 -20.80   9.85 -24.01 -39.90   6.73  [rand]
    7 v=-0.064405:  -4.63  12.11 -14.26  -0.90  23.10 -10.91  [rand]
    8 v=-0.104076:  -7.70  -7.92  10.68  -1.01 -15.27  14.97  [rand]
    9 v=-0.076427:   1.12  11.04 -15.91  -4.81  24.23  16.16  [rand]
   10 v=-0.052915:  -0.20   6.22   4.71   4.59 -23.45  19.54  [rand]
   11 v=-0.110849:  -8.75 -19.28  14.56  -6.34 -25.80   5.82  [grid]
   12 v=-0.063750: -11.11  -8.96  17.83 -12.56 -14.68   7.99  [grid]
   13 v=-0.054566:  -8.11  26.68 -18.33 -13.88  32.03  16.79  [grid]
   14 v=-0.059078:   5.62  -3.47   7.50   6.13 -21.79  -9.37  [rand]
   15 v=-0.060043: -15.09  10.99  -0.18  -8.70   9.39  26.07  [rand]
   16 v=-0.048882: -24.75 -23.08  27.58 -32.12 -18.90  28.54  [grid]
   17 v=-0.041305: -16.12  -8.96  20.67 -22.20 -15.75  14.02  [rand]
   18 v=-0.045637:  23.72 -26.32  24.55  31.49 -16.27 -32.09  [grid]
   19 v=-0.073914:  -6.89 -24.85  17.86 -19.22 -25.55  -8.29  [rand]
   20 v=-0.066811:   6.46  25.31 -18.46  12.94  28.67 -13.33  [grid]
   21 v=-0.079467: -12.81   9.73   4.93 -13.61   7.92  15.50  [grid]
   22 v=-0.038268: -26.29 -12.51   9.57 -30.80 -32.42  28.23  [grid]
   23 v=-0.093379:   3.74 -22.47  13.20   0.90 -33.91  -3.59  [rand]
   24 v=-0.041216: -31.52  10.33   0.68 -21.87  -2.36  41.06  [rand]
   25 v=-0.065098:   4.80  28.16 -17.79   4.59  31.04   1.31  [rand]
   26 v=-0.040712:  -8.78 -24.01  10.77 -31.53 -30.09 -13.78  [grid]
   27 v=-0.043462: -15.01  -7.78  -7.59 -16.13  11.97 -32.27  [rand]
   28 v=-0.052583:  -1.63   5.23   4.38   2.94 -24.42  20.98  [rand]
   29 v=-0.052248: -26.16 -28.68  14.15 -12.49 -31.98  29.54  [grid]
   30 v=-0.052995:  -0.56   4.24   3.29   3.25 -20.35  17.62  [rand]
   31 v=-0.037133: -13.54 -11.21 -16.68 -14.90  19.07 -14.47  [grid]
   32 v=-0.045846:  -3.82   6.77   3.53  -6.29 -23.55 -14.27  [rand]
   33 v=-0.079799:  -0.98   8.29 -15.09  -5.59  21.58  14.51  [rand]
   34 v=-0.042810: -15.40 -25.66  10.32 -28.80 -29.41   9.56  [grid]
   35 v=-0.037884: -28.86 -25.49  10.36 -29.00 -29.43  28.86  [grid]
   36 v=-0.060705:   1.22  -2.52  11.13  -1.63 -21.66 -14.20  [rand]
   37 v=-0.057696: -22.90  -1.57  13.99 -10.21 -11.32  28.90  [rand]
   38 v=-0.052411: -25.57  -2.92  11.88 -13.35 -10.33  31.62  [grid]
   39 v=-0.050032: -10.89 -24.46  10.19  -5.37 -30.55  30.38  [grid]
   40 v=-0.042991: -26.66 -22.74  22.57 -15.17 -19.15  29.60  [grid]
   41 v=-0.045948: -32.15   7.44   0.38 -20.49  -4.56  41.70  [rand]
   42 v=-0.042939:   2.90   4.62  -9.81   4.27  22.46  18.71  [rand]
   43 v=-0.051740: -25.43  15.66   1.63 -33.58  10.69  28.59  [grid]
   44 v=-0.040830: -28.28 -26.02  30.45 -18.00 -15.28  33.91  [rand]
 + - save # 0 for twobest
 + - save #11 for twobest
 + - save # 8 for twobest
 + - save # 4 for twobest
 + - skip #23 for twobest: too close to set # 4
 + - save #33 for twobest
 + - save #21 for twobest
 + - skip # 9 for twobest: too close to set #33
 + - save #19 for twobest
 + - save # 3 for twobest
 + - save # 1 for twobest
 + - save #20 for twobest
 + - save #25 for twobest
 + - save # 7 for twobest
 + - save #12 for twobest
 + - save #36 for twobest
 + - save #15 for twobest
 + - save # 6 for twobest
 + - save #14 for twobest
 + - save #37 for twobest
 + - save # 5 for twobest
 + - save # 2 for twobest
 + - save #13 for twobest
 + - skip #30 for twobest: too close to set # 5
 + - skip #10 for twobest: too close to set # 5
 + - skip #28 for twobest: too close to set # 5
 + - skip #38 for twobest: too close to set #37
 + - save #29 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=81 usiz=158
 + - retaining old weight image
 + - using 32761 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 28847 total points stored in 292 'RHDD(13.7332)' bloks
*[#9703=-0.637039] *[#9722=-0.637767] *[#9724=-0.638287] *[#9727=-0.639088] *[#9728=-0.639134] *[#9731=-0.640449] *[#9732=-0.640479] *[#9733=-0.640771] *[#9734=-0.64628] *[#9735=-0.646893] *[#9736=-0.647788] *[#9737=-0.648391] *[#9738=-0.649313] *[#9739=-0.650222] *[#9740=-0.651035] *[#9744=-0.652393] *[#9745=-0.652476] *[#9747=-0.652667] *[#9754=-0.653051] *[#9758=-0.653887] *[#9759=-0.654331] *[#9760=-0.65464] *[#9761=-0.654878] *[#9766=-0.655384] *[#9779=-0.655448] *[#9780=-0.655452] *[#9781=-0.655748] 
 + - param set #1 has cost=-0.655748
 + -- Parameters = 0.1243 -0.0659 -1.8699 -0.2935 0.6837 0.5057 1.0117 1.0026 0.9983 -0.0000 -0.0008 -0.0013
 + - param set #2 has cost=-0.092027
 + -- Parameters = -8.1618 -19.0779 13.9700 -6.2955 -25.9620 4.8944 1.0277 1.0014 0.9851 -0.0046 -0.0001 -0.0036
 + - param set #3 has cost=-0.133058
 + -- Parameters = -5.1414 -4.3029 7.8587 -1.8881 -11.8819 7.7671 1.0632 1.0348 0.9906 -0.0025 0.0183 0.0038
 + - param set #4 has cost=-0.077608
 + -- Parameters = 4.7588 -22.7298 12.5155 1.1651 -34.1618 -4.7716 1.0061 1.0193 0.9979 -0.0026 -0.0004 0.0018
 + - param set #5 has cost=-0.072440
 + -- Parameters = 0.6227 9.8154 -14.8843 -3.9277 22.2771 12.4389 1.0025 0.9871 0.9901 -0.0000 0.0187 -0.0029
 + - param set #6 has cost=-0.165037
 + -- Parameters = -7.0609 4.0841 2.1653 -8.2751 -2.0200 6.0254 1.0167 1.0210 1.0419 -0.0212 -0.0161 -0.0151
 + - param set #7 has cost=-0.062476
 + -- Parameters = -5.8404 -24.3062 18.6354 -18.1416 -26.0455 -8.1575 1.0017 1.0171 0.9998 -0.0003 0.0009 -0.0016
 + - param set #8 has cost=-0.064879
 + -- Parameters = -10.6380 -15.9079 11.1601 -13.3428 -37.3060 10.8912 1.0170 0.9975 1.0037 -0.0038 0.0023 0.0011
 + - param set #9 has cost=-0.056907
 + -- Parameters = -11.0561 -11.3624 9.0331 -10.4196 -31.0516 13.5092 1.0058 0.9980 1.0007 -0.0015 0.0102 -0.0005
 + - param set #10 has cost=-0.061613
 + -- Parameters = 4.6150 20.1992 -18.1765 11.6970 28.8271 -12.7816 0.9977 0.9953 1.0003 -0.0013 0.0001 0.0028
 + - param set #11 has cost=-0.051306
 + -- Parameters = 4.0282 29.0822 -14.8805 5.2688 31.3045 1.1238 0.9885 0.9914 0.9900 -0.0016 -0.0040 0.0023
 + - param set #12 has cost=-0.651306
 + -- Parameters = 0.0756 -0.0329 -1.7995 -0.2463 0.7225 0.2647 1.0051 1.0005 0.9980 0.0013 0.0041 0.0019
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0221 
 + --- dist(#3,#1) = 0.119 
 + --- dist(#4,#1) = 0.14 
 + --- dist(#5,#1) = 0.296 
 + --- dist(#6,#1) = 0.387 
 + --- dist(#7,#1) = 0.24 
 + --- dist(#8,#1) = 0.422 
 + --- dist(#9,#1) = 0.303 
 + --- dist(#10,#1) = 0.313 
 + --- dist(#11,#1) = 0.353 
 + --- dist(#12,#1) = 0.364 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=81 usiz=158
 + - retaining old weight image
 + - using 32761 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 29074 total points stored in 302 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.641489
 + -- Parameters = 0.0166 -0.0313 -1.8693 -0.3986 0.4262 0.4531 1.0094 1.0010 0.9967 -0.0042 0.0002 -0.0054
 + - param set #2 has cost=-0.637229
 + -- Parameters = 0.0222 -0.0976 -1.8675 -0.3522 0.7534 0.3320 1.0055 0.9997 0.9960 -0.0002 0.0041 0.0017
 + - param set #3 has cost=-0.303854
 + -- Parameters = -2.5909 2.7618 -0.1187 -4.0482 0.1873 1.4485 0.9572 1.0729 1.0530 -0.0238 -0.0064 0.0200
 + - param set #4 has cost=-0.267800
 + -- Parameters = -1.7660 2.0971 1.6202 -2.5850 -5.6219 0.1830 1.0375 1.0908 0.9759 0.0060 -0.0148 -0.0307
 + - param set #5 has cost=-0.073250
 + -- Parameters = -7.6826 -19.1111 13.6319 -6.1463 -26.0599 4.6883 1.0257 1.0019 0.9797 -0.0031 0.0113 -0.0050
 + - param set #6 has cost=-0.061205
 + -- Parameters = 4.5681 -22.5435 12.2233 1.0497 -34.3854 -5.1919 1.0025 1.0183 0.9938 -0.0004 -0.0042 0.0061
 + - param set #7 has cost=-0.078068
 + -- Parameters = -0.2456 10.4440 -14.3197 -2.7727 21.9686 6.6939 1.0916 0.9500 1.0030 -0.0076 0.0185 -0.0260
 + - param set #8 has cost=-0.047751
 + -- Parameters = -10.3864 -15.8000 10.5075 -13.6576 -36.9996 9.7933 1.0175 0.9867 1.0070 -0.0026 0.0122 0.0058
 + - param set #9 has cost=-0.048833
 + -- Parameters = -5.7911 -24.6953 18.0700 -17.2049 -26.1598 -8.9622 0.9986 1.0042 0.9783 0.0027 0.0021 -0.0051
 + - param set #10 has cost=-0.053318
 + -- Parameters = 4.4851 20.9016 -18.2974 10.5137 27.5219 -11.3640 0.9646 0.9833 0.9944 0.0049 -0.0164 -0.0124
 + - param set #11 has cost=-0.043292
 + -- Parameters = -11.1690 -12.0131 8.8822 -10.3138 -30.8251 13.3977 1.0033 1.0083 1.0018 -0.0023 0.0096 0.0013
 + - param set #12 has cost=-0.042931
 + -- Parameters = 3.3468 29.4645 -17.0238 4.9233 31.4742 2.8079 0.9841 0.9343 0.9563 -0.0144 0.0473 0.0062
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0319 
 + --- dist(#3,#1) = 0.196 
 + --- dist(#4,#1) = 0.245 
 + --- dist(#5,#1) = 0.239 
 + --- dist(#6,#1) = 0.294 
 + --- dist(#7,#1) = 0.387 
 + --- dist(#8,#1) = 0.301 
 + --- dist(#9,#1) = 0.308 
 + --- dist(#10,#1) = 0.416 
 + --- dist(#11,#1) = 0.347 
 + --- dist(#12,#1) = 0.369 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=81 usiz=158
 + - retaining old weight image
 + - using 32761 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 29455 total points stored in 314 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.609698
 + -- Parameters = -0.0178 -0.0706 -1.9002 -0.4315 0.3014 0.3340 1.0062 1.0012 0.9979 -0.0047 0.0008 -0.0077
 + - param set #2 has cost=-0.607909
 + -- Parameters = -0.0281 -0.0596 -1.8182 -0.4255 0.5157 0.2612 1.0055 0.9998 0.9923 -0.0038 0.0040 -0.0020
 + - param set #3 has cost=-0.438726
 + -- Parameters = -0.1358 1.0651 -1.0738 -1.6686 0.4551 0.9732 0.9781 1.0373 1.0124 -0.0064 0.0000 0.0101
 + - param set #4 has cost=-0.410581
 + -- Parameters = -0.3037 1.5220 -1.0967 -1.0632 -3.9161 0.1654 1.0241 1.0654 0.9566 -0.0297 -0.0096 -0.0498
 + - param set #5 has cost=-0.075442
 + -- Parameters = -1.1242 9.7890 -14.3148 -3.4634 22.5086 6.8868 1.0887 0.9523 0.9583 -0.0155 0.0454 -0.0175
 + - param set #6 has cost=-0.069003
 + -- Parameters = -7.2020 -16.7915 12.3285 -5.5328 -27.4494 4.8241 1.0208 0.9964 0.9398 -0.0314 -0.0174 -0.0211
 + - param set #7 has cost=-0.053340
 + -- Parameters = 4.2324 -22.7497 11.7369 0.6789 -34.2073 -5.3028 1.0052 1.0176 0.9976 0.0015 -0.0055 0.0047
 + - param set #8 has cost=-0.048693
 + -- Parameters = 4.4398 20.6693 -18.0427 10.5391 27.6270 -11.3435 0.9656 1.0032 1.0040 0.0104 -0.0176 -0.0149
 + - param set #9 has cost=-0.041498
 + -- Parameters = -5.9557 -24.2912 17.8413 -17.1401 -26.9177 -8.9243 1.0016 0.9874 0.9742 0.0147 0.0004 -0.0224
 + - param set #10 has cost=-0.041555
 + -- Parameters = -10.4842 -15.7359 10.5422 -13.7639 -36.9955 9.7862 1.0087 0.9859 1.0069 -0.0028 0.0121 0.0057
 + - param set #11 has cost=-0.049195
 + -- Parameters = -10.0487 -12.2792 9.0440 -8.9927 -27.9174 12.2357 0.9938 1.0597 0.9503 -0.0340 0.0266 0.0144
 + - param set #12 has cost=-0.038087
 + -- Parameters = 3.3575 29.4660 -17.3839 4.7850 31.9855 3.4520 0.9849 0.9336 0.9561 -0.0146 0.0515 0.0069
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0256 
 + --- dist(#3,#1) = 0.0983 
 + --- dist(#4,#1) = 0.19 
 + --- dist(#5,#1) = 0.247 
 + --- dist(#6,#1) = 0.308 
 + --- dist(#7,#1) = 0.383 
 + --- dist(#8,#1) = 0.314 
 + --- dist(#9,#1) = 0.304 
 + --- dist(#10,#1) = 0.414 
 + --- dist(#11,#1) = 0.303 
 + --- dist(#12,#1) = 0.369 
 + - Total coarse refinement net CPU time = 0.0 s; 3271 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=81 usiz=158
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 29489 total points stored in 317 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.589046 *
 + -- Parameters = -0.0178 -0.0706 -1.9002 -0.4315 0.3014 0.3340 1.0062 1.0012 0.9979 -0.0047 0.0008 -0.0077
 + - cost(#2)=-0.586561  
 + -- Parameters = -0.0281 -0.0596 -1.8182 -0.4255 0.5157 0.2612 1.0055 0.9998 0.9923 -0.0038 0.0040 -0.0020
 + - cost(#3)=-0.418280  
 + -- Parameters = -0.1358 1.0651 -1.0738 -1.6686 0.4551 0.9732 0.9781 1.0373 1.0124 -0.0064 0.0000 0.0101
 + - cost(#4)=-0.384660  
 + -- Parameters = -0.3037 1.5220 -1.0967 -1.0632 -3.9161 0.1654 1.0241 1.0654 0.9566 -0.0297 -0.0096 -0.0498
 + - cost(#5)=-0.070531  
 + -- Parameters = -1.1242 9.7890 -14.3148 -3.4634 22.5086 6.8868 1.0887 0.9523 0.9583 -0.0155 0.0454 -0.0175
 + - cost(#6)=-0.065043  
 + -- Parameters = -7.2020 -16.7915 12.3285 -5.5328 -27.4494 4.8241 1.0208 0.9964 0.9398 -0.0314 -0.0174 -0.0211
 + - cost(#7)=-0.047529  
 + -- Parameters = 4.2324 -22.7497 11.7369 0.6789 -34.2073 -5.3028 1.0052 1.0176 0.9976 0.0015 -0.0055 0.0047
 + - cost(#8)=-0.045353  
 + -- Parameters = -10.0487 -12.2792 9.0440 -8.9927 -27.9174 12.2357 0.9938 1.0597 0.9503 -0.0340 0.0266 0.0144
 + - cost(#9)=-0.043913  
 + -- Parameters = 4.4398 20.6693 -18.0427 10.5391 27.6270 -11.3435 0.9656 1.0032 1.0040 0.0104 -0.0176 -0.0149
 + - cost(#10)=-0.038942  
 + -- Parameters = -10.4842 -15.7359 10.5422 -13.7639 -36.9955 9.7862 1.0087 0.9859 1.0069 -0.0028 0.0121 0.0057
 + - cost(#11)=-0.037515  
 + -- Parameters = -5.9557 -24.2912 17.8413 -17.1401 -26.9177 -8.9243 1.0016 0.9874 0.9742 0.0147 0.0004 -0.0224
 + - cost(#12)=-0.032888  
 + -- Parameters = 3.3575 29.4660 -17.3839 4.7850 31.9855 3.4520 0.9849 0.9336 0.9561 -0.0146 0.0515 0.0069
 + - cost(#13)=-0.240517  
 + -- Parameters = -0.2837 1.7021 -3.5022 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.590328 *
 + -- Parameters = -0.0116 -0.1227 -1.9471 -0.3978 0.2052 0.2547 1.0052 1.0005 0.9975 -0.0034 0.0023 -0.0101
 + - cost(#2)=-0.589063  
 + -- Parameters = -0.0261 -0.1085 -1.9363 -0.4470 0.3926 0.1254 1.0055 1.0003 0.9969 -0.0039 0.0044 -0.0064
 + - cost(#3)=-0.574199  
 + -- Parameters = 0.0223 0.0984 -1.7571 -0.4176 0.7928 0.4598 1.0083 1.0069 0.9898 -0.0069 -0.0003 0.0025
 + - cost(#4)=-0.550822  
 + -- Parameters = -0.0446 0.1076 -2.0212 -0.5087 -2.2780 0.1683 1.0023 1.0061 0.9756 -0.0085 0.0013 -0.0560
 + - cost(#5)=-0.072163  
 + -- Parameters = -0.4689 9.6355 -13.1010 -2.7719 21.5893 5.9510 1.0957 0.9474 0.9662 -0.0128 0.0530 -0.0114
 + - cost(#6)=-0.065474  
 + -- Parameters = -7.2005 -16.7472 12.3859 -5.5544 -27.3882 4.9156 1.0216 0.9910 0.9411 -0.0311 -0.0162 -0.0216
 + - cost(#7)=-0.049180  
 + -- Parameters = 4.2594 -23.3771 10.5750 0.4405 -33.7047 -5.3958 1.0132 1.0173 0.9972 0.0002 -0.0071 0.0039
 + - cost(#8)=-0.047048  
 + -- Parameters = -9.9786 -12.1245 9.3588 -9.1412 -28.2080 11.2796 0.9884 1.0690 0.9508 -0.0347 0.0347 0.0163
 + - cost(#9)=-0.044580  
 + -- Parameters = 4.3610 20.6713 -17.8260 10.3969 27.2965 -11.3563 0.9675 1.0030 1.0064 0.0046 -0.0190 -0.0155
 + - cost(#10)=-0.043445  
 + -- Parameters = -9.4662 -16.3843 11.5156 -13.1691 -35.8669 8.2853 1.0081 0.9937 1.0078 -0.0052 0.0150 0.0047
 + - cost(#11)=-0.038537  
 + -- Parameters = -6.1200 -24.7002 18.0364 -16.8479 -27.1438 -8.7102 0.9985 0.9745 0.9762 0.0144 0.0007 -0.0203
 + - cost(#12)=-0.033615  
 + -- Parameters = 3.0874 29.4107 -17.4380 4.6721 32.2768 3.2689 0.9820 0.9248 0.9524 -0.0154 0.0506 0.0057
 + - cost(#13)=-0.584015  
 + -- Parameters = 0.0358 -0.1241 -1.8635 -0.3314 0.7357 0.3742 1.0057 0.9991 0.9978 -0.0022 0.0002 0.0017
 + - case #1 is now the best
 + - Initial  cost = -0.590328
 + - Initial fine Parameters = -0.0116 -0.1227 -1.9471 -0.3978 0.2052 0.2547 1.0052 1.0005 0.9975 -0.0034 0.0023 -0.0101
 + - Finalish cost = -0.590846 ; 243 funcs
 + - Final    cost = -0.591062 ; 378 funcs
 + Final fine fit Parameters:
       x-shift= 0.0144   y-shift=-0.0834   z-shift=-1.9307
       z-angle=-0.3717   x-angle=-0.0428   y-angle= 0.1232
       x-scale= 1.0057   y-scale= 1.0012   z-scale= 0.9981
     y/x-shear=-0.0025 z/x-shear= 0.0058 z/y-shear=-0.0145
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.0144 -0.0834 -1.9307 -0.3717 -0.0428 0.1232 1.0057 1.0012 0.9981 -0.0025 0.0058 -0.0145
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 18.2
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 4.699988 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0046 -0.9967 0.0810 234.1062 0.0075 0.0958 0.9948 74.9856 -1.0057 -0.0065 0.0022 198.0640
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 16.6 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3987.380100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 75.6106 49.5696   ITER = 15/137
75.6106

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 103ms]
lev=0 0..171 0..213 0..166: [first cost=-0.64351] ... done [cost:-0.64351==>-0.72293]
lev=1 patch=129x161x125 [clock= 12m 58s 205ms]........:[cost=-0.75379]:........ done [cost:-0.72293==>-0.75837 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 18m 10s 454ms]......................... done [cost:-0.75837==>-0.83624 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 22m 2s 63ms].............. done [cost:-0.83624==>-0.89021 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 24m 50s 625ms]...... done [cost:-0.89021==>-0.94754 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 26m 54s 59ms]................. done [cost:-0.94754==>-1.02193 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 29m 4s 996ms]....................... done [cost:-1.02193==>-1.05658 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 31m 22s 667ms].............................. done [cost:-1.05658==>-1.14384 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 33m 51s 380ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0593/tb0593.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 7.0 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0593.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.699988 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0593.r01.tshift+orig.BRIK is 4.699988 degrees from plumb.
++ Reading input dataset ./pb01.tb0593.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 34976 voxels
 + 5455 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.401  pitch=-0.000  yaw=-0.007  dS=-0.908  dL=-0.121  dP=-1.859
++ Mean: roll=+0.001  pitch=+0.812  yaw=+0.049  dS=-0.295  dL=-0.037  dP=-0.316
++ Max : roll=+0.057  pitch=+5.555  yaw=+0.367  dS=+0.081  dL=+0.019  dP=+0.078
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.16(0.16) 0.18(0.04) 0.20(0.03) 0.23(0.04) 0.27(0.05) 0.19(0.25) 0.23(0.12) 0.27(0.12) 0.28(0.03) 0.29(0.07) 0.27(0.05) 0.28(0.03) 0.28(0.03) 0.30(0.04) 0.29(0.02) 0.31(0.02) 0.36(0.05) 0.37(0.01) 0.38(0.03) 0.44(0.08) 0.44(0.03) 0.43(0.04) 0.46(0.04) 0.49(0.03) 0.52(0.04) 0.54(0.04) 0.56(0.03) 0.55(0.03) 0.55(0.01) 0.59(0.05) 0.60(0.04) 0.61(0.02) 0.64(0.03) 0.63(0.03) 0.65(0.02) 0.64(0.02) 0.67(0.08) 0.75(0.15) 0.76(0.09) 0.80(0.06) 0.84(0.04) 0.87(0.03) 0.88(0.02) 0.91(0.04) 0.89(0.03) 0.90(0.04) 0.91(0.03) 0.93(0.05) 0.92(0.03) 0.92(0.02) 0.91(0.03) 0.96(0.06) 0.98(0.03) 1.01(0.03) 1.04(0.04) 1.06(0.04) 1.06(0.04) 1.06(0.04) 1.07(0.02) 1.08(0.02) 1.13(0.06) 1.15(0.03) 1.18(0.05) 1.21(0.04) 1.19(0.03) 1.18(0.03) 1.17(0.03) 1.17(0.04) 1.19(0.03) 1.22(0.05) 1.26(0.04) 1.25(0.03) 1.29(0.06) 1.31(0.02) 1.35(0.05) 1.36(0.05) 1.39(0.05) 1.36(0.04) 1.36(0.04) 1.38(0.03) 1.40(0.04) 1.42(0.03) 1.44(0.03) 1.48(0.05) 1.53(0.05) 1.60(0.07) 1.67(0.07) 1.68(0.03) 1.68(0.03) 1.71(0.04) 1.81(0.10) 1.92(0.11) 1.97(0.06) 1.98(0.03) 2.05(0.07) 2.09(0.04) 2.10(0.02) 2.13(0.03) 2.14(0.04) 2.20(0.06) 2.23(0.03) 2.24(0.04) 2.23(0.03) 2.26(0.05) 2.27(0.02) 2.29(0.02) 2.31(0.03) 2.31(0.04) 2.31(0.04) 2.29(0.04) 2.32(0.05) 2.34(0.04) 2.41(0.07) 2.40(0.03) 2.41(0.05) 2.42(0.03) 2.42(0.04) 2.44(0.05) 2.47(0.06) 2.49(0.05) 2.50(0.01) 2.56(0.12) 2.81(0.26) 3.02(0.21) 3.05(0.05) 3.13(0.09) 3.17(0.05) 3.19(0.02) 3.21(0.05) 3.26(0.06) 3.32(0.06) 3.35(0.05) 3.38(0.04) 3.38(0.03) 3.36(0.05) 3.38(0.04) 3.43(0.07) 3.46(0.04) 3.52(0.07) 3.54(0.02) 3.56(0.04) 3.76(0.23) 3.47(0.33) 2.93(0.57) 2.85(0.29) 2.61(0.26) 3.54(0.94) 10.21(6.69) 8.69(1.53)
++ Max displacement in automask = 10.21 (mm) at sub-brick 148
++ Max delta displ  in automask = 6.69 (mm) at sub-brick 148
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0593.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0593.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0593.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0593.r01.tshift+orig.BRIK is 4.699988 degrees from plumb.
++ Source dataset: ./pb01.tb0593.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.699988 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0593.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.699988 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0593.r02.tshift+orig.BRIK is 4.699988 degrees from plumb.
++ Reading input dataset ./pb01.tb0593.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 35332 voxels
 + 5473 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.800  pitch=+1.484  yaw=+0.646  dS=-0.851  dL=-0.244  dP=-2.652
++ Mean: roll=-0.521  pitch=+3.172  yaw=+0.813  dS=+0.932  dL=-0.092  dP=-2.310
++ Max : roll=-0.389  pitch=+4.965  yaw=+1.091  dS=+1.907  dL=+0.105  dP=-1.811
++ Max displacements (mm) for each sub-brick:
 4.97(0.00) 4.74(0.29) 4.69(0.24) 4.66(0.18) 4.73(0.18) 4.90(0.35) 4.97(0.26) 4.87(0.18) 4.85(0.18) 5.00(0.26) 5.01(0.10) 4.99(0.04) 4.97(0.02) 4.95(0.06) 4.93(0.07) 4.96(0.07) 4.99(0.04) 5.03(0.06) 5.06(0.08) 5.04(0.05) 5.07(0.10) 5.07(0.03) 5.19(0.22) 5.31(0.27) 5.37(0.16) 5.44(0.13) 5.46(0.07) 5.46(0.04) 5.43(0.04) 5.43(0.03) 5.44(0.05) 5.43(0.03) 5.47(0.07) 5.54(0.08) 5.57(0.05) 5.59(0.08) 5.58(0.05) 5.59(0.05) 5.62(0.03) 5.63(0.03) 5.65(0.05) 5.78(0.22) 5.87(0.13) 5.86(0.04) 5.84(0.03) 5.84(0.05) 5.86(0.05) 5.89(0.04) 5.90(0.02) 5.91(0.03) 5.91(0.03) 5.88(0.05) 5.91(0.04) 5.88(0.06) 5.72(0.18) 5.88(0.23) 6.02(0.24) 5.97(0.07) 6.02(0.10) 6.06(0.08) 6.07(0.03) 6.06(0.04) 6.12(0.07) 5.99(0.17) 6.13(0.16) 6.18(0.06) 6.14(0.06) 6.30(0.18) 6.21(0.09) 6.11(0.20) 6.12(0.03) 6.15(0.03) 6.15(0.03) 6.15(0.02) 6.18(0.07) 6.23(0.10) 6.24(0.03) 6.24(0.05) 6.29(0.10) 6.33(0.06) 6.34(0.01) 6.35(0.04) 6.37(0.06) 6.40(0.05) 6.40(0.02) 6.40(0.02) 6.41(0.02) 6.41(0.02) 6.55(0.21) 6.71(0.22) 6.71(0.03) 6.72(0.05) 6.72(0.04) 6.74(0.05) 6.76(0.03) 6.77(0.03) 6.80(0.05) 6.83(0.06) 6.83(0.01) 6.82(0.11) 7.68(1.77) 8.90(2.44) 8.32(1.13) 8.41(0.44) 8.30(0.16) 8.46(0.21) 8.51(0.12) 8.52(0.07) 8.49(0.13) 8.51(0.07) 8.56(0.06) 8.57(0.03) 8.59(0.05) 8.59(0.03) 8.56(0.03) 8.54(0.03) 8.55(0.02) 8.55(0.02) 8.56(0.03) 8.61(0.05) 8.61(0.03) 8.64(0.04) 8.65(0.05) 8.64(0.02) 8.64(0.01) 8.63(0.03) 8.65(0.03) 8.68(0.05) 8.75(0.07) 8.79(0.04) 8.80(0.03) 8.82(0.04) 8.88(0.20) 8.89(0.07) 8.89(0.03) 8.86(0.06) 8.87(0.07) 8.97(0.23) 8.95(0.05) 8.94(0.06) 8.96(0.05) 9.04(0.08) 9.05(0.03) 8.99(0.07) 8.96(0.19) 8.92(0.10) 8.78(0.18) 8.52(0.30) 8.61(0.14) 8.59(0.07)
++ Max displacement in automask = 9.05 (mm) at sub-brick 142
++ Max delta displ  in automask = 2.44 (mm) at sub-brick 101
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0593.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0593.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0593.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0593.r02.tshift+orig.BRIK is 4.699988 degrees from plumb.
++ Source dataset: ./pb01.tb0593.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.699988 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.0
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0593.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.699988 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0593.r03.tshift+orig.BRIK is 4.699988 degrees from plumb.
++ Reading input dataset ./pb01.tb0593.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 34768 voxels
 + 5422 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.574  pitch=+0.487  yaw=+0.732  dS=+3.751  dL=-0.104  dP=-2.774
++ Mean: roll=-0.348  pitch=+1.695  yaw=+0.934  dS=+4.458  dL=-0.054  dP=-2.488
++ Max : roll=-0.230  pitch=+2.700  yaw=+1.131  dS=+5.975  dL=+0.051  dP=-2.144
++ Max displacements (mm) for each sub-brick:
 7.24(0.00) 7.45(0.59) 7.40(1.26) 7.44(0.27) 7.43(0.16) 7.51(0.12) 7.52(0.04) 7.52(0.08) 7.51(0.06) 7.44(0.09) 7.48(0.07) 7.43(0.08) 7.40(0.10) 7.35(0.11) 7.39(0.07) 7.41(0.05) 7.40(0.02) 7.40(0.02) 7.38(0.04) 7.34(0.12) 7.32(0.04) 7.34(0.09) 7.32(0.06) 7.30(0.05) 7.30(0.06) 7.37(0.12) 7.33(0.06) 7.31(0.04) 7.26(0.08) 7.30(0.05) 7.24(0.09) 7.24(0.03) 7.22(0.02) 7.25(0.07) 7.23(0.03) 7.24(0.05) 7.23(0.04) 7.23(0.02) 7.22(0.03) 7.21(0.03) 7.21(0.02) 7.19(0.03) 7.21(0.03) 7.19(0.04) 7.18(0.02) 7.17(0.07) 7.18(0.02) 7.19(0.03) 7.19(0.05) 7.18(0.03) 7.16(0.03) 7.15(0.05) 7.12(0.04) 7.14(0.03) 7.14(0.02) 7.14(0.04) 7.12(0.03) 7.12(0.04) 7.10(0.04) 7.10(0.03) 7.10(0.01) 7.11(0.02) 7.10(0.04) 7.07(0.03) 7.09(0.03) 7.09(0.02) 7.09(0.03) 7.10(0.03) 7.09(0.06) 7.12(0.07) 7.15(0.06) 7.14(0.02) 7.21(0.09) 7.57(0.57) 7.68(0.26) 7.66(0.07) 7.66(0.04) 7.71(0.06) 7.72(0.03) 7.74(0.08) 7.81(0.08) 7.82(0.08) 7.81(0.04) 7.84(0.05) 7.88(0.10) 7.93(0.06) 7.98(0.06) 8.01(0.07) 8.01(0.04) 7.99(0.04) 8.05(0.10) 8.06(0.04) 8.06(0.02) 8.09(0.04) 8.09(0.04) 8.08(0.03) 8.07(0.02) 8.07(0.05) 8.07(0.04) 8.08(0.02) 8.10(0.05) 8.13(0.03) 8.13(0.02) 8.13(0.02) 8.15(0.03) 8.14(0.07) 8.17(0.10) 8.19(0.06) 8.21(0.04) 8.22(0.06) 8.22(0.04) 8.19(0.03) 8.22(0.08) 8.25(0.08) 8.24(0.02) 8.28(0.04) 8.27(0.02) 8.28(0.05) 8.27(0.03) 8.23(0.06) 8.26(0.04) 8.29(0.08) 8.28(0.04) 8.21(0.12) 8.29(0.17) 8.30(0.04) 8.30(0.09) 8.31(0.03) 8.30(0.05) 8.35(0.08) 8.33(0.07) 8.35(0.02) 8.35(0.04) 8.35(0.03) 8.36(0.02) 8.36(0.04) 8.40(0.06) 8.55(0.23) 8.59(0.10) 8.60(0.05) 8.60(0.02) 8.60(0.03) 8.59(0.08) 8.51(0.16) 8.36(0.17) 8.40(0.20) 8.41(0.06) 8.40(0.16) 8.40(0.07) 8.32(0.16)
++ Max displacement in automask = 8.60 (mm) at sub-brick 140
++ Max delta displ  in automask = 1.26 (mm) at sub-brick 2
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0593.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0593.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0593.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0593.r03.tshift+orig.BRIK is 4.699988 degrees from plumb.
++ Source dataset: ./pb01.tb0593.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.0
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 4.699988 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0593.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0593.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0593.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0593.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0593.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0593.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 4.699988 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.5
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0593
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0593+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0593+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1599085 voxels in source_automask+0
++ Zero-pad: zbot=0 ztop=2
++ Computing -autobox
++ 305856 voxels [69.4%] in weight mask
++ Number of points for matching = 143752
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.118532
   sp   = 0.294773
   mi   = -0.598425
   crM  = 0.0236837
   nmi  = 0.827276
   je   = 2.8662
   hel  = -0.125944
   crA  = 0.154169
   crU  = 0.163361
   lss  = 0.881468
   lpc  = 0.12255
   lpa  = 0.87745
   lpc+ = 0.22537
   ncd  = 0.976505
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.1
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0593+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0593+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 27.0 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0593.r01.blur pb02.tb0593.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0593.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0593.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0593.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0593.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0593.r02.blur pb02.tb0593.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0593.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0593.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0593.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0593.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0593.r03.blur pb02.tb0593.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0593.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0593.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0593.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0593.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0593.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0593.r01.blur+orig
++ Forming automask
 + Fixed clip level = 331.455414
 + Used gradual clip level = 311.123657 .. 367.566925
 + Number voxels above clip level = 58886
 + Clustering voxels ...
 + Largest cluster has 58778 voxels
 + Clustering voxels ...
 + Largest cluster has 58710 voxels
 + Filled    30 voxels in small holes; now have 58740 voxels
 + Clustering voxels ...
 + Largest cluster has 58740 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 367535 voxels
 + Mask now has 58740 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 358866 voxels
++ 67409 voxels in the mask [out of 426275: 15.81%]
++ first  13 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0593.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0593.r02.blur+orig
++ Forming automask
 + Fixed clip level = 329.969055
 + Used gradual clip level = 308.990356 .. 368.572144
 + Number voxels above clip level = 59464
 + Clustering voxels ...
 + Largest cluster has 59299 voxels
 + Clustering voxels ...
 + Largest cluster has 59162 voxels
 + Filled    31 voxels in small holes; now have 59193 voxels
 + Clustering voxels ...
 + Largest cluster has 59193 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 367082 voxels
 + Mask now has 59193 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 358330 voxels
++ 67945 voxels in the mask [out of 426275: 15.94%]
++ first  13 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0593.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0593.r03.blur+orig
++ Forming automask
 + Fixed clip level = 328.513123
 + Used gradual clip level = 308.818970 .. 364.747589
 + Number voxels above clip level = 59110
 + Clustering voxels ...
 + Largest cluster has 58936 voxels
 + Clustering voxels ...
 + Largest cluster has 58844 voxels
 + Filled    40 voxels in small holes; now have 58884 voxels
 + Clustering voxels ...
 + Largest cluster has 58884 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 367391 voxels
 + Mask now has 58884 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 358716 voxels
++ 67559 voxels in the mask [out of 426275: 15.85%]
++ first  13 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   6 z-planes are zero [from L]
++ last    5 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0593
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 68153 survived, 358122 were zero
++ writing result full_mask.tb0593...
3dresample -master full_mask.tb0593+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0593
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 62949 survived, 363326 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0593...
3dABoverlap -no_automask full_mask.tb0593+orig mask_anat.tb0593+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0593+orig.BRIK  B=./mask_anat.tb0593+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
68153        62949        70390        60712        7441         2237         10.9181      3.5537     0.8666     1.0779     0.8981
3ddot -dodice full_mask.tb0593+orig mask_anat.tb0593+orig
tee out.mask_ae_dice.txt
0.92618	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0593
total number of censored TRs (simple form) = 15
1deval -a motion_tb0593_censor.1D -b outcount_tb0593_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0593_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0593.r01.blur+orig.HEAD pb03.tb0593.r02.blur+orig.HEAD pb03.tb0593.r03.blur+orig.HEAD -censor censor_tb0593_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0593 -errts errts.tb0593 -bucket stats.tb0593
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0593.r01.blur+orig.HEAD pb03.tb0593.r02.blur+orig.HEAD pb03.tb0593.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 58953 voxels (out of 426275 = 13.8%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 434 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0593.r01.blur+orig.HEAD pb03.tb0593.r02.blur+orig.HEAD pb03.tb0593.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0593_REML -Rvar stats.tb0593_REMLvar \
 -Rfitts fitts.tb0593_REML -Rerrts errts.tb0593_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (434x24):  7.87064  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (434x6):  1.03453  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (434x18):  7.64019  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (434x6):  3.8385  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (434x12):  1.21532  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 8.50861e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.32 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.336
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.350
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.364
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.379
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.393
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.407
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.421
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.435
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.449
++ Job #0: processing voxels 0 to 42626; elapsed time=7.459
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345++ Job #1 finished; elapsed time=19.241
++ Job #4 finished; elapsed time=19.260
++ Job #3 finished; elapsed time=19.287
++ Job #8 finished; elapsed time=19.334
++ Job #7 finished; elapsed time=19.362
++ Job #2 finished; elapsed time=19.395
++ Job #6 finished; elapsed time=19.407
++ Job #5 finished; elapsed time=19.537
++ Job #9 finished; elapsed time=19.617
6789.
++ Job #0 waiting for children to finish; elapsed time=23.183
++ Job #0 now finishing up; elapsed time=23.183
++ Smallest FDR q [0 Full_Fstat] = 6.94289e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 6.93893e-11
++ Smallest FDR q [3 uns1_Fstat] = 6.93843e-11
++ Smallest FDR q [5 uns2#0_Tstat] = 2.80149e-14
++ Smallest FDR q [6 uns2_Fstat] = 2.80087e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 6.28e-14
++ Smallest FDR q [9 uns3_Fstat] = 6.28082e-14
++ Smallest FDR q [11 str1#0_Tstat] = 6.2888e-12
++ Smallest FDR q [12 str1_Fstat] = 6.2888e-12
++ Smallest FDR q [14 str2#0_Tstat] = 1.91695e-14
++ Smallest FDR q [15 str2_Fstat] = 1.9164e-14
++ Smallest FDR q [17 str3#0_Tstat] = 1.28588e-13
++ Smallest FDR q [18 str3_Fstat] = 1.28613e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 5.01258e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 5.01203e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 4.56817e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 4.56729e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 4.23868e-09
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 4.23883e-09
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 5.90723e-07
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 5.90729e-07
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 1.7641e-11
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 1.7641e-11
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.61564e-05
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.61556e-05
++ Wrote bucket dataset into ./stats.tb0593+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0593+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0593+orig.BRIK
++ Program finished; elapsed time=42.403
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.749       0.810  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.734       0.799  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.731       0.796  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.484       0.561  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.484       0.559  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.458       0.535  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0593.r01.blur+orig.HEAD pb03.tb0593.r02.blur+orig.HEAD pb03.tb0593.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0593_REML -Rvar stats.tb0593_REMLvar -Rfitts fitts.tb0593_REML -Rerrts errts.tb0593_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 58953 voxels (out of 426275 = 13.8%)
++ -----  matrix condition (434x24):  7.87064  ++ VERY GOOD ++
 + masked off 258123 voxels for being all zero; 168152 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 303 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=7.26
 + X matrix: 46.697% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=434 cols=24; 109*1 cases; total CPU=0.00 Elapsed=7.29
 +  average case bandwidth = 12.34
++ REML voxel loop: [6 threads]0123456789.0123456789.
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=50.13
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=96.94
++ Output dataset ./stats.tb0593_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0593_REML+orig.BRIK
++ Output dataset ./errts.tb0593_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0593_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 1.30985e-11
++ Smallest FDR q [2 uns1#0_Tstat] = 0.00111811
++ Smallest FDR q [3 uns1_Fstat] = 0.00111811
++ Smallest FDR q [5 uns2#0_Tstat] = 2.12587e-07
++ Smallest FDR q [6 uns2_Fstat] = 2.12586e-07
++ Smallest FDR q [8 uns3#0_Tstat] = 7.50432e-08
++ Smallest FDR q [9 uns3_Fstat] = 7.50432e-08
++ Smallest FDR q [11 str1#0_Tstat] = 9.80351e-05
++ Smallest FDR q [12 str1_Fstat] = 9.80351e-05
++ Smallest FDR q [14 str2#0_Tstat] = 3.25676e-07
++ Smallest FDR q [15 str2_Fstat] = 3.25675e-07
++ Smallest FDR q [17 str3#0_Tstat] = 3.95748e-08
++ Smallest FDR q [18 str3_Fstat] = 3.95748e-08
++ Smallest FDR q [20 unstructured#0_Tstat] = 2.74231e-12
++ Smallest FDR q [21 unstructured_Fstat] = 2.74231e-12
++ Smallest FDR q [23 structured#0_Tstat] = 6.02533e-12
++ Smallest FDR q [24 structured_Fstat] = 6.02533e-12
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.369337 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.369337 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.805449 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.805449 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.0391961
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.0391961
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.123669 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.12367 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0593_REML+orig
++ Output dataset ./stats.tb0593_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=116.11
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0593 pb03.tb0593.r01.blur+orig.HEAD pb03.tb0593.r02.blur+orig.HEAD pb03.tb0593.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.0 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0593+orig[0..142,150..248,253..299,303..371,374..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0593_REML+orig[0..142,150..248,253..299,303..371,374..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0593+orig -expr c*a/b -prefix TSNR.tb0593
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0593_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0593+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 68153 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.114951
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0593.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..142 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0593+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0593+orig[0..142]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68153
[7m*+ WARNING:[0m removed 442 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 143 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.14 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..248,253..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0593+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0593+orig[150..248,253..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68153
[7m*+ WARNING:[0m removed 442 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.31 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 303..371,374..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0593+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0593+orig[303..371,374..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68153
[7m*+ WARNING:[0m removed 442 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 145 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.26 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 10.261 9.69756 10.2998 10.0823
average errts FWHM blurs: 10.261 9.69756 10.2998 10.0823
echo 10.261 9.69756 10.2998 10.0823   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.494812 6.94893 14.1173 17.3492
average errts ACF blurs: 0.494812 6.94893 14.1173 17.3492
echo 0.494812 6.94893 14.1173 17.3492   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..142 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0593+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0593_REML+orig[0..142]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68153
[7m*+ WARNING:[0m removed 442 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 143 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.08 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..248,253..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0593+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0593_REML+orig[150..248,253..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68153
[7m*+ WARNING:[0m removed 442 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 146 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.22 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 303..371,374..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0593+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0593_REML+orig[303..371,374..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 68153
[7m*+ WARNING:[0m removed 442 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 145 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.23 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 10.2381 9.67988 10.2813 10.0626
average err_reml FWHM blurs: 10.2381 9.67988 10.2813 10.0626
echo 10.2381 9.67988 10.2813 10.0626   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.498648 6.9057 14.1954 17.3017
average err_reml ACF blurs: 0.498648 6.9057 14.1954 17.3017
echo 0.498648 6.9057 14.1954 17.3017   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0593.1D
3dClustSim -both -mask full_mask.tb0593+orig -acf 0.498648 6.9057 14.1954 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 68153 voxels in mask (15.99% of total)
++ Kernel function radius = 45.73 mm
++ ACF(0.50,6.91,14.20) => FWHM=17.30 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 530.0 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0593+orig stats.tb0593_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0593+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0593_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0593 -dsets pb00.tb0593.r01.tcat+orig.HEAD pb00.tb0593.r02.tcat+orig.HEAD pb00.tb0593.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0593.r01.blur+orig.BRIK rm.pb03.tb0593.r01.blur+orig.HEAD rm.pb03.tb0593.r02.blur+orig.BRIK rm.pb03.tb0593.r02.blur+orig.HEAD rm.pb03.tb0593.r03.blur+orig.BRIK rm.pb03.tb0593.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0593.txt
./@ss_review_basic

subject ID                : tb0593
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0593+orig.HEAD
final stats dset          : stats.tb0593_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 10
average motion (per TR)   : 0.066718
average censored motion   : 0.0430132
max motion displacement   : 8.56864
max censored displacement : 6.9311
outlier limit             : 0.1
average outlier frac (TR) : 0.0100464
num TRs above out limit   : 8

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 143 146 145
num TRs per run (censored): 7 4 5
fraction censored per run : 0.0466667 0.0266667 0.0333333
TRs total (uncensored)    : 450
TRs total                 : 434
degrees of freedom used   : 24
degrees of freedom left   : 410

TRs censored              : 16
censor fraction           : 0.035556
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 5 4 0 0 2 2
fraction TRs censored     : 0.074 0.059 0.000 0.000 0.018 0.018
ave mot per sresp (orig)  : 0.052420 0.112621 0.036192 0.030808 0.071350 0.036567
ave mot per sresp (cens)  : 0.030425 0.065763 0.036192 0.030808 0.049763 0.033673

TSNR average              : 276.264
global correlation (GCOR) : 0.114951
anat/EPI mask Dice coef   : 0.92618
maximum F-stat (masked)   : 15.3488
blur estimates (ACF)      : 0.498648 6.9057 14.1954
blur estimates (FWHM)     : 10.2381 9.67988 10.2813


cd ..
echo execution finished: `date`
date
execution finished: Wed Aug  9 08:38:34 EDT 2017
