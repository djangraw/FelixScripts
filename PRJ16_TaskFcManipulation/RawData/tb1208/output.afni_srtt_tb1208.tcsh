echo auto-generated by afni_proc.py, Wed Aug  9 12:15:50 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:50 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:50 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb1208
endif
set output_dir = tb1208.srtt
if ( -d tb1208.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb1208.srtt
mkdir tb1208.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb1208.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb1208.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb1208.srtt/pb00.tb1208.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb1208.srtt/pb00.tb1208.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb1208.srtt/pb00.tb1208.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb1208.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb1208.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1208.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1208.r01.tcat+orig.BRIK is 3.100025 degrees from plumb.
++ 22924 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb1208.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1208.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1208.r02.tcat+orig.BRIK is 3.100025 degrees from plumb.
++ 23031 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb1208.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1208.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1208.r03.tcat+orig.BRIK is 3.100025 degrees from plumb.
++ 22861 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb1208.r01.tshift -tpattern alt+z2 pb00.tb1208.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1208.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1208.r01.tcat+orig.BRIK is 3.100025 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb1208.r02.tshift -tpattern alt+z2 pb00.tb1208.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1208.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1208.r02.tcat+orig.BRIK is 3.100025 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb1208.r03.tshift -tpattern alt+z2 pb00.tb1208.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb1208.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb1208.r03.tcat+orig.BRIK is 3.100025 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb1208.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 3.100025 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 402.966003
 + Used gradual clip level = 360.574799 .. 440.987213
 + Number voxels above clip level = 23709
 + Clustering voxels ...
 + Largest cluster has 22934 voxels
 + Clustering voxels ...
 + Largest cluster has 22703 voxels
 + Filled   204 voxels in small holes; now have 22907 voxels
 + Filled     1 voxels in large holes; now have 22908 voxels
 + Clustering voxels ...
 + Largest cluster has 22908 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 108164 voxels
 + Mask now has 22908 voxels
++ 22908 voxels in the mask [out of 131072: 17.48%]
++ first  14 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   9 y-planes are zero [from P]
++ last    9 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    3 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 974.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/974.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 3.100025 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 3.100025 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1228832 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=1
++ 22908 voxels [15.1%] in weight mask
++ Number of points for matching = 22908
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.490 29.513 19.919 (index)
 + source center of mass = 87.401 145.646 168.991 (index)
 + source-target CM = 0.393 1.139 -3.985 (xyz)
 + center of mass shifts = 0.393 1.139 -3.985
++ shift param auto-range: -69.1..69.9 -68.4..70.7 -50.2..42.2
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.606766 .. 10.393234
 + Range param#2 [y-shift] = -8.860779 .. 11.139221
 + Range param#3 [z-shift] = -13.985321 .. 6.014679
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.606766 .. 40.393234
 + Range param#2 [y-shift] = -38.860779 .. 41.139221
 + Range param#3 [z-shift] = -43.985321 .. 36.014679
 + 12 free parameters
++ Normalized convergence radius = 0.000489
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1228832 [out of 12830400] voxels
 + base mask has 32208 [out of 151552] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=82 usiz=187
 + - copying weight image
 + - using 22908 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 19540 total points stored in 185 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#o*[#2=-0.00514423] *-o.o*[#19=-0.0162935] *+*[#28=-0.0164234] *-+--*[#60=-0.0428747] *-o-oo--o+.--.-+$o
 + - best 45 costs found:
    0 v=-0.042875: -12.94 -12.19   9.35 -15.00 -15.00 -15.00  [grid]
    1 v=-0.034470: -19.10  17.81  -6.59 -30.54  19.59  20.03  [rand]
    2 v=-0.032749: -12.94 -12.19   9.35 -15.00 -30.00  15.00  [grid]
    3 v=-0.031494:  13.73 -25.53  22.68  30.00 -30.00 -30.00  [grid]
    4 v=-0.031130: -12.94 -25.53   9.35 -15.00 -30.00 -15.00  [grid]
    5 v=-0.030048: -15.82 -12.97  31.15 -15.74 -34.09  -7.78  [rand]
    6 v=-0.028075: -12.94  14.47  22.68 -30.00 -30.00 -30.00  [grid]
    7 v=-0.027961: -15.59  20.63   1.74 -20.53   3.14  10.08  [rand]
    8 v=-0.027311:  -4.56  12.32  19.25 -35.24 -13.60  30.23  [rand]
    9 v=-0.026991: -26.27 -12.19  22.68  15.00 -15.00  30.00  [grid]
   10 v=-0.026414: -22.46  24.71   6.43  -5.91  29.74  29.45  [rand]
   11 v=-0.025672: -19.10  17.81  -1.38 -30.54  19.59  20.03  [rand]
   12 v=-0.025257:  -4.56  12.32  19.25 -35.24  13.60  30.23  [rand]
   13 v=-0.025109:  34.72 -15.45   4.62  16.34  -8.64 -40.54  [rand]
   14 v=-0.025097: -13.81  10.59   0.85 -15.99  13.53  29.93  [rand]
   15 v=-0.024604:  13.73  27.81 -30.65 -15.00 -30.00  30.00  [grid]
   16 v=-0.024570: -13.64 -14.58  10.68 -24.25 -37.55   4.41  [rand]
   17 v=-0.024249: -12.94 -12.19   9.35 -15.00 -15.00  30.00  [grid]
   18 v=-0.024233: -33.93  17.72 -12.59 -16.34   8.64  40.54  [rand]
   19 v=-0.024068: -12.94 -12.19  22.68 -30.00 -15.00  30.00  [grid]
   20 v=-0.023881: -22.07 -28.01  26.04  27.43  11.56  19.13  [rand]
   21 v=-0.023424:  32.23  12.93  -1.24  23.31   3.26 -40.47  [rand]
   22 v=-0.022896: -21.93  30.77   3.01  -8.73  38.75  33.73  [rand]
   23 v=-0.022589: -24.57 -27.91  31.46  17.69 -14.58  34.92  [rand]
   24 v=-0.022553:  -8.25 -19.29  13.49 -25.20 -18.50 -13.54  [rand]
   25 v=-0.022513:  27.06  27.81 -30.65  15.00 -15.00  30.00  [grid]
   26 v=-0.022506:  10.22  25.90 -15.37   3.10  34.36   2.55  [rand]
   27 v=-0.022430: -26.27 -12.19  22.68  15.00 -15.00  15.00  [grid]
   28 v=-0.022248: -21.93  30.77 -10.98  -8.73  38.75  33.73  [rand]
   29 v=-0.022178:  35.26 -29.41  11.79 -11.68 -29.04 -39.38  [rand]
   30 v=-0.022120:  34.72 -15.45   4.62  16.34   8.64 -40.54  [rand]
   31 v=-0.022099: -12.94 -25.53   9.35 -30.00 -30.00  15.00  [grid]
   32 v=-0.021793: -15.59  20.63   1.74 -20.53   3.14 -10.08  [rand]
   33 v=-0.021767: -12.94 -25.53  22.68 -30.00 -30.00  30.00  [grid]
   34 v=-0.021296:  34.72  17.72   4.62  16.34   8.64 -40.54  [rand]
   35 v=-0.021064: -12.94  14.47  22.68 -15.00 -15.00  15.00  [grid]
   36 v=-0.021058: -12.94 -25.53  22.68 -30.00 -15.00  30.00  [grid]
   37 v=-0.020865: -12.94  27.81 -30.65  15.00 -30.00 -30.00  [grid]
   38 v=-0.020711: -12.94  27.81 -30.65  30.00 -30.00 -30.00  [grid]
   39 v=-0.020674:  13.73  27.81 -30.65 -30.00 -30.00  30.00  [grid]
   40 v=-0.020593: -26.27 -12.19  22.68  30.00 -15.00  30.00  [grid]
   41 v=-0.020593:  32.88 -13.55   7.82  11.16  -9.40 -34.39  [rand]
   42 v=-0.020533:  19.13  37.54  29.07 -24.90  -4.74 -17.23  [rand]
   43 v=-0.020427: -15.75  10.60  20.36 -20.99 -15.73  16.09  [rand]
   44 v=-0.020264:  13.73 -25.53  22.68  30.00 -15.00 -30.00  [grid]
*[#8011=-0.0440361] *[#8013=-0.0472021] *[#8014=-0.0516306] *[#8015=-0.054538] *[#8016=-0.0553446] *[#8017=-0.0577476] *[#8019=-0.0583648] *[#8026=-0.0598894] *[#8029=-0.0605994] *[#8034=-0.0606628] *[#8036=-0.0608241] *[#8037=-0.0610233] *[#8039=-0.0615373] *[#8278=-0.0616674] *[#8281=-0.0619297] *[#8284=-0.0631484] *[#8285=-0.0633944] *[#8286=-0.0635919] *[#8289=-0.0639358] *[#8291=-0.0648101] *[#8292=-0.0657798] *[#8295=-0.0668694] *[#8296=-0.0669685] *[#8298=-0.0680208] *[#8301=-0.068794] *[#8901=-0.0705843] *[#8902=-0.0742197] *[#8903=-0.0760581] *[#8904=-0.0766844] *[#8909=-0.078044] *[#8910=-0.0792999] *[#8912=-0.0817748] *[#8913=-0.0833449] *[#8914=-0.0857776] *[#8915=-0.0939998] *[#8917=-0.0948463] *[#8918=-0.100287] *[#8919=-0.101692] *[#8922=-0.107354] *[#8924=-0.107487] *[#8926=-0.11035] *[#8927=-0.110892]  + - costs of the above after a little optimization:
    0 v=-0.061537: -11.03 -10.65  10.94 -14.03 -18.83 -15.31  [grid]
    1 v=-0.036788: -19.78  17.85  -6.66 -30.89  19.37  20.08  [rand]
    2 v=-0.060423: -12.63 -17.12  10.32 -11.47 -29.90  13.62  [grid]
    3 v=-0.041690:  13.26 -26.40  23.78  24.79 -30.39 -31.48  [grid]
    4 v=-0.053422:  -9.28 -26.36   8.73 -15.12 -31.83 -12.13  [grid]
    5 v=-0.043984: -16.77 -13.29  32.31 -16.09 -34.63  -3.12  [rand]
    6 v=-0.032984: -12.78  10.44  22.92 -30.25 -30.61 -29.81  [grid]
    7 v=-0.068794: -12.45  16.12   1.72 -17.39   8.65  12.44  [rand]
    8 v=-0.034006:  -6.09  12.00  19.89 -34.32  -7.84  31.09  [rand]
    9 v=-0.041961: -24.30 -11.83  21.85  21.65 -13.09  32.92  [grid]
   10 v=-0.031433: -21.91  24.81   6.12  -2.06  28.66  29.60  [rand]
   11 v=-0.053061: -14.09  14.01   1.09 -31.48  13.13  19.52  [rand]
   12 v=-0.027951:  -3.72  12.50  19.63 -36.75  12.38  29.83  [rand]
   13 v=-0.041568:  36.62 -12.89   4.90  12.05  -0.59 -38.16  [rand]
   14 v=-0.039082:  -8.48  11.19   1.68 -14.28  14.06  28.51  [rand]
   15 v=-0.028986:  13.28  27.34 -33.15 -13.16 -32.76  36.01  [grid]
   16 v=-0.044583: -10.14 -16.58  11.01 -22.55 -35.68   3.35  [rand]
   17 v=-0.038029: -11.78 -12.48   3.79  -9.76 -12.48  28.83  [grid]
   18 v=-0.048186: -33.85  17.58 -12.60 -14.96  14.43  44.93  [rand]
   19 v=-0.035826: -14.28 -18.18  21.93 -30.79 -14.85  34.65  [grid]
   20 v=-0.027148: -22.18 -28.32  25.88  27.58  16.02  19.24  [rand]
   21 v=-0.027960:  31.88   9.16  -1.44  23.34   2.96 -40.78  [rand]
   22 v=-0.027865: -22.46  30.69   3.02  -9.12  39.20  38.56  [rand]
   23 v=-0.029684: -21.45 -27.13  31.31  16.85 -14.51  35.99  [rand]
  *24 v=-0.110892:  -5.77  -9.83  10.66  -8.28 -18.42  -3.34  [rand]
   25 v=-0.031672:  24.97  28.63 -32.41  14.08  -8.04  27.88  [grid]
   26 v=-0.031066:   9.74  19.99 -14.27   4.40  34.48   3.17  [rand]
   27 v=-0.032346: -26.21 -10.69  26.70  15.79 -15.95  16.11  [grid]
   28 v=-0.031848: -22.77  35.33 -11.43  -8.62  38.45  34.43  [rand]
   29 v=-0.034168:  37.15 -28.85  13.00  -7.90 -28.88 -29.22  [rand]
   30 v=-0.038857:  34.76 -11.78   3.42  12.88   7.01 -42.08  [rand]
   31 v=-0.038782: -14.25 -20.43   6.94 -32.77 -33.82  14.76  [grid]
   32 v=-0.028550: -15.42  24.88   1.36 -19.37   3.34 -10.05  [rand]
   33 v=-0.041827: -15.27 -25.60  19.30 -24.42 -26.20  39.49  [grid]
   34 v=-0.046350:  35.04  12.76  -2.00  11.54  13.73 -43.25  [rand]
   35 v=-0.039320: -12.73   9.76  22.31 -12.22 -18.93  21.37  [grid]
   36 v=-0.034224: -13.14 -15.45  23.27 -33.25 -11.44  35.89  [grid]
   37 v=-0.031007: -12.83  27.89 -31.24  19.25 -31.49 -31.51  [grid]
   38 v=-0.027257:  -9.68  28.10 -31.11  28.82 -30.54 -29.96  [grid]
   39 v=-0.028847:  13.10  27.11 -30.28 -17.12 -31.57  30.88  [grid]
   40 v=-0.049149: -24.10 -17.66  19.30  27.41 -14.44  38.65  [grid]
   41 v=-0.049642:  37.68  -8.06   7.17   6.03  -2.07 -34.82  [rand]
   42 v=-0.023083:  18.74  38.02  28.93 -24.47  -0.23 -17.73  [rand]
   43 v=-0.032423: -16.14  10.43  20.06 -16.61 -16.04  16.28  [rand]
   44 v=-0.028565:  14.04 -25.99  23.87  35.65 -14.76 -29.02  [grid]
 + - save #24 for twobest
 + - save # 7 for twobest
 + - save # 0 for twobest
 + - save # 2 for twobest
 + - save # 4 for twobest
 + - save #11 for twobest
 + - save #41 for twobest
 + - save #40 for twobest
 + - save #18 for twobest
 + - save #34 for twobest
 + - save #16 for twobest
 + - save # 5 for twobest
 + - save # 9 for twobest
 + - save #33 for twobest
 + - save # 3 for twobest
 + - save #13 for twobest
 + - save #35 for twobest
 + - save #14 for twobest
 + - save #30 for twobest
 + - save #31 for twobest
 + - save #17 for twobest
 + - save # 1 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=82 usiz=187
 + - retaining old weight image
 + - using 22908 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 19402 total points stored in 196 'RHDD(13.7332)' bloks
*[#9648=-0.1114] *[#9649=-0.111638] *[#9650=-0.111851] *[#9652=-0.112005] *[#9653=-0.112037] *[#9657=-0.112118] *[#9658=-0.11212] *[#9659=-0.112473] *[#9660=-0.113057] *[#9661=-0.11364] *[#9662=-0.114163] *[#9663=-0.114389] *[#9666=-0.114725] *[#9667=-0.115049] *[#9670=-0.115082] *[#9671=-0.115089] *[#9674=-0.115583] *[#9675=-0.115662] *[#9678=-0.115901] *[#9679=-0.11609] *[#9680=-0.116515] *[#9685=-0.116928] *[#9686=-0.117329] *[#9687=-0.117506] *[#9688=-0.117612] *[#9691=-0.117651] *[#9692=-0.118187] *[#9693=-0.1188] *[#9694=-0.118999] *[#9697=-0.119014] *[#9699=-0.119169] *[#9702=-0.119799] *[#9703=-0.119842] *[#9704=-0.120096] 
 + - param set #1 has cost=-0.120096
 + -- Parameters = -5.4028 -6.6772 9.1965 -6.4206 -15.1490 -0.3085 1.0111 1.0131 0.9876 0.0163 0.0014 0.0027
 + - param set #2 has cost=-0.076488
 + -- Parameters = -10.3088 9.4254 1.7303 -14.3843 8.3437 9.6825 0.9807 0.9882 1.0337 -0.0041 0.0011 0.0074
 + - param set #3 has cost=-0.095410
 + -- Parameters = -7.7035 -10.2223 9.9701 -10.6921 -18.6513 -2.1543 1.0283 0.9816 0.9898 -0.0041 0.0013 -0.0126
 + - param set #4 has cost=-0.070672
 + -- Parameters = -11.2310 -15.1559 13.6554 -11.8280 -29.5960 5.7521 1.0025 1.0217 0.9789 -0.0093 0.0247 0.0062
 + - param set #5 has cost=-0.057282
 + -- Parameters = -10.0053 -24.3944 9.4742 -13.3298 -34.4416 -10.4488 1.0070 1.0021 1.0039 0.0033 0.0055 0.0222
 + - param set #6 has cost=-0.043322
 + -- Parameters = -14.9937 15.2762 0.5436 -31.4424 13.8719 17.7163 1.0013 1.0074 1.0052 0.0012 -0.0015 0.0099
 + - param set #7 has cost=-0.037218
 + -- Parameters = 36.6350 -8.0158 7.9323 3.8621 1.4343 -33.8069 1.0005 1.0006 1.0001 0.0000 0.0001 0.0004
 + - param set #8 has cost=-0.032691
 + -- Parameters = -24.1408 -18.1495 19.7149 23.8843 -14.7653 38.3653 0.9984 1.0005 0.9994 -0.0002 0.0002 -0.0003
 + - param set #9 has cost=-0.044797
 + -- Parameters = -33.4651 19.9485 -11.1451 -14.9895 14.7429 44.0190 0.9996 0.9984 1.0009 0.0000 0.0013 -0.0017
 + - param set #10 has cost=-0.038656
 + -- Parameters = 35.9467 12.2724 -1.6249 8.6107 13.7338 -43.1828 0.9986 0.9976 0.9986 -0.0026 -0.0002 -0.0016
 + - param set #11 has cost=-0.066457
 + -- Parameters = -9.8999 -18.1130 12.6782 -11.9605 -31.2010 5.7873 1.0200 1.0038 1.0006 0.0187 0.0069 0.0100
*[#10534=-0.279022] *[#10548=-0.282529] *[#10550=-0.332517] *[#10557=-0.373993] *[#10558=-0.425255] *[#10565=-0.445692] *[#10579=-0.452808] *[#10582=-0.45843] *[#10584=-0.462087] *[#10585=-0.473616] *[#10586=-0.480328] *[#10587=-0.483022] *[#10588=-0.484374] *[#10589=-0.490209] *[#10592=-0.491112] *[#10594=-0.493707] *[#10595=-0.495446] *[#10597=-0.498096] *[#10598=-0.49951] *[#10599=-0.501566] *[#10600=-0.502618] *[#10602=-0.503608] *[#10605=-0.504878] *[#10608=-0.505286] *[#10609=-0.506308] *[#10610=-0.506381] *[#10614=-0.506436] *[#10615=-0.506708] *[#10616=-0.507183] *[#10619=-0.507665] *[#10620=-0.50976] *[#10621=-0.510825] *[#10622=-0.511608] *[#10624=-0.514296] *[#10629=-0.51669] 
 + - param set #12 has cost=-0.516690
 + -- Parameters = -0.2699 -0.6354 0.7520 -0.1659 -0.3211 -0.3475 1.0069 0.9792 0.9909 -0.0012 -0.0004 -0.0012
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.165 
 + --- dist(#3,#1) = 0.204 
 + --- dist(#4,#1) = 0.158 
 + --- dist(#5,#1) = 0.325 
 + --- dist(#6,#1) = 0.343 
 + --- dist(#7,#1) = 0.379 
 + --- dist(#8,#1) = 0.493 
 + --- dist(#9,#1) = 0.348 
 + --- dist(#10,#1) = 0.476 
 + --- dist(#11,#1) = 0.461 
 + --- dist(#12,#1) = 0.43 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=82 usiz=187
 + - retaining old weight image
 + - using 22908 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 19501 total points stored in 202 'RHDD(13.5933)' bloks
*[#10631=-0.54411] *[#10639=-0.576404] *[#10650=-0.582061] *[#10655=-0.585529] *[#10658=-0.586121] *[#10673=-0.587387] *[#10678=-0.588583] *[#10679=-0.589494] *[#10680=-0.589639] 
 + - param set #1 has cost=-0.589639
 + -- Parameters = -0.2680 -0.6474 0.7623 -0.1138 -0.3364 -0.2446 1.0010 0.9973 0.9874 0.0040 0.0039 -0.0016
 + - param set #2 has cost=-0.136483
 + -- Parameters = -3.8111 -3.3723 5.3619 -4.7365 -11.4304 1.8372 0.9867 1.0512 0.9519 0.0189 0.0226 -0.0262
 + - param set #3 has cost=-0.101872
 + -- Parameters = -5.2497 -5.8310 8.7082 -6.2826 -13.9406 1.2885 1.0155 0.9938 0.9763 -0.0008 -0.0179 -0.0156
 + - param set #4 has cost=-0.075914
 + -- Parameters = -10.1072 9.4818 2.3586 -13.8768 7.3174 9.8526 0.9819 0.9914 1.0318 0.0124 -0.0008 0.0080
 + - param set #5 has cost=-0.069698
 + -- Parameters = -10.6007 -14.4364 14.9396 -11.5156 -29.5644 4.4399 0.9911 1.0237 0.9665 0.0023 0.0318 0.0044
 + - param set #6 has cost=-0.075814
 + -- Parameters = -10.2875 -18.4091 14.1628 -11.6673 -32.5950 3.2785 1.0022 0.9776 0.9131 0.0003 0.0323 -0.0288
 + - param set #7 has cost=-0.059291
 + -- Parameters = -9.6771 -22.7759 8.9592 -12.2112 -33.8262 -7.1810 1.0609 0.9955 0.9745 0.0316 0.0272 -0.0205
 + - param set #8 has cost=-0.041033
 + -- Parameters = -33.6733 19.9800 -11.1422 -15.1460 14.7616 43.1619 0.9999 0.9986 1.0014 -0.0000 0.0006 -0.0013
 + - param set #9 has cost=-0.041624
 + -- Parameters = -14.8428 15.3743 0.1624 -31.4094 13.5021 17.1568 0.9627 0.9966 0.9960 -0.0007 -0.0096 0.0032
 + - param set #10 has cost=-0.031429
 + -- Parameters = 35.9213 12.3243 -1.7322 8.6126 13.7743 -43.1607 0.9993 1.0014 0.9983 0.0050 -0.0028 -0.0012
 + - param set #11 has cost=-0.030777
 + -- Parameters = 36.1457 -8.2071 7.9139 3.8441 1.7943 -33.4605 1.0007 0.9997 0.9991 0.0001 -0.0011 0.0078
 + - param set #12 has cost=-0.025465
 + -- Parameters = -24.3252 -17.9406 20.3622 23.8664 -14.9747 38.4487 0.9971 0.9921 1.0025 0.0036 0.0036 0.0021
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.147 
 + --- dist(#3,#1) = 0.151 
 + --- dist(#4,#1) = 0.153 
 + --- dist(#5,#1) = 0.358 
 + --- dist(#6,#1) = 0.325 
 + --- dist(#7,#1) = 0.372 
 + --- dist(#8,#1) = 0.348 
 + --- dist(#9,#1) = 0.482 
 + --- dist(#10,#1) = 0.477 
 + --- dist(#11,#1) = 0.455 
 + --- dist(#12,#1) = 0.43 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=82 usiz=187
 + - retaining old weight image
 + - using 22908 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 19834 total points stored in 212 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.557182
 + -- Parameters = -0.2680 -0.6171 0.7660 -0.0623 -0.2074 -0.1801 1.0065 1.0011 0.9933 0.0070 0.0059 0.0058
 + - param set #2 has cost=-0.459420
 + -- Parameters = 0.2402 0.9019 0.8177 0.6047 -3.6958 1.8711 1.0203 1.0093 0.9739 0.0280 -0.0351 -0.0641
 + - param set #3 has cost=-0.287480
 + -- Parameters = -1.5746 1.1554 -1.9731 -2.7776 -3.6387 1.4113 1.0065 1.0248 1.0349 -0.0386 -0.0268 -0.0953
 + - param set #4 has cost=-0.075186
 + -- Parameters = -8.3019 8.0206 2.2094 -13.4942 6.6907 11.2117 0.9808 0.9979 1.0273 0.0395 -0.0086 0.0041
 + - param set #5 has cost=-0.063111
 + -- Parameters = -10.3337 -18.8169 14.3173 -12.1487 -33.3250 2.7006 0.9975 0.9773 0.9093 -0.0013 0.0382 -0.0294
 + - param set #6 has cost=-0.059532
 + -- Parameters = -10.5436 -14.6104 15.0754 -11.5662 -29.9367 4.5520 0.9789 1.0238 0.9571 0.0017 0.0336 0.0055
 + - param set #7 has cost=-0.059464
 + -- Parameters = -9.1689 -21.8974 9.6007 -11.7398 -33.5394 -6.7985 1.0518 1.0126 0.9511 0.0209 0.0327 -0.0150
 + - param set #8 has cost=-0.040147
 + -- Parameters = -15.1590 15.1775 -0.0096 -31.2804 13.7383 16.5798 0.9640 1.0020 0.9776 0.0013 -0.0083 0.0048
 + - param set #9 has cost=-0.032071
 + -- Parameters = -33.7061 20.2649 -10.9144 -15.2740 14.3374 43.2811 1.0001 0.9976 1.0093 0.0004 0.0007 -0.0012
 + - param set #10 has cost=-0.026096
 + -- Parameters = 35.9483 12.2035 -1.9733 8.4141 13.6981 -43.0624 0.9999 1.0080 0.9987 0.0051 -0.0028 -0.0013
 + - param set #11 has cost=-0.027309
 + -- Parameters = 36.1222 -8.2906 7.9559 3.8659 2.0499 -33.3642 1.0003 0.9998 0.9998 0.0001 -0.0010 0.0120
 + - param set #12 has cost=-0.021818
 + -- Parameters = -24.3571 -17.9997 20.3735 23.9246 -14.7142 38.6432 0.9956 0.9937 1.0029 0.0093 0.0041 0.0037
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.314 
 + --- dist(#3,#1) = 0.455 
 + --- dist(#4,#1) = 0.149 
 + --- dist(#5,#1) = 0.368 
 + --- dist(#6,#1) = 0.33 
 + --- dist(#7,#1) = 0.37 
 + --- dist(#8,#1) = 0.347 
 + --- dist(#9,#1) = 0.483 
 + --- dist(#10,#1) = 0.455 
 + --- dist(#11,#1) = 0.476 
 + --- dist(#12,#1) = 0.431 
 + - Total coarse refinement net CPU time = 0.0 s; 3129 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=82 usiz=187
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 19920 total points stored in 214 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.522430 *
 + -- Parameters = -0.2680 -0.6171 0.7660 -0.0623 -0.2074 -0.1801 1.0065 1.0011 0.9933 0.0070 0.0059 0.0058
 + - cost(#2)=-0.427176  
 + -- Parameters = 0.2402 0.9019 0.8177 0.6047 -3.6958 1.8711 1.0203 1.0093 0.9739 0.0280 -0.0351 -0.0641
 + - cost(#3)=-0.268312  
 + -- Parameters = -1.5746 1.1554 -1.9731 -2.7776 -3.6387 1.4113 1.0065 1.0248 1.0349 -0.0386 -0.0268 -0.0953
 + - cost(#4)=-0.066355  
 + -- Parameters = -8.3019 8.0206 2.2094 -13.4942 6.6907 11.2117 0.9808 0.9979 1.0273 0.0395 -0.0086 0.0041
 + - cost(#5)=-0.054724  
 + -- Parameters = -10.3337 -18.8169 14.3173 -12.1487 -33.3250 2.7006 0.9975 0.9773 0.9093 -0.0013 0.0382 -0.0294
 + - cost(#6)=-0.050893  
 + -- Parameters = -10.5436 -14.6104 15.0754 -11.5662 -29.9367 4.5520 0.9789 1.0238 0.9571 0.0017 0.0336 0.0055
 + - cost(#7)=-0.057086  
 + -- Parameters = -9.1689 -21.8974 9.6007 -11.7398 -33.5394 -6.7985 1.0518 1.0126 0.9511 0.0209 0.0327 -0.0150
 + - cost(#8)=-0.034525  
 + -- Parameters = -15.1590 15.1775 -0.0096 -31.2804 13.7383 16.5798 0.9640 1.0020 0.9776 0.0013 -0.0083 0.0048
 + - cost(#9)=-0.027007  
 + -- Parameters = -33.7061 20.2649 -10.9144 -15.2740 14.3374 43.2811 1.0001 0.9976 1.0093 0.0004 0.0007 -0.0012
 + - cost(#10)=-0.023474  
 + -- Parameters = 36.1222 -8.2906 7.9559 3.8659 2.0499 -33.3642 1.0003 0.9998 0.9998 0.0001 -0.0010 0.0120
 + - cost(#11)=-0.022809  
 + -- Parameters = 35.9483 12.2035 -1.9733 8.4141 13.6981 -43.0624 0.9999 1.0080 0.9987 0.0051 -0.0028 -0.0013
 + - cost(#12)=-0.021606  
 + -- Parameters = -24.3571 -17.9997 20.3735 23.9246 -14.7142 38.6432 0.9956 0.9937 1.0029 0.0093 0.0041 0.0037
 + - cost(#13)=-0.028414  
 + -- Parameters = 0.3932 1.1392 -3.9853 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.523149 *
 + -- Parameters = -0.2030 -0.6242 0.7484 -0.0999 -0.1860 -0.1720 1.0058 1.0024 0.9933 0.0070 0.0058 0.0058
 + - cost(#2)=-0.487034  
 + -- Parameters = 0.1206 0.5929 0.9948 -0.0636 -2.9469 1.0403 1.0055 1.0132 0.9786 0.0067 -0.0236 -0.0428
 + - cost(#3)=-0.432777  
 + -- Parameters = 0.0035 0.4586 0.7084 -0.6345 -3.6842 0.7659 1.0029 0.9930 0.9967 -0.0256 -0.0166 -0.0679
 + - cost(#4)=-0.067964  
 + -- Parameters = -8.3373 8.0692 2.6571 -13.3700 6.5923 10.9514 0.9799 0.9955 1.0270 0.0410 -0.0146 0.0041
 + - cost(#5)=-0.057208  
 + -- Parameters = -9.8690 -18.1435 13.8353 -12.3587 -33.6396 2.2929 1.0050 0.9803 0.8981 0.0099 0.0436 -0.0442
 + - cost(#6)=-0.052347  
 + -- Parameters = -10.9337 -14.9611 15.4229 -11.8929 -30.2850 4.3188 0.9783 1.0244 0.9491 0.0009 0.0341 0.0061
 + - cost(#7)=-0.058137  
 + -- Parameters = -9.1186 -21.8151 9.5747 -11.7358 -33.4844 -6.6200 1.0578 1.0225 0.9495 0.0197 0.0292 -0.0099
 + - cost(#8)=-0.035623  
 + -- Parameters = -14.8578 15.0417 0.1056 -30.8497 14.3120 16.4986 0.9639 1.0163 0.9732 0.0005 -0.0073 0.0062
 + - cost(#9)=-0.028163  
 + -- Parameters = -33.6826 20.3778 -10.8080 -15.4856 14.3091 44.6718 1.0000 0.9975 1.0092 0.0001 0.0009 -0.0014
 + - cost(#10)=-0.023885  
 + -- Parameters = 36.1287 -8.3765 7.9609 3.8934 2.0524 -33.3669 1.0004 0.9996 0.9996 -0.0001 -0.0007 0.0156
 + - cost(#11)=-0.023377  
 + -- Parameters = 36.1569 12.2774 -2.0814 8.3847 13.6522 -42.8028 0.9975 1.0099 1.0069 0.0061 -0.0028 -0.0010
 + - cost(#12)=-0.023821  
 + -- Parameters = -24.4776 -18.3926 20.7733 24.0189 -14.6869 38.9550 0.9946 0.9913 1.0047 0.0110 0.0042 0.0083
 + - cost(#13)=-0.522882  
 + -- Parameters = -0.1145 -0.4975 0.6062 -0.1449 -0.5211 0.1731 1.0042 1.0015 1.0001 0.0057 0.0000 -0.0006
 + - case #1 is now the best
 + - Initial  cost = -0.523149
 + - Initial fine Parameters = -0.2030 -0.6242 0.7484 -0.0999 -0.1860 -0.1720 1.0058 1.0024 0.9933 0.0070 0.0058 0.0058
 + - Finalish cost = -0.524551 ; 244 funcs
 + - Final    cost = -0.524579 ; 138 funcs
 + Final fine fit Parameters:
       x-shift=-0.0623   y-shift=-0.6620   z-shift= 0.7079
       z-angle=-0.1063   x-angle=-0.0960   y-angle= 0.2568
       x-scale= 1.0048   y-scale= 1.0019   z-scale= 0.9954
     y/x-shear= 0.0076 z/x-shear=-0.0024 z/y-shear= 0.0074
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -0.0623 -0.6620 0.7079 -0.1063 -0.0960 0.2568 1.0048 1.0019 0.9954 0.0076 -0.0024 0.0074
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 18.0
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 3.100025 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0096 -1.0009 0.0521 237.2107 0.0015 0.0451 0.9941 96.4111 -1.0048 -0.0019 0.0045 201.3847
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.0
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 16.7 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2869.180100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 94.3755 49.065   ITER = 8/137
94.3755

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 6s 15ms]
lev=0 0..171 0..213 0..166: [first cost=-0.65753] ... done [cost:-0.65753==>-0.72244]
lev=1 patch=129x161x125 [clock= 13m 47s 922ms]........:[cost=-0.74883]:........ done [cost:-0.72244==>-0.75160 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 21m 17s 501ms]......................... done [cost:-0.75160==>-0.83568 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 27m 40s 102ms]........... done [cost:-0.83568==>-0.89009 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 32m 33s 618ms]........... done [cost:-0.89009==>-0.93652 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 36m 27s 570ms]................. done [cost:-0.93652==>-1.01157 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 40m 0s 804ms]................ done [cost:-1.01157==>-1.04508 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 43m 30s 830ms]............................. done [cost:-1.04508==>-1.13798 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 47m 14s 672ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb1208/tb1208.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.6 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb1208.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 3.100025 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb1208.r01.tshift+orig.BRIK is 3.100025 degrees from plumb.
++ Reading input dataset ./pb01.tb1208.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 24421 voxels
 + 4221 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.511  pitch=-0.130  yaw=-0.166  dS=-0.056  dL=-0.416  dP=-0.072
++ Mean: roll=-0.233  pitch=-0.080  yaw=-0.087  dS=+0.072  dL=-0.259  dP=+0.048
++ Max : roll=+0.018  pitch=+0.037  yaw=+0.039  dS=+0.211  dL=+0.064  dP=+0.174
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.16(0.16) 0.11(0.09) 0.09(0.03) 0.06(0.05) 0.03(0.04) 0.08(0.05) 0.08(0.02) 0.09(0.03) 0.08(0.03) 0.06(0.05) 0.08(0.04) 0.08(0.03) 0.09(0.02) 0.10(0.03) 0.13(0.03) 0.16(0.03) 0.15(0.02) 0.16(0.02) 0.17(0.01) 0.19(0.02) 0.21(0.02) 0.24(0.04) 0.28(0.05) 0.32(0.04) 0.33(0.02) 0.33(0.03) 0.31(0.06) 0.32(0.06) 0.37(0.08) 0.39(0.03) 0.42(0.04) 0.45(0.04) 0.46(0.03) 0.47(0.03) 0.49(0.03) 0.49(0.03) 0.50(0.03) 0.49(0.01) 0.48(0.02) 0.49(0.03) 0.50(0.01) 0.50(0.02) 0.49(0.02) 0.50(0.02) 0.51(0.03) 0.51(0.02) 0.50(0.01) 0.52(0.03) 0.55(0.03) 0.55(0.01) 0.54(0.01) 0.56(0.02) 0.55(0.02) 0.55(0.01) 0.56(0.02) 0.57(0.03) 0.59(0.03) 0.59(0.02) 0.59(0.02) 0.59(0.02) 0.60(0.02) 0.59(0.03) 0.60(0.02) 0.61(0.03) 0.63(0.04) 0.67(0.07) 0.67(0.05) 0.66(0.04) 0.67(0.03) 0.70(0.03) 0.70(0.02) 0.70(0.03) 0.71(0.01) 0.72(0.02) 0.74(0.05) 0.74(0.00) 0.74(0.02) 0.74(0.03) 0.75(0.01) 0.75(0.02) 0.75(0.02) 0.75(0.02) 0.76(0.03) 0.77(0.02) 0.77(0.03) 0.76(0.02) 0.76(0.04) 0.78(0.03) 0.80(0.03) 0.79(0.02) 0.79(0.03) 0.80(0.02) 0.80(0.03) 0.79(0.02) 0.78(0.01) 0.76(0.02) 0.77(0.03) 0.78(0.01) 0.78(0.02) 0.79(0.02) 0.79(0.01) 0.78(0.03) 0.79(0.03) 0.80(0.02) 0.83(0.05) 0.82(0.04) 0.80(0.02) 0.84(0.04) 0.87(0.03) 0.86(0.02) 0.85(0.02) 0.86(0.03) 0.89(0.03) 0.88(0.02) 0.87(0.02) 0.88(0.03) 0.88(0.01) 0.89(0.03) 0.91(0.03) 0.92(0.04) 0.92(0.03) 0.91(0.02) 0.92(0.01) 0.91(0.02) 0.91(0.02) 0.91(0.02) 0.92(0.02) 0.90(0.02) 0.86(0.06) 0.87(0.04) 0.88(0.02) 0.90(0.03) 0.92(0.03) 0.94(0.02) 0.94(0.03) 0.95(0.02) 0.96(0.02) 0.98(0.03) 1.08(0.23) 1.00(0.22) 0.93(0.22) 0.96(0.25) 1.00(0.15) 1.09(0.10) 1.14(0.06) 1.18(0.06) 1.20(0.02) 1.17(0.05) 1.19(0.04)
++ Max displacement in automask = 1.20 (mm) at sub-brick 147
++ Max delta displ  in automask = 0.25 (mm) at sub-brick 142
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb1208.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb1208.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb1208.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb1208.r01.tshift+orig.BRIK is 3.100025 degrees from plumb.
++ Source dataset: ./pb01.tb1208.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 3.100025 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.3
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb1208.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 3.100025 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb1208.r02.tshift+orig.BRIK is 3.100025 degrees from plumb.
++ Reading input dataset ./pb01.tb1208.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 24674 voxels
 + 4310 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.123  pitch=+0.574  yaw=-0.283  dS=-0.266  dL=-0.321  dP=-0.439
++ Mean: roll=-0.044  pitch=+0.614  yaw=-0.209  dS=-0.165  dL=-0.268  dP=-0.361
++ Max : roll=+0.071  pitch=+0.659  yaw=-0.120  dS=-0.052  dL=-0.178  dP=-0.315
++ Max displacements (mm) for each sub-brick:
 1.16(0.00) 1.24(0.08) 1.23(0.04) 1.18(0.11) 1.16(0.04) 1.15(0.04) 1.14(0.09) 1.12(0.03) 1.13(0.04) 1.14(0.03) 1.13(0.04) 1.12(0.03) 1.13(0.03) 1.16(0.04) 1.16(0.03) 1.16(0.03) 1.15(0.04) 1.15(0.02) 1.16(0.04) 1.18(0.03) 1.18(0.01) 1.18(0.05) 1.11(0.11) 1.12(0.02) 1.14(0.03) 1.14(0.02) 1.15(0.05) 1.13(0.02) 1.16(0.03) 1.17(0.04) 1.16(0.02) 1.16(0.03) 1.15(0.03) 1.15(0.02) 1.16(0.01) 1.17(0.03) 1.17(0.03) 1.17(0.01) 1.17(0.02) 1.15(0.02) 1.16(0.03) 1.16(0.01) 1.17(0.03) 1.17(0.06) 1.12(0.12) 1.06(0.09) 1.07(0.03) 1.07(0.02) 1.08(0.03) 1.09(0.02) 1.09(0.04) 1.09(0.02) 1.09(0.04) 1.10(0.02) 1.08(0.03) 1.09(0.03) 1.09(0.03) 1.10(0.03) 1.13(0.04) 1.13(0.03) 1.12(0.04) 1.12(0.02) 1.12(0.01) 1.12(0.04) 1.13(0.02) 1.14(0.03) 1.13(0.03) 1.12(0.03) 1.11(0.03) 1.14(0.03) 1.16(0.03) 1.16(0.02) 1.17(0.02) 1.14(0.04) 1.14(0.01) 1.14(0.02) 1.15(0.02) 1.14(0.01) 1.14(0.00) 1.15(0.02) 1.15(0.02) 1.16(0.02) 1.16(0.03) 1.16(0.03) 1.17(0.03) 1.17(0.02) 1.17(0.02) 1.16(0.02) 1.16(0.02) 1.17(0.02) 1.16(0.01) 1.16(0.01) 1.17(0.02) 1.14(0.04) 1.16(0.02) 1.16(0.04) 1.17(0.02) 1.15(0.03) 1.16(0.01) 1.15(0.02) 1.17(0.02) 1.22(0.05) 1.21(0.02) 1.21(0.03) 1.19(0.03) 1.19(0.02) 1.18(0.04) 1.18(0.02) 1.18(0.02) 1.19(0.02) 1.19(0.02) 1.21(0.03) 1.22(0.04) 1.25(0.05) 1.23(0.04) 1.24(0.05) 1.23(0.03) 1.25(0.02) 1.27(0.02) 1.26(0.03) 1.27(0.02) 1.27(0.02) 1.26(0.03) 1.27(0.02) 1.28(0.03) 1.27(0.02) 1.28(0.02) 1.30(0.03) 1.28(0.03) 1.27(0.02) 1.27(0.02) 1.28(0.02) 1.30(0.03) 1.30(0.02) 1.31(0.02) 1.30(0.02) 1.29(0.01) 1.31(0.02) 1.32(0.02) 1.33(0.03) 1.33(0.01) 1.35(0.08) 1.32(0.04) 1.29(0.04) 1.28(0.04) 1.28(0.03) 1.31(0.04) 1.34(0.05) 1.34(0.04) 1.34(0.03)
++ Max displacement in automask = 1.35 (mm) at sub-brick 141
++ Max delta displ  in automask = 0.12 (mm) at sub-brick 44
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb1208.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb1208.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb1208.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb1208.r02.tshift+orig.BRIK is 3.100025 degrees from plumb.
++ Source dataset: ./pb01.tb1208.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.9
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 3.100025 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb1208.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 3.100025 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb1208.r03.tshift+orig.BRIK is 3.100025 degrees from plumb.
++ Reading input dataset ./pb01.tb1208.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 24635 voxels
 + 4319 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.100  pitch=+0.134  yaw=+0.419  dS=-0.695  dL=+0.028  dP=-0.560
++ Mean: roll=+0.168  pitch=+0.179  yaw=+0.454  dS=-0.585  dL=+0.094  dP=-0.521
++ Max : roll=+0.233  pitch=+0.216  yaw=+0.497  dS=-0.529  dL=+0.201  dP=-0.491
++ Max displacements (mm) for each sub-brick:
 1.36(0.00) 1.39(0.11) 1.39(0.06) 1.40(0.05) 1.37(0.07) 1.35(0.04) 1.34(0.03) 1.34(0.02) 1.35(0.03) 1.36(0.02) 1.36(0.03) 1.37(0.01) 1.37(0.01) 1.35(0.02) 1.35(0.01) 1.36(0.02) 1.35(0.02) 1.35(0.01) 1.34(0.02) 1.32(0.02) 1.32(0.02) 1.31(0.02) 1.32(0.02) 1.33(0.02) 1.30(0.03) 1.29(0.02) 1.31(0.04) 1.30(0.03) 1.30(0.01) 1.30(0.01) 1.29(0.03) 1.28(0.02) 1.29(0.02) 1.30(0.02) 1.31(0.02) 1.28(0.04) 1.27(0.03) 1.28(0.02) 1.30(0.02) 1.29(0.03) 1.28(0.04) 1.27(0.01) 1.28(0.01) 1.30(0.04) 1.30(0.02) 1.29(0.01) 1.29(0.02) 1.29(0.01) 1.28(0.02) 1.29(0.02) 1.29(0.01) 1.29(0.02) 1.28(0.02) 1.27(0.01) 1.27(0.03) 1.28(0.01) 1.27(0.01) 1.29(0.03) 1.31(0.03) 1.29(0.03) 1.28(0.03) 1.28(0.01) 1.30(0.02) 1.30(0.02) 1.31(0.02) 1.33(0.02) 1.33(0.01) 1.34(0.02) 1.31(0.03) 1.30(0.01) 1.33(0.03) 1.34(0.03) 1.35(0.03) 1.35(0.03) 1.31(0.05) 1.31(0.03) 1.34(0.03) 1.34(0.04) 1.34(0.03) 1.32(0.03) 1.31(0.01) 1.34(0.03) 1.34(0.02) 1.34(0.02) 1.34(0.01) 1.32(0.04) 1.33(0.02) 1.34(0.03) 1.34(0.01) 1.35(0.03) 1.35(0.01) 1.37(0.03) 1.37(0.03) 1.36(0.04) 1.36(0.11) 1.36(0.04) 1.36(0.03) 1.32(0.04) 1.31(0.02) 1.33(0.03) 1.34(0.03) 1.33(0.11) 1.32(0.10) 1.31(0.04) 1.31(0.02) 1.32(0.09) 1.27(0.08) 1.27(0.04) 1.26(0.07) 1.26(0.01) 1.25(0.01) 1.25(0.02) 1.24(0.01) 1.25(0.02) 1.27(0.03) 1.27(0.03) 1.26(0.01) 1.28(0.04) 1.27(0.01) 1.27(0.05) 1.25(0.02) 1.25(0.03) 1.28(0.05) 1.30(0.02) 1.28(0.04) 1.26(0.02) 1.26(0.01) 1.27(0.02) 1.28(0.03) 1.29(0.01) 1.28(0.01) 1.27(0.03) 1.28(0.01) 1.28(0.03) 1.28(0.02) 1.27(0.01) 1.26(0.03) 1.29(0.02) 1.30(0.02) 1.29(0.02) 1.28(0.02) 1.29(0.04) 1.27(0.04) 1.27(0.02) 1.27(0.03) 1.25(0.02) 1.28(0.04) 1.27(0.04) 1.27(0.02) 1.25(0.04)
++ Max displacement in automask = 1.40 (mm) at sub-brick 3
++ Max delta displ  in automask = 0.11 (mm) at sub-brick 101
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb1208.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb1208.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb1208.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb1208.r03.tshift+orig.BRIK is 3.100025 degrees from plumb.
++ Source dataset: ./pb01.tb1208.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 3.100025 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.3
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb1208.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb1208.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb1208.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb1208.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb1208.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb1208.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 3.100025 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb1208
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb1208+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb1208+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1121417 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 260000 voxels [61.0%] in weight mask
++ Number of points for matching = 122200
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.132602
   sp   = 0.355835
   mi   = -0.500045
   crM  = 0.0367334
   nmi  = 0.831879
   je   = 2.47427
   hel  = -0.0986967
   crA  = 0.191725
   crU  = 0.196715
   lss  = 0.867398
   lpc  = 0.14424
   lpa  = 0.85576
   lpc+ = 0.280297
   ncd  = 0.998234
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.2
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb1208+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb1208+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 36.0 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb1208.r01.blur pb02.tb1208.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb1208.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb1208.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb1208.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb1208.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb1208.r02.blur pb02.tb1208.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb1208.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb1208.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb1208.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb1208.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb1208.r03.blur pb02.tb1208.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb1208.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb1208.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb1208.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb1208.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb1208.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb1208.r01.blur+orig
++ Forming automask
 + Fixed clip level = 392.680450
 + Used gradual clip level = 341.113159 .. 431.299347
 + Number voxels above clip level = 41096
 + Clustering voxels ...
 + Largest cluster has 40897 voxels
 + Clustering voxels ...
 + Largest cluster has 40815 voxels
 + Filled    30 voxels in small holes; now have 40845 voxels
 + Clustering voxels ...
 + Largest cluster has 40845 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 385430 voxels
 + Mask now has 40845 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 378599 voxels
++ 47676 voxels in the mask [out of 426275: 11.18%]
++ first  17 x-planes are zero [from A]
++ last   13 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last   11 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb1208.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb1208.r02.blur+orig
++ Forming automask
 + Fixed clip level = 392.252228
 + Used gradual clip level = 339.868164 .. 431.862549
 + Number voxels above clip level = 41259
 + Clustering voxels ...
 + Largest cluster has 41011 voxels
 + Clustering voxels ...
 + Largest cluster has 40937 voxels
 + Filled    18 voxels in small holes; now have 40955 voxels
 + Clustering voxels ...
 + Largest cluster has 40955 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 385320 voxels
 + Mask now has 40955 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 378466 voxels
++ 47809 voxels in the mask [out of 426275: 11.22%]
++ first  17 x-planes are zero [from A]
++ last   13 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last   11 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb1208.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb1208.r03.blur+orig
++ Forming automask
 + Fixed clip level = 392.913422
 + Used gradual clip level = 338.656891 .. 433.300201
 + Number voxels above clip level = 41183
 + Clustering voxels ...
 + Largest cluster has 40941 voxels
 + Clustering voxels ...
 + Largest cluster has 40844 voxels
 + Filled    20 voxels in small holes; now have 40864 voxels
 + Clustering voxels ...
 + Largest cluster has 40864 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 385411 voxels
 + Mask now has 40864 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 378562 voxels
++ 47713 voxels in the mask [out of 426275: 11.19%]
++ first  17 x-planes are zero [from A]
++ last   13 x-planes are zero [from P]
++ first  32 y-planes are zero [from I]
++ last   11 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb1208
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 47920 survived, 378355 were zero
++ writing result full_mask.tb1208...
3dresample -master full_mask.tb1208+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb1208
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 44622 survived, 381653 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb1208...
3dABoverlap -no_automask full_mask.tb1208+orig mask_anat.tb1208+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb1208+orig.BRIK  B=./mask_anat.tb1208+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
47920        44622        50529        42013        5907         2609         12.3268      5.8469     0.9169     0.9972     0.8953
3ddot -dodice full_mask.tb1208+orig mask_anat.tb1208+orig
tee out.mask_ae_dice.txt
0.907977	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb1208
total number of censored TRs (simple form) = 0
1deval -a motion_tb1208_censor.1D -b outcount_tb1208_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb1208_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb1208.r01.blur+orig.HEAD pb03.tb1208.r02.blur+orig.HEAD pb03.tb1208.r03.blur+orig.HEAD -censor censor_tb1208_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb1208 -errts errts.tb1208 -bucket stats.tb1208
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb1208.r01.blur+orig.HEAD pb03.tb1208.r02.blur+orig.HEAD pb03.tb1208.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 40897 voxels (out of 426275 = 9.6%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (no censoring)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb1208.r01.blur+orig.HEAD pb03.tb1208.r02.blur+orig.HEAD pb03.tb1208.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb1208_REML -Rvar stats.tb1208_REMLvar \
 -Rfitts fitts.tb1208_REML -Rerrts errts.tb1208_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (450x24):  4.79716  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (450x6):  1.03412  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (450x18):  3.94121  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (450x6):  2.47555  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (450x12):  1.01522  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.7297e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.27 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.875
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.892
++ Job #3: processing voxels 127881 to 170507; elapsed time=5.908
++ Job #4: processing voxels 170508 to 213134; elapsed time=5.927
++ Job #5: processing voxels 213135 to 255761; elapsed time=5.945
++ Job #6: processing voxels 255762 to 298388; elapsed time=5.963
++ Job #7: processing voxels 298389 to 341015; elapsed time=5.988
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.008
++ Job #9: processing voxels 383643 to 426274; elapsed time=6.027
++ Job #0: processing voxels 0 to 42626; elapsed time=6.028
++ voxel loop:0123456789.0123456789.0123456789.0123++ Job #2 finished; elapsed time=33.813
45++ Job #1 finished; elapsed time=34.663
++ Job #7 finished; elapsed time=35.343
6++ Job #8 finished; elapsed time=35.465
++ Job #5 finished; elapsed time=35.744
++ Job #4 finished; elapsed time=35.796
789.0123++ Job #6 finished; elapsed time=38.586
4++ Job #9 finished; elapsed time=38.668
5678++ Job #3 finished; elapsed time=39.743
9.
++ Job #0 waiting for children to finish; elapsed time=39.784
++ Job #0 now finishing up; elapsed time=39.784
++ Smallest FDR q [0 Full_Fstat] = 5.56444e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 1.26024e-13
++ Smallest FDR q [3 uns1_Fstat] = 1.25968e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 5.23563e-14
++ Smallest FDR q [6 uns2_Fstat] = 5.23636e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 4.51352e-14
++ Smallest FDR q [9 uns3_Fstat] = 4.51352e-14
++ Smallest FDR q [11 str1#0_Tstat] = 2.37507e-13
++ Smallest FDR q [12 str1_Fstat] = 2.37502e-13
++ Smallest FDR q [14 str2#0_Tstat] = 1.57694e-13
++ Smallest FDR q [15 str2_Fstat] = 1.57694e-13
++ Smallest FDR q [17 str3#0_Tstat] = 8.74415e-14
++ Smallest FDR q [18 str3_Fstat] = 8.74415e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 9.29897e-15
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 9.29789e-15
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.14908e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.14892e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 0.00255923
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 0.00255942
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.00395461
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.00395383
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 2.52388e-10
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 2.52398e-10
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 0.000331212
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 0.000331173
++ Wrote bucket dataset into ./stats.tb1208+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb1208+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb1208+orig.BRIK
++ Program finished; elapsed time=62.936
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.726       0.791  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.726       0.791  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.726       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.475       0.551  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.475       0.551  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.475       0.551  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb1208.r01.blur+orig.HEAD pb03.tb1208.r02.blur+orig.HEAD pb03.tb1208.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb1208_REML -Rvar stats.tb1208_REMLvar -Rfitts fitts.tb1208_REML -Rerrts errts.tb1208_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 40897 voxels (out of 426275 = 9.6%)
++ -----  matrix condition (450x24):  4.79716  ++ VERY GOOD ++
 + masked off 244873 voxels for being all zero; 181402 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 327 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=23.60
 + X matrix: 46.639% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=450 cols=24; 109*1 cases; total CPU=0.00 Elapsed=23.63
 +  average case bandwidth = 12.53
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=90.89
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=135.26
++ Output dataset ./stats.tb1208_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb1208_REML+orig.BRIK
++ Output dataset ./errts.tb1208_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb1208_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 5.58737e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 5.31211e-10
++ Smallest FDR q [3 uns1_Fstat] = 5.31211e-10
++ Smallest FDR q [5 uns2#0_Tstat] = 1.3395e-12
++ Smallest FDR q [6 uns2_Fstat] = 1.3395e-12
++ Smallest FDR q [8 uns3#0_Tstat] = 1.269e-12
++ Smallest FDR q [9 uns3_Fstat] = 1.269e-12
++ Smallest FDR q [11 str1#0_Tstat] = 6.69989e-08
++ Smallest FDR q [12 str1_Fstat] = 6.69989e-08
++ Smallest FDR q [14 str2#0_Tstat] = 9.74601e-12
++ Smallest FDR q [15 str2_Fstat] = 9.74601e-12
++ Smallest FDR q [17 str3#0_Tstat] = 3.1707e-11
++ Smallest FDR q [18 str3_Fstat] = 3.1707e-11
++ Smallest FDR q [20 unstructured#0_Tstat] = 5.94624e-14
++ Smallest FDR q [21 unstructured_Fstat] = 5.94624e-14
++ Smallest FDR q [23 structured#0_Tstat] = 9.71458e-14
++ Smallest FDR q [24 structured_Fstat] = 9.71458e-14
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.906963 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.906963 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999845 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999845 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.000160735
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.000160735
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.458733 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.458733 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb1208_REML+orig
++ Output dataset ./stats.tb1208_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=160.23
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb1208 pb03.tb1208.r01.blur+orig.HEAD pb03.tb1208.r02.blur+orig.HEAD pb03.tb1208.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 3.3 s
3dTstat -mean -prefix rm.signal.all all_runs.tb1208+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb1208_REML+orig[0..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb1208+orig -expr c*a/b -prefix TSNR.tb1208
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb1208_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb1208+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 47920 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.15318
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb1208.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb1208+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb1208+orig[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 47920
[7m*+ WARNING:[0m removed 86 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.01 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb1208+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb1208+orig[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 47920
[7m*+ WARNING:[0m removed 86 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.93 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb1208+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb1208+orig[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 47920
[7m*+ WARNING:[0m removed 86 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.95 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 9.72618 9.29292 9.62693 9.54686
average errts FWHM blurs: 9.72618 9.29292 9.62693 9.54686
echo 9.72618 9.29292 9.62693 9.54686   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.45952 6.88695 12.9848 16.8295
average errts ACF blurs: 0.45952 6.88695 12.9848 16.8295
echo 0.45952 6.88695 12.9848 16.8295   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb1208+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb1208_REML+orig[0..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 47920
[7m*+ WARNING:[0m removed 86 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 27.87 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb1208+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb1208_REML+orig[150..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 47920
[7m*+ WARNING:[0m removed 86 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.84 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb1208+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb1208_REML+orig[300..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 47920
[7m*+ WARNING:[0m removed 86 voxels from mask because they are constant in time
++ detrending start: 13 baseline funcs, 150 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.88 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 9.69143 9.25875 9.59287 9.51252
average err_reml FWHM blurs: 9.69143 9.25875 9.59287 9.51252
echo 9.69143 9.25875 9.59287 9.51252   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.457318 6.81215 13.0761 16.7659
average err_reml ACF blurs: 0.457318 6.81215 13.0761 16.7659
echo 0.457318 6.81215 13.0761 16.7659   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb1208.1D
3dClustSim -both -mask full_mask.tb1208+orig -acf 0.457318 6.81215 13.0761 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 47920 voxels in mask (11.24% of total)
++ Kernel function radius = 43.16 mm
++ ACF(0.46,6.81,13.08) => FWHM=16.78 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 777.2 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb1208+orig stats.tb1208_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m Can't read 'file:files_ClustSim/ClustSim.ACF.mask'
++ Processing AFNI dataset stats.tb1208+orig
++ applying attributes
++ Processing AFNI dataset stats.tb1208_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb1208 -dsets pb00.tb1208.r01.tcat+orig.HEAD pb00.tb1208.r02.tcat+orig.HEAD pb00.tb1208.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
Traceback (most recent call last):
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2698, in <module>
    sys.exit(main())
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2691, in main
    if me.write_scripts():
  File "/usr/local/apps/afni/current/linux_openmp_64/gen_ss_review_scripts.py", line 2023, in write_scripts
    UTIL.write_text_to_file(scr_basic, self.text_basic, exe=1)
  File "/usr/local/apps/afni/current/linux_openmp_64/afni_util.py", line 71, in write_text_to_file
    fp.close()
IOError: [Errno 122] Disk quota exceeded
