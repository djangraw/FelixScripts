echo auto-generated by afni_proc.py, Wed Aug  9 10:25:44 2017
auto-generated by afni_proc.py, Wed Aug  9 10:25:44 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 10:25:44 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0782
endif
set output_dir = tb0782.srtt
if ( -d tb0782.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0782.srtt
mkdir tb0782.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0782.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0782.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0782.srtt/pb00.tb0782.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.7 s
3dTcat -prefix tb0782.srtt/pb00.tb0782.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0782.srtt/pb00.tb0782.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0782.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0782.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r01.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ 28308 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0782.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r02.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ 28334 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0782.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r03.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ 28351 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0782.r01.tshift -tpattern alt+z2 pb00.tb0782.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r01.tcat+orig.BRIK is 12.500000 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0782.r02.tshift -tpattern alt+z2 pb00.tb0782.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r02.tcat+orig.BRIK is 12.500000 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0782.r03.tshift -tpattern alt+z2 pb00.tb0782.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r03.tcat+orig.BRIK is 12.500000 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0782.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.500000 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 363.584015
 + Used gradual clip level = 336.588806 .. 407.088501
 + Number voxels above clip level = 28973
 + Clustering voxels ...
 + Largest cluster has 28493 voxels
 + Clustering voxels ...
 + Largest cluster has 28052 voxels
 + Filled   295 voxels in small holes; now have 28347 voxels
 + Clustering voxels ...
 + Largest cluster has 28347 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 102725 voxels
 + Mask now has 28347 voxels
++ 28347 voxels in the mask [out of 131072: 21.63%]
++ first  14 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 890.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/890.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 12.500000 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1525734 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 28347 voxels [17.7%] in weight mask
++ Number of points for matching = 28347
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.865 28.890 18.974 (index)
 + source center of mass = 86.365 170.034 182.925 (index)
 + source-target CM = 0.411 -0.402 -3.333 (xyz)
 + center of mass shifts = 0.411 -0.402 -3.333
++ shift param auto-range: -69.1..69.9 -69.9..69.1 -52.1..45.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.589188 .. 10.410812
 + Range param#2 [y-shift] = -10.402336 .. 9.597664
 + Range param#3 [z-shift] = -13.333435 .. 6.666565
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.589188 .. 40.410812
 + Range param#2 [y-shift] = -40.402336 .. 39.597664
 + Range param#3 [z-shift] = -43.333435 .. 36.666565
 + 12 free parameters
++ Normalized convergence radius = 0.000466
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1525734 [out of 16479936] voxels
 + base mask has 38885 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=62 usiz=164.5
 + - copying weight image
 + - using 28347 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24777 total points stored in 233 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo+-..o-+...o--+.+o-+o..$- + - best 45 costs found:
    0 v=-0.080044:   0.41  -0.40  -3.33   0.00   0.00   0.00  [grid]
    1 v=-0.045508: -12.92 -27.07  10.00 -15.00 -30.00  15.00  [grid]
    2 v=-0.036554: -12.92 -13.74  10.00 -30.00 -15.00  15.00  [grid]
    3 v=-0.035984:  -8.23 -20.83  14.14 -25.20 -18.50 -13.54  [rand]
    4 v=-0.035678: -12.92 -13.74  10.00 -15.00 -30.00  15.00  [grid]
    5 v=-0.035454: -22.44 -23.98   7.08  -5.91 -29.74  29.45  [rand]
    6 v=-0.032636: -26.26 -13.74  10.00 -30.00 -15.00  30.00  [grid]
    7 v=-0.032521: -26.26 -27.07  10.00 -15.00 -30.00  30.00  [grid]
    8 v=-0.031458: -12.92 -27.07  10.00 -30.00 -30.00  15.00  [grid]
    9 v=-0.029146:  -9.41 -25.16   8.05  -3.10 -34.36   2.55  [rand]
   10 v=-0.027957: -13.79   9.05   1.51 -15.99  13.53  29.93  [rand]
   11 v=-0.027936: -12.92 -13.74  10.00 -15.00 -15.00  15.00  [grid]
   12 v=-0.027809: -12.92 -13.74  10.00  30.00 -30.00 -15.00  [grid]
   13 v=-0.027803: -21.91 -30.03   3.66  -8.73 -38.75  33.73  [rand]
   14 v=-0.026999: -26.26 -27.07  10.00 -30.00 -30.00  30.00  [grid]
   15 v=-0.026943: -12.92 -27.07  10.00 -30.00 -15.00  15.00  [grid]
   16 v=-0.026251: -12.92 -27.07  10.00 -30.00 -30.00 -30.00  [grid]
   17 v=-0.026125: -12.92  26.26  23.33  15.00  15.00 -15.00  [grid]
   18 v=-0.025432: -12.92 -13.74  10.00 -15.00 -15.00 -15.00  [grid]
   19 v=-0.025259: -26.26 -27.07  10.00 -30.00 -30.00  15.00  [grid]
   20 v=-0.025157:  -9.41 -25.16   8.05  -3.10 -34.36  -2.55  [rand]
   21 v=-0.025083: -24.56 -29.45  32.11  17.69 -14.58  34.92  [rand]
   22 v=-0.024833: -16.45 -18.99  11.12  19.57 -37.09  16.59  [rand]
   23 v=-0.024780: -12.92 -27.07  10.00  15.00 -30.00  30.00  [grid]
   24 v=-0.024504: -12.92 -13.74  10.00 -15.00 -15.00  30.00  [grid]
   25 v=-0.024281: -11.19   4.16   0.56 -24.53 -29.49  26.10  [rand]
   26 v=-0.024226: -12.92 -13.74  10.00 -30.00 -30.00  30.00  [grid]
   27 v=-0.023888: -12.92 -13.74  10.00 -30.00 -30.00  15.00  [grid]
   28 v=-0.023888: -12.92 -27.07 -16.67 -30.00 -30.00 -30.00  [grid]
   29 v=-0.023827: -12.92  12.93  10.00 -15.00  15.00  15.00  [grid]
   30 v=-0.023810: -12.92 -27.07  10.00 -15.00 -15.00  15.00  [grid]
   31 v=-0.022779: -23.79 -10.74   1.19  27.51 -29.30  27.65  [rand]
   32 v=-0.022594: -13.62 -16.12  11.33  24.25 -37.55  -4.41  [rand]
   33 v=-0.022567: -16.45 -18.99  11.12 -19.57 -37.09  16.59  [rand]
   34 v=-0.022396: -26.26 -13.74  10.00 -15.00 -15.00  30.00  [grid]
   35 v=-0.022128: -11.19  -4.96  -7.23 -24.53 -29.49 -26.10  [rand]
   36 v=-0.022121: -12.92 -27.07  10.00 -30.00 -15.00  30.00  [grid]
   37 v=-0.022097: -12.92 -27.07 -16.67 -15.00 -15.00 -15.00  [grid]
   38 v=-0.021788: -16.45 -18.99  11.12  19.57 -37.09 -16.59  [rand]
   39 v=-0.021612: -13.62 -16.12  11.33  24.25 -37.55   4.41  [rand]
   40 v=-0.021580: -12.92  12.93 -16.67 -30.00 -15.00  30.00  [grid]
   41 v=-0.021499: -12.92 -27.07  23.33 -15.00  15.00  15.00  [grid]
   42 v=-0.021465: -11.19   4.16   0.56 -24.53 -29.49 -26.10  [rand]
   43 v=-0.021443:  10.74 -29.21  11.68  30.67 -17.79 -20.52  [rand]
   44 v=-0.021359: -12.92 -13.74  10.00 -15.00  15.00 -15.00  [grid]
*[#8004=-0.347851] *[#8015=-0.349139] *[#8016=-0.351513] *[#8017=-0.359509] *[#8019=-0.361406] *[#8020=-0.367444] *[#8023=-0.368711] *[#8026=-0.369887] *[#8029=-0.371383]  + - costs of the above after a little optimization:
  * 0 v=-0.371383:   0.42  -0.97   0.57   0.20  -0.83   0.41  [grid]
    1 v=-0.063738: -12.86 -26.30   8.08  -9.90 -34.11  12.17  [grid]
    2 v=-0.047413: -15.68 -16.02  10.53 -31.19 -14.71  16.97  [grid]
    3 v=-0.072396:  -6.72 -15.51  12.92 -15.05 -21.91  -5.69  [rand]
    4 v=-0.069848: -12.58 -16.96  11.54  -6.65 -25.75  14.54  [grid]
    5 v=-0.041488: -21.67 -24.05   7.53  -5.59 -29.56  33.40  [rand]
    6 v=-0.039106: -25.70 -10.33  10.18 -30.79 -15.19  29.49  [grid]
    7 v=-0.044972: -23.90 -23.55   8.11 -11.41 -31.63  29.68  [grid]
    8 v=-0.036893: -13.97 -30.38  10.17 -30.89 -30.70  15.04  [grid]
    9 v=-0.078550:  -5.18 -23.87  12.08  -3.42 -33.47   7.26  [rand]
   10 v=-0.038646: -13.66  13.18   3.49 -16.91  12.67  29.86  [rand]
   11 v=-0.059473: -14.43  -7.89  12.53  -9.87 -17.73  16.47  [grid]
   12 v=-0.041995: -11.13 -16.77   9.35  29.79 -30.12 -13.34  [grid]
   13 v=-0.044161: -19.31 -29.26   7.29  -8.44 -37.94  32.79  [rand]
   14 v=-0.029940: -24.05 -27.01   9.52 -30.48 -29.43  29.30  [grid]
   15 v=-0.040468: -14.75 -24.93  11.71 -33.59 -20.33  21.94  [grid]
   16 v=-0.031760:  -9.74 -26.91  12.83 -28.76 -28.83 -29.21  [grid]
   17 v=-0.031048: -13.12  25.66  23.53  12.56  10.87 -19.40  [grid]
   18 v=-0.048347:  -9.38 -15.28  11.07 -15.14 -20.82 -16.54  [grid]
   19 v=-0.035564: -22.77 -28.23   8.03 -27.42 -29.68  14.32  [grid]
   20 v=-0.065241:  -5.91 -25.37  11.49 -11.05 -33.45  -2.33  [rand]
   21 v=-0.030195: -24.94 -29.45  32.42  21.81 -15.03  34.55  [rand]
   22 v=-0.032913: -16.45 -14.99  11.12  19.57 -37.09  16.59  [rand]
   23 v=-0.032843: -13.80 -26.37   9.13  11.25 -30.55  27.59  [grid]
   24 v=-0.039390: -16.75 -13.79   9.34 -15.60 -14.75  29.26  [grid]
   25 v=-0.031389:  -7.01   4.59   0.60 -23.93 -29.59  26.33  [rand]
   26 v=-0.024965: -13.01 -13.75  10.30 -29.63 -30.18  30.39  [grid]
   27 v=-0.040794: -14.75 -18.46  11.88 -39.17 -27.69  17.00  [grid]
   28 v=-0.031132: -11.56 -25.01 -17.22 -30.32 -29.54 -25.34  [grid]
   29 v=-0.041616: -10.64  11.71   8.28 -14.62  13.83  22.61  [grid]
   30 v=-0.070544:  -8.89 -23.77  10.03  -7.74 -32.89   8.63  [grid]
   31 v=-0.033074: -22.78  -5.25   4.47  28.64 -30.33  31.19  [rand]
   32 v=-0.044766: -11.93 -17.62  10.81  31.04 -36.85 -10.56  [rand]
   33 v=-0.058003: -16.56 -25.45   7.44 -16.32 -31.81  10.51  [rand]
   34 v=-0.038846: -23.90  -9.20   8.18 -17.12 -15.53  28.13  [grid]
   35 v=-0.030338: -11.62  -7.27  -8.30 -27.30 -27.93 -25.84  [rand]
   36 v=-0.028041: -11.98 -25.78  10.93 -29.75  -9.50  30.91  [grid]
   37 v=-0.025029: -14.28 -27.61 -15.16 -17.02 -17.07 -16.61  [grid]
   38 v=-0.037516: -13.21 -19.90  10.38  19.80 -36.16 -17.78  [rand]
   39 v=-0.032389:  -9.37 -17.32  11.00  25.23 -39.80   4.30  [rand]
   40 v=-0.029851: -12.55  14.30 -15.86 -30.27 -15.48  34.44  [grid]
   41 v=-0.032930: -11.21 -26.69  23.43 -10.55  18.89  14.61  [grid]
   42 v=-0.048415:  -4.66   2.01   5.76 -20.22 -27.40 -31.27  [rand]
   43 v=-0.030166:   7.81 -28.66  12.13  30.37 -18.72 -20.22  [rand]
   44 v=-0.029984: -12.28 -12.44   8.89 -14.50  15.28 -11.18  [grid]
 + - save # 0 for twobest
 + - save # 9 for twobest
 + - save # 3 for twobest
 + - skip #30 for twobest: too close to set # 9
 + - save # 4 for twobest
 + - save #20 for twobest
 + - skip # 1 for twobest: too close to set #30
 + - save #11 for twobest
 + - save #33 for twobest
 + - save #42 for twobest
 + - save #18 for twobest
 + - save # 2 for twobest
 + - save # 7 for twobest
 + - save #32 for twobest
 + - save #13 for twobest
 + - save #12 for twobest
 + - save #29 for twobest
 + - save # 5 for twobest
 + - save #27 for twobest
 + - save #15 for twobest
 + - save #24 for twobest
 + - save # 6 for twobest
 + - save #34 for twobest
 + - save #10 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=62 usiz=164.5
 + - retaining old weight image
 + - using 28347 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24688 total points stored in 248 'RHDD(13.7332)' bloks
*[#9562=-0.389559] *[#9569=-0.39231] *[#9570=-0.405355] *[#9584=-0.40618] *[#9586=-0.406345] *[#9588=-0.406911] *[#9589=-0.408463] *[#9590=-0.409056] *[#9592=-0.40917] *[#9596=-0.410234] *[#9599=-0.410665] *[#9602=-0.410689] *[#9604=-0.410901] *[#9605=-0.411041] *[#9608=-0.411735] *[#9609=-0.411761] *[#9611=-0.412447] *[#9614=-0.412877] *[#9624=-0.413023] *[#9627=-0.413227] *[#9628=-0.413273] *[#9630=-0.413434] *[#9631=-0.413479] *[#9633=-0.413639] *[#9642=-0.414099] *[#9643=-0.414116] *[#9645=-0.414285] 
 + - param set #1 has cost=-0.414285
 + -- Parameters = 0.2380 -0.8219 0.6720 0.1222 -1.3086 0.2575 1.0063 1.0162 0.9968 -0.0003 0.0013 -0.0039
 + - param set #2 has cost=-0.068495
 + -- Parameters = -5.4514 -23.0884 11.3292 -3.9469 -33.1906 7.6547 1.0017 1.0047 1.0020 0.0018 0.0018 0.0113
 + - param set #3 has cost=-0.075342
 + -- Parameters = -5.2538 -14.8926 10.0222 -15.1147 -26.3023 -5.0964 1.0625 1.0126 1.0068 -0.0102 0.0046 -0.0022
 + - param set #4 has cost=-0.058917
 + -- Parameters = -12.4708 -17.2768 11.4715 -6.3787 -25.3247 14.2760 1.0168 0.9985 0.9999 -0.0024 -0.0010 0.0003
 + - param set #5 has cost=-0.064936
 + -- Parameters = -5.8055 -24.7000 8.5449 -8.4869 -32.0710 -0.3468 1.0029 1.0006 0.9955 -0.0038 -0.0008 -0.0063
 + - param set #6 has cost=-0.054215
 + -- Parameters = -14.0894 -8.0682 12.6653 -9.2506 -17.9726 16.8650 0.9996 0.9989 1.0145 -0.0006 0.0010 0.0003
 + - param set #7 has cost=-0.049672
 + -- Parameters = -16.6048 -25.6909 7.0772 -15.8685 -31.8705 10.8930 1.0009 1.0181 0.9996 -0.0023 0.0004 0.0000
 + - param set #8 has cost=-0.038107
 + -- Parameters = -5.0150 2.0416 5.2275 -16.9498 -28.3186 -31.8320 0.9959 0.9986 1.0013 -0.0011 -0.0005 -0.0013
 + - param set #9 has cost=-0.074372
 + -- Parameters = -6.1494 -15.3711 10.0147 -15.0194 -25.0467 -3.6246 1.0147 1.0708 1.0205 0.0122 0.0117 0.0145
 + - param set #10 has cost=-0.025492
 + -- Parameters = -16.0167 -16.5004 10.5151 -33.5041 -14.1081 17.0674 1.0044 1.0047 1.0227 0.0021 0.0025 0.0055
 + - param set #11 has cost=-0.036217
 + -- Parameters = -22.6057 -24.1029 9.1424 -6.9892 -32.3749 30.3197 0.9995 1.0006 0.9993 -0.0011 -0.0014 0.0002
 + - param set #12 has cost=-0.412927
 + -- Parameters = 0.1024 -0.7814 0.7727 -0.1158 -1.3399 -0.2209 0.9990 1.0203 0.9923 -0.0038 0.0078 0.0006
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0292 
 + --- dist(#3,#1) = 0.278 
 + --- dist(#4,#1) = 0.264 
 + --- dist(#5,#1) = 0.354 
 + --- dist(#6,#1) = 0.342 
 + --- dist(#7,#1) = 0.267 
 + --- dist(#8,#1) = 0.185 
 + --- dist(#9,#1) = 0.34 
 + --- dist(#10,#1) = 0.357 
 + --- dist(#11,#1) = 0.345 
 + --- dist(#12,#1) = 0.374 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=62 usiz=164.5
 + - retaining old weight image
 + - using 28347 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24648 total points stored in 253 'RHDD(13.5933)' bloks
*[#10429=-0.415901] *[#10437=-0.417711] *[#10451=-0.41863] *[#10452=-0.419378] *[#10456=-0.419551] *[#10461=-0.419715] *[#10463=-0.419747] *[#10465=-0.419858] *[#10467=-0.419861] *[#10469=-0.41998] *[#10470=-0.420173] *[#10473=-0.420229] *[#10474=-0.420275] *[#10478=-0.420383] *[#10479=-0.420413] *[#10484=-0.420529] *[#10485=-0.42054] *[#10488=-0.420638] *[#10489=-0.420725] *[#10490=-0.420835] *[#10491=-0.420849] *[#10492=-0.420935] *[#10495=-0.421001] *[#10496=-0.4211] *[#10501=-0.421356] *[#10507=-0.421382] *[#10508=-0.421545] *[#10511=-0.421556] *[#10512=-0.421598] *[#10513=-0.421653] *[#10516=-0.421671] *[#10521=-0.421717] *[#10524=-0.421724] 
 + - param set #1 has cost=-0.421724
 + -- Parameters = 0.1549 -0.7466 0.6727 -0.2532 -1.3945 0.0738 1.0086 1.0228 0.9988 -0.0112 0.0032 -0.0066
 + - param set #2 has cost=-0.420930
 + -- Parameters = 0.2087 -0.8123 0.6959 -0.1670 -1.3456 -0.0560 1.0089 1.0177 0.9938 -0.0091 0.0072 -0.0065
 + - param set #3 has cost=-0.065497
 + -- Parameters = -5.3845 -14.9258 10.0410 -15.1717 -25.9854 -5.1616 1.0601 1.0219 1.0074 -0.0106 0.0058 -0.0023
 + - param set #4 has cost=-0.066032
 + -- Parameters = -5.7653 -15.3792 9.8184 -14.4446 -25.0207 -3.8738 1.0492 1.0538 1.0198 0.0224 0.0106 0.0147
 + - param set #5 has cost=-0.065781
 + -- Parameters = -5.5665 -23.1803 10.7158 -3.9748 -32.8193 7.7023 1.0222 1.0128 0.9411 -0.0198 0.0028 0.0238
 + - param set #6 has cost=-0.063152
 + -- Parameters = -4.4128 -23.5237 8.2504 -7.4756 -32.5883 -0.5815 0.9967 1.0263 0.9604 -0.0110 0.0044 -0.0149
 + - param set #7 has cost=-0.066610
 + -- Parameters = -9.5476 -15.4990 11.4286 -2.5312 -27.0122 12.0321 1.0503 1.0153 0.8997 -0.0214 0.0372 -0.0017
 + - param set #8 has cost=-0.044985
 + -- Parameters = -14.1487 -8.0589 12.6613 -9.2163 -17.8715 16.6105 0.9993 0.9989 1.0149 0.0062 0.0012 0.0011
 + - param set #9 has cost=-0.043761
 + -- Parameters = -15.5356 -25.2506 6.6499 -15.0528 -31.5297 11.9582 0.9861 1.0285 1.0083 -0.0146 0.0025 0.0095
 + - param set #10 has cost=-0.034241
 + -- Parameters = -4.8869 1.6084 6.0400 -16.9365 -28.9784 -32.4066 1.0009 1.0039 0.9904 0.0085 0.0003 -0.0026
 + - param set #11 has cost=-0.030373
 + -- Parameters = -22.4147 -23.3466 9.1123 -6.7940 -34.0264 29.9492 0.9989 1.0003 0.9966 -0.0012 -0.0022 0.0031
 + - param set #12 has cost=-0.019769
 + -- Parameters = -15.8994 -16.5356 10.4356 -33.8465 -13.6017 17.2943 1.0039 1.0055 1.0245 0.0077 0.0024 0.0051
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0177 XXX
 + --- dist(#3,#1) = 0.263 
 + --- dist(#4,#1) = 0.349 
 + --- dist(#5,#1) = 0.273 
 + --- dist(#6,#1) = 0.347 
 + --- dist(#7,#1) = 0.184 
 + --- dist(#8,#1) = 0.335 
 + --- dist(#9,#1) = 0.361 
 + --- dist(#10,#1) = 0.363 
 + --- dist(#11,#1) = 0.373 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=62 usiz=164.5
 + - retaining old weight image
 + - using 28347 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25140 total points stored in 268 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.400440
 + -- Parameters = 0.1472 -0.7888 0.6753 -0.2837 -1.5204 -0.0372 1.0034 1.0149 0.9962 -0.0118 0.0059 -0.0122
 + - param set #2 has cost=-0.056153
 + -- Parameters = -9.7708 -15.3727 11.1409 -3.0149 -27.2129 11.9834 1.0403 1.0076 0.8913 -0.0224 0.0342 -0.0028
 + - param set #3 has cost=-0.057455
 + -- Parameters = -4.9440 -15.2453 9.2605 -14.5000 -25.4447 -4.0784 1.0490 1.0357 1.0061 0.0263 -0.0027 0.0040
 + - param set #4 has cost=-0.058916
 + -- Parameters = -5.7565 -22.5889 10.0502 -4.2513 -33.2903 7.2665 1.0191 1.0292 0.9319 -0.0193 -0.0014 0.0104
 + - param set #5 has cost=-0.055642
 + -- Parameters = -4.9538 -15.0051 9.6234 -14.7034 -25.6414 -5.0872 1.0582 1.0271 1.0038 -0.0085 0.0061 -0.0051
 + - param set #6 has cost=-0.055318
 + -- Parameters = -4.1096 -23.5246 8.1587 -7.1718 -32.9775 -0.6809 0.9958 1.0366 0.9534 -0.0129 0.0130 -0.0132
 + - param set #7 has cost=-0.048077
 + -- Parameters = -12.0970 -7.5527 12.1923 -7.4255 -17.1627 14.0560 0.9676 1.0046 1.0010 0.0005 -0.0006 0.0156
 + - param set #8 has cost=-0.039556
 + -- Parameters = -15.0794 -25.1623 6.8975 -15.7883 -31.0215 11.3194 0.9851 1.0224 1.0092 -0.0170 0.0010 0.0149
 + - param set #9 has cost=-0.029417
 + -- Parameters = -4.9622 1.6464 5.6544 -16.8203 -28.9596 -32.4072 0.9997 1.0026 0.9879 0.0082 0.0043 -0.0034
 + - param set #10 has cost=-0.027623
 + -- Parameters = -22.0250 -23.7557 8.5390 -5.9425 -34.8492 29.7637 0.9989 1.0112 0.9878 -0.0009 -0.0050 0.0005
 + - param set #11 has cost=-0.016142
 + -- Parameters = -15.5459 -16.6810 10.2684 -34.0690 -13.6353 17.4767 0.9974 1.0152 1.0288 0.0063 -0.0007 0.0038
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.353 
 + --- dist(#3,#1) = 0.266 
 + --- dist(#4,#1) = 0.286 
 + --- dist(#5,#1) = 0.268 
 + --- dist(#6,#1) = 0.35 
 + --- dist(#7,#1) = 0.174 
 + --- dist(#8,#1) = 0.328 
 + --- dist(#9,#1) = 0.36 
 + --- dist(#10,#1) = 0.37 
 + --- dist(#11,#1) = 0.375 
 + - Total coarse refinement net CPU time = 0.0 s; 2949 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=62 usiz=164.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 25363 total points stored in 274 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.396906 *
 + -- Parameters = 0.1472 -0.7888 0.6753 -0.2837 -1.5204 -0.0372 1.0034 1.0149 0.9962 -0.0118 0.0059 -0.0122
 + - cost(#2)=-0.052155  
 + -- Parameters = -5.7565 -22.5889 10.0502 -4.2513 -33.2903 7.2665 1.0191 1.0292 0.9319 -0.0193 -0.0014 0.0104
 + - cost(#3)=-0.054599  
 + -- Parameters = -4.9440 -15.2453 9.2605 -14.5000 -25.4447 -4.0784 1.0490 1.0357 1.0061 0.0263 -0.0027 0.0040
 + - cost(#4)=-0.056325  
 + -- Parameters = -9.7708 -15.3727 11.1409 -3.0149 -27.2129 11.9834 1.0403 1.0076 0.8913 -0.0224 0.0342 -0.0028
 + - cost(#5)=-0.052855  
 + -- Parameters = -4.9538 -15.0051 9.6234 -14.7034 -25.6414 -5.0872 1.0582 1.0271 1.0038 -0.0085 0.0061 -0.0051
 + - cost(#6)=-0.050860  
 + -- Parameters = -4.1096 -23.5246 8.1587 -7.1718 -32.9775 -0.6809 0.9958 1.0366 0.9534 -0.0129 0.0130 -0.0132
 + - cost(#7)=-0.042182  
 + -- Parameters = -12.0970 -7.5527 12.1923 -7.4255 -17.1627 14.0560 0.9676 1.0046 1.0010 0.0005 -0.0006 0.0156
 + - cost(#8)=-0.036571  
 + -- Parameters = -15.0794 -25.1623 6.8975 -15.7883 -31.0215 11.3194 0.9851 1.0224 1.0092 -0.0170 0.0010 0.0149
 + - cost(#9)=-0.029014  
 + -- Parameters = -4.9622 1.6464 5.6544 -16.8203 -28.9596 -32.4072 0.9997 1.0026 0.9879 0.0082 0.0043 -0.0034
 + - cost(#10)=-0.026423  
 + -- Parameters = -22.0250 -23.7557 8.5390 -5.9425 -34.8492 29.7637 0.9989 1.0112 0.9878 -0.0009 -0.0050 0.0005
 + - cost(#11)=-0.016785  
 + -- Parameters = -15.5459 -16.6810 10.2684 -34.0690 -13.6353 17.4767 0.9974 1.0152 1.0288 0.0063 -0.0007 0.0038
 + - cost(#12)=-0.087634  
 + -- Parameters = 0.4108 -0.4023 -3.3334 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.398220 *
 + -- Parameters = 0.1619 -0.7003 0.7440 -0.2389 -1.8557 -0.1490 1.0048 1.0137 0.9958 -0.0086 0.0085 -0.0164
 + - cost(#2)=-0.055424  
 + -- Parameters = -5.6192 -22.0668 9.7762 -4.8346 -33.4753 6.2029 1.0083 1.0512 0.9318 -0.0292 0.0252 -0.0153
 + - cost(#3)=-0.055117  
 + -- Parameters = -4.9458 -15.4002 9.1399 -14.4290 -25.8085 -4.0029 1.0493 1.0428 1.0050 0.0263 -0.0030 0.0038
 + - cost(#4)=-0.057361  
 + -- Parameters = -9.5581 -15.3471 11.0030 -2.8961 -27.2990 11.7818 1.0394 1.0185 0.8912 -0.0241 0.0337 -0.0046
 + - cost(#5)=-0.056309  
 + -- Parameters = -4.8204 -15.9386 9.0829 -14.1475 -26.2299 -5.2457 1.0508 1.0322 0.9967 0.0250 0.0194 -0.0106
 + - cost(#6)=-0.053062  
 + -- Parameters = -3.1578 -23.7000 7.8508 -6.6267 -33.1988 -0.9061 0.9874 1.0416 0.9551 -0.0122 0.0136 -0.0109
 + - cost(#7)=-0.070310  
 + -- Parameters = -4.4551 -7.2918 9.6631 -2.6683 -15.6958 7.4692 0.9880 1.0433 0.9611 0.0098 0.0054 0.0236
 + - cost(#8)=-0.037189  
 + -- Parameters = -14.8483 -25.3469 6.7805 -15.6103 -30.5126 11.1989 0.9893 1.0235 1.0118 -0.0172 0.0007 0.0162
 + - cost(#9)=-0.029290  
 + -- Parameters = -5.1207 1.6029 5.8726 -16.8679 -29.0015 -32.2760 0.9994 1.0024 0.9877 0.0082 0.0047 -0.0056
 + - cost(#10)=-0.027528  
 + -- Parameters = -21.5822 -23.9442 8.6329 -5.6699 -34.8842 29.3871 0.9966 1.0154 0.9858 -0.0002 -0.0044 0.0009
 + - cost(#11)=-0.017494  
 + -- Parameters = -15.5929 -16.7120 10.2942 -33.9026 -13.4480 17.5580 0.9979 1.0217 1.0314 0.0038 -0.0011 0.0059
 + - cost(#12)=-0.396346  
 + -- Parameters = 0.2627 -0.6978 0.7181 -0.0824 -1.6189 0.1510 1.0081 1.0136 0.9962 -0.0023 0.0028 -0.0124
 + - case #1 is now the best
 + - Initial  cost = -0.398220
 + - Initial fine Parameters = 0.1619 -0.7003 0.7440 -0.2389 -1.8557 -0.1490 1.0048 1.0137 0.9958 -0.0086 0.0085 -0.0164
 + - Finalish cost = -0.399568 ; 284 funcs
 + - Final    cost = -0.399571 ; 132 funcs
 + Final fine fit Parameters:
       x-shift= 0.1655   y-shift=-0.7029   z-shift= 0.6978
       z-angle=-0.2199   x-angle=-2.2967   y-angle=-0.1689
       x-scale= 1.0050   y-scale= 1.0101   z-scale= 0.9936
     y/x-shear=-0.0088 z/x-shear= 0.0084 z/y-shear=-0.0276
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.1655 -0.7029 0.6978 -0.2199 -2.2967 -0.1689 1.0050 1.0101 0.9936 -0.0088 0.0084 -0.0276
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 25.7
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0036 -0.9880 0.1756 240.9187 0.0065 0.2068 0.9792 75.6364 -1.0050 -0.0037 -0.0030 200.7304
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 16.7 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2649.790100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 86.6593 48.8254   ITER = 6/137
86.6593

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 136ms]
lev=0 0..171 0..213 0..166: [first cost=-0.65223] ... done [cost:-0.65223==>-0.72868]
lev=1 patch=129x161x125 [clock= 12m 59s 608ms]........:[cost=-0.75971]:........ done [cost:-0.72868==>-0.76262 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 18m 20s 901ms]......................... done [cost:-0.76262==>-0.82946 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 22m 18s 77ms]........... done [cost:-0.82946==>-0.88293 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 25m 22s 227ms]........... done [cost:-0.88293==>-0.93641 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 27m 26s 83ms]..................... done [cost:-0.93641==>-1.00274 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 29m 37s 627ms]....................... done [cost:-1.00274==>-1.04072 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 31m 55s 580ms]................................ done [cost:-1.04072==>-1.11544 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 34m 25s 471ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 6.2 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0782.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0782.r01.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Reading input dataset ./pb01.tb0782.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29867 voxels
 + 4679 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.238  pitch=-0.051  yaw=-0.446  dS=-0.931  dL=-0.258  dP=-0.022
++ Mean: roll=-0.055  pitch=+0.152  yaw=-0.208  dS=-0.150  dL=-0.097  dP=+0.011
++ Max : roll=+0.011  pitch=+0.943  yaw=+0.029  dS=+0.104  dL=+0.018  dP=+0.205
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.07(0.07) 0.07(0.02) 0.06(0.05) 0.10(0.05) 0.14(0.05) 0.14(0.03) 0.14(0.03) 0.14(0.01) 0.14(0.01) 0.14(0.03) 0.15(0.03) 0.12(0.04) 0.09(0.04) 0.07(0.03) 0.08(0.02) 0.07(0.02) 0.06(0.01) 0.08(0.02) 0.08(0.02) 0.07(0.02) 0.05(0.03) 0.06(0.02) 0.03(0.03) 0.03(0.03) 0.03(0.01) 0.05(0.03) 0.03(0.03) 0.05(0.04) 0.04(0.02) 0.03(0.02) 0.04(0.01) 0.03(0.03) 0.14(0.14) 1.57(1.70) 1.45(0.33) 0.73(0.73) 0.70(0.07) 0.61(0.11) 0.57(0.05) 0.57(0.03) 0.55(0.03) 0.54(0.01) 0.51(0.04) 0.49(0.03) 0.46(0.04) 0.45(0.03) 0.44(0.02) 0.42(0.03) 0.40(0.03) 0.36(0.08) 0.37(0.04) 0.38(0.03) 0.39(0.03) 0.39(0.02) 0.38(0.02) 0.39(0.02) 0.36(0.04) 0.37(0.02) 0.38(0.02) 0.38(0.02) 0.37(0.01) 0.38(0.02) 0.37(0.02) 0.37(0.02) 0.35(0.03) 0.36(0.01) 0.36(0.02) 0.34(0.03) 0.33(0.02) 0.34(0.03) 0.35(0.01) 0.35(0.02) 0.33(0.05) 0.33(0.12) 2.45(2.24) 1.74(0.72) 1.24(0.51) 1.17(0.07) 1.11(0.07) 1.08(0.04) 1.05(0.04) 1.02(0.04) 0.99(0.04) 0.97(0.02) 0.94(0.04) 0.95(0.01) 0.93(0.05) 0.91(0.03) 0.92(0.03) 0.92(0.02) 0.90(0.02) 0.88(0.03) 0.89(0.02) 0.86(0.04) 0.84(0.03) 0.82(0.03) 0.81(0.02) 0.81(0.02) 0.80(0.01) 0.80(0.02) 0.79(0.03) 0.79(0.02) 0.76(0.06) 0.74(0.03) 0.71(0.06) 0.72(0.04) 0.71(0.05) 0.71(0.01) 0.70(0.03) 0.70(0.03) 0.69(0.03) 0.68(0.02) 0.67(0.03) 0.67(0.02) 0.68(0.03) 0.66(0.03) 0.65(0.02) 0.66(0.02) 0.67(0.03) 0.66(0.04) 0.65(0.03) 0.66(0.01) 0.63(0.03) 0.63(0.02) 0.62(0.02) 0.62(0.02) 0.62(0.03) 0.62(0.01) 0.61(0.01) 0.60(0.03) 0.61(0.02) 0.60(0.02) 0.61(0.02) 0.61(0.01) 0.60(0.02) 0.63(0.04) 0.57(0.12) 0.96(0.60) 2.45(1.55) 1.03(1.61) 0.96(0.08) 0.93(0.10) 0.87(0.07) 0.78(0.09) 0.74(0.04) 0.74(0.04) 0.72(0.03) 0.71(0.02) 0.72(0.09)
++ Max displacement in automask = 2.45 (mm) at sub-brick 75
++ Max delta displ  in automask = 2.24 (mm) at sub-brick 75
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0782.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0782.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0782.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0782.r01.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./pb01.tb0782.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.500000 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 20.1
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0782.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0782.r02.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Reading input dataset ./pb01.tb0782.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29891 voxels
 + 4671 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.939  pitch=-0.592  yaw=-0.897  dS=-1.227  dL=-1.043  dP=-0.080
++ Mean: roll=-0.494  pitch=-0.124  yaw=-0.476  dS=-0.372  dL=-0.499  dP=-0.009
++ Max : roll=-0.113  pitch=+0.944  yaw=-0.153  dS=-0.155  dL=+0.011  dP=+0.198
++ Max displacements (mm) for each sub-brick:
 0.66(0.00) 0.78(0.29) 0.78(0.07) 0.73(0.05) 0.66(0.09) 0.67(0.02) 0.65(0.03) 0.64(0.04) 0.65(0.02) 0.65(0.02) 0.67(0.04) 0.66(0.04) 0.71(0.07) 0.84(0.95) 1.96(1.17) 0.76(1.47) 0.72(0.10) 0.68(0.07) 0.64(0.03) 0.63(0.02) 0.63(0.02) 0.64(0.04) 0.64(0.04) 0.65(0.05) 0.66(0.02) 0.66(0.02) 0.68(0.02) 0.68(0.02) 0.69(0.02) 0.69(0.02) 0.69(0.03) 0.68(0.05) 0.68(0.03) 0.68(0.06) 0.69(0.03) 0.68(0.02) 0.68(0.03) 0.69(0.04) 0.68(0.02) 0.69(0.02) 0.71(0.02) 0.73(0.04) 0.72(0.03) 0.74(0.04) 0.73(0.02) 0.75(0.02) 0.76(0.01) 0.74(0.02) 0.73(0.02) 0.72(0.03) 0.70(0.02) 0.70(0.02) 0.69(0.02) 0.72(0.03) 0.74(0.04) 0.75(0.04) 0.75(0.02) 0.74(0.02) 0.72(0.02) 0.73(0.01) 0.73(0.01) 0.73(0.02) 0.70(0.04) 0.72(0.03) 0.73(0.02) 0.79(0.14) 1.25(1.07) 3.41(2.30) 2.68(2.26) 2.36(0.43) 2.27(0.15) 2.25(0.05) 2.21(0.06) 2.19(0.04) 2.20(0.02) 2.19(0.04) 2.18(0.03) 2.18(0.02) 2.17(0.04) 2.18(0.03) 2.18(0.02) 2.18(0.03) 2.17(0.05) 2.12(0.05) 2.08(0.07) 2.02(0.20) 1.86(0.91) 2.09(0.33) 2.09(0.44) 2.07(0.03) 2.06(0.04) 2.05(0.03) 2.06(0.04) 2.07(0.03) 2.06(0.02) 2.06(0.02) 2.08(0.14) 2.16(1.01) 2.61(0.63) 2.20(1.44) 2.19(0.25) 2.16(0.12) 2.14(0.04) 2.14(0.03) 2.10(0.05) 2.09(0.02) 2.11(0.03) 2.11(0.02) 2.13(0.03) 2.15(0.03) 2.16(0.03) 2.15(0.01) 2.13(0.03) 2.13(0.02) 2.14(0.02) 2.14(0.06) 2.13(0.02) 2.14(0.05) 2.13(0.05) 2.08(0.08) 2.12(0.11) 2.11(0.04) 2.10(0.03) 2.09(0.03) 2.08(0.04) 2.09(0.02) 2.08(0.02) 2.09(0.02) 2.09(0.02) 2.09(0.02) 2.10(0.03) 2.10(0.02) 2.09(0.02) 2.10(0.01) 2.09(0.02) 2.09(0.04) 2.09(0.05) 2.10(0.12) 3.13(2.18) 2.64(1.14) 2.31(0.68) 2.29(0.09) 2.21(0.17) 2.16(0.06) 2.16(0.01) 2.19(0.03) 2.14(0.05) 2.12(0.04) 2.10(0.03) 2.04(0.08)
++ Max displacement in automask = 3.41 (mm) at sub-brick 67
++ Max delta displ  in automask = 2.30 (mm) at sub-brick 67
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0782.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0782.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0782.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0782.r02.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./pb01.tb0782.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.500000 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.3
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0782.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0782.r03.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Reading input dataset ./pb01.tb0782.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29986 voxels
 + 4731 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.798  pitch=-0.016  yaw=-0.737  dS=-1.258  dL=-0.803  dP=-0.265
++ Mean: roll=-0.400  pitch=+0.229  yaw=-0.384  dS=-0.552  dL=-0.367  dP=-0.213
++ Max : roll=-0.259  pitch=+1.343  yaw=-0.203  dS=-0.395  dL=-0.189  dP=-0.020
++ Max displacements (mm) for each sub-brick:
 1.04(0.00) 1.21(0.20) 1.20(0.13) 1.09(0.19) 1.12(0.09) 1.12(0.06) 1.08(0.05) 1.05(0.04) 1.06(0.03) 1.03(0.03) 1.01(0.04) 1.03(0.03) 1.03(0.03) 1.06(0.05) 1.09(0.04) 1.09(0.03) 1.10(0.03) 1.11(0.02) 1.10(0.02) 1.10(0.02) 1.10(0.05) 1.13(0.04) 1.12(0.01) 1.11(0.02) 1.13(0.04) 1.13(0.02) 1.13(0.03) 1.12(0.02) 1.09(0.03) 1.09(0.01) 1.10(0.01) 1.10(0.02) 1.10(0.03) 1.09(0.02) 1.12(0.03) 1.01(0.15) 1.59(0.75) 2.71(1.15) 1.24(1.62) 1.35(0.18) 1.31(0.05) 1.29(0.03) 1.27(0.04) 1.26(0.04) 1.27(0.02) 1.25(0.05) 1.25(0.03) 1.22(0.03) 1.21(0.03) 1.21(0.02) 1.22(0.04) 1.22(0.01) 1.17(0.06) 1.10(0.08) 1.12(0.03) 1.12(0.06) 1.10(0.03) 1.10(0.02) 1.08(0.02) 1.09(0.03) 1.07(0.05) 1.09(0.04) 1.10(0.02) 1.10(0.01) 1.08(0.02) 1.07(0.02) 1.07(0.01) 1.07(0.01) 1.06(0.02) 1.07(0.02) 1.06(0.01) 1.06(0.02) 1.09(0.03) 1.00(0.11) 1.46(0.55) 2.52(1.21) 1.65(1.34) 1.61(0.21) 1.53(0.10) 1.52(0.07) 1.49(0.04) 1.45(0.06) 1.45(0.02) 1.46(0.03) 1.46(0.02) 1.44(0.05) 1.44(0.02) 1.45(0.02) 1.46(0.04) 1.40(0.13) 1.40(0.05) 1.41(0.05) 1.40(0.02) 1.40(0.02) 1.39(0.02) 1.39(0.02) 1.41(0.03) 1.41(0.03) 1.42(0.03) 1.41(0.02) 1.42(0.02) 1.42(0.03) 1.42(0.02) 1.41(0.03) 1.43(0.02) 1.42(0.02) 1.43(0.01) 1.42(0.01) 1.43(0.01) 1.43(0.02) 1.44(0.02) 1.46(0.03) 1.45(0.02) 1.45(0.02) 1.44(0.03) 1.46(0.04) 1.50(0.04) 1.48(0.02) 1.47(0.02) 1.47(0.04) 1.48(0.01) 1.49(0.02) 1.48(0.04) 1.39(0.22) 2.52(1.67) 3.99(1.49) 2.48(1.87) 2.53(0.18) 2.45(0.11) 2.44(0.07) 2.34(0.13) 2.34(0.02) 2.34(0.03) 2.30(0.06) 2.29(0.03) 2.27(0.03) 2.24(0.04) 2.21(0.05) 2.20(0.04) 2.19(0.04) 2.16(0.05) 2.15(0.03) 2.17(0.06) 2.15(0.05) 2.15(0.05) 2.10(0.06) 2.05(0.06) 1.95(0.11) 1.94(0.08) 1.91(0.04)
++ Max displacement in automask = 3.99 (mm) at sub-brick 125
++ Max delta displ  in automask = 1.87 (mm) at sub-brick 126
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0782.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0782.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0782.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0782.r03.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./pb01.tb0782.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.6
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.500000 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0782.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0782.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0782.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0782.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0782.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0782.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0782
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0782+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0782+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1388627 voxels in source_automask+0
++ Zero-pad: xbot=0 xtop=3
++ Computing -autobox
++ 288252 voxels [65.3%] in weight mask
++ Number of points for matching = 135478
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.149501
   sp   = 0.339156
   mi   = -0.500838
   crM  = 0.0486267
   nmi  = 0.846251
   je   = 2.75667
   hel  = -0.0990723
   crA  = 0.221125
   crU  = 0.237538
   lss  = 0.850499
   lpc  = 0.105581
   lpa  = 0.894419
   lpc+ = 0.260499
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.3
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0782+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0782+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 27.3 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0782.r01.blur pb02.tb0782.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0782.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0782.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0782.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0782.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0782.r02.blur pb02.tb0782.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0782.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0782.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0782.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0782.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0782.r03.blur pb02.tb0782.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0782.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0782.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0782.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0782.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0782.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0782.r01.blur+orig
++ Forming automask
 + Fixed clip level = 352.711273
 + Used gradual clip level = 315.852905 .. 400.377716
 + Number voxels above clip level = 51456
 + Clustering voxels ...
 + Largest cluster has 51090 voxels
 + Clustering voxels ...
 + Largest cluster has 51051 voxels
 + Filled    29 voxels in small holes; now have 51080 voxels
 + Clustering voxels ...
 + Largest cluster has 51079 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 375196 voxels
 + Mask now has 51079 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 367446 voxels
++ 58829 voxels in the mask [out of 426275: 13.80%]
++ first  18 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   12 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0782.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0782.r02.blur+orig
++ Forming automask
 + Fixed clip level = 353.234772
 + Used gradual clip level = 316.085632 .. 400.641266
 + Number voxels above clip level = 51443
 + Clustering voxels ...
 + Largest cluster has 51047 voxels
 + Clustering voxels ...
 + Largest cluster has 51039 voxels
 + Filled    25 voxels in small holes; now have 51064 voxels
 + Clustering voxels ...
 + Largest cluster has 51063 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 375212 voxels
 + Mask now has 51063 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 367491 voxels
++ 58784 voxels in the mask [out of 426275: 13.79%]
++ first  18 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   12 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0782.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0782.r03.blur+orig
++ Forming automask
 + Fixed clip level = 353.330261
 + Used gradual clip level = 315.485046 .. 401.492889
 + Number voxels above clip level = 51532
 + Clustering voxels ...
 + Largest cluster has 51147 voxels
 + Clustering voxels ...
 + Largest cluster has 51098 voxels
 + Filled    30 voxels in small holes; now have 51128 voxels
 + Clustering voxels ...
 + Largest cluster has 51127 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 375148 voxels
 + Mask now has 51127 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 367395 voxels
++ 58880 voxels in the mask [out of 426275: 13.81%]
++ first  18 x-planes are zero [from A]
++ last    7 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   12 y-planes are zero [from S]
++ first   8 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0782
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 58957 survived, 367318 were zero
++ writing result full_mask.tb0782...
3dresample -master full_mask.tb0782+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0782
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 55973 survived, 370302 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0782...
3dABoverlap -no_automask full_mask.tb0782+orig mask_anat.tb0782+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0782+orig.BRIK  B=./mask_anat.tb0782+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
58957        55973        62733        52197        6760         3776         11.4660      6.7461     0.8772     1.0335     0.9205
3ddot -dodice full_mask.tb0782+orig mask_anat.tb0782+orig
tee out.mask_ae_dice.txt
0.908327	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0782
total number of censored TRs (simple form) = 41
1deval -a motion_tb0782_censor.1D -b outcount_tb0782_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0782_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0782.r01.blur+orig.HEAD pb03.tb0782.r02.blur+orig.HEAD pb03.tb0782.r03.blur+orig.HEAD -censor censor_tb0782_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0782 -errts errts.tb0782 -bucket stats.tb0782
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0782.r01.blur+orig.HEAD pb03.tb0782.r02.blur+orig.HEAD pb03.tb0782.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 51088 voxels (out of 426275 = 12.0%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 409 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0782.r01.blur+orig.HEAD pb03.tb0782.r02.blur+orig.HEAD pb03.tb0782.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0782_REML -Rvar stats.tb0782_REMLvar \
 -Rfitts fitts.tb0782_REML -Rerrts errts.tb0782_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (409x24):  9.37297  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (409x6):  1.04176  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (409x18):  8.93115  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (409x6):  5.63911  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (409x12):  1.0455  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 6.00485e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.25 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.359
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.373
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.387
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.401
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.415
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.429
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.443
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.457
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.471
++ Job #0: processing voxels 0 to 42626; elapsed time=7.481
++ voxel loop:0123456789.0123456789.0123456789.0123456789.0123456789.
++ Job #0 waiting for children to finish; elapsed time=18.827
++ Job #5 finished; elapsed time=18.844
++ Job #4 finished; elapsed time=18.851
++ Job #1 finished; elapsed time=18.854
++ Job #3 finished; elapsed time=18.915
++ Job #6 finished; elapsed time=18.918
++ Job #9 finished; elapsed time=18.960
++ Job #7 finished; elapsed time=18.973
++ Job #2 finished; elapsed time=18.984
++ Job #8 finished; elapsed time=19.014
++ Job #0 now finishing up; elapsed time=19.026
++ Smallest FDR q [0 Full_Fstat] = 4.67327e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 3.1673e-14
++ Smallest FDR q [3 uns1_Fstat] = 3.16685e-14
++ Smallest FDR q [5 uns2#0_Tstat] = 1.53151e-13
++ Smallest FDR q [6 uns2_Fstat] = 1.53128e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 1.73994e-14
++ Smallest FDR q [9 uns3_Fstat] = 1.73941e-14
++ Smallest FDR q [11 str1#0_Tstat] = 3.63454e-14
++ Smallest FDR q [12 str1_Fstat] = 3.63395e-14
++ Smallest FDR q [14 str2#0_Tstat] = 2.36696e-13
++ Smallest FDR q [15 str2_Fstat] = 2.36663e-13
++ Smallest FDR q [17 str3#0_Tstat] = 2.00937e-14
++ Smallest FDR q [18 str3_Fstat] = 2.00838e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.14058e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.14033e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.04645e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.04609e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 7.23472e-07
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 7.23266e-07
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.0010008
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.00100079
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 1.72176e-09
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 1.72174e-09
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 0.00038311
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 0.00038314
++ Wrote bucket dataset into ./stats.tb0782+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0782+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0782+orig.BRIK
++ Program finished; elapsed time=35.389
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.758       0.816  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.724       0.790  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.701       0.770  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.496       0.575  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.470       0.548  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.437       0.508  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0782.r01.blur+orig.HEAD pb03.tb0782.r02.blur+orig.HEAD pb03.tb0782.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0782_REML -Rvar stats.tb0782_REMLvar -Rfitts fitts.tb0782_REML -Rerrts errts.tb0782_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 51088 voxels (out of 426275 = 12.0%)
++ -----  matrix condition (409x24):  9.37297  ++ VERY GOOD ++
 + masked off 246487 voxels for being all zero; 179788 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 324 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=7.64
 + X matrix: 46.648% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=409 cols=24; 109*1 cases; total CPU=0.00 Elapsed=7.66
 +  average case bandwidth = 11.49
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=47.71
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=94.47
++ Output dataset ./stats.tb0782_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0782_REML+orig.BRIK
++ Output dataset ./errts.tb0782_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0782_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 3.44055e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 5.71107e-09
++ Smallest FDR q [3 uns1_Fstat] = 5.71107e-09
++ Smallest FDR q [5 uns2#0_Tstat] = 1.63129e-07
++ Smallest FDR q [6 uns2_Fstat] = 1.63129e-07
++ Smallest FDR q [8 uns3#0_Tstat] = 5.71628e-09
++ Smallest FDR q [9 uns3_Fstat] = 5.71626e-09
++ Smallest FDR q [11 str1#0_Tstat] = 5.88667e-09
++ Smallest FDR q [12 str1_Fstat] = 5.88669e-09
++ Smallest FDR q [14 str2#0_Tstat] = 1.79909e-06
++ Smallest FDR q [15 str2_Fstat] = 1.79909e-06
++ Smallest FDR q [17 str3#0_Tstat] = 3.30688e-08
++ Smallest FDR q [18 str3_Fstat] = 3.30688e-08
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.21615e-12
++ Smallest FDR q [21 unstructured_Fstat] = 1.21615e-12
++ Smallest FDR q [23 structured#0_Tstat] = 1.5795e-12
++ Smallest FDR q [24 structured_Fstat] = 1.5795e-12
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.99983 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.99983 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.99988 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.99988 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.0205815
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.0205815
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.999876 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.999876 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0782_REML+orig
++ Output dataset ./stats.tb0782_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=110.94
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0782 pb03.tb0782.r01.blur+orig.HEAD pb03.tb0782.r02.blur+orig.HEAD pb03.tb0782.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.2 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0782+orig[0..32,37..73,77..136,141..161,166..214,219..234,237..245,250..286,291..334,339..372,377..422,427..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0782_REML+orig[0..32,37..73,77..136,141..161,166..214,219..234,237..245,250..286,291..334,339..372,377..422,427..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0782+orig -expr c*a/b -prefix TSNR.tb0782
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0782_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0782+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 58957 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.16862
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0782.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..32,37..73,77..136,141..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0782+orig[0..32,37..73,77..136,141..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58957
[7m*+ WARNING:[0m removed 239 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 139 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.52 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..161,166..214,219..234,237..245,250..286,291..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0782+orig[150..161,166..214,219..234,237..245,250..286,291..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58957
[7m*+ WARNING:[0m removed 239 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 132 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.05 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..334,339..372,377..422,427..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0782+orig[300..334,339..372,377..422,427..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58957
[7m*+ WARNING:[0m removed 239 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 138 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.75 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 10.3158 9.61853 10.1945 10.0382
average errts FWHM blurs: 10.3158 9.61853 10.1945 10.0382
echo 10.3158 9.61853 10.1945 10.0382   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.465247 7.183 13.7071 17.6422
average errts ACF blurs: 0.465247 7.183 13.7071 17.6422
echo 0.465247 7.183 13.7071 17.6422   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..32,37..73,77..136,141..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0782_REML+orig[0..32,37..73,77..136,141..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58957
[7m*+ WARNING:[0m removed 239 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 139 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.37 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..161,166..214,219..234,237..245,250..286,291..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0782_REML+orig[150..161,166..214,219..234,237..245,250..286,291..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58957
[7m*+ WARNING:[0m removed 239 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 132 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.93 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..334,339..372,377..422,427..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0782_REML+orig[300..334,339..372,377..422,427..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 58957
[7m*+ WARNING:[0m removed 239 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 138 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.49 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 10.2641 9.55728 10.1364 9.9811
average err_reml FWHM blurs: 10.2641 9.55728 10.1364 9.9811
echo 10.2641 9.55728 10.1364 9.9811   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.474135 7.17166 13.826 17.6133
average err_reml ACF blurs: 0.474135 7.17166 13.826 17.6133
echo 0.474135 7.17166 13.826 17.6133   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0782.1D
3dClustSim -both -mask full_mask.tb0782+orig -acf 0.474135 7.17166 13.826 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 58957 voxels in mask (13.83% of total)
++ Kernel function radius = 45.20 mm
++ ACF(0.47,7.17,13.83) => FWHM=17.65 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 493.0 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0782+orig stats.tb0782_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0782+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0782_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0782 -dsets pb00.tb0782.r01.tcat+orig.HEAD pb00.tb0782.r02.tcat+orig.HEAD pb00.tb0782.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0782.r01.blur+orig.BRIK rm.pb03.tb0782.r01.blur+orig.HEAD rm.pb03.tb0782.r02.blur+orig.BRIK rm.pb03.tb0782.r02.blur+orig.HEAD rm.pb03.tb0782.r03.blur+orig.BRIK rm.pb03.tb0782.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0782.txt
./@ss_review_basic

subject ID                : tb0782
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0782+orig.HEAD
final stats dset          : stats.tb0782_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 29
average motion (per TR)   : 0.0740227
average censored motion   : 0.0271241
max motion displacement   : 2.34101
max censored displacement : 1.60561
outlier limit             : 0.1
average outlier frac (TR) : 0.0153281
num TRs above out limit   : 20

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 139 132 138
num TRs per run (censored): 11 18 12
fraction censored per run : 0.0733333 0.12 0.08
TRs total (uncensored)    : 450
TRs total                 : 409
degrees of freedom used   : 24
degrees of freedom left   : 385

TRs censored              : 41
censor fraction           : 0.091111
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 4 15 0 8 9 12
fraction TRs censored     : 0.059 0.221 0.000 0.072 0.081 0.108
ave mot per sresp (orig)  : 0.050053 0.140481 0.021459 0.051338 0.066422 0.081355
ave mot per sresp (cens)  : 0.019834 0.026591 0.021459 0.022065 0.028462 0.024379

TSNR average              : 306.489
global correlation (GCOR) : 0.16862
anat/EPI mask Dice coef   : 0.908327
maximum F-stat (masked)   : 19.2246
blur estimates (ACF)      : 0.474135 7.17166 13.826
blur estimates (FWHM)     : 10.2641 9.55728 10.1364


cd ..
echo execution finished: `date`
date
execution finished: Wed Aug  9 11:20:09 EDT 2017
