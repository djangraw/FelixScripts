echo auto-generated by afni_proc.py, Wed Jan  3 09:36:12 2018
auto-generated by afni_proc.py, Wed Jan  3 09:36:12 2018
echo (version 6.02, December 12, 2017)
(version 6.02, December 12, 2017)
echo execution started: `date`
date
execution started: Wed Jan  3 09:36:13 EST 2018
afni -ver
Precompiled binary linux_openmp_64: Dec 22 2017 (Version AFNI_17.3.09)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   22 Dec 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0782
endif
set output_dir = tb0782.srtt_v3
if ( -d tb0782.srtt_v3 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0782.srtt_v3
mkdir tb0782.srtt_v3/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0782.srtt_v3/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0782.srtt_v3/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dTcat -prefix tb0782.srtt_v3/pb00.tb0782.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.9 s
3dTcat -prefix tb0782.srtt_v3/pb00.tb0782.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 2.0 s
3dTcat -prefix tb0782.srtt_v3/pb00.tb0782.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 4.5 s
set tr_counts = ( 150 150 150 )
cd tb0782.srtt_v3
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0782.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r01.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ 28308 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0782.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r02.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ 28334 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0782.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r03.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ 28351 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.tb0782.r01.despike pb00.tb0782.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r01.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb0782.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #4
++ start OpenMP thread #1
........................................................
++ Elapsed despike time =  1s 652ms

++ FINAL: 19353600 data points, 816816 edits [4.220%], 134000 big edits [0.692%]
++ Output dataset ./pb01.tb0782.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb0782.r02.despike pb00.tb0782.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r02.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb0782.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #3
++ start OpenMP thread #1
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 636ms

++ FINAL: 19353600 data points, 911368 edits [4.709%], 193667 big edits [1.001%]
++ Output dataset ./pb01.tb0782.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb0782.r03.despike pb00.tb0782.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0782.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0782.r03.tcat+orig.BRIK is 12.500000 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb0782.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #5
++ start OpenMP thread #0
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 600ms

++ FINAL: 19353600 data points, 835985 edits [4.320%], 140605 big edits [0.727%]
++ Output dataset ./pb01.tb0782.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.tb0782.r01.tshift -tpattern alt+z2 pb01.tb0782.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0782.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0782.r01.despike+orig.BRIK is 12.500000 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb0782.r02.tshift -tpattern alt+z2 pb01.tb0782.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0782.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0782.r02.despike+orig.BRIK is 12.500000 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb0782.r03.tshift -tpattern alt+z2 pb01.tb0782.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0782.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0782.r03.despike+orig.BRIK is 12.500000 degrees from plumb.
end
3dbucket -prefix vr_base pb02.tb0782.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.500000 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 363.633362
 + Used gradual clip level = 336.711151 .. 406.976410
 + Number voxels above clip level = 28973
 + Clustering voxels ...
 + Largest cluster has 28493 voxels
 + Clustering voxels ...
 + Largest cluster has 28052 voxels
 + Filled   295 voxels in small holes; now have 28347 voxels
 + Clustering voxels ...
 + Largest cluster has 28347 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 102725 voxels
 + Mask now has 28347 voxels
++ 28347 voxels in the mask [out of 131072: 21.63%]
++ first  14 x-planes are zero [from R]
++ last   13 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 890.477478 on /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/890.477478))'
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 12.500000 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1525734 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 28347 voxels [17.7%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 28347
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.865 28.892 18.974 (index)
 + source center of mass = 86.365 170.034 182.925 (index)
 + source-target CM = 0.411 -0.395 -3.332 (xyz)
 + center of mass shifts = 0.411 -0.395 -3.332
++ shift param auto-range: -69.1..69.9 -69.9..69.1 -52.1..45.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.589096 .. 10.410904
 + Range param#2 [y-shift] = -10.394699 .. 9.605301
 + Range param#3 [z-shift] = -13.331734 .. 6.668266
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.589096 .. 40.410904
 + Range param#2 [y-shift] = -40.394699 .. 39.605301
 + Range param#3 [z-shift] = -43.331734 .. 36.668266
 + 12 free parameters
++ Normalized convergence radius = 0.000466
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1525734 [out of 16479936] voxels
 + base mask has 38884 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=62 usiz=164.5
 + - copying weight image
 + - using 28347 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24779 total points stored in 233 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo+-..o-+..o--+-+o-+o..$- + - best 45 costs found:
    0 v=-0.079771:   0.41  -0.39  -3.33   0.00   0.00   0.00  [grid]
    1 v=-0.045534: -12.92 -27.06  10.00 -15.00 -30.00  15.00  [grid]
    2 v=-0.036529: -12.92 -13.73  10.00 -30.00 -15.00  15.00  [grid]
    3 v=-0.036007:  -8.23 -20.83  14.14 -25.20 -18.50 -13.54  [rand]
    4 v=-0.035684: -12.92 -13.73  10.00 -15.00 -30.00  15.00  [grid]
    5 v=-0.035515: -22.44 -23.97   7.08  -5.91 -29.74  29.45  [rand]
    6 v=-0.032693: -26.26 -13.73  10.00 -30.00 -15.00  30.00  [grid]
    7 v=-0.032607: -26.26 -27.06  10.00 -15.00 -30.00  30.00  [grid]
    8 v=-0.031561: -12.92 -27.06  10.00 -30.00 -30.00  15.00  [grid]
    9 v=-0.029075:  -9.41 -25.15   8.05  -3.10 -34.36   2.55  [rand]
   10 v=-0.028021: -12.92 -13.73  10.00 -15.00 -15.00  15.00  [grid]
   11 v=-0.027912: -13.79   9.06   1.51 -15.99  13.53  29.93  [rand]
   12 v=-0.027800: -21.91 -30.03   3.66  -8.73 -38.75  33.73  [rand]
   13 v=-0.027768: -12.92 -13.73  10.00  30.00 -30.00 -15.00  [grid]
   14 v=-0.027106: -26.26 -27.06  10.00 -30.00 -30.00  30.00  [grid]
   15 v=-0.026953: -12.92 -27.06  10.00 -30.00 -15.00  15.00  [grid]
   16 v=-0.026218: -12.92 -27.06  10.00 -30.00 -30.00 -30.00  [grid]
   17 v=-0.026179: -12.92  26.27  23.33  15.00  15.00 -15.00  [grid]
   18 v=-0.025462: -12.92 -13.73  10.00 -15.00 -15.00 -15.00  [grid]
   19 v=-0.025150: -26.26 -27.06  10.00 -30.00 -30.00  15.00  [grid]
   20 v=-0.025118: -24.56 -29.45  32.12  17.69 -14.58  34.92  [rand]
   21 v=-0.025080:  -9.41 -25.15   8.05  -3.10 -34.36  -2.55  [rand]
   22 v=-0.024852: -16.45 -18.98  11.12  19.57 -37.09  16.59  [rand]
   23 v=-0.024829: -12.92 -27.06  10.00  15.00 -30.00  30.00  [grid]
   24 v=-0.024549: -12.92 -13.73  10.00 -15.00 -15.00  30.00  [grid]
   25 v=-0.024281: -12.92 -13.73  10.00 -30.00 -30.00  30.00  [grid]
   26 v=-0.024218: -11.19   4.16   0.56 -24.53 -29.49  26.10  [rand]
   27 v=-0.023891: -12.92 -27.06  10.00 -15.00 -15.00  15.00  [grid]
   28 v=-0.023882: -12.92 -13.73  10.00 -30.00 -30.00  15.00  [grid]
   29 v=-0.023836: -12.92  12.94  10.00 -15.00  15.00  15.00  [grid]
   30 v=-0.023823: -12.92 -27.06 -16.67 -30.00 -30.00 -30.00  [grid]
   31 v=-0.022847: -23.79 -10.73   1.19  27.51 -29.30  27.65  [rand]
   32 v=-0.022611: -13.62 -16.11  11.34  24.25 -37.55  -4.41  [rand]
   33 v=-0.022580: -16.45 -18.98  11.12 -19.57 -37.09  16.59  [rand]
   34 v=-0.022447: -26.26 -13.73  10.00 -15.00 -15.00  30.00  [grid]
   35 v=-0.022210: -12.92 -27.06  10.00 -30.00 -15.00  30.00  [grid]
   36 v=-0.022120: -11.19  -4.95  -7.23 -24.53 -29.49 -26.10  [rand]
   37 v=-0.022099: -12.92 -27.06 -16.67 -15.00 -15.00 -15.00  [grid]
   38 v=-0.021818: -16.45 -18.98  11.12  19.57 -37.09 -16.59  [rand]
   39 v=-0.021657: -13.62 -16.11  11.34  24.25 -37.55   4.41  [rand]
   40 v=-0.021559:  10.74 -29.21  11.68  30.67 -17.79 -20.52  [rand]
   41 v=-0.021536: -12.92  12.94 -16.67 -30.00 -15.00  30.00  [grid]
   42 v=-0.021504: -12.92 -27.06  23.33 -15.00  15.00  15.00  [grid]
   43 v=-0.021395: -12.92 -13.73  10.00 -15.00  15.00 -15.00  [grid]
   44 v=-0.021368: -11.19   4.16   0.56 -24.53 -29.49 -26.10  [rand]
*[#8004=-0.348082] *[#8015=-0.34932] *[#8016=-0.351794] *[#8017=-0.359978] *[#8019=-0.361698] *[#8020=-0.367685] *[#8023=-0.369207] *[#8026=-0.370382] *[#8028=-0.371138] *[#8030=-0.371648]  + - costs of the above after a little optimization:
  * 0 v=-0.371648:   0.35  -0.94   0.59   0.21  -0.81   0.27  [grid]
    1 v=-0.061433: -12.26 -25.41   7.86  -9.88 -33.72  12.01  [grid]
    2 v=-0.047417: -15.70 -16.02  10.53 -31.18 -14.70  16.96  [grid]
    3 v=-0.069842:  -7.15 -14.90  13.38 -16.41 -20.57  -6.26  [rand]
    4 v=-0.070616: -12.21 -15.35  10.73  -8.96 -22.91  10.74  [grid]
    5 v=-0.041618: -21.67 -24.06   7.53  -5.60 -29.58  33.39  [rand]
    6 v=-0.038991: -25.65 -10.31  10.18 -30.71 -15.12  29.41  [grid]
    7 v=-0.043802: -24.07 -23.87   7.59 -12.31 -30.38  29.10  [grid]
    8 v=-0.037277: -13.61 -30.68   9.62 -29.61 -30.16  14.95  [grid]
    9 v=-0.078490:  -5.70 -23.65  11.97  -4.60 -33.19   6.31  [rand]
   10 v=-0.059484: -14.97  -5.77  12.68  -9.24 -15.94  18.77  [grid]
   11 v=-0.043406: -13.77  12.47   0.91 -17.94   8.16  25.86  [rand]
   12 v=-0.044326: -19.59 -29.17   7.20  -8.32 -37.90  32.59  [rand]
   13 v=-0.040491: -12.07 -17.72   9.39  30.80 -30.12 -14.17  [grid]
   14 v=-0.032246: -23.73 -25.90  11.45 -30.98 -28.45  28.13  [grid]
   15 v=-0.035213: -14.79 -25.37   9.96 -31.98 -16.03  19.86  [grid]
   16 v=-0.038625: -10.31 -26.70  10.84 -26.75 -29.79 -31.80  [grid]
   17 v=-0.031993: -12.79  26.21  22.96  12.84  11.19 -19.27  [grid]
   18 v=-0.047498:  -9.63 -14.89  10.05 -15.36 -19.46 -17.33  [grid]
   19 v=-0.033915: -24.40 -28.05   8.33 -26.11 -33.18  14.09  [grid]
   20 v=-0.032247: -25.54 -29.90  31.69  22.24 -14.34  34.78  [rand]
   21 v=-0.069610:  -4.93 -21.72  12.04  -9.55 -30.01  -2.66  [rand]
   22 v=-0.032872: -16.45 -14.98  11.12  19.57 -37.09  16.59  [rand]
   23 v=-0.032812: -13.81 -26.41   8.88  11.49 -30.83  27.65  [grid]
   24 v=-0.039568: -16.72 -13.83   9.37 -15.61 -14.69  29.26  [grid]
   25 v=-0.025099: -12.97 -13.74  10.32 -29.65 -30.17  30.41  [grid]
   26 v=-0.031370:  -7.01   4.59   0.60 -23.93 -29.60  26.34  [rand]
   27 v=-0.066185: -12.73 -24.32   8.64 -13.24 -29.05   7.90  [grid]
   28 v=-0.038381: -13.82 -17.37  12.18 -40.16 -28.31  16.90  [grid]
   29 v=-0.043045: -10.59  11.64   8.12 -14.88  13.24  22.32  [grid]
   30 v=-0.030669: -11.81 -25.91 -17.17 -31.14 -32.45 -24.76  [grid]
   31 v=-0.037917: -24.87  -3.48   5.04  31.58 -29.42  30.52  [rand]
   32 v=-0.040194: -10.70 -16.12   9.12  30.59 -37.20  -7.08  [rand]
   33 v=-0.061992: -14.88 -24.64   7.92 -16.82 -32.04   9.83  [rand]
   34 v=-0.038616: -24.06  -9.49   8.08 -17.80 -15.46  26.87  [grid]
   35 v=-0.027949: -12.08 -25.86  10.86 -29.56  -9.35  30.93  [grid]
   36 v=-0.030942: -11.76  -7.31  -7.93 -27.10 -28.16 -25.32  [rand]
   37 v=-0.025099: -14.21 -27.61 -15.17 -16.99 -17.14 -16.67  [grid]
   38 v=-0.038304: -13.14 -20.10  10.35  20.84 -35.20 -16.96  [rand]
   39 v=-0.033197: -10.84 -16.80  12.12  23.31 -40.10   4.84  [rand]
   40 v=-0.030275:   7.73 -28.72  11.94  30.03 -18.57 -20.83  [rand]
   41 v=-0.030758: -12.83  15.00 -15.88 -29.53 -15.73  34.75  [grid]
   42 v=-0.033837:  -9.80 -26.32  23.68  -9.98  19.14  13.07  [grid]
   43 v=-0.030464: -12.12 -12.45   9.13 -14.76  15.20 -11.24  [grid]
   44 v=-0.041363:  -4.67   2.78   6.07 -21.33 -29.95 -28.31  [rand]
 + - save # 0 for twobest
 + - save # 9 for twobest
 + - save # 4 for twobest
 + - save # 3 for twobest
 + - save #21 for twobest
 + - save #27 for twobest
 + - skip #33 for twobest: too close to set #27
 + - save # 1 for twobest
 + - save #10 for twobest
 + - save #18 for twobest
 + - save # 2 for twobest
 + - save #12 for twobest
 + - save # 7 for twobest
 + - save #11 for twobest
 + - save #29 for twobest
 + - save # 5 for twobest
 + - save #44 for twobest
 + - save #13 for twobest
 + - save #32 for twobest
 + - save #24 for twobest
 + - save # 6 for twobest
 + - save #16 for twobest
 + - save #34 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=62 usiz=164.5
 + - retaining old weight image
 + - using 28347 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24688 total points stored in 248 'RHDD(13.7332)' bloks
*[#9584=-0.391089] *[#9591=-0.393498] *[#9592=-0.407335] *[#9608=-0.408858] *[#9609=-0.41031] *[#9613=-0.410473] *[#9615=-0.410593] *[#9616=-0.410784] *[#9618=-0.411055] *[#9621=-0.411848] *[#9622=-0.41185] *[#9624=-0.412176] *[#9628=-0.412704] *[#9629=-0.413189] *[#9634=-0.413385] *[#9635=-0.413729] *[#9636=-0.414021] *[#9637=-0.414202] *[#9640=-0.414479] *[#9646=-0.41461] *[#9647=-0.414763] *[#9648=-0.41526] *[#9649=-0.415282] *[#9658=-0.415388] *[#9659=-0.415598] *[#9664=-0.415688] *[#9665=-0.415768] *[#9666=-0.415773] *[#9668=-0.415794] *[#9669=-0.415796] 
 + - param set #1 has cost=-0.415796
 + -- Parameters = 0.1846 -0.8388 0.6655 -0.0252 -1.1198 0.1242 1.0040 1.0210 1.0010 -0.0026 0.0014 0.0022
 + - param set #2 has cost=-0.068974
 + -- Parameters = -6.3294 -22.9235 11.4707 -4.9925 -32.5590 7.5522 1.0025 1.0021 1.0014 -0.0000 0.0011 0.0137
 + - param set #3 has cost=-0.064944
 + -- Parameters = -11.1849 -14.6954 10.4539 -8.5011 -21.9278 10.1501 1.0196 1.0022 1.0104 0.0014 -0.0020 0.0005
 + - param set #4 has cost=-0.075298
 + -- Parameters = -5.5415 -15.3221 9.4771 -13.2530 -25.0005 -3.9720 1.0277 1.0097 0.9810 0.0151 0.0206 -0.0031
 + - param set #5 has cost=-0.074460
 + -- Parameters = -3.9292 -19.5432 9.3956 -7.4641 -27.8062 -2.3203 1.0073 1.0234 1.0114 0.0038 0.0035 -0.0005
 + - param set #6 has cost=-0.057162
 + -- Parameters = -13.1724 -23.5210 8.8526 -12.9997 -29.3156 8.8557 0.9987 0.9975 1.0001 0.0016 -0.0003 -0.0034
 + - param set #7 has cost=-0.064639
 + -- Parameters = -12.0547 -23.3971 11.4398 -9.3559 -33.4343 11.6497 1.0029 1.0013 1.0016 -0.0041 -0.0016 0.0002
 + - param set #8 has cost=-0.052914
 + -- Parameters = -14.1907 -6.1591 11.8113 -7.8840 -14.5522 19.3336 1.0017 1.0022 1.0185 0.0016 0.0015 0.0013
 + - param set #9 has cost=-0.063308
 + -- Parameters = -7.5152 -16.3743 6.6692 -16.6273 -15.0844 -0.9498 1.0295 0.9795 1.0423 -0.0072 -0.0118 0.0270
 + - param set #10 has cost=-0.031316
 + -- Parameters = -15.7202 -17.6666 11.4025 -34.6732 -12.9189 20.6249 1.0088 1.0067 1.0175 0.0031 0.0054 0.0096
 + - param set #11 has cost=-0.034645
 + -- Parameters = -20.0699 -28.7461 7.6115 -5.6297 -40.4890 28.8276 0.9990 0.9995 1.0038 0.0046 0.0013 0.0029
 + - param set #12 has cost=-0.413942
 + -- Parameters = 0.1733 -0.8706 0.6707 -0.0864 -1.1852 -0.0319 1.0004 1.0162 0.9915 -0.0054 0.0027 -0.0017
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0258 
 + --- dist(#3,#1) = 0.265 
 + --- dist(#4,#1) = 0.297 
 + --- dist(#5,#1) = 0.349 
 + --- dist(#6,#1) = 0.231 
 + --- dist(#7,#1) = 0.359 
 + --- dist(#8,#1) = 0.194 
 + --- dist(#9,#1) = 0.313 
 + --- dist(#10,#1) = 0.213 
 + --- dist(#11,#1) = 0.437 
 + --- dist(#12,#1) = 0.385 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=62 usiz=164.5
 + - retaining old weight image
 + - using 28347 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24648 total points stored in 253 'RHDD(13.5933)' bloks
*[#10621=-0.416073] *[#10629=-0.416492] *[#10643=-0.416613] *[#10644=-0.416639] *[#10646=-0.416722] *[#10649=-0.417051] *[#10652=-0.41742] *[#10653=-0.417582] *[#10654=-0.418079] *[#10655=-0.418517] *[#10658=-0.418817] *[#10659=-0.41889] *[#10660=-0.418916] *[#10663=-0.41893] *[#10669=-0.419009] *[#10670=-0.419077] *[#10674=-0.419412] *[#10677=-0.419638] *[#10678=-0.419788] *[#10681=-0.419934] *[#10682=-0.41995] *[#10694=-0.419955] 
 + - param set #1 has cost=-0.419955
 + -- Parameters = 0.2113 -0.7904 0.7349 -0.1096 -1.3173 0.1042 1.0073 1.0287 1.0012 -0.0066 0.0032 -0.0005
*[#10726=-0.420062] *[#10731=-0.420316] *[#10734=-0.420388] *[#10737=-0.420661] *[#10738=-0.42072] *[#10741=-0.420726] *[#10743=-0.420953] *[#10748=-0.421054] *[#10749=-0.421175] *[#10753=-0.421178] *[#10754=-0.421356] *[#10757=-0.421437] *[#10758=-0.42151] *[#10761=-0.421727] 
 + - param set #2 has cost=-0.421727
 + -- Parameters = 0.2178 -0.8115 0.6826 -0.2461 -1.3149 0.1767 1.0057 1.0227 0.9984 -0.0107 0.0023 -0.0043
 + - param set #3 has cost=-0.067805
 + -- Parameters = -4.8953 -15.9165 9.1464 -12.7926 -24.3877 -4.6393 1.0384 1.0139 0.9925 0.0283 0.0273 -0.0001
 + - param set #4 has cost=-0.069838
 + -- Parameters = -3.9079 -18.6935 8.9009 -9.2424 -27.4434 -3.3341 1.0191 1.0342 0.9515 0.0052 0.0119 0.0058
 + - param set #5 has cost=-0.062769
 + -- Parameters = -5.8382 -22.5848 11.3641 -3.4135 -32.6979 8.4302 1.0208 1.0220 0.9880 -0.0014 -0.0021 0.0090
 + - param set #6 has cost=-0.052296
 + -- Parameters = -11.3052 -14.7380 10.3314 -8.7794 -22.0113 10.1892 1.0222 1.0080 1.0125 -0.0001 0.0048 0.0032
 + - param set #7 has cost=-0.053352
 + -- Parameters = -11.2671 -23.0061 11.2057 -8.9197 -33.1433 11.2007 1.0032 1.0153 1.0005 -0.0037 -0.0022 0.0010
 + - param set #8 has cost=-0.055899
 + -- Parameters = -6.6310 -16.8419 6.7377 -16.3799 -18.0092 -1.4667 1.0364 0.9651 1.0420 -0.0058 -0.0112 0.0283
 + - param set #9 has cost=-0.049416
 + -- Parameters = -12.8219 -23.3217 8.9771 -12.8098 -29.6565 9.9428 0.9978 0.9950 1.0014 -0.0215 0.0047 0.0059
 + - param set #10 has cost=-0.043472
 + -- Parameters = -14.1840 -6.2381 11.7498 -7.8615 -14.5961 19.1390 1.0004 1.0010 1.0180 0.0013 0.0012 0.0084
 + - param set #11 has cost=-0.038215
 + -- Parameters = -17.3704 -28.6142 7.2980 -4.9505 -40.2546 28.4295 0.9969 1.0013 1.0044 0.0058 0.0016 0.0042
 + - param set #12 has cost=-0.022388
 + -- Parameters = -15.9502 -17.7496 11.4429 -34.7456 -12.9839 20.6422 1.0097 1.0089 1.0159 0.0036 0.0063 0.0092
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0184 XXX
 + --- dist(#3,#1) = 0.256 
 + --- dist(#4,#1) = 0.349 
 + --- dist(#5,#1) = 0.2 
 + --- dist(#6,#1) = 0.354 
 + --- dist(#7,#1) = 0.23 
 + --- dist(#8,#1) = 0.315 
 + --- dist(#9,#1) = 0.211 
 + --- dist(#10,#1) = 0.433 
 + --- dist(#11,#1) = 0.383 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=62 usiz=164.5
 + - retaining old weight image
 + - using 28347 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25141 total points stored in 268 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.400448
 + -- Parameters = 0.1680 -0.7836 0.6870 -0.2595 -1.5378 0.1088 1.0030 1.0150 0.9948 -0.0116 0.0019 -0.0127
 + - param set #2 has cost=-0.059617
 + -- Parameters = -3.8452 -18.6224 8.7402 -9.4709 -27.4624 -3.7319 1.0199 1.0349 0.9472 0.0095 0.0130 0.0056
 + - param set #3 has cost=-0.057311
 + -- Parameters = -4.8236 -15.8909 9.3020 -12.7690 -24.1755 -4.8366 1.0404 1.0089 0.9885 0.0305 0.0300 -0.0005
 + - param set #4 has cost=-0.053587
 + -- Parameters = -5.9847 -22.3631 11.2820 -3.6502 -32.6747 8.3813 1.0181 1.0243 0.9884 -0.0017 -0.0027 0.0088
 + - param set #5 has cost=-0.050969
 + -- Parameters = -6.5760 -16.7310 6.7762 -16.2620 -17.5210 -1.7387 1.0380 0.9647 1.0192 -0.0012 0.0011 0.0287
 + - param set #6 has cost=-0.046069
 + -- Parameters = -10.9090 -22.4682 11.0772 -9.0254 -32.7691 10.9276 1.0085 1.0211 0.9983 -0.0024 -0.0024 0.0065
 + - param set #7 has cost=-0.046915
 + -- Parameters = -11.3280 -14.6616 10.2304 -8.9804 -21.9114 10.1877 1.0214 1.0084 1.0122 0.0004 0.0051 0.0088
 + - param set #8 has cost=-0.044668
 + -- Parameters = -12.8487 -22.7719 8.6815 -12.5205 -29.8995 9.8879 0.9900 0.9967 0.9946 -0.0089 -0.0061 0.0111
 + - param set #9 has cost=-0.038464
 + -- Parameters = -14.0788 -6.5707 11.7799 -7.4126 -14.3881 18.9659 0.9991 1.0002 1.0172 0.0003 0.0068 0.0093
 + - param set #10 has cost=-0.034034
 + -- Parameters = -17.1911 -28.4093 7.3679 -4.9477 -40.1712 28.1950 0.9963 1.0087 1.0014 0.0056 0.0016 0.0037
 + - param set #11 has cost=-0.015775
 + -- Parameters = -15.6043 -17.6838 11.5998 -34.5774 -12.8391 20.6802 1.0120 1.0075 1.0169 0.0028 0.0071 0.0108
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.288 
 + --- dist(#3,#1) = 0.252 
 + --- dist(#4,#1) = 0.346 
 + --- dist(#5,#1) = 0.199 
 + --- dist(#6,#1) = 0.226 
 + --- dist(#7,#1) = 0.347 
 + --- dist(#8,#1) = 0.315 
 + --- dist(#9,#1) = 0.21 
 + --- dist(#10,#1) = 0.429 
 + --- dist(#11,#1) = 0.381 
 + - Total coarse refinement net CPU time = 0.0 s; 3042 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=62 usiz=164.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 25364 total points stored in 274 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.396761 *
 + -- Parameters = 0.1680 -0.7836 0.6870 -0.2595 -1.5378 0.1088 1.0030 1.0150 0.9948 -0.0116 0.0019 -0.0127
 + - cost(#2)=-0.055151  
 + -- Parameters = -3.8452 -18.6224 8.7402 -9.4709 -27.4624 -3.7319 1.0199 1.0349 0.9472 0.0095 0.0130 0.0056
 + - cost(#3)=-0.054058  
 + -- Parameters = -4.8236 -15.8909 9.3020 -12.7690 -24.1755 -4.8366 1.0404 1.0089 0.9885 0.0305 0.0300 -0.0005
 + - cost(#4)=-0.048298  
 + -- Parameters = -5.9847 -22.3631 11.2820 -3.6502 -32.6747 8.3813 1.0181 1.0243 0.9884 -0.0017 -0.0027 0.0088
 + - cost(#5)=-0.048935  
 + -- Parameters = -6.5760 -16.7310 6.7762 -16.2620 -17.5210 -1.7387 1.0380 0.9647 1.0192 -0.0012 0.0011 0.0287
 + - cost(#6)=-0.045112  
 + -- Parameters = -11.3280 -14.6616 10.2304 -8.9804 -21.9114 10.1877 1.0214 1.0084 1.0122 0.0004 0.0051 0.0088
 + - cost(#7)=-0.041416  
 + -- Parameters = -10.9090 -22.4682 11.0772 -9.0254 -32.7691 10.9276 1.0085 1.0211 0.9983 -0.0024 -0.0024 0.0065
 + - cost(#8)=-0.041408  
 + -- Parameters = -12.8487 -22.7719 8.6815 -12.5205 -29.8995 9.8879 0.9900 0.9967 0.9946 -0.0089 -0.0061 0.0111
 + - cost(#9)=-0.034158  
 + -- Parameters = -14.0788 -6.5707 11.7799 -7.4126 -14.3881 18.9659 0.9991 1.0002 1.0172 0.0003 0.0068 0.0093
 + - cost(#10)=-0.030989  
 + -- Parameters = -17.1911 -28.4093 7.3679 -4.9477 -40.1712 28.1950 0.9963 1.0087 1.0014 0.0056 0.0016 0.0037
 + - cost(#11)=-0.014745  
 + -- Parameters = -15.6043 -17.6838 11.5998 -34.5774 -12.8391 20.6802 1.0120 1.0075 1.0169 0.0028 0.0071 0.0108
 + - cost(#12)=-0.087464  
 + -- Parameters = 0.4109 -0.3947 -3.3317 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.399015 *
 + -- Parameters = 0.1964 -0.7401 0.6920 -0.2510 -1.8418 0.0090 1.0039 1.0107 0.9955 -0.0090 0.0046 -0.0196
 + - cost(#2)=-0.056460  
 + -- Parameters = -3.7450 -18.4371 8.8798 -9.9800 -28.3648 -3.8389 1.0228 1.0330 0.9472 0.0083 0.0135 0.0075
 + - cost(#3)=-0.054493  
 + -- Parameters = -4.8856 -16.1680 9.2625 -12.9681 -24.0961 -4.8869 1.0404 1.0098 0.9894 0.0304 0.0297 0.0038
 + - cost(#4)=-0.049436  
 + -- Parameters = -5.8008 -22.0933 11.0932 -3.4551 -32.3682 8.2995 1.0164 1.0332 0.9877 -0.0018 -0.0015 0.0071
 + - cost(#5)=-0.049933  
 + -- Parameters = -6.4535 -16.8975 7.2692 -16.3935 -17.9875 -2.0205 1.0391 0.9690 1.0192 0.0008 0.0018 0.0275
 + - cost(#6)=-0.049179  
 + -- Parameters = -9.9036 -13.4477 10.1395 -7.6257 -21.4601 9.0508 1.0135 1.0098 0.9997 0.0023 0.0087 0.0054
 + - cost(#7)=-0.042433  
 + -- Parameters = -10.4836 -22.3971 11.3639 -8.9682 -32.5546 10.7219 1.0146 1.0227 1.0026 -0.0022 -0.0029 0.0076
 + - cost(#8)=-0.043164  
 + -- Parameters = -12.9159 -22.5901 9.0190 -12.3912 -29.7802 10.5544 0.9917 1.0031 0.9838 -0.0052 -0.0061 0.0119
 + - cost(#9)=-0.035728  
 + -- Parameters = -13.7230 -5.6816 11.2776 -7.6975 -13.5477 18.2297 0.9976 1.0157 1.0161 -0.0036 0.0069 0.0103
 + - cost(#10)=-0.032469  
 + -- Parameters = -16.9519 -28.5135 7.2805 -4.9562 -40.5297 28.0872 0.9955 1.0309 1.0001 0.0051 0.0005 0.0050
 + - cost(#11)=-0.015220  
 + -- Parameters = -15.8677 -17.5724 11.5637 -34.6109 -12.6190 20.6725 1.0126 1.0052 1.0173 -0.0012 0.0065 0.0109
 + - cost(#12)=-0.388010  
 + -- Parameters = 0.2577 -0.7798 0.6417 -0.1169 -0.7645 0.2958 1.0095 1.0195 1.0144 -0.0039 -0.0027 0.0034
 + - case #1 is now the best
 + - Initial  cost = -0.399015
 + - Initial fine Parameters = 0.1964 -0.7401 0.6920 -0.2510 -1.8418 0.0090 1.0039 1.0107 0.9955 -0.0090 0.0046 -0.0196
 + - Finalish cost = -0.399081 ; 84 funcs
 + - Final    cost = -0.399696 ; 682 funcs
 + Final fine fit Parameters:
       x-shift= 0.1742   y-shift=-0.6986   z-shift= 0.6833
       z-angle=-0.2103   x-angle=-2.3300   y-angle=-0.2013
       x-scale= 1.0048   y-scale= 1.0098   z-scale= 0.9923
     y/x-shear=-0.0087 z/x-shear= 0.0095 z/y-shear=-0.0288
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.1742 -0.6986 0.6833 -0.2103 -2.3300 -0.2013 1.0048 1.0098 0.9923 -0.0087 0.0095 -0.0288
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 33.1
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.500000 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0036 -0.9875 0.1748 240.9290 0.0070 0.2074 0.9781 75.5914 -1.0048 -0.0035 -0.0035 200.7227
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.2
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base MNI152_T1_2009c+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 27.1 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2649.790100 ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 134.724 58.2224   ITER = 7/137
134.724

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=0 xtop=0  ybot=1 ytop=2  zbot=15 ztop=0 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 193 x 232 x 208 volume ; autobbox = 19..173 21..211 17..179 [clock= 17s 29ms]
lev=0 0..192 0..231 0..199: [first cost=-0.75295] ... done [cost:-0.75295==>-0.81629]
lev=1 patch=145x175x157 [clock= 31m 0s 118ms]........:[cost=-0.83542]:........ done [cost:-0.81629==>-0.83756 ; 16 patches optimized, 0 skipped]
lev=2 patch=109x131x117 [clock= 50m 49s 754ms]..................... done [cost:-0.83756==>-0.90403 ; 21 patches optimized, 6 skipped]
lev=3 patch=81x99x89 [clock= 1h 4m 47s 276ms]........... done [cost:-0.90403==>-0.97794 ; 41 patches optimized, 23 skipped]
lev=4 patch=61x73x67 [clock= 1h 18m 2s 259ms]....... done [cost:-0.97794==>-1.02994 ; 73 patches optimized, 52 skipped]
lev=5 patch=47x55x49 [clock= 1h 27m 30s 995ms]............. done [cost:-1.02994==>-1.09422 ; 193 patches optimized, 150 skipped]
lev=6 patch=35x41x37 [clock= 1h 37m 54s 596ms].................... done [cost:-1.09422==>-1.14349 ; 451 patches optimized, 359 skipped]
lev=7 patch=25x25x25 [clock= 1h 48m 34s 402ms]................................... done [cost:-1.14349==>-1.24071 ; 1528 patches optimized, 1384 skipped]
++ ========== total number of parameters 'optimized' = 56049
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 2h 0m 20s 273ms
#++ Applying warps to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0782/tb0782.srtt_v3/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 19.1 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI152_T1_2009c+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
if ( ! -f Sag3DMPRAGEs002a1001_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.tb0782.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb0782.r01.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Reading input dataset ./pb02.tb0782.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29856 voxels
 + 4676 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.169  pitch=-0.033  yaw=-0.402  dS=-0.409  dL=-0.237  dP=-0.022
++ Mean: roll=-0.054  pitch=+0.141  yaw=-0.206  dS=-0.141  dL=-0.097  dP=+0.008
++ Max : roll=+0.010  pitch=+0.538  yaw=+0.029  dS=+0.100  dL=+0.017  dP=+0.079
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.06(0.06) 0.06(0.01) 0.06(0.04) 0.09(0.05) 0.13(0.05) 0.14(0.03) 0.14(0.03) 0.13(0.01) 0.13(0.01) 0.13(0.03) 0.14(0.03) 0.11(0.04) 0.08(0.04) 0.07(0.03) 0.07(0.02) 0.07(0.02) 0.06(0.01) 0.07(0.02) 0.08(0.02) 0.07(0.02) 0.04(0.03) 0.05(0.02) 0.03(0.03) 0.03(0.03) 0.03(0.01) 0.05(0.03) 0.03(0.03) 0.05(0.04) 0.04(0.02) 0.03(0.02) 0.04(0.02) 0.03(0.03) 0.06(0.05) 0.50(0.54) 0.75(0.27) 0.71(0.07) 0.69(0.06) 0.62(0.10) 0.58(0.05) 0.58(0.03) 0.56(0.03) 0.55(0.01) 0.52(0.04) 0.50(0.03) 0.47(0.04) 0.46(0.03) 0.44(0.02) 0.43(0.03) 0.41(0.04) 0.37(0.08) 0.37(0.04) 0.39(0.03) 0.39(0.03) 0.39(0.02) 0.39(0.02) 0.40(0.02) 0.37(0.04) 0.37(0.02) 0.38(0.02) 0.38(0.02) 0.38(0.01) 0.39(0.02) 0.37(0.02) 0.37(0.02) 0.36(0.02) 0.36(0.02) 0.36(0.02) 0.35(0.03) 0.34(0.02) 0.35(0.03) 0.36(0.01) 0.35(0.02) 0.34(0.03) 0.34(0.09) 1.22(0.97) 1.35(0.16) 1.23(0.13) 1.17(0.07) 1.12(0.06) 1.08(0.04) 1.06(0.04) 1.03(0.04) 1.00(0.04) 0.98(0.02) 0.95(0.04) 0.96(0.01) 0.94(0.05) 0.92(0.03) 0.92(0.03) 0.92(0.02) 0.91(0.02) 0.88(0.03) 0.90(0.02) 0.86(0.04) 0.85(0.03) 0.83(0.03) 0.82(0.02) 0.82(0.02) 0.81(0.01) 0.81(0.02) 0.79(0.03) 0.80(0.02) 0.77(0.06) 0.75(0.03) 0.71(0.06) 0.72(0.03) 0.71(0.05) 0.72(0.01) 0.71(0.03) 0.70(0.02) 0.69(0.03) 0.69(0.02) 0.68(0.03) 0.68(0.02) 0.68(0.03) 0.67(0.03) 0.66(0.02) 0.66(0.02) 0.68(0.03) 0.67(0.04) 0.66(0.03) 0.66(0.01) 0.64(0.03) 0.63(0.02) 0.62(0.02) 0.63(0.02) 0.62(0.03) 0.62(0.01) 0.62(0.01) 0.61(0.03) 0.61(0.02) 0.61(0.02) 0.61(0.02) 0.61(0.01) 0.60(0.02) 0.63(0.03) 0.60(0.05) 0.67(0.12) 1.10(0.54) 0.98(0.21) 0.96(0.03) 0.93(0.09) 0.87(0.07) 0.78(0.09) 0.75(0.04) 0.74(0.04) 0.72(0.02) 0.72(0.02) 0.73(0.08)
++ Max displacement in automask = 1.35 (mm) at sub-brick 76
++ Max delta displ  in automask = 0.97 (mm) at sub-brick 75
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.tb0782.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb0782.r01.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb0782.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb0782.r01.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ opened source dataset 'pb02.tb0782.r01.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 440.6 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.500000 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.tb0782.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb0782.r02.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Reading input dataset ./pb02.tb0782.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29880 voxels
 + 4672 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.810  pitch=-0.501  yaw=-0.796  dS=-0.635  dL=-0.889  dP=-0.081
++ Mean: roll=-0.493  pitch=-0.140  yaw=-0.473  dS=-0.359  dL=-0.498  dP=-0.014
++ Max : roll=-0.112  pitch=+0.193  yaw=-0.154  dS=-0.160  dL=+0.011  dP=+0.064
++ Max displacements (mm) for each sub-brick:
 0.67(0.00) 0.78(0.27) 0.78(0.07) 0.73(0.05) 0.66(0.08) 0.67(0.02) 0.65(0.03) 0.65(0.04) 0.65(0.02) 0.65(0.02) 0.67(0.04) 0.66(0.03) 0.69(0.05) 0.66(0.48) 0.92(0.39) 0.76(0.25) 0.72(0.07) 0.68(0.07) 0.64(0.03) 0.63(0.02) 0.63(0.02) 0.65(0.04) 0.64(0.04) 0.65(0.05) 0.66(0.03) 0.66(0.02) 0.68(0.02) 0.68(0.02) 0.69(0.02) 0.69(0.02) 0.69(0.03) 0.69(0.04) 0.69(0.02) 0.69(0.04) 0.69(0.03) 0.69(0.02) 0.68(0.03) 0.69(0.04) 0.68(0.02) 0.69(0.02) 0.71(0.02) 0.73(0.04) 0.72(0.03) 0.74(0.04) 0.73(0.02) 0.75(0.02) 0.76(0.01) 0.74(0.02) 0.73(0.02) 0.72(0.03) 0.70(0.03) 0.70(0.02) 0.69(0.02) 0.72(0.03) 0.74(0.04) 0.75(0.04) 0.76(0.01) 0.74(0.02) 0.72(0.02) 0.73(0.01) 0.73(0.01) 0.74(0.02) 0.71(0.03) 0.73(0.02) 0.74(0.04) 0.78(0.05) 0.97(0.40) 1.84(0.96) 2.17(0.63) 2.25(0.15) 2.24(0.10) 2.24(0.04) 2.22(0.05) 2.20(0.04) 2.20(0.02) 2.19(0.04) 2.18(0.03) 2.18(0.02) 2.18(0.04) 2.18(0.03) 2.18(0.02) 2.18(0.03) 2.17(0.05) 2.13(0.05) 2.09(0.07) 2.03(0.20) 1.89(0.68) 2.04(0.26) 2.09(0.26) 2.07(0.04) 2.06(0.04) 2.05(0.02) 2.06(0.04) 2.07(0.02) 2.06(0.02) 2.06(0.02) 2.06(0.04) 2.04(0.35) 2.21(0.29) 2.19(0.28) 2.20(0.13) 2.16(0.12) 2.14(0.04) 2.14(0.03) 2.10(0.05) 2.10(0.02) 2.12(0.03) 2.12(0.02) 2.13(0.03) 2.15(0.03) 2.16(0.03) 2.15(0.01) 2.14(0.03) 2.13(0.01) 2.15(0.02) 2.15(0.05) 2.14(0.02) 2.15(0.05) 2.13(0.05) 2.08(0.07) 2.12(0.11) 2.11(0.03) 2.10(0.03) 2.10(0.03) 2.08(0.04) 2.09(0.02) 2.08(0.02) 2.09(0.02) 2.09(0.02) 2.09(0.01) 2.10(0.02) 2.10(0.02) 2.09(0.02) 2.10(0.01) 2.10(0.02) 2.10(0.04) 2.09(0.05) 2.11(0.07) 2.33(0.65) 2.38(0.19) 2.32(0.19) 2.29(0.14) 2.22(0.14) 2.16(0.06) 2.16(0.01) 2.19(0.03) 2.15(0.05) 2.12(0.04) 2.10(0.03) 2.04(0.07)
++ Max displacement in automask = 2.38 (mm) at sub-brick 139
++ Max delta displ  in automask = 0.96 (mm) at sub-brick 67
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.tb0782.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb0782.r02.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb0782.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb0782.r02.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ opened source dataset 'pb02.tb0782.r02.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 447.3 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.500000 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.tb0782.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb0782.r03.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ Reading input dataset ./pb02.tb0782.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29987 voxels
 + 4733 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.664  pitch=+0.029  yaw=-0.648  dS=-0.833  dL=-0.698  dP=-0.265
++ Mean: roll=-0.397  pitch=+0.217  yaw=-0.383  dS=-0.546  dL=-0.366  dP=-0.215
++ Max : roll=-0.265  pitch=+0.654  yaw=-0.202  dS=-0.399  dL=-0.190  dP=-0.143
++ Max displacements (mm) for each sub-brick:
 1.04(0.00) 1.21(0.20) 1.20(0.12) 1.10(0.15) 1.13(0.09) 1.13(0.06) 1.09(0.05) 1.06(0.04) 1.07(0.03) 1.04(0.03) 1.02(0.04) 1.03(0.03) 1.04(0.03) 1.07(0.04) 1.09(0.03) 1.10(0.03) 1.11(0.02) 1.11(0.02) 1.10(0.02) 1.11(0.02) 1.11(0.05) 1.13(0.04) 1.13(0.01) 1.11(0.02) 1.13(0.03) 1.14(0.03) 1.13(0.03) 1.13(0.03) 1.10(0.03) 1.10(0.01) 1.11(0.01) 1.11(0.02) 1.11(0.03) 1.10(0.02) 1.11(0.04) 1.07(0.07) 1.22(0.22) 1.60(0.39) 1.30(0.34) 1.35(0.09) 1.32(0.05) 1.30(0.03) 1.28(0.04) 1.27(0.04) 1.28(0.02) 1.26(0.04) 1.26(0.03) 1.23(0.03) 1.22(0.03) 1.21(0.02) 1.23(0.04) 1.23(0.01) 1.18(0.06) 1.11(0.08) 1.13(0.02) 1.12(0.06) 1.10(0.03) 1.10(0.02) 1.09(0.02) 1.09(0.03) 1.08(0.04) 1.10(0.04) 1.11(0.02) 1.11(0.01) 1.09(0.02) 1.08(0.02) 1.07(0.01) 1.07(0.01) 1.06(0.02) 1.08(0.02) 1.07(0.01) 1.07(0.02) 1.09(0.02) 1.05(0.04) 1.20(0.18) 1.70(0.65) 1.60(0.37) 1.59(0.07) 1.53(0.08) 1.53(0.06) 1.49(0.04) 1.46(0.06) 1.45(0.02) 1.46(0.03) 1.47(0.02) 1.45(0.05) 1.45(0.02) 1.46(0.02) 1.47(0.05) 1.40(0.13) 1.40(0.04) 1.42(0.05) 1.41(0.02) 1.40(0.02) 1.39(0.02) 1.40(0.02) 1.42(0.03) 1.41(0.03) 1.42(0.03) 1.42(0.02) 1.42(0.02) 1.42(0.03) 1.43(0.02) 1.42(0.03) 1.43(0.02) 1.43(0.02) 1.43(0.01) 1.43(0.01) 1.43(0.01) 1.43(0.02) 1.44(0.02) 1.46(0.03) 1.45(0.02) 1.45(0.02) 1.45(0.03) 1.47(0.03) 1.50(0.04) 1.48(0.02) 1.47(0.02) 1.47(0.04) 1.48(0.01) 1.50(0.02) 1.49(0.04) 1.46(0.07) 1.86(0.64) 2.56(0.73) 2.44(0.31) 2.48(0.10) 2.45(0.05) 2.44(0.07) 2.34(0.12) 2.34(0.02) 2.34(0.03) 2.31(0.05) 2.30(0.03) 2.28(0.03) 2.25(0.04) 2.22(0.05) 2.20(0.04) 2.19(0.04) 2.17(0.04) 2.15(0.04) 2.17(0.06) 2.15(0.05) 2.15(0.05) 2.10(0.06) 2.06(0.06) 1.96(0.11) 1.94(0.07) 1.92(0.04)
++ Max displacement in automask = 2.56 (mm) at sub-brick 125
++ Max delta displ  in automask = 0.73 (mm) at sub-brick 125
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.tb0782.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb0782.r03.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb0782.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb0782.r03.tshift+orig.BRIK is 12.500000 degrees from plumb.
++ opened source dataset 'pb02.tb0782.r03.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 446.9 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.500000 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb0782.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0782.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb0782.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0782.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb0782.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0782.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source vr_base+orig -nwarp anat.un.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.500000 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 9.1 sec
3dcopy Sag3DMPRAGEs002a1001_ns+tlrc anat_final.tb0782
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.tb0782+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0782+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets
++ 1916089 voxels in source_automask+0
++ Zero-pad: ybot=4 ytop=4
++ Computing -autobox
++ 315355 voxels [91.7%] in weight mask
++ Number of points for matching = 148216
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.143697
   sp   = 0.230718
   mi   = -0.614092
   crM  = 0.0384251
   nmi  = 0.854976
   je   = 3.62028
   hel  = -0.128184
   crA  = 0.196983
   crU  = 0.216409
   lss  = 0.856303
   lpc  = 0.107584
   lpa  = 0.892416
   lpc+ = 0.239241
   ncd  = 0.966583
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.0
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0782+tlrc -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0782+tlrc'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 21.0 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb0782.r01.blur pb03.tb0782.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb0782.r01.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb0782.r02.blur pb03.tb0782.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb0782.r02.blur+tlrc.BRIK

end
3dmerge -1blur_fwhm 6 -doall -prefix pb04.tb0782.r03.blur pb03.tb0782.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (178.1 MB)
......................................................................................................................................................-- Wrote edited dataset: ./pb04.tb0782.r03.blur+tlrc.BRIK

end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb04.tb0782.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb0782.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 354.414398
 + Used gradual clip level = 326.684845 .. 394.714600
 + Number voxels above clip level = 72419
 + Clustering voxels ...
 + Largest cluster has 71800 voxels
 + Clustering voxels ...
 + Largest cluster has 71619 voxels
 + Filled   101 voxels in small holes; now have 71720 voxels
 + Clustering voxels ...
 + Largest cluster has 71720 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239576 voxels
 + Mask now has 71720 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 229795 voxels
++ 81501 voxels in the mask [out of 311296: 26.18%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    4 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    8 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb04.tb0782.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb0782.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 354.971405
 + Used gradual clip level = 326.599243 .. 395.142395
 + Number voxels above clip level = 72400
 + Clustering voxels ...
 + Largest cluster has 71750 voxels
 + Clustering voxels ...
 + Largest cluster has 71593 voxels
 + Filled    90 voxels in small holes; now have 71683 voxels
 + Clustering voxels ...
 + Largest cluster has 71683 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239613 voxels
 + Mask now has 71683 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 229837 voxels
++ 81459 voxels in the mask [out of 311296: 26.17%]
++ first   7 x-planes are zero [from L]
++ last    6 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    4 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    8 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb04.tb0782.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb0782.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 355.189331
 + Used gradual clip level = 326.767853 .. 396.363495
 + Number voxels above clip level = 72543
 + Clustering voxels ...
 + Largest cluster has 71886 voxels
 + Clustering voxels ...
 + Largest cluster has 71678 voxels
 + Filled    96 voxels in small holes; now have 71774 voxels
 + Clustering voxels ...
 + Largest cluster has 71774 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 239522 voxels
 + Mask now has 71774 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 229726 voxels
++ 81570 voxels in the mask [out of 311296: 26.20%]
++ first   7 x-planes are zero [from L]
++ last    7 x-planes are zero [from R]
++ first   5 y-planes are zero [from P]
++ last    4 y-planes are zero [from A]
++ first   3 z-planes are zero [from I]
++ last    8 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.tb0782
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 81735 survived, 229561 were zero
++ writing result full_mask.tb0782...
3dresample -master full_mask.tb0782+tlrc -input Sag3DMPRAGEs002a1001_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.tb0782
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 101914 survived, 209382 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0782...
3dABoverlap -no_automask full_mask.tb0782+tlrc mask_anat.tb0782+tlrc
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#A=./full_mask.tb0782+tlrc.BRIK  B=./mask_anat.tb0782+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
81735        101914       102623       81026        709          20888         0.8674     20.4957     1.0946     1.0088     1.3128
3ddot -dodice full_mask.tb0782+tlrc mask_anat.tb0782+tlrc
tee out.mask_ae_dice.txt
0.882401	
3dresample -master full_mask.tb0782+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_openmp_64/MNI152_T1_2009c+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 71790 survived, 239506 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
foreach run ( 01 02 03 )
3dTstat -prefix rm.mean_r01 pb04.tb0782.r01.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r01+tlrc.BRIK
3dcalc -a pb04.tb0782.r01.blur+tlrc -b rm.mean_r01+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb0782.r01.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb0782.r01.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r02 pb04.tb0782.r02.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r02+tlrc.BRIK
3dcalc -a pb04.tb0782.r02.blur+tlrc -b rm.mean_r02+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb0782.r02.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb0782.r02.scale+tlrc.BRIK
end
3dTstat -prefix rm.mean_r03 pb04.tb0782.r03.blur+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.mean_r03+tlrc.BRIK
3dcalc -a pb04.tb0782.r03.blur+tlrc -b rm.mean_r03+tlrc -c mask_epi_extents+tlrc -expr c * min(200, a/b*100)*step(a)*step(b) -prefix pb05.tb0782.r03.scale
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb05.tb0782.r03.scale+tlrc.BRIK
end
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0782
total number of censored TRs (simple form) = 18
1deval -a motion_tb0782_censor.1D -b outcount_tb0782_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D                  
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0782_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb05.tb0782.r01.scale+tlrc.HEAD pb05.tb0782.r02.scale+tlrc.HEAD pb05.tb0782.r03.scale+tlrc.HEAD -censor censor_tb0782_combined_2.1D -polort 3 -local_times -num_stimts 18 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll_01 -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch_01 -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw_01 -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS_01 -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL_01 -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP_01 -stim_file 13 motion_deriv.1D[0] -stim_base 13 -stim_label 13 roll_02 -stim_file 14 motion_deriv.1D[1] -stim_base 14 -stim_label 14 pitch_02 -stim_file 15 motion_deriv.1D[2] -stim_base 15 -stim_label 15 yaw_02 -stim_file 16 motion_deriv.1D[3] -stim_base 16 -stim_label 16 dS_02 -stim_file 17 motion_deriv.1D[4] -stim_base 17 -stim_label 17 dL_02 -stim_file 18 motion_deriv.1D[5] -stim_base 18 -stim_label 18 dP_02 -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +uns1 -str1 -glt_label 4 unstructured-structured BL1 -gltsym SYM: +uns2 -str2 -glt_label 5 unstructured-structured BL2 -gltsym SYM: +uns3 -str3 -glt_label 6 unstructured-structured BL3 -gltsym SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3 -glt_label 7 task -gltsym SYM: +uns1 +str1 -glt_label 8 task BL1 -gltsym SYM: +uns2 +str2 -glt_label 9 task BL2 -gltsym SYM: +uns3 +str3 -glt_label 10 task BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0782 -errts errts.tb0782 -bucket stats.tb0782
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 596,852 bytes (about 597 thousand [kilo])
++ loading dataset pb05.tb0782.r01.scale+tlrc.HEAD pb05.tb0782.r02.scale+tlrc.HEAD pb05.tb0782.r03.scale+tlrc.HEAD
++ current memory malloc-ated = 561,233,818 bytes (about 561 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 272541 voxels (out of 311296 = 87.6%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 -str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 -str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  -1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +str1':
   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns2 +str2':
   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns3 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 425 (after)
 + Number of parameters:  30 [24 baseline ; 6 signal]
++ total shared memory needed = 1,181,679,616 bytes (about 1.2 billion [giga])
++ current memory malloc-ated = 561,588,718 bytes (about 562 million [mega])
++ mmap() memory allocated: 1,181,679,616 bytes (about 1.2 billion [giga])
++ Memory required for output bricks = 1,181,679,616 bytes (about 1.2 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb05.tb0782.r01.scale+tlrc.HEAD pb05.tb0782.r02.scale+tlrc.HEAD pb05.tb0782.r03.scale+tlrc.HEAD" \
 -fout -tout -Rbuck stats.tb0782_REML -Rvar stats.tb0782_REMLvar \
 -Rfitts fitts.tb0782_REML -Rerrts errts.tb0782_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (425x30):  9.91806  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (425x6):  1.03812  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (425x24):  9.38898  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (425x12):  5.83093  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (425x12):  1.03224  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 6.79462e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.56 s
++ Voxels in dataset: 311296
++ Voxels per job:    31129
++ Job #1: processing voxels 31129 to 62257; elapsed time=10.563
++ Job #2: processing voxels 62258 to 93386; elapsed time=10.586
++ Job #3: processing voxels 93387 to 124515; elapsed time=10.612
++ Job #4: processing voxels 124516 to 155644; elapsed time=10.638
++ Job #5: processing voxels 155645 to 186773; elapsed time=10.685
++ Job #6: processing voxels 186774 to 217902; elapsed time=10.721
++ Job #7: processing voxels 217903 to 249031; elapsed time=10.757
++ Job #8: processing voxels 249032 to 280160; elapsed time=10.800
++ Job #0: processing voxels 0 to 31128; elapsed time=10.840
++ voxel loop:++ Job #9: processing voxels 280161 to 311295; elapsed time=10.847
0123456789.0123456789.0123456789.0123456789.0123456++ Job #6 finished; elapsed time=80.892
++ Job #2 finished; elapsed time=81.292
++ Job #1 finished; elapsed time=81.330
7++ Job #9 finished; elapsed time=81.711
++ Job #4 finished; elapsed time=81.776
++ Job #7 finished; elapsed time=82.021
8++ Job #5 finished; elapsed time=82.383
++ Job #3 finished; elapsed time=82.430
9.
++ Job #0 waiting for children to finish; elapsed time=82.591
++ Job #8 finished; elapsed time=82.626
++ Job #0 now finishing up; elapsed time=82.639
++ Smallest FDR q [0 Full_Fstat] = 2.4856e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 1.72088e-13
++ Smallest FDR q [3 uns1_Fstat] = 1.7209e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 1.34153e-13
++ Smallest FDR q [6 uns2_Fstat] = 1.34155e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 1.8039e-13
++ Smallest FDR q [9 uns3_Fstat] = 1.80386e-13
++ Smallest FDR q [11 str1#0_Tstat] = 2.1752e-13
++ Smallest FDR q [12 str1_Fstat] = 2.17517e-13
++ Smallest FDR q [14 str2#0_Tstat] = 1.01991e-13
++ Smallest FDR q [15 str2_Fstat] = 1.01987e-13
++ Smallest FDR q [17 str3#0_Tstat] = 2.05152e-13
++ Smallest FDR q [18 str3_Fstat] = 2.05155e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 6.44768e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 6.44735e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 6.46649e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 6.46672e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 1.23094e-11
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 1.23095e-11
++ Smallest FDR q [29 unstructured-structured BL1_GLT#0_Tstat] = 1.98193e-11
++ Smallest FDR q [30 unstructured-structured BL1_GLT_Fstat] = 1.98187e-11
++ Smallest FDR q [32 unstructured-structured BL2_GLT#0_Tstat] = 8.19228e-11
++ Smallest FDR q [33 unstructured-structured BL2_GLT_Fstat] = 8.19218e-11
++ Smallest FDR q [35 unstructured-structured BL3_GLT#0_Tstat] = 6.08483e-10
++ Smallest FDR q [36 unstructured-structured BL3_GLT_Fstat] = 6.08486e-10
++ Smallest FDR q [38 task_GLT#0_Tstat] = 5.87738e-14
++ Smallest FDR q [39 task_GLT_Fstat] = 5.87738e-14
++ Smallest FDR q [41 task BL1_GLT#0_Tstat] = 1.70175e-13
++ Smallest FDR q [42 task BL1_GLT_Fstat] = 1.70165e-13
++ Smallest FDR q [44 task BL2_GLT#0_Tstat] = 1.05016e-13
++ Smallest FDR q [45 task BL2_GLT_Fstat] = 1.05017e-13
++ Smallest FDR q [47 task BL3_GLT#0_Tstat] = 1.6734e-13
++ Smallest FDR q [48 task BL3_GLT_Fstat] = 1.67338e-13
++ Wrote bucket dataset into ./stats.tb0782+tlrc.BRIK
 + created 33 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0782+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.tb0782+tlrc.BRIK
++ Program finished; elapsed time=165.738
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.737       0.799  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.722       0.788  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.712       0.779  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.487       0.565  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.475       0.552  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.460       0.534  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb05.tb0782.r01.scale+tlrc.HEAD pb05.tb0782.r02.scale+tlrc.HEAD pb05.tb0782.r03.scale+tlrc.HEAD -fout -tout -Rbuck stats.tb0782_REML -Rvar stats.tb0782_REMLvar -Rfitts fitts.tb0782_REML -Rerrts errts.tb0782_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 311296 voxels
++ FDR automask has 272541 voxels (out of 311296 = 87.6%)
++ -----  matrix condition (425x30):  9.91806  ++ VERY GOOD ++
 + masked off 71210 voxels for being all zero; 240086 left in mask
++ Converting input dataset to vector image
 +  dataset = 560 million [mega] bytes
 +  vectim  = 433 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=22.05
 + X matrix: 57.318% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=425 cols=30; 109*1 cases; total CPU=0.00 Elapsed=22.11
 +  average case bandwidth = 11.86
++ REML voxel loop: [6 threads]0123456789.0123456789.0123456789.012345678
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=195.86
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=290.39
++ Output dataset ./stats.tb0782_REMLvar+tlrc.BRIK
++ Output dataset ./fitts.tb0782_REML+tlrc.BRIK
++ Output dataset ./errts.tb0782_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.tb0782_REML+tlrc
++ Smallest FDR q [0 Full_Fstat] = 2.23847e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 5.4681e-11
++ Smallest FDR q [3 uns1_Fstat] = 5.4681e-11
++ Smallest FDR q [5 uns2#0_Tstat] = 9.49369e-11
++ Smallest FDR q [6 uns2_Fstat] = 9.49369e-11
++ Smallest FDR q [8 uns3#0_Tstat] = 3.50634e-09
++ Smallest FDR q [9 uns3_Fstat] = 3.50634e-09
++ Smallest FDR q [11 str1#0_Tstat] = 1.32107e-10
++ Smallest FDR q [12 str1_Fstat] = 1.32107e-10
++ Smallest FDR q [14 str2#0_Tstat] = 6.39946e-11
++ Smallest FDR q [15 str2_Fstat] = 6.39946e-11
++ Smallest FDR q [17 str3#0_Tstat] = 7.01723e-09
++ Smallest FDR q [18 str3_Fstat] = 7.01721e-09
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.31126e-12
++ Smallest FDR q [21 unstructured_Fstat] = 1.31126e-12
++ Smallest FDR q [23 structured#0_Tstat] = 2.0894e-12
++ Smallest FDR q [24 structured_Fstat] = 2.0894e-12
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.00399126
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.00399126
[7m*+ WARNING:[0m Smallest FDR q [29 unstructured-structured_BL1#0_Tstat] = 0.480762 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 unstructured-structured_BL1_Fstat] = 0.480762 ==> few true single voxel detections
++ Smallest FDR q [32 unstructured-structured_BL2#0_Tstat] = 0.0131056
++ Smallest FDR q [33 unstructured-structured_BL2_Fstat] = 0.0131056
[7m*+ WARNING:[0m Smallest FDR q [35 unstructured-structured_BL3#0_Tstat] = 0.119948 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 unstructured-structured_BL3_Fstat] = 0.119948 ==> few true single voxel detections
++ Smallest FDR q [38 task#0_Tstat] = 1.16632e-12
++ Smallest FDR q [39 task_Fstat] = 1.16632e-12
++ Smallest FDR q [41 task_BL1#0_Tstat] = 5.39976e-11
++ Smallest FDR q [42 task_BL1_Fstat] = 5.39976e-11
++ Smallest FDR q [44 task_BL2#0_Tstat] = 5.44986e-11
++ Smallest FDR q [45 task_BL2_Fstat] = 5.44986e-11
++ Smallest FDR q [47 task_BL3#0_Tstat] = 9.00775e-10
++ Smallest FDR q [48 task_BL3_Fstat] = 9.00773e-10
 + Added 33 FDR curves to dataset stats.tb0782_REML+tlrc
++ Output dataset ./stats.tb0782_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=369.73
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0782 pb05.tb0782.r01.scale+tlrc.HEAD pb05.tb0782.r02.scale+tlrc.HEAD pb05.tb0782.r03.scale+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 7.2 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0782+tlrc[0..32,36..73,76..137,140..162,165..215,219..234,237..246,249..286,289..335,338..373,376..422,426..449]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0782_REML+tlrc[0..32,36..73,76..137,140..162,165..215,219..234,237..246,249..286,289..335,338..373,376..422,426..449]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -c full_mask.tb0782+tlrc -expr c*a/b -prefix TSNR.tb0782
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.tb0782+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0782_REML+tlrc
++ 3dTnorm: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.tb0782+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
+++ 81735 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.101081
3dcalc -a rm.errts.unit+tlrc -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+tlrc.BRIK
3dTstat -sum -prefix corr_brain rm.DP+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+tlrc.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0782.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..32,36..73,76..137,140..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0782+tlrc[0..32,36..73,76..137,140..149]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 81735
[7m*+ WARNING:[0m removed 334 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 143 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 25.11 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..162,165..215,219..234,237..246,249..286,289..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0782+tlrc[150..162,165..215,219..234,237..246,249..286,289..299]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 81735
[7m*+ WARNING:[0m removed 334 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 139 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 25.29 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..335,338..373,376..422,426..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0782+tlrc[300..335,338..373,376..422,426..449]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 81735
[7m*+ WARNING:[0m removed 334 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 143 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 25.63 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 0 0 0 0
average errts FWHM blurs: 0 0 0 0
echo 0 0 0 0   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.56349 4.84014 12.7956 12.7938
average errts ACF blurs: 0.56349 4.84014 12.7956 12.7938
echo 0.56349 4.84014 12.7956 12.7938   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..32,36..73,76..137,140..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0782_REML+tlrc[0..32,36..73,76..137,140..149]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 81735
[7m*+ WARNING:[0m removed 334 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 143 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 25.05 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..162,165..215,219..234,237..246,249..286,289..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0782_REML+tlrc[150..162,165..215,219..234,237..246,249..286,289..299]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 81735
[7m*+ WARNING:[0m removed 334 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 139 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 25.22 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded     
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..335,338..373,376..422,426..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0782+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0782_REML+tlrc[300..335,338..373,376..422,426..449]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 81735
[7m*+ WARNING:[0m removed 334 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 143 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 25.54 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 0 0 0 0
average err_reml FWHM blurs: 0 0 0 0
echo 0 0 0 0   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.570251 4.82872 12.9223 12.7671
average err_reml ACF blurs: 0.570251 4.82872 12.9223 12.7671
echo 0.570251 4.82872 12.9223 12.7671   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0782.1D
3dClustSim -both -mask full_mask.tb0782+tlrc -acf 0.570251 4.82872 12.9223 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 81735 voxels in mask (26.26% of total)
++ Kernel function radius = 39.64 mm
++ ACF(0.57,4.83,12.92) => FWHM=12.77 => 64x76x64 pads to 96x120x96
 + Kernel image dimensions 47 x 59 x 47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 1048.0 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0782+tlrc stats.tb0782_REML+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0782+tlrc
 + atrcopy
++ applying attributes
++ Processing AFNI dataset stats.tb0782_REML+tlrc
 + atrcopy
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0782 -dsets pb00.tb0782.r01.tcat+orig.HEAD pb00.tb0782.r02.tcat+orig.HEAD pb00.tb0782.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+tlrc.BRIK rm.DP+tlrc.HEAD rm.epi.1.r01+tlrc.BRIK.gz rm.epi.1.r01+tlrc.HEAD rm.epi.1.r02+tlrc.BRIK.gz rm.epi.1.r02+tlrc.HEAD rm.epi.1.r03+tlrc.BRIK.gz rm.epi.1.r03+tlrc.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+tlrc.BRIK.gz rm.epi.mean+tlrc.HEAD rm.epi.min.r01+tlrc.BRIK.gz rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.BRIK.gz rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.BRIK.gz rm.epi.min.r03+tlrc.HEAD rm.epi.nomask.r01+tlrc.BRIK rm.epi.nomask.r01+tlrc.HEAD rm.epi.nomask.r02+tlrc.BRIK rm.epi.nomask.r02+tlrc.HEAD rm.epi.nomask.r03+tlrc.BRIK rm.epi.nomask.r03+tlrc.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK.gz rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.BRIK.gz rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.BRIK.gz rm.mask_r03+tlrc.HEAD rm.mean_r01+tlrc.BRIK rm.mean_r01+tlrc.HEAD rm.mean_r02+tlrc.BRIK rm.mean_r02+tlrc.HEAD rm.mean_r03+tlrc.BRIK rm.mean_r03+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.resam.anat+tlrc.BRIK rm.resam.anat+tlrc.HEAD rm.resam.group+tlrc.BRIK rm.resam.group+tlrc.HEAD rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0782.txt
./@ss_review_basic

subject ID                : tb0782
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0782+tlrc.HEAD
final stats dset          : stats.tb0782_REML+tlrc.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 10
average motion (per TR)   : 0.0394734
average censored motion   : 0.0272814
max motion displacement   : 1.63271
max censored displacement : 1.63271
outlier limit             : 0.1
average outlier frac (TR) : 0.0153281
num TRs above out limit   : 20

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 143 139 143
num TRs per run (censored): 7 11 7
fraction censored per run : 0.0466667 0.0733333 0.0466667
TRs total (uncensored)    : 450
TRs total                 : 425
degrees of freedom used   : 30
degrees of freedom left   : 395

TRs censored              : 25
censor fraction           : 0.055556
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 2 8 0 5 7 7
fraction TRs censored     : 0.029 0.118 0.000 0.045 0.063 0.063
ave mot per sresp (orig)  : 0.025975 0.061136 0.021049 0.029701 0.040413 0.039802
ave mot per sresp (cens)  : 0.020882 0.034015 0.021049 0.020741 0.024895 0.026424

TSNR average              : 260.747
global correlation (GCOR) : 0.101081
anat/EPI mask Dice coef   : 0.882401
maximum F-stat (masked)   : 24.5802
blur estimates (ACF)      : 0.570251 4.82872 12.9223
blur estimates (FWHM)     : 0 0 0


cd ..
echo execution finished: `date`
date
execution finished: Wed Jan  3 12:46:32 EST 2018
