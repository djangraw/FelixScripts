echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb5896
endif
set output_dir = tb5896.srtt
if ( -d tb5896.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb5896.srtt
mkdir tb5896.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb5896.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb5896.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb5896.srtt/pb00.tb5896.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.3 s
3dTcat -prefix tb5896.srtt/pb00.tb5896.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.5 s
3dTcat -prefix tb5896.srtt/pb00.tb5896.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.9 s
set tr_counts = ( 150 150 150 )
cd tb5896.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb5896.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb5896.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb5896.r01.tcat+orig.BRIK is 14.900002 degrees from plumb.
++ 28297 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb5896.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb5896.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb5896.r02.tcat+orig.BRIK is 14.900002 degrees from plumb.
++ 28052 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb5896.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb5896.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb5896.r03.tcat+orig.BRIK is 14.900002 degrees from plumb.
++ 28056 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb5896.r01.tshift -tpattern alt+z2 pb00.tb5896.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb5896.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb5896.r01.tcat+orig.BRIK is 14.900002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb5896.r02.tshift -tpattern alt+z2 pb00.tb5896.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb5896.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb5896.r02.tcat+orig.BRIK is 14.900002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb5896.r03.tshift -tpattern alt+z2 pb00.tb5896.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb5896.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb5896.r03.tcat+orig.BRIK is 14.900002 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb5896.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 14.900002 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 387.041809
 + Used gradual clip level = 336.568695 .. 426.015808
 + Number voxels above clip level = 28978
 + Clustering voxels ...
 + Largest cluster has 28470 voxels
 + Clustering voxels ...
 + Largest cluster has 28064 voxels
 + Filled   240 voxels in small holes; now have 28304 voxels
 + Filled     2 voxels in large holes; now have 28306 voxels
 + Clustering voxels ...
 + Largest cluster has 28306 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 102766 voxels
 + Mask now has 28306 voxels
++ 28306 voxels in the mask [out of 131072: 21.60%]
++ first  14 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 967.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/967.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 14.900002 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1529423 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=4
++ 28305 voxels [17.3%] in weight mask
++ Number of points for matching = 28305
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.294 29.590 21.113 (index)
 + source center of mass = 84.361 168.678 159.758 (index)
 + source-target CM = -1.974 1.474 -8.566 (xyz)
 + center of mass shifts = -1.974 1.474 -8.566
++ shift param auto-range: -71.5..67.5 -68.0..71.0 -58.6..41.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -11.974213 .. 8.025787
 + Range param#2 [y-shift] = -8.526001 .. 11.473999
 + Range param#3 [z-shift] = -18.566322 .. 1.433678
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -41.974213 .. 38.025787
 + Range param#2 [y-shift] = -38.526001 .. 41.473999
 + Range param#3 [z-shift] = -48.566322 .. 31.433678
 + 12 free parameters
++ Normalized convergence radius = 0.000454
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1529423 [out of 17352896] voxels
 + base mask has 39003 [out of 163840] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=57 usiz=176.5
 + - copying weight image
 + - using 28305 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24445 total points stored in 228 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#*[#1=-0.00698805] **[#2=-0.022188] *-++o+o..++--*[#138=-0.023587] **[#144=-0.024367] *.*[#156=-0.0334622] *+*[#220=-0.039197] *-+--+---++-*[#3131=-0.0443596] *$o-
 + - best 45 costs found:
    0 v=-0.044360:  11.36 -11.86   4.77 -15.00 -30.00 -30.00  [grid]
    1 v=-0.042591:  11.45 -21.21  22.77  -4.37 -20.12 -15.12  [rand]
    2 v=-0.039197: -28.64 -25.19   4.77 -15.00 -15.00  15.00  [grid]
    3 v=-0.036964: -35.00  -3.54  28.25 -11.98  -4.28 -19.20  [rand]
    4 v=-0.033462: -15.31 -25.19   4.77 -15.00 -15.00  15.00  [grid]
    5 v=-0.033115: -28.64  14.81 -35.23 -30.00  30.00  15.00  [grid]
    6 v=-0.032178: -18.19  15.58 -43.70 -15.74  34.09   7.78  [rand]
    7 v=-0.031716: -28.64  14.81   4.77  15.00  15.00  30.00  [grid]
    8 v=-0.030877:  31.05  -3.54  28.25  11.98   4.28 -19.20  [rand]
    9 v=-0.030847:  11.36 -11.86   4.77  30.00 -30.00 -15.00  [grid]
   10 v=-0.030716: -15.39 -21.21  22.77   4.37 -20.12  15.12  [rand]
   11 v=-0.029983:  20.35 -28.16  -1.57  -8.73 -38.75 -33.73  [rand]
   12 v=-0.029821: -34.46  16.17   3.24 -11.16   9.40  34.39  [rand]
   13 v=-0.029673: -36.61 -20.77   5.74  17.65 -21.98  -4.20  [rand]
   14 v=-0.029474:  11.36 -25.19   4.77 -15.00 -30.00 -30.00  [grid]
   15 v=-0.029406:  17.81  18.22   9.11   2.96   2.59 -18.65  [rand]
   16 v=-0.029353:  20.88 -22.10   1.85  -5.91 -29.74 -29.45  [rand]
   17 v=-0.029049: -28.64 -25.19   4.77  15.00 -30.00 -15.00  [grid]
   18 v=-0.028766:  11.36 -25.19   4.77 -15.00 -15.00 -30.00  [grid]
   19 v=-0.028633:   2.11  -4.75  -0.77  -4.32 -22.85 -18.95  [rand]
   20 v=-0.028549: -28.64 -25.19  18.10 -15.00 -30.00  15.00  [grid]
   21 v=-0.028337:  -6.05  -4.75  -0.77   4.32 -22.85  18.95  [rand]
   22 v=-0.028173:  16.36  27.62 -14.61   6.51  20.18  -7.56  [rand]
   23 v=-0.027686:  11.36 -25.19 -35.23  15.00  30.00 -15.00  [grid]
   24 v=-0.027316:   2.11  -4.75  -0.77   4.32 -22.85 -18.95  [rand]
   25 v=-0.027059: -15.31 -25.19   4.77  30.00 -30.00  15.00  [grid]
   26 v=-0.026975:  31.05  -3.54  28.25  11.98  -4.28  19.20  [rand]
   27 v=-0.026808:  17.81  18.22   9.11   2.96  -2.59 -18.65  [rand]
   28 v=-0.026468:  12.23  -7.98  -3.73 -15.99 -13.53 -29.93  [rand]
   29 v=-0.026261: -37.39  30.98  -5.46  13.33   5.58 -13.04  [rand]
   30 v=-0.026145: -28.64  14.81   4.77  30.00  15.00  30.00  [grid]
   31 v=-0.026018:  22.22  -8.86 -13.09  27.51 -29.30 -27.65  [rand]
   32 v=-0.025760: -15.31 -11.86 -35.23 -15.00  30.00 -15.00  [grid]
   33 v=-0.025518: -24.83 -22.10   1.85   5.91 -29.74  29.45  [rand]
   34 v=-0.025511:  29.41  31.43  -4.16  42.54   9.20 -25.31  [rand]
   35 v=-0.025452: -28.64 -11.86 -21.90 -30.00  15.00  15.00  [grid]
   36 v=-0.025335: -26.32 -28.22   4.46  28.68 -38.91  32.36  [rand]
   37 v=-0.025207:  17.52  18.14  -5.97  30.54  19.59 -20.03  [rand]
   38 v=-0.025155: -28.64  28.14 -35.23 -15.00  15.00  30.00  [grid]
   39 v=-0.025093: -29.10 -17.40  19.17  -5.55 -17.35  23.42  [rand]
   40 v=-0.025087:  24.69  14.81  18.10  30.00  15.00 -15.00  [grid]
   41 v=-0.024913: -28.64 -11.86   4.77  30.00 -15.00 -15.00  [grid]
   42 v=-0.024572:  11.36 -11.86   4.77 -15.00 -15.00 -30.00  [grid]
   43 v=-0.024545:  32.35  18.06   0.04  16.34   8.64 -40.54  [rand]
   44 v=-0.024450: -15.31  14.81 -35.23 -15.00  30.00  15.00  [grid]
*[#8002=-0.0446621] *[#8006=-0.0469277] *[#8009=-0.0495922] *[#8012=-0.049763] *[#8013=-0.0507564] *[#8022=-0.050914] *[#8035=-0.0515474] *[#8040=-0.0529237] *[#8041=-0.0538968] *[#8042=-0.0539141] *[#8044=-0.0548624] *[#8045=-0.0553513] *[#8048=-0.0559133] *[#8049=-0.056849] *[#8052=-0.0581982] *[#8053=-0.0583979] *[#8059=-0.0592052] *[#8132=-0.0636303] *[#8140=-0.0691418] *[#8143=-0.071686] *[#8144=-0.0735351] *[#8145=-0.0765848] *[#8147=-0.0778736] *[#8148=-0.078231] *[#8149=-0.0809946] *[#8150=-0.0838581] *[#8151=-0.0858133] *[#8156=-0.085818] *[#8158=-0.0873607] *[#8159=-0.0910343] *[#8160=-0.0975708] *[#8161=-0.100202] *[#8164=-0.102118] *[#8169=-0.103184] *[#8173=-0.103425] *[#8515=-0.109161] *[#8520=-0.109795] *[#8522=-0.111221] *[#8523=-0.113341] *[#8524=-0.115718] *[#8525=-0.120694] *[#8526=-0.123123] *[#8527=-0.139954] *[#8528=-0.182626] *[#8529=-0.312566] *[#8535=-0.33068] *[#8537=-0.344431] *[#8538=-0.366019] *[#8539=-0.374783] *[#8540=-0.387911] *[#8541=-0.387979] *[#8543=-0.400181] *[#8546=-0.408786] *[#8547=-0.434636] *[#8548=-0.451878] *[#8551=-0.466593] *[#8554=-0.473635] *[#8557=-0.490918] *[#8558=-0.497392] *[#8559=-0.497514] *[#8560=-0.513062]  + - costs of the above after a little optimization:
    0 v=-0.050914:  11.67 -16.13   5.87 -15.63 -30.87 -29.97  [grid]
    1 v=-0.059205:  11.39 -24.12  21.73  -8.92 -18.93 -18.91  [rand]
    2 v=-0.045485: -29.71 -21.71   4.38 -13.40 -14.15  15.12  [grid]
    3 v=-0.043093: -33.87  -5.62  26.05 -15.97  -4.59 -22.74  [rand]
    4 v=-0.103425: -12.44 -25.42   4.65  -9.97 -14.48   3.77  [grid]
    5 v=-0.037664: -28.58  15.29 -35.45 -29.09  31.11  15.41  [grid]
    6 v=-0.041022: -16.93  15.14 -40.49 -15.80  33.54   7.70  [rand]
    7 v=-0.041433: -27.65  13.36   3.60  19.10  15.04  28.15  [grid]
    8 v=-0.037996:  31.60  -4.68  27.33  10.85   7.85 -20.23  [rand]
    9 v=-0.033392:  12.05 -12.04   4.41  30.71 -25.05 -14.57  [grid]
   10 v=-0.058691: -13.94 -26.90  21.29   1.38 -20.47  13.23  [rand]
   11 v=-0.056323:  16.40 -21.19  -3.65  -7.48 -33.82 -33.43  [rand]
   12 v=-0.040898: -33.93  12.69   2.36 -13.34   8.01  30.79  [rand]
   13 v=-0.032479: -37.22 -20.61   4.92  16.10 -24.68  -7.34  [rand]
   14 v=-0.053887:  12.14 -12.48   4.29 -14.82 -26.04 -28.65  [grid]
  *15 v=-0.513062:   1.63   1.39  -0.63   1.35   0.89  -0.38  [rand]
   16 v=-0.039185:  20.26 -20.10  -0.97  -8.57 -32.29 -32.68  [rand]
   17 v=-0.037770: -31.19 -25.66   4.11  14.75 -31.45 -15.55  [grid]
   18 v=-0.059870:   5.64 -25.32   1.01 -13.06 -13.78 -27.12  [grid]
   19 v=-0.068622:   5.68  -8.92  -0.60  -7.02 -20.34 -20.38  [rand]
   20 v=-0.034587: -27.54 -25.80  16.84 -18.04 -30.79  13.59  [grid]
   21 v=-0.055029:  -3.54  -1.31   3.06   3.91 -19.55  11.75  [rand]
   22 v=-0.080803:  11.53  26.56 -12.47   7.70  17.01  -4.93  [rand]
   23 v=-0.032651:   9.64 -25.12 -35.60  13.57  29.84 -12.14  [grid]
   24 v=-0.041724:   6.43  -3.33   2.07   2.36 -23.34 -18.71  [rand]
   25 v=-0.038481: -11.28 -25.27   4.66  30.00 -29.75  14.88  [grid]
   26 v=-0.031224:  31.85  -3.70  28.06  10.60  -5.24  18.21  [rand]
   27 v=-0.035192:  17.24  18.18  10.64   1.52   3.69 -18.90  [rand]
   28 v=-0.047538:  12.28  -5.14  -5.10 -11.92 -16.41 -30.13  [rand]
   29 v=-0.036005: -36.51  37.30  -7.35  13.48   7.33 -11.25  [rand]
   30 v=-0.036599: -29.38  11.20   3.93  29.13  16.16  30.17  [grid]
   31 v=-0.041605:  23.36  -6.85 -12.23  28.20 -24.16 -28.64  [rand]
   32 v=-0.029620: -15.56 -15.67 -35.25 -15.27  30.03 -15.04  [grid]
   33 v=-0.031383: -23.81 -21.31   0.05   3.05 -32.93  27.47  [rand]
   34 v=-0.032975:  30.21  30.24  -7.13  42.86  10.89 -18.82  [rand]
   35 v=-0.035450: -27.54 -14.27 -14.41 -32.04  10.67  13.45  [grid]
   36 v=-0.033055: -26.95 -26.79   6.04  28.44 -44.42  32.05  [rand]
   37 v=-0.037756:  17.86  24.12  -5.51  31.29  20.37 -18.93  [rand]
   38 v=-0.038468: -25.48  29.99 -32.79 -14.36  14.40  27.89  [grid]
   39 v=-0.067556: -26.42 -16.99  13.82  -0.95 -13.09  22.96  [rand]
   40 v=-0.030849:  23.76  15.06  17.07  29.73  15.91 -14.88  [grid]
   41 v=-0.026943: -29.38 -11.62   4.90  28.55 -14.85 -16.66  [grid]
   42 v=-0.033972:  12.16 -11.68   3.30 -10.13 -13.77 -30.82  [grid]
   43 v=-0.031276:  34.82  17.99  -1.12  22.73   8.88 -40.87  [rand]
   44 v=-0.028302: -15.21  14.76 -34.81 -15.06  30.27  19.21  [grid]
 + - save #15 for twobest
 + - save # 4 for twobest
 + - save #22 for twobest
 + - save #19 for twobest
 + - save #39 for twobest
 + - save #18 for twobest
 + - save # 1 for twobest
 + - save #10 for twobest
 + - save #11 for twobest
 + - save #21 for twobest
 + - save #14 for twobest
 + - save # 0 for twobest
 + - save #28 for twobest
 + - save # 2 for twobest
 + - save # 3 for twobest
 + - save #24 for twobest
 + - save #31 for twobest
 + - save # 7 for twobest
 + - save # 6 for twobest
 + - save #12 for twobest
 + - skip #16 for twobest: too close to set #11
 + - save #25 for twobest
 + - save #38 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=57 usiz=176.5
 + - retaining old weight image
 + - using 28305 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24495 total points stored in 247 'RHDD(13.7332)' bloks
*[#9582=-0.530899] *[#9590=-0.556496] *[#9602=-0.559605] *[#9603=-0.566027] *[#9606=-0.568782] *[#9607=-0.581295] *[#9610=-0.606132] *[#9617=-0.614425] *[#9618=-0.615883] *[#9619=-0.617178] *[#9620=-0.619589] *[#9621=-0.624537] *[#9622=-0.632645] *[#9623=-0.641154] *[#9626=-0.646924] *[#9627=-0.648337] *[#9628=-0.651216] *[#9633=-0.655648] *[#9635=-0.655924] *[#9636=-0.661857] *[#9637=-0.664769] *[#9640=-0.668824] *[#9641=-0.674109] *[#9642=-0.676175] *[#9643=-0.67621] *[#9646=-0.678809] *[#9647=-0.679444] *[#9650=-0.680196] *[#9651=-0.680691] *[#9654=-0.681173] *[#9662=-0.681574] 
 + - param set #1 has cost=-0.681574
 + -- Parameters = 0.2051 1.6626 -1.1202 -0.2680 0.6224 -0.8739 0.9921 1.0150 0.9935 -0.0037 0.0014 -0.0056
 + - param set #2 has cost=-0.096561
 + -- Parameters = -9.4124 -25.7479 5.0155 -8.0497 -15.0424 2.9622 1.0005 1.0271 1.0018 -0.0002 0.0054 0.0023
 + - param set #3 has cost=-0.070361
 + -- Parameters = 10.8000 25.7833 -12.6468 7.2097 16.8295 -4.6944 0.9915 1.0157 1.0027 -0.0029 0.0023 0.0030
 + - param set #4 has cost=-0.055161
 + -- Parameters = 6.3219 -8.1136 -0.9002 -7.7584 -19.9202 -21.2353 1.0009 0.9949 1.0000 0.0025 -0.0046 0.0091
 + - param set #5 has cost=-0.058074
 + -- Parameters = -26.3230 -16.0202 12.7168 -0.9192 -11.9938 22.6444 0.9981 1.0027 0.9947 0.0104 -0.0025 -0.0007
 + - param set #6 has cost=-0.048571
 + -- Parameters = 5.6206 -24.8698 0.8582 -12.7365 -13.6286 -27.0623 1.0001 1.0142 1.0013 -0.0006 0.0003 -0.0002
 + - param set #7 has cost=-0.038398
 + -- Parameters = 13.3732 -24.6555 21.1850 -9.0823 -18.6940 -19.0053 1.0022 0.9981 1.0007 0.0008 -0.0031 -0.0017
 + - param set #8 has cost=-0.075862
 + -- Parameters = -7.4345 -27.4427 19.0987 0.3209 -19.7036 6.8261 1.0233 0.9565 0.9990 0.0146 -0.0058 0.0171
 + - param set #9 has cost=-0.044070
 + -- Parameters = 15.9953 -21.5806 -3.7129 -7.5647 -33.6426 -33.4884 0.9986 0.9976 1.0158 -0.0009 -0.0014 -0.0013
 + - param set #10 has cost=-0.037301
 + -- Parameters = -2.6967 -2.2187 4.0580 0.8528 -19.5457 9.9488 0.9991 0.9969 0.9903 -0.0015 -0.0004 -0.0005
 + - param set #11 has cost=-0.047796
 + -- Parameters = 11.6941 -12.7696 4.4249 -15.1387 -26.0353 -28.6106 0.9953 0.9985 0.9990 -0.0007 0.0101 -0.0005
 + - param set #12 has cost=-0.669681
 + -- Parameters = -0.0958 1.6977 -0.8750 -0.2044 1.1138 -0.2262 0.9924 1.0102 1.0031 0.0061 -0.0127 0.0001
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0635 
 + --- dist(#3,#1) = 0.343 
 + --- dist(#4,#1) = 0.364 
 + --- dist(#5,#1) = 0.302 
 + --- dist(#6,#1) = 0.332 
 + --- dist(#7,#1) = 0.228 
 + --- dist(#8,#1) = 0.332 
 + --- dist(#9,#1) = 0.308 
 + --- dist(#10,#1) = 0.381 
 + --- dist(#11,#1) = 0.329 
 + --- dist(#12,#1) = 0.224 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=57 usiz=176.5
 + - retaining old weight image
 + - using 28305 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24686 total points stored in 255 'RHDD(13.5933)' bloks
*[#10545=-0.683747] *[#10546=-0.686596] *[#10549=-0.686679] *[#10551=-0.686938] *[#10555=-0.688953] *[#10558=-0.689121] *[#10561=-0.689289] *[#10564=-0.689547] *[#10565=-0.689655] *[#10566=-0.690078] *[#10569=-0.690339] *[#10576=-0.690473] *[#10584=-0.690651] *[#10587=-0.690758] *[#10588=-0.690761] 
 + - param set #1 has cost=-0.690761
 + -- Parameters = 0.2657 1.9372 -1.1109 -0.2841 0.4184 -0.9443 0.9976 1.0244 0.9970 0.0036 0.0049 -0.0113
 + - param set #2 has cost=-0.683248
 + -- Parameters = 0.0090 1.8899 -1.1090 -0.1223 0.6875 -0.2213 0.9958 1.0200 1.0004 0.0048 -0.0158 -0.0088
 + - param set #3 has cost=-0.085100
 + -- Parameters = -9.5063 -25.3850 5.2038 -7.9598 -16.0135 3.2778 1.0076 1.0491 0.9970 0.0085 0.0003 -0.0076
 + - param set #4 has cost=-0.064613
 + -- Parameters = -7.7825 -27.0206 18.8215 -0.0896 -19.7956 6.4173 1.0056 0.9615 0.9877 0.0539 -0.0143 0.0173
 + - param set #5 has cost=-0.060872
 + -- Parameters = 10.4144 26.0592 -12.2582 7.3596 16.8175 -3.7716 0.9827 1.0186 1.0016 -0.0013 0.0144 -0.0001
 + - param set #6 has cost=-0.049604
 + -- Parameters = -26.3085 -16.2288 12.7208 -0.6795 -12.1450 22.5625 0.9951 1.0011 0.9907 0.0094 -0.0039 -0.0031
 + - param set #7 has cost=-0.040771
 + -- Parameters = 6.3265 -7.9518 -0.7300 -8.3218 -19.9474 -21.8627 1.0034 0.9936 0.9992 0.0096 -0.0050 0.0068
 + - param set #8 has cost=-0.037890
 + -- Parameters = 4.0883 -26.2772 1.4246 -13.1896 -13.4966 -26.3560 0.9978 1.0128 1.0010 -0.0016 0.0009 0.0004
 + - param set #9 has cost=-0.039433
 + -- Parameters = 11.5579 -12.7112 4.5293 -15.1322 -26.0423 -28.4582 0.9946 0.9999 1.0039 -0.0010 0.0097 -0.0020
 + - param set #10 has cost=-0.036486
 + -- Parameters = 16.0285 -21.9482 -3.6132 -7.5162 -33.7106 -33.4356 0.9995 0.9992 1.0275 -0.0005 -0.0017 -0.0010
 + - param set #11 has cost=-0.033821
 + -- Parameters = 13.2095 -26.2856 17.9189 -8.8154 -17.8854 -18.4534 0.9836 0.9912 1.0064 0.0073 -0.0029 -0.0021
 + - param set #12 has cost=-0.029624
 + -- Parameters = -2.1189 -2.3826 3.5643 0.7637 -19.6106 9.3348 1.0022 1.0005 0.9879 -0.0002 0.0008 0.0019
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.093 
 + --- dist(#3,#1) = 0.342 
 + --- dist(#4,#1) = 0.362 
 + --- dist(#5,#1) = 0.302 
 + --- dist(#6,#1) = 0.332 
 + --- dist(#7,#1) = 0.232 
 + --- dist(#8,#1) = 0.306 
 + --- dist(#9,#1) = 0.353 
 + --- dist(#10,#1) = 0.379 
 + --- dist(#11,#1) = 0.353 
 + --- dist(#12,#1) = 0.223 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=57 usiz=176.5
 + - retaining old weight image
 + - using 28305 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25061 total points stored in 268 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.650760
 + -- Parameters = 0.3123 1.9002 -1.1520 -0.2105 0.1400 -0.7968 0.9989 1.0262 0.9961 0.0040 -0.0016 -0.0165
 + - param set #2 has cost=-0.645618
 + -- Parameters = 0.2098 2.0042 -1.2224 -0.1358 0.5159 -0.4790 0.9997 1.0244 0.9965 0.0054 -0.0100 -0.0107
 + - param set #3 has cost=-0.071128
 + -- Parameters = -9.1762 -25.3127 5.1252 -7.7375 -16.1923 2.9883 1.0101 1.0500 0.9895 0.0115 0.0011 -0.0100
 + - param set #4 has cost=-0.052905
 + -- Parameters = -7.3627 -26.6028 18.5595 -0.4438 -19.7403 5.9180 0.9942 0.9549 0.9794 0.0581 -0.0138 0.0147
 + - param set #5 has cost=-0.053215
 + -- Parameters = 10.3417 25.9877 -12.2288 7.4886 16.9084 -4.0066 0.9780 1.0161 1.0136 -0.0017 0.0141 0.0006
 + - param set #6 has cost=-0.037057
 + -- Parameters = -26.3123 -16.0599 12.7169 -0.7063 -12.1257 22.5792 0.9951 1.0014 0.9909 0.0140 -0.0041 -0.0032
 + - param set #7 has cost=-0.034212
 + -- Parameters = 6.6201 -8.7174 -0.9161 -8.2037 -20.0749 -22.0016 1.0100 0.9918 0.9964 0.0109 -0.0050 0.0069
 + - param set #8 has cost=-0.035944
 + -- Parameters = 11.7617 -12.8484 3.6660 -14.9981 -26.0236 -27.6446 1.0124 0.9914 0.9996 0.0007 0.0059 -0.0012
 + - param set #9 has cost=-0.030162
 + -- Parameters = 4.2836 -26.5723 1.4842 -12.9175 -13.5554 -25.9647 0.9978 1.0089 1.0027 -0.0014 0.0010 0.0010
 + - param set #10 has cost=-0.032250
 + -- Parameters = 16.1234 -21.8833 -3.6958 -7.7539 -33.6401 -32.5572 0.9991 0.9929 1.0266 -0.0024 -0.0049 -0.0008
 + - param set #11 has cost=-0.028975
 + -- Parameters = 13.4733 -24.0818 16.9649 -9.2378 -17.3597 -19.1329 0.9862 0.9952 1.0093 0.0082 -0.0019 0.0005
 + - param set #12 has cost=-0.026219
 + -- Parameters = -2.0710 -2.2727 3.4687 0.6910 -19.6156 9.3012 1.0027 0.9955 0.9820 -0.0041 0.0064 0.0007
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0376 
 + --- dist(#3,#1) = 0.34 
 + --- dist(#4,#1) = 0.301 
 + --- dist(#5,#1) = 0.356 
 + --- dist(#6,#1) = 0.333 
 + --- dist(#7,#1) = 0.298 
 + --- dist(#8,#1) = 0.236 
 + --- dist(#9,#1) = 0.375 
 + --- dist(#10,#1) = 0.356 
 + --- dist(#11,#1) = 0.325 
 + --- dist(#12,#1) = 0.22 
 + - Total coarse refinement net CPU time = 0.0 s; 3077 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=57 usiz=176.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 13 cases
 + 24977 total points stored in 268 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.603499 *
 + -- Parameters = 0.3123 1.9002 -1.1520 -0.2105 0.1400 -0.7968 0.9989 1.0262 0.9961 0.0040 -0.0016 -0.0165
 + - cost(#2)=-0.599103  
 + -- Parameters = 0.2098 2.0042 -1.2224 -0.1358 0.5159 -0.4790 0.9997 1.0244 0.9965 0.0054 -0.0100 -0.0107
 + - cost(#3)=-0.063499  
 + -- Parameters = -9.1762 -25.3127 5.1252 -7.7375 -16.1923 2.9883 1.0101 1.0500 0.9895 0.0115 0.0011 -0.0100
 + - cost(#4)=-0.047668  
 + -- Parameters = 10.3417 25.9877 -12.2288 7.4886 16.9084 -4.0066 0.9780 1.0161 1.0136 -0.0017 0.0141 0.0006
 + - cost(#5)=-0.047399  
 + -- Parameters = -7.3627 -26.6028 18.5595 -0.4438 -19.7403 5.9180 0.9942 0.9549 0.9794 0.0581 -0.0138 0.0147
 + - cost(#6)=-0.030530  
 + -- Parameters = -26.3123 -16.0599 12.7169 -0.7063 -12.1257 22.5792 0.9951 1.0014 0.9909 0.0140 -0.0041 -0.0032
 + - cost(#7)=-0.032360  
 + -- Parameters = 11.7617 -12.8484 3.6660 -14.9981 -26.0236 -27.6446 1.0124 0.9914 0.9996 0.0007 0.0059 -0.0012
 + - cost(#8)=-0.033351  
 + -- Parameters = 6.6201 -8.7174 -0.9161 -8.2037 -20.0749 -22.0016 1.0100 0.9918 0.9964 0.0109 -0.0050 0.0069
 + - cost(#9)=-0.029611  
 + -- Parameters = 16.1234 -21.8833 -3.6958 -7.7539 -33.6401 -32.5572 0.9991 0.9929 1.0266 -0.0024 -0.0049 -0.0008
 + - cost(#10)=-0.027334  
 + -- Parameters = 4.2836 -26.5723 1.4842 -12.9175 -13.5554 -25.9647 0.9978 1.0089 1.0027 -0.0014 0.0010 0.0010
 + - cost(#11)=-0.026058  
 + -- Parameters = 13.4733 -24.0818 16.9649 -9.2378 -17.3597 -19.1329 0.9862 0.9952 1.0093 0.0082 -0.0019 0.0005
 + - cost(#12)=-0.023306  
 + -- Parameters = -2.0710 -2.2727 3.4687 0.6910 -19.6156 9.3012 1.0027 0.9955 0.9820 -0.0041 0.0064 0.0007
 + - cost(#13)=-0.011308  
 + -- Parameters = -1.9742 1.4740 -8.5663 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 13 cases
 + - cost(#1)=-0.606321 *
 + -- Parameters = 0.2566 1.8791 -1.2548 -0.2285 -0.0655 -0.7402 0.9989 1.0265 0.9917 0.0055 -0.0029 -0.0197
 + - cost(#2)=-0.603750  
 + -- Parameters = 0.0685 1.9338 -1.0820 -0.3111 0.0437 -0.4635 0.9993 1.0263 0.9941 0.0027 -0.0072 -0.0155
 + - cost(#3)=-0.064395  
 + -- Parameters = -8.8079 -25.6266 5.0735 -7.7043 -16.4527 2.8662 0.9940 1.0504 0.9861 0.0117 0.0014 -0.0155
 + - cost(#4)=-0.048204  
 + -- Parameters = 10.0951 25.7936 -12.2140 7.6555 16.9255 -3.8613 0.9706 1.0161 1.0150 -0.0003 0.0136 0.0005
 + - cost(#5)=-0.049074  
 + -- Parameters = -7.1660 -26.4988 18.7230 -0.6471 -19.8632 5.4188 1.0041 0.9571 0.9783 0.0576 -0.0123 0.0149
 + - cost(#6)=-0.031463  
 + -- Parameters = -26.4725 -15.5042 12.3055 -0.9095 -11.6695 22.7375 0.9906 1.0064 0.9956 0.0172 -0.0039 -0.0005
 + - cost(#7)=-0.032706  
 + -- Parameters = 11.8270 -12.9489 3.6704 -15.0273 -26.0298 -27.6581 1.0122 0.9914 0.9995 0.0042 0.0058 -0.0010
 + - cost(#8)=-0.034728  
 + -- Parameters = 6.5110 -8.3052 -0.9080 -8.2675 -20.0393 -21.9156 1.0118 0.9880 0.9983 0.0117 -0.0030 0.0074
 + - cost(#9)=-0.032969  
 + -- Parameters = 15.1879 -22.3922 -3.4859 -8.3191 -34.0630 -30.9773 0.9981 0.9907 1.0282 -0.0054 -0.0053 0.0007
 + - cost(#10)=-0.030926  
 + -- Parameters = 2.8503 -28.6111 0.8421 -13.3746 -12.6220 -25.7129 0.9912 1.0113 1.0100 -0.0041 -0.0057 0.0112
 + - cost(#11)=-0.028471  
 + -- Parameters = 13.8004 -24.2178 17.0402 -9.0925 -17.6744 -19.1221 1.0066 0.9823 1.0128 0.0063 -0.0078 -0.0138
 + - cost(#12)=-0.023561  
 + -- Parameters = -1.9155 -2.1467 3.3792 0.4060 -19.6394 9.1543 1.0032 0.9952 0.9815 -0.0047 0.0069 0.0014
 + - cost(#13)=-0.586962  
 + -- Parameters = 0.3435 2.0427 -1.1529 -0.0934 0.8391 -0.8283 0.9993 1.0202 0.9884 0.0119 0.0040 0.0005
 + - case #1 is now the best
 + - Initial  cost = -0.606321
 + - Initial fine Parameters = 0.2566 1.8791 -1.2548 -0.2285 -0.0655 -0.7402 0.9989 1.0265 0.9917 0.0055 -0.0029 -0.0197
 + - Finalish cost = -0.610864 ; 424 funcs
 + - Final    cost = -0.610865 ; 117 funcs
 + Final fine fit Parameters:
       x-shift= 0.2020   y-shift= 1.5041   z-shift=-1.2430
       z-angle=-0.2883   x-angle=-0.9230   y-angle=-0.6871
       x-scale= 1.0008   y-scale= 1.0293   z-scale= 0.9917
     y/x-shear= 0.0033 z/x-shear=-0.0047 z/y-shear=-0.0348
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.2020 1.5041 -1.2430 -0.2883 -0.9230 -0.6871 1.0008 1.0293 0.9917 0.0033 -0.0047 -0.0348
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 22.6
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0039 -0.9894 0.2391 226.8334 -0.0183 0.2837 0.9629 41.0019 -1.0007 -0.0048 -0.0120 202.4789
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 17.5 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 4088.970100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 60.8491 48.7945   ITER = 6/137
60.8491

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 753ms]
lev=0 0..171 0..213 0..166: [first cost=-0.63521] ... done [cost:-0.63521==>-0.70326]
lev=1 patch=129x161x125 [clock= 13m 45s 169ms]........:[cost=-0.73624]:........ done [cost:-0.70326==>-0.73909 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 21m 17s 46ms]......................... done [cost:-0.73909==>-0.81062 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 28m 5s 717ms]................. done [cost:-0.81062==>-0.86576 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 33m 10s 254ms]............ done [cost:-0.86576==>-0.91885 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 36m 56s 566ms]................. done [cost:-0.91885==>-0.98565 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 40m 33s 577ms]........................ done [cost:-0.98565==>-1.00363 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 44m 2s 678ms]......................... done [cost:-1.00363==>-1.10944 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 47m 41s 996ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb5896/tb5896.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.2 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb5896.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb5896.r01.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb5896.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30186 voxels
 + 4872 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.116  pitch=-0.629  yaw=-0.121  dS=-0.593  dL=-0.114  dP=-0.153
++ Mean: roll=-0.041  pitch=-0.193  yaw=-0.037  dS=-0.178  dL=+0.063  dP=+0.082
++ Max : roll=+0.114  pitch=+0.347  yaw=+0.169  dS=+0.114  dL=+0.190  dP=+0.252
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.43(0.43) 0.61(0.39) 0.32(0.34) 0.78(0.51) 0.79(0.13) 0.40(0.76) 0.50(0.17) 0.30(0.27) 0.25(0.05) 0.25(0.09) 0.22(0.07) 0.26(0.08) 0.31(0.09) 0.27(0.06) 0.31(0.05) 0.27(0.07) 0.25(0.07) 0.30(0.06) 0.34(0.05) 0.39(0.07) 0.39(0.02) 0.37(0.03) 0.33(0.07) 0.28(0.08) 0.30(0.04) 0.32(0.05) 0.33(0.04) 0.29(0.06) 0.30(0.05) 0.25(0.05) 0.21(0.09) 0.23(0.04) 0.23(0.06) 0.21(0.08) 0.24(0.06) 0.33(0.13) 0.40(0.11) 0.33(0.10) 0.29(0.05) 0.30(0.05) 0.30(0.04) 0.31(0.03) 0.30(0.06) 0.32(0.04) 0.33(0.04) 0.35(0.02) 0.38(0.03) 0.32(0.06) 0.31(0.05) 0.36(0.05) 0.33(0.04) 0.33(0.05) 0.38(0.09) 0.40(0.05) 0.43(0.05) 0.45(0.06) 0.49(0.06) 0.50(0.05) 0.51(0.05) 0.52(0.02) 0.52(0.08) 0.54(0.09) 1.03(0.76) 1.11(0.09) 0.93(0.25) 0.77(0.25) 0.70(0.13) 0.69(0.10) 0.69(0.05) 0.63(0.15) 0.58(0.15) 0.44(0.15) 0.49(0.07) 0.48(0.03) 0.44(0.06) 0.47(0.05) 0.52(0.05) 0.53(0.06) 0.52(0.05) 0.52(0.03) 0.49(0.03) 0.49(0.05) 0.48(0.03) 0.48(0.06) 0.53(0.06) 0.56(0.05) 0.54(0.06) 0.53(0.05) 0.54(0.04) 0.54(0.03) 0.53(0.04) 0.56(0.04) 0.54(0.06) 0.53(0.05) 0.55(0.04) 0.52(0.04) 0.54(0.07) 0.53(0.05) 0.58(0.05) 0.61(0.07) 0.63(0.05) 0.64(0.02) 0.66(0.08) 0.69(0.04) 0.72(0.03) 0.72(0.03) 0.75(0.05) 0.74(0.03) 0.74(0.06) 0.74(0.06) 0.77(0.04) 0.77(0.05) 0.81(0.09) 0.76(0.06) 0.95(0.25) 1.13(0.24) 0.87(0.29) 0.87(0.12) 0.85(0.05) 0.82(0.11) 0.85(0.08) 0.92(0.09) 0.90(0.09) 0.84(0.10) 0.86(0.05) 0.85(0.05) 0.74(0.11) 0.75(0.07) 0.74(0.04) 0.77(0.07) 0.82(0.05) 0.84(0.07) 0.86(0.04) 0.73(0.14) 0.73(0.15) 0.74(0.17) 0.71(0.10) 0.78(0.10) 0.82(0.06) 0.76(0.13) 0.74(0.22) 1.37(0.73) 1.44(0.19) 0.99(0.69) 1.04(0.10) 1.02(0.12) 0.98(0.05) 0.94(0.14) 0.89(0.09)
++ Max displacement in automask = 1.44 (mm) at sub-brick 143
++ Max delta displ  in automask = 0.76 (mm) at sub-brick 63
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb5896.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb5896.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb5896.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb5896.r01.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./pb01.tb5896.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.4
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 14.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.8
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb5896.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb5896.r02.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb5896.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29809 voxels
 + 4796 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.585  pitch=-3.756  yaw=+0.896  dS=+3.544  dL=+0.821  dP=-0.873
++ Mean: roll=-0.516  pitch=-1.772  yaw=+1.275  dS=+4.187  dL=+0.911  dP=-0.651
++ Max : roll=-0.373  pitch=-1.320  yaw=+1.393  dS=+4.934  dL=+1.036  dP=-0.065
++ Max displacements (mm) for each sub-brick:
 6.88(0.00) 6.68(0.25) 6.72(0.08) 6.80(0.08) 6.82(0.07) 6.87(0.08) 6.92(0.05) 6.92(0.06) 7.09(0.23) 6.97(0.20) 6.86(0.23) 6.96(0.11) 7.03(0.07) 7.08(0.11) 7.11(0.05) 7.08(0.04) 7.06(0.06) 7.04(0.03) 7.05(0.04) 7.08(0.05) 7.11(0.03) 7.15(0.04) 7.19(0.06) 7.39(0.25) 7.33(0.14) 7.28(0.10) 7.26(0.09) 7.26(0.02) 7.29(0.04) 7.25(0.06) 7.25(0.03) 7.25(0.03) 7.24(0.05) 7.25(0.05) 7.27(0.03) 7.21(0.07) 7.22(0.06) 7.21(0.03) 7.21(0.02) 7.21(0.02) 7.29(0.08) 7.31(0.03) 7.30(0.06) 7.35(0.05) 7.32(0.03) 7.35(0.04) 7.35(0.05) 7.34(0.03) 7.30(0.05) 7.31(0.05) 7.35(0.04) 7.36(0.02) 7.45(0.10) 7.48(0.05) 7.44(0.07) 7.47(0.05) 7.46(0.04) 7.47(0.03) 7.48(0.03) 7.49(0.01) 7.47(0.05) 7.48(0.02) 7.50(0.03) 7.53(0.04) 7.52(0.03) 7.54(0.03) 7.54(0.04) 7.49(0.05) 7.52(0.04) 7.57(0.05) 7.51(0.06) 7.48(0.04) 7.48(0.02) 7.49(0.03) 7.46(0.04) 7.41(0.05) 7.44(0.04) 7.47(0.04) 7.49(0.04) 7.50(0.06) 7.47(0.06) 7.44(0.04) 7.43(0.06) 7.37(0.07) 7.37(0.04) 7.41(0.04) 7.40(0.05) 7.41(0.03) 7.43(0.03) 7.43(0.02) 7.41(0.04) 7.42(0.03) 7.43(0.08) 7.44(0.05) 7.42(0.04) 7.39(0.05) 7.37(0.03) 7.39(0.04) 7.38(0.01) 7.39(0.03) 7.40(0.01) 7.40(0.05) 7.40(0.02) 7.41(0.01) 7.42(0.04) 7.39(0.03) 7.42(0.06) 7.44(0.03) 7.45(0.04) 7.51(0.08) 7.59(0.11) 7.46(0.14) 7.50(0.05) 7.50(0.02) 7.59(0.10) 7.62(0.05) 7.61(0.05) 7.62(0.06) 7.64(0.04) 7.63(0.05) 7.60(0.05) 7.69(0.11) 7.72(0.04) 7.68(0.06) 7.68(0.02) 7.70(0.03) 7.73(0.05) 7.71(0.06) 7.71(0.04) 7.68(0.05) 7.69(0.04) 7.69(0.02) 7.70(0.05) 7.73(0.07) 7.79(0.14) 7.81(0.08) 7.42(0.40) 7.25(0.18) 7.61(0.40) 6.74(0.90) 6.46(0.30) 6.96(0.57) 7.40(0.52) 7.41(0.07) 7.38(0.13) 10.06(2.86) 11.04(1.09) 7.80(3.42) 6.78(1.12) 7.11(0.39)
++ Max displacement in automask = 11.04 (mm) at sub-brick 146
++ Max delta displ  in automask = 3.42 (mm) at sub-brick 147
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb5896.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb5896.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb5896.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb5896.r02.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./pb01.tb5896.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 14.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.4
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb5896.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb5896.r03.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb5896.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29981 voxels
 + 4808 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.731  pitch=-2.191  yaw=+0.299  dS=+2.669  dL=+0.420  dP=-0.647
++ Mean: roll=-0.688  pitch=-1.420  yaw=+0.615  dS=+2.818  dL=+0.539  dP=-0.452
++ Max : roll=-0.536  pitch=-0.952  yaw=+0.745  dS=+3.045  dL=+0.672  dP=-0.095
++ Max displacements (mm) for each sub-brick:
 4.47(0.00) 4.55(0.24) 4.83(0.29) 4.88(0.12) 4.96(0.13) 5.08(0.14) 5.08(0.07) 5.02(0.20) 5.09(0.14) 5.04(0.09) 4.99(0.15) 5.02(0.03) 4.98(0.07) 4.93(0.06) 4.90(0.08) 4.90(0.05) 4.96(0.08) 4.89(0.08) 4.85(0.06) 4.79(0.08) 4.78(0.02) 4.79(0.02) 4.81(0.05) 4.82(0.03) 4.82(0.05) 4.86(0.05) 4.88(0.04) 4.91(0.04) 4.95(0.05) 4.88(0.08) 4.88(0.03) 4.92(0.06) 5.01(0.11) 4.88(0.13) 4.89(0.06) 4.93(0.05) 4.96(0.04) 5.00(0.05) 5.06(0.07) 5.30(0.26) 5.22(0.13) 5.16(0.07) 5.15(0.12) 5.18(0.04) 5.19(0.04) 5.20(0.04) 5.21(0.01) 5.25(0.06) 5.22(0.04) 5.15(0.09) 5.13(0.04) 5.14(0.03) 5.22(0.15) 5.13(0.12) 5.12(0.10) 5.16(0.06) 5.15(0.06) 5.18(0.04) 5.24(0.08) 5.25(0.03) 5.20(0.06) 5.26(0.06) 5.25(0.02) 5.25(0.04) 5.32(0.07) 5.28(0.04) 5.27(0.05) 5.25(0.07) 5.20(0.07) 5.21(0.06) 5.19(0.04) 5.21(0.03) 5.17(0.04) 5.19(0.05) 5.18(0.04) 5.20(0.02) 5.20(0.04) 5.19(0.02) 5.19(0.03) 5.25(0.08) 5.23(0.05) 5.23(0.01) 5.22(0.05) 5.22(0.05) 5.19(0.04) 5.20(0.03) 5.18(0.05) 5.23(0.05) 5.17(0.06) 5.15(0.05) 5.14(0.05) 5.16(0.04) 5.18(0.05) 5.18(0.03) 5.19(0.04) 5.18(0.07) 5.17(0.07) 5.18(0.04) 5.22(0.07) 5.25(0.04) 5.23(0.03) 5.21(0.05) 5.26(0.08) 5.32(0.16) 5.29(0.12) 5.30(0.06) 5.31(0.07) 5.28(0.05) 5.31(0.05) 5.32(0.02) 5.33(0.03) 5.33(0.04) 5.28(0.05) 5.31(0.04) 5.28(0.05) 5.35(0.08) 5.54(0.21) 5.43(0.11) 5.40(0.06) 5.41(0.03) 5.43(0.02) 5.44(0.04) 5.48(0.05) 5.53(0.09) 5.57(0.07) 5.52(0.07) 5.48(0.06) 5.52(0.05) 5.58(0.06) 5.60(0.04) 5.56(0.05) 5.58(0.05) 5.61(0.05) 5.59(0.08) 5.50(0.10) 5.49(0.05) 5.56(0.08) 5.54(0.04) 5.51(0.05) 5.50(0.04) 5.48(0.06) 5.77(0.40) 6.47(0.73) 6.58(0.20) 6.52(0.20) 6.54(0.14) 6.48(0.12) 6.41(0.08) 6.37(0.05) 6.34(0.04)
++ Max displacement in automask = 6.58 (mm) at sub-brick 143
++ Max delta displ  in automask = 0.73 (mm) at sub-brick 142
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb5896.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb5896.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb5896.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb5896.r03.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./pb01.tb5896.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.1
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 14.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb5896.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb5896.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb5896.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb5896.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb5896.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb5896.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb5896
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb5896+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb5896+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1396479 voxels in source_automask+0
++ Zero-pad: zbot=0 ztop=1
++ Computing -autobox
++ 310068 voxels [71.5%] in weight mask
++ Number of points for matching = 145731
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.172215
   sp   = 0.340699
   mi   = -0.483821
   crM  = 0.0524628
   nmi  = 0.841744
   je   = 2.57339
   hel  = -0.0933844
   crA  = 0.229051
   crU  = 0.227737
   lss  = 0.827785
   lpc  = 0.0138549
   lpa  = 0.986145
   lpc+ = 0.178164
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.6
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb5896+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb5896+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 37.1 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb5896.r01.blur pb02.tb5896.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb5896.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb5896.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb5896.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb5896.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb5896.r02.blur pb02.tb5896.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb5896.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb5896.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb5896.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb5896.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb5896.r03.blur pb02.tb5896.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb5896.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb5896.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb5896.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb5896.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb5896.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb5896.r01.blur+orig
++ Forming automask
 + Fixed clip level = 378.242126
 + Used gradual clip level = 334.751984 .. 420.670380
 + Number voxels above clip level = 51863
 + Clustering voxels ...
 + Largest cluster has 51624 voxels
 + Clustering voxels ...
 + Largest cluster has 51592 voxels
 + Filled    35 voxels in small holes; now have 51627 voxels
 + Clustering voxels ...
 + Largest cluster has 51626 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374649 voxels
 + Mask now has 51626 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366480 voxels
++ 59795 voxels in the mask [out of 426275: 14.03%]
++ first  14 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  19 y-planes are zero [from I]
++ last   20 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb5896.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb5896.r02.blur+orig
++ Forming automask
 + Fixed clip level = 378.889038
 + Used gradual clip level = 333.411499 .. 421.677246
 + Number voxels above clip level = 51565
 + Clustering voxels ...
 + Largest cluster has 51288 voxels
 + Clustering voxels ...
 + Largest cluster has 51243 voxels
 + Filled    37 voxels in small holes; now have 51280 voxels
 + Clustering voxels ...
 + Largest cluster has 51279 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 374996 voxels
 + Mask now has 51279 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366923 voxels
++ 59352 voxels in the mask [out of 426275: 13.92%]
++ first  14 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  19 y-planes are zero [from I]
++ last   20 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb5896.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb5896.r03.blur+orig
++ Forming automask
 + Fixed clip level = 378.432892
 + Used gradual clip level = 334.366364 .. 421.123596
 + Number voxels above clip level = 51518
 + Clustering voxels ...
 + Largest cluster has 51262 voxels
 + Clustering voxels ...
 + Largest cluster has 51221 voxels
 + Filled    29 voxels in small holes; now have 51250 voxels
 + Clustering voxels ...
 + Largest cluster has 51250 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 375025 voxels
 + Mask now has 51250 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 366927 voxels
++ 59348 voxels in the mask [out of 426275: 13.92%]
++ first  14 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  19 y-planes are zero [from I]
++ last   20 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb5896
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 59942 survived, 366333 were zero
++ writing result full_mask.tb5896...
3dresample -master full_mask.tb5896+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb5896
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 54847 survived, 371428 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb5896...
3dABoverlap -no_automask full_mask.tb5896+orig mask_anat.tb5896+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb5896+orig.BRIK  B=./mask_anat.tb5896+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
59942        54847        63491        51298        8644         3549         14.4206      6.4707     0.8721     0.9816     0.9355
3ddot -dodice full_mask.tb5896+orig mask_anat.tb5896+orig
tee out.mask_ae_dice.txt
0.893779	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb5896
total number of censored TRs (simple form) = 21
1deval -a motion_tb5896_censor.1D -b outcount_tb5896_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb5896_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb5896.r01.blur+orig.HEAD pb03.tb5896.r02.blur+orig.HEAD pb03.tb5896.r03.blur+orig.HEAD -censor censor_tb5896_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb5896 -errts errts.tb5896 -bucket stats.tb5896
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb5896.r01.blur+orig.HEAD pb03.tb5896.r02.blur+orig.HEAD pb03.tb5896.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 51384 voxels (out of 426275 = 12.1%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 427 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb5896.r01.blur+orig.HEAD pb03.tb5896.r02.blur+orig.HEAD pb03.tb5896.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb5896_REML -Rvar stats.tb5896_REMLvar \
 -Rfitts fitts.tb5896_REML -Rerrts errts.tb5896_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (427x24):  4.26741  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (427x6):  1.03708  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (427x18):  2.82245  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (427x6):  2.35968  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (427x12):  1.27054  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.82665e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.20 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=5.963
++ Job #2: processing voxels 85254 to 127880; elapsed time=5.980
++ Job #3: processing voxels 127881 to 170507; elapsed time=5.997
++ Job #4: processing voxels 170508 to 213134; elapsed time=6.017
++ Job #5: processing voxels 213135 to 255761; elapsed time=6.036
++ Job #6: processing voxels 255762 to 298388; elapsed time=6.056
++ Job #7: processing voxels 298389 to 341015; elapsed time=6.084
++ Job #8: processing voxels 341016 to 383642; elapsed time=6.104
++ Job #9: processing voxels 383643 to 426274; elapsed time=6.123
++ Job #0: processing voxels 0 to 42626; elapsed time=6.124
++ voxel loop:0123456789.0123456789.0123456789.012345++ Job #5 finished; elapsed time=33.757
++ Job #1 finished; elapsed time=34.028
6++ Job #2 finished; elapsed time=34.291
++ Job #8 finished; elapsed time=34.322
++ Job #7 finished; elapsed time=34.389
++ Job #4 finished; elapsed time=34.445
789.012345678++ Job #6 finished; elapsed time=37.375
9.
++ Job #0 waiting for children to finish; elapsed time=37.392
++ Job #9 finished; elapsed time=38.085
++ Job #3 finished; elapsed time=38.412
++ Job #0 now finishing up; elapsed time=38.424
++ Smallest FDR q [0 Full_Fstat] = 4.28119e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 7.32299e-13
++ Smallest FDR q [3 uns1_Fstat] = 7.32299e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 4.9587e-12
++ Smallest FDR q [6 uns2_Fstat] = 4.95865e-12
++ Smallest FDR q [8 uns3#0_Tstat] = 1.704e-11
++ Smallest FDR q [9 uns3_Fstat] = 1.7037e-11
++ Smallest FDR q [11 str1#0_Tstat] = 1.61037e-12
++ Smallest FDR q [12 str1_Fstat] = 1.61036e-12
++ Smallest FDR q [14 str2#0_Tstat] = 3.84107e-13
++ Smallest FDR q [15 str2_Fstat] = 3.8411e-13
++ Smallest FDR q [17 str3#0_Tstat] = 4.7929e-10
++ Smallest FDR q [18 str3_Fstat] = 4.79297e-10
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.6152e-13
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.61508e-13
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 9.99736e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 9.99577e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 2.99267e-08
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 2.99341e-08
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.0121146
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.0121166
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 3.75291e-12
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 3.75343e-12
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.94478e-06
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.94487e-06
++ Wrote bucket dataset into ./stats.tb5896+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb5896+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb5896+orig.BRIK
++ Program finished; elapsed time=80.438
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.764       0.822  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.752       0.812  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.729       0.796  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.470       0.544  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.464       0.543  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.459       0.533  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb5896.r01.blur+orig.HEAD pb03.tb5896.r02.blur+orig.HEAD pb03.tb5896.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb5896_REML -Rvar stats.tb5896_REMLvar -Rfitts fitts.tb5896_REML -Rerrts errts.tb5896_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 51384 voxels (out of 426275 = 12.1%)
++ -----  matrix condition (427x24):  4.26741  ++ VERY GOOD ++
 + masked off 249472 voxels for being all zero; 176803 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 319 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=38.79
 + X matrix: 46.702% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=427 cols=24; 109*1 cases; total CPU=0.00 Elapsed=38.82
 +  average case bandwidth = 12.32
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=103.11
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=145.90
++ Output dataset ./stats.tb5896_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb5896_REML+orig.BRIK
++ Output dataset ./errts.tb5896_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb5896_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 3.64715e-09
++ Smallest FDR q [2 uns1#0_Tstat] = 2.90685e-05
++ Smallest FDR q [3 uns1_Fstat] = 2.90685e-05
++ Smallest FDR q [5 uns2#0_Tstat] = 1.40927e-06
++ Smallest FDR q [6 uns2_Fstat] = 1.40927e-06
++ Smallest FDR q [8 uns3#0_Tstat] = 5.0889e-06
++ Smallest FDR q [9 uns3_Fstat] = 5.0889e-06
++ Smallest FDR q [11 str1#0_Tstat] = 8.39927e-06
++ Smallest FDR q [12 str1_Fstat] = 8.39925e-06
++ Smallest FDR q [14 str2#0_Tstat] = 1.60033e-07
++ Smallest FDR q [15 str2_Fstat] = 1.60033e-07
++ Smallest FDR q [17 str3#0_Tstat] = 0.00179773
++ Smallest FDR q [18 str3_Fstat] = 0.00179773
++ Smallest FDR q [20 unstructured#0_Tstat] = 3.09258e-10
++ Smallest FDR q [21 unstructured_Fstat] = 3.09258e-10
++ Smallest FDR q [23 structured#0_Tstat] = 3.3584e-11
++ Smallest FDR q [24 structured_Fstat] = 3.3584e-11
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.0715567
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.0715567
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999883 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999883 ==> few true single voxel detections
++ Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.00389988
++ Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.00389988
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.258561 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.258561 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb5896_REML+orig
++ Output dataset ./stats.tb5896_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=205.65
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb5896 pb03.tb5896.r01.blur+orig.HEAD pb03.tb5896.r02.blur+orig.HEAD pb03.tb5896.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 41.8 s
3dTstat -mean -prefix rm.signal.all all_runs.tb5896+orig[0,3,4,7..61,64..140,145..286,293,299..440,443..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb5896_REML+orig[0,3,4,7..61,64..140,145..286,293,299..440,443..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb5896+orig -expr c*a/b -prefix TSNR.tb5896
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb5896_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb5896+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 59942 voxels survive the mask

*** failure while reading from brick file ./rm.errts.unit+orig.BRIK
*** desired 767295000 bytes but only got 372244480
*** Unix error message: No such file or directory
   THD_load_datablock
  3dmaskave main
** Command line was:
3dmaskave -quiet -mask full_mask.tb5896+orig rm.errts.unit+orig
[7m** FATAL ERROR:[0m Cannot read in input dataset BRIK!
** Program compile date = Jul 20 2017
