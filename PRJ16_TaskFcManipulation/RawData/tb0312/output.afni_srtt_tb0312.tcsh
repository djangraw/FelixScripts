echo auto-generated by afni_proc.py, Wed Aug  9 02:08:09 2017
auto-generated by afni_proc.py, Wed Aug  9 02:08:09 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 02:08:12 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0312
endif
set output_dir = tb0312.srtt
if ( -d tb0312.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0312.srtt
mkdir tb0312.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0312.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0312.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0312.srtt/pb00.tb0312.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0312.srtt/pb00.tb0312.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.8 s
3dTcat -prefix tb0312.srtt/pb00.tb0312.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0312.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0312.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0312.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0312.r01.tcat+orig.BRIK is 5.600002 degrees from plumb.
++ 30527 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0312.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0312.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0312.r02.tcat+orig.BRIK is 5.600002 degrees from plumb.
++ 30525 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0312.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0312.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0312.r03.tcat+orig.BRIK is 5.600002 degrees from plumb.
++ 30562 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0312.r01.tshift -tpattern alt+z2 pb00.tb0312.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0312.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0312.r01.tcat+orig.BRIK is 5.600002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0312.r02.tshift -tpattern alt+z2 pb00.tb0312.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0312.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0312.r02.tcat+orig.BRIK is 5.600002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0312.r03.tshift -tpattern alt+z2 pb00.tb0312.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0312.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0312.r03.tcat+orig.BRIK is 5.600002 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0312.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 5.600002 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 386.469513
 + Used gradual clip level = 352.028992 .. 439.602997
 + Number voxels above clip level = 31404
 + Clustering voxels ...
 + Largest cluster has 30918 voxels
 + Clustering voxels ...
 + Largest cluster has 30159 voxels
 + Filled   340 voxels in small holes; now have 30499 voxels
 + Filled     1 voxels in large holes; now have 30500 voxels
 + Clustering voxels ...
 + Largest cluster has 30500 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 100563 voxels
 + Mask now has 30509 voxels
++ 30509 voxels in the mask [out of 131072: 23.28%]
++ first  13 x-planes are zero [from R]
++ last   10 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last    5 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 977.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/977.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 5.600002 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1491800 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 30509 voxels [19.1%] in weight mask
++ Number of points for matching = 30509
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.004 29.277 19.772 (index)
 + source center of mass = 85.861 152.928 176.274 (index)
 + source-target CM = -0.024 1.442 -5.944 (xyz)
 + center of mass shifts = -0.024 1.442 -5.944
++ shift param auto-range: -69.5..69.5 -68.1..71.0 -54.7..42.8
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.023979 .. 9.976021
 + Range param#2 [y-shift] = -8.558388 .. 11.441612
 + Range param#3 [z-shift] = -15.944344 .. 4.055656
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.023979 .. 39.976021
 + Range param#2 [y-shift] = -38.558388 .. 41.441612
 + Range param#3 [z-shift] = -45.944344 .. 34.055656
 + 12 free parameters
++ Normalized convergence radius = 0.000441
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1491800 [out of 13798400] voxels
 + base mask has 41548 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=78 usiz=194.5
 + - copying weight image
 + - using 30509 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 26418 total points stored in 245 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo---o.o*[#19=-0.0238492] *.*[#28=-0.0417429] *+-o..*[#60=-0.0422219] *-.+++....-$-+
 + - best 45 costs found:
    0 v=-0.042222: -13.36 -11.89   7.39 -15.00 -15.00 -15.00  [grid]
    1 v=-0.041743: -13.36 -11.89   7.39 -15.00 -15.00  15.00  [grid]
    2 v=-0.041665: -14.05 -14.28   8.72 -24.25 -37.55   4.41  [rand]
    3 v=-0.038617: -13.36 -25.23   7.39 -15.00 -30.00  15.00  [grid]
    4 v=-0.038123:  -4.10  -4.78   1.85  -4.32 -22.85 -18.95  [rand]
    5 v=-0.037318: -13.36 -25.23  20.72 -15.00 -30.00  30.00  [grid]
    6 v=-0.036562: -13.36 -11.89   7.39 -15.00 -30.00  15.00  [grid]
    7 v=-0.036120: -14.05 -14.28   8.72 -24.25 -37.55  -4.41  [rand]
    8 v=-0.034931: -16.17  10.91  18.41 -20.99 -15.73  16.09  [rand]
    9 v=-0.033897:  -9.85 -23.32   5.44  -3.10 -34.36   2.55  [rand]
   10 v=-0.033543: -13.36 -25.23   7.39 -15.00 -30.00  30.00  [grid]
   11 v=-0.033371: -11.62   6.00  -2.05 -24.53 -29.49 -26.10  [rand]
   12 v=-0.033225: -16.88 -17.14   8.51 -19.57 -37.09  16.59  [rand]
   13 v=-0.032423: -13.36 -11.89   7.39 -15.00 -30.00  30.00  [grid]
   14 v=-0.031999: -13.36 -25.23   7.39 -30.00 -30.00  15.00  [grid]
   15 v=-0.031949: -13.36 -25.23   7.39 -30.00 -30.00  30.00  [grid]
   16 v=-0.031670: -13.36  14.77   7.39 -30.00 -30.00  30.00  [grid]
   17 v=-0.031455:   9.80  26.20 -17.33   3.10  34.36   2.55  [rand]
   18 v=-0.031206: -14.23  -8.01  -1.11 -15.99 -13.53 -29.93  [rand]
   19 v=-0.030998: -13.36 -11.89   7.39 -30.00 -30.00  15.00  [grid]
   20 v=-0.030929:  -4.10   7.67 -13.74   4.32  22.85 -18.95  [rand]
   21 v=-0.029962:   9.80 -23.32   5.44   3.10 -34.36   2.55  [rand]
   22 v=-0.029606:  -9.85 -23.32   5.44  -3.10 -34.36  -2.55  [rand]
   23 v=-0.029590: -13.36  14.77   7.39 -30.00  15.00  30.00  [grid]
   24 v=-0.029503:   4.06  -4.78   1.85  -4.32 -22.85 -18.95  [rand]
   25 v=-0.029294: -16.17  -8.02  18.41 -20.99 -15.73 -16.09  [rand]
   26 v=-0.029207: -13.36  14.77   7.39  30.00  30.00  30.00  [grid]
   27 v=-0.029189:  -8.66 -18.99  11.53 -25.20 -18.50  13.54  [rand]
   28 v=-0.029053: -14.23  -8.01  -1.11 -15.99 -13.53  29.93  [rand]
   29 v=-0.028886: -11.62   6.00  -2.05 -24.53 -29.49  26.10  [rand]
   30 v=-0.028285:   9.80 -23.32   5.44   3.10 -34.36  -2.55  [rand]
   31 v=-0.028105: -13.36 -25.23   7.39 -30.00 -15.00  30.00  [grid]
   32 v=-0.027530: -13.36 -11.89  20.72 -30.00 -15.00  30.00  [grid]
   33 v=-0.027355: -34.35  18.03   2.66  16.34   8.64  40.54  [rand]
   34 v=-0.027123:  -4.10   7.67   1.85   4.32 -22.85  18.95  [rand]
   35 v=-0.027059: -13.36 -11.89   7.39 -15.00 -15.00 -30.00  [grid]
   36 v=-0.026746:  -4.10   7.67   1.85  -4.32 -22.85 -18.95  [rand]
   37 v=-0.026494: -13.36 -25.23   7.39 -30.00 -30.00 -30.00  [grid]
   38 v=-0.026463:  13.31 -11.89  20.72  30.00 -15.00 -30.00  [grid]
   39 v=-0.026302:  -6.01   4.85  18.58 -29.81   4.26  23.54  [rand]
   40 v=-0.026200:  16.19 -12.67  29.19  15.74 -34.09   7.78  [rand]
   41 v=-0.025988: -10.35 -27.37   9.06 -30.67 -17.79  20.52  [rand]
   42 v=-0.025703: -13.36  14.77  20.72 -30.00  30.00 -30.00  [grid]
   43 v=-0.025536: -31.86  13.24  -3.20  23.31   3.26  40.47  [rand]
   44 v=-0.025320: -26.69 -25.23  20.72  15.00 -15.00  15.00  [grid]
*[#8002=-0.0478862] *[#8011=-0.0567669] *[#8012=-0.0644206] *[#8014=-0.0652005] *[#8015=-0.0667441] *[#8017=-0.0673229] *[#8022=-0.067891] *[#8023=-0.0684872] *[#8027=-0.0688614] *[#8042=-0.0697847] *[#8043=-0.073525] *[#8044=-0.0770027] *[#8047=-0.0773222] *[#8049=-0.0817788] *[#8050=-0.0864343] *[#8053=-0.0865491] *[#8054=-0.0873114] *[#8055=-0.0876997] *[#8058=-0.0897551] *[#8059=-0.091437] *[#8060=-0.0916906] *[#8063=-0.0941198] *[#8066=-0.0957208] *[#8067=-0.0981549] *[#8068=-0.101618] *[#8069=-0.102373] *[#8071=-0.103781] *[#8072=-0.104375] *[#8073=-0.104784] *[#8076=-0.107021] *[#8079=-0.1081] *[#8080=-0.108752] *[#8083=-0.109093] *[#8088=-0.109815] *[#8089=-0.110928] *[#8098=-0.11156] *[#8099=-0.111983] *[#8101=-0.112399] *[#8105=-0.112684] *[#8108=-0.113386] *[#8109=-0.113413] *[#8476=-0.12166] *[#8477=-0.12646] *[#8478=-0.151298] *[#8479=-0.154941] *[#9122=-0.165966] *[#9125=-0.203377] *[#9126=-0.215089] *[#9128=-0.216976] *[#9131=-0.23303] *[#9132=-0.271263] *[#9133=-0.336358] *[#9134=-0.366282] *[#9141=-0.390015] *[#9142=-0.436179] *[#9143=-0.478518] *[#9148=-0.481548] *[#9152=-0.482613] *[#9154=-0.488714]  + - costs of the above after a little optimization:
    0 v=-0.068861:  -7.99  -7.04   6.94 -12.35 -13.39 -11.36  [grid]
    1 v=-0.113413:  -8.20  -2.62  10.15  -7.48 -14.12  12.95  [grid]
    2 v=-0.075364:  -7.39 -18.81   5.71 -15.60 -32.31   2.86  [rand]
    3 v=-0.067107: -13.46 -18.11   7.99 -12.34 -29.62  15.00  [grid]
    4 v=-0.099883:  -3.11  -9.90   5.33  -7.13 -21.54  -4.21  [rand]
    5 v=-0.043721: -13.65 -22.46  18.91 -12.76 -31.78  30.90  [grid]
    6 v=-0.097828:  -9.67 -13.94  10.66 -10.55 -27.54   8.16  [grid]
    7 v=-0.078153:  -6.83 -14.55   6.04 -15.49 -30.76   2.24  [rand]
    8 v=-0.154941:  -3.42   3.60   5.90  -5.89  -2.74   7.50  [rand]
    9 v=-0.097812:  -2.51 -20.08   3.45  -7.06 -30.27   4.30  [rand]
   10 v=-0.037250: -13.87 -24.43   7.65 -16.95 -35.59  28.47  [grid]
   11 v=-0.048110:  -7.98   4.64  -2.61 -23.18 -31.18 -27.19  [rand]
   12 v=-0.095722:  -9.43 -14.20  11.05  -9.81 -28.34   9.86  [rand]
   13 v=-0.037110: -13.52 -11.97   7.73 -13.05 -29.10  34.85  [grid]
   14 v=-0.040843:  -9.66 -24.91   7.79 -29.43 -29.96  14.71  [grid]
   15 v=-0.043811: -12.53 -23.20  12.09 -30.13 -29.64  24.21  [grid]
   16 v=-0.051047:  -9.28  13.95   3.77 -24.45 -32.67  30.65  [grid]
   17 v=-0.047674:   4.65  25.54 -17.35   0.93  36.83   3.50  [rand]
   18 v=-0.062828:  -9.26 -10.26   3.35 -13.78 -11.88 -24.20  [rand]
   19 v=-0.048567:  -8.38 -13.61   5.98 -30.96 -27.42  11.12  [grid]
   20 v=-0.065831:  -3.94   5.66  -9.04   1.56  18.71 -14.40  [rand]
   21 v=-0.091225:  -2.32 -18.84   4.37  -6.08 -33.36  -0.97  [rand]
   22 v=-0.100959:  -3.11 -17.35   3.41  -7.79 -29.85  -1.53  [rand]
   23 v=-0.044243: -11.29  15.17   9.51 -30.92  13.77  27.98  [grid]
  *24 v=-0.488714:   0.49  -0.68   0.03  -0.60  -2.13   0.63  [rand]
   25 v=-0.048729: -12.73 -11.48  14.48 -19.82 -21.22 -16.81  [rand]
   26 v=-0.034650: -12.84  15.70   4.89  31.50  26.57  30.70  [grid]
   27 v=-0.039402:  -8.43 -13.39   8.75 -23.11 -21.58  10.05  [rand]
   28 v=-0.041219: -14.85  -6.13   4.30 -16.10 -16.29  27.15  [rand]
   29 v=-0.043902: -10.32  10.86  -0.83 -23.27 -31.67  26.13  [rand]
   30 v=-0.078108:   2.55 -18.33   4.33   2.91 -29.21  -2.32  [rand]
   31 v=-0.037579: -13.27 -25.27   6.53 -30.70 -19.76  29.13  [grid]
   32 v=-0.034432: -13.48  -7.12  20.37 -30.73 -14.00  29.40  [grid]
   33 v=-0.043081: -34.75  12.92  -1.28  13.24   3.39  40.59  [rand]
   34 v=-0.043074:  -1.17   5.94   1.14   4.96 -23.37  17.96  [rand]
   35 v=-0.063404:  -8.19  -8.73   5.71 -12.69 -13.38 -19.84  [grid]
   36 v=-0.487257:   0.50  -0.65  -0.10  -0.58  -2.09   0.18  [rand]
   37 v=-0.039567: -12.03 -20.54   5.46 -25.10 -29.10 -30.67  [grid]
   38 v=-0.031927:   9.04 -12.33  20.74  30.53 -15.06 -29.97  [grid]
   39 v=-0.049479:  -9.44   6.90   8.32 -42.57   1.05  24.48  [rand]
   40 v=-0.034770:  15.24 -16.47  28.77  15.82 -34.64   8.30  [rand]
   41 v=-0.046871:  -9.11 -17.44   8.51 -34.26 -22.42  18.90  [rand]
   42 v=-0.031608: -18.21  14.40  21.18 -28.77  31.28 -28.37  [grid]
   43 v=-0.036051: -35.79  15.57  -1.51  21.61   4.82  38.08  [rand]
   44 v=-0.034342: -20.46 -24.70  20.64  14.13 -15.46  15.54  [grid]
 + - save #24 for twobest
 + - skip #36 for twobest: too close to set #24
 + - save # 8 for twobest
 + - save # 1 for twobest
 + - save #22 for twobest
 + - save # 4 for twobest
 + - save # 6 for twobest
 + - save # 9 for twobest
 + - skip #12 for twobest: too close to set # 6
 + - skip #21 for twobest: too close to set #22
 + - save # 7 for twobest
 + - save #30 for twobest
 + - save # 2 for twobest
 + - save # 0 for twobest
 + - save # 3 for twobest
 + - save #20 for twobest
 + - save #35 for twobest
 + - skip #18 for twobest: too close to set #35
 + - save #16 for twobest
 + - save #39 for twobest
 + - save #25 for twobest
 + - save #19 for twobest
 + - save #11 for twobest
 + - save #17 for twobest
 + - save #41 for twobest
 + - save #23 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=78 usiz=194.5
 + - retaining old weight image
 + - using 30509 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26274 total points stored in 262 'RHDD(13.7332)' bloks
*[#9959=-0.513494] *[#9985=-0.51438] *[#9989=-0.514712] *[#9992=-0.514751] *[#9993=-0.514766] *[#9996=-0.514916] *[#9997=-0.515524] *[#10002=-0.516069] *[#10003=-0.516258] *[#10004=-0.516367] *[#10011=-0.517057] *[#10013=-0.517099] *[#10014=-0.517221] *[#10015=-0.51751] *[#10016=-0.517519] *[#10019=-0.517586] *[#10024=-0.518658] *[#10025=-0.518715] *[#10035=-0.519186] *[#10036=-0.519596] *[#10037=-0.519704] *[#10043=-0.519719] *[#10047=-0.51983] 
 + - param set #1 has cost=-0.519830
 + -- Parameters = 0.3775 -0.8687 -0.1492 -0.6027 -1.9917 0.3489 1.0020 0.9917 1.0012 -0.0039 0.0018 -0.0039
 + - param set #2 has cost=-0.409226
 + -- Parameters = -0.2774 -0.5806 -0.6846 -1.6670 -2.8554 -1.9932 0.9734 1.0177 1.0572 -0.0187 0.0560 -0.0196
 + - param set #3 has cost=-0.409359
 + -- Parameters = -0.2313 0.5928 -0.2509 -1.5086 -4.3981 0.5381 1.0156 1.0475 1.0428 0.0032 -0.0001 -0.0108
 + - param set #4 has cost=-0.091170
 + -- Parameters = -3.2700 -17.5888 3.1185 -8.0036 -29.7056 -1.7731 1.0013 1.0003 1.0000 0.0005 0.0114 -0.0000
 + - param set #5 has cost=-0.097290
 + -- Parameters = -3.0431 -7.7981 5.5571 -7.1382 -20.0994 0.8246 1.0030 1.0001 0.9930 0.0006 -0.0082 -0.0094
 + - param set #6 has cost=-0.077789
 + -- Parameters = -9.2890 -14.0111 10.2638 -10.4136 -27.4776 8.3759 0.9975 1.0003 0.9983 0.0016 0.0097 -0.0009
 + - param set #7 has cost=-0.090690
 + -- Parameters = -3.0430 -18.1012 2.2345 -7.4869 -29.0712 0.1635 0.9989 1.0032 0.9990 -0.0009 -0.0002 0.0003
 + - param set #8 has cost=-0.077703
 + -- Parameters = -4.8549 -14.0370 4.8552 -13.3382 -29.2806 -0.1639 1.0176 1.0059 0.9951 0.0051 0.0068 0.0068
 + - param set #9 has cost=-0.071119
 + -- Parameters = 1.8965 -15.6067 3.5921 3.9607 -28.1045 -1.4411 1.0004 0.9983 0.9976 -0.0009 0.0004 0.0013
 + - param set #10 has cost=-0.079435
 + -- Parameters = -4.6863 -18.5955 4.1388 -10.6688 -34.1696 1.5496 1.0045 1.0013 0.9865 0.0079 0.0054 0.0020
 + - param set #11 has cost=-0.397162
 + -- Parameters = 0.6639 -0.9331 0.5315 -0.5797 -1.7077 2.4612 1.0474 0.9939 0.9333 -0.0029 -0.0215 0.0001
 + - param set #12 has cost=-0.505990
 + -- Parameters = 0.3494 -0.4380 -0.1136 -0.6861 -2.7021 0.2886 0.9953 1.0045 1.0063 -0.0016 0.0012 -0.0149
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0498 
 + --- dist(#3,#1) = 0.152 
 + --- dist(#4,#1) = 0.244 
 + --- dist(#5,#1) = 0.185 
 + --- dist(#6,#1) = 0.201 
 + --- dist(#7,#1) = 0.308 
 + --- dist(#8,#1) = 0.301 
 + --- dist(#9,#1) = 0.358 
 + --- dist(#10,#1) = 0.283 
 + --- dist(#11,#1) = 0.303 
 + --- dist(#12,#1) = 0.29 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=78 usiz=194.5
 + - retaining old weight image
 + - using 30509 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 26616 total points stored in 274 'RHDD(13.5933)' bloks
 + - param set #1 has cost=-0.504538
 + -- Parameters = 0.3333 -0.8222 -0.1266 -0.6574 -2.0219 0.0869 1.0008 0.9918 0.9971 -0.0050 0.0093 -0.0044
 + - param set #2 has cost=-0.504858
 + -- Parameters = 0.3658 -0.5986 -0.1255 -0.4775 -2.7050 0.1722 1.0068 0.9948 0.9979 -0.0009 0.0050 -0.0185
 + - param set #3 has cost=-0.502479
 + -- Parameters = 0.3616 -0.5231 -0.2614 -0.4206 -2.8662 -0.1290 1.0071 1.0024 1.0086 0.0034 0.0120 -0.0219
 + - param set #4 has cost=-0.477743
 + -- Parameters = -0.3042 -0.4367 -0.3676 -0.9745 -3.0674 -1.8091 1.0076 0.9971 1.0101 -0.0115 0.0489 -0.0268
 + - param set #5 has cost=-0.494828
 + -- Parameters = 0.5967 -0.9954 -0.1496 -0.5293 -1.7520 0.7466 0.9990 0.9899 0.9928 -0.0035 -0.0086 -0.0021
 + - param set #6 has cost=-0.346528
 + -- Parameters = 0.2741 0.6977 1.0247 -0.7090 -5.8585 -0.3133 0.9992 1.0644 0.9065 0.0066 0.0215 -0.0312
 + - param set #7 has cost=-0.076702
 + -- Parameters = -3.0426 -17.4122 3.0802 -8.0764 -29.0187 -1.8555 1.0055 0.9984 0.9935 0.0010 0.0193 -0.0016
 + - param set #8 has cost=-0.075849
 + -- Parameters = -2.7666 -18.2594 2.3380 -7.4898 -29.0411 0.2589 0.9959 1.0179 1.0023 0.0013 -0.0010 0.0011
 + - param set #9 has cost=-0.071093
 + -- Parameters = -3.8485 -18.1565 4.3181 -10.9095 -32.4941 0.1200 0.9970 0.9924 0.9690 0.0041 0.0110 -0.0050
 + - param set #10 has cost=-0.069561
 + -- Parameters = -8.7685 -14.2843 9.2572 -9.9484 -26.5736 8.8767 0.9659 1.0032 0.9874 -0.0000 0.0297 -0.0126
 + - param set #11 has cost=-0.082692
 + -- Parameters = -2.8813 -16.6488 2.9575 -7.5524 -28.0763 -2.1022 0.9987 0.9995 0.9273 0.0143 0.0384 -0.0251
 + - param set #12 has cost=-0.074032
 + -- Parameters = 1.9880 -14.8105 2.6611 3.6254 -27.7589 -0.9887 0.9613 1.0534 0.9805 0.0485 -0.0016 -0.0310
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0631 
 + --- dist(#3,#1) = 0.0314 
 + --- dist(#4,#1) = 0.0737 
 + --- dist(#5,#1) = 0.198 
 + --- dist(#6,#1) = 0.249 
 + --- dist(#7,#1) = 0.282 
 + --- dist(#8,#1) = 0.292 
 + --- dist(#9,#1) = 0.293 
 + --- dist(#10,#1) = 0.278 
 + --- dist(#11,#1) = 0.331 
 + --- dist(#12,#1) = 0.265 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=78 usiz=194.5
 + - retaining old weight image
 + - using 30509 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 27179 total points stored in 290 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.483240
 + -- Parameters = 0.3643 -0.6449 -0.2281 -0.4882 -2.5728 -0.0131 1.0057 0.9963 1.0039 0.0010 0.0134 -0.0160
 + - param set #2 has cost=-0.482647
 + -- Parameters = 0.3317 -0.7386 -0.1998 -0.5818 -2.1898 -0.0917 1.0033 0.9953 1.0042 0.0009 0.0160 -0.0066
 + - param set #3 has cost=-0.483115
 + -- Parameters = 0.3426 -0.6007 -0.2124 -0.5337 -2.6463 -0.0863 1.0048 0.9962 1.0034 0.0003 0.0155 -0.0173
 + - param set #4 has cost=-0.479471
 + -- Parameters = 0.5276 -0.8031 -0.1585 -0.3812 -2.0020 0.3385 1.0033 0.9961 0.9995 0.0047 0.0055 -0.0043
 + - param set #5 has cost=-0.475014
 + -- Parameters = 0.0966 -0.4513 -0.1008 -0.6737 -2.9232 -0.8769 1.0035 1.0004 0.9987 -0.0004 0.0355 -0.0205
 + - param set #6 has cost=-0.423168
 + -- Parameters = 0.0100 0.5058 0.2751 -0.8214 -5.1404 -0.6995 1.0105 1.0021 0.9718 -0.0122 0.0210 -0.0651
 + - param set #7 has cost=-0.074607
 + -- Parameters = -2.9056 -17.5355 2.9090 -8.5685 -29.1980 -2.3857 0.9967 1.0016 0.9227 0.0103 0.0330 -0.0306
 + - param set #8 has cost=-0.070534
 + -- Parameters = -2.7885 -17.3742 2.9468 -8.2642 -28.4174 -1.8064 1.0123 1.0056 0.9617 -0.0078 0.0105 -0.0091
 + - param set #9 has cost=-0.067229
 + -- Parameters = -2.3284 -18.0340 2.4191 -7.7345 -28.7895 0.1172 0.9999 1.0023 1.0082 0.0004 -0.0009 0.0016
 + - param set #10 has cost=-0.064223
 + -- Parameters = 1.9091 -15.2026 2.8394 3.8569 -27.6621 -0.7537 0.9653 1.0538 0.9815 0.0505 0.0002 -0.0321
 + - param set #11 has cost=-0.065438
 + -- Parameters = -3.7246 -18.5744 4.4135 -10.8377 -33.2937 -0.1572 1.0109 0.9914 0.9507 0.0183 0.0126 -0.0127
 + - param set #12 has cost=-0.057852
 + -- Parameters = -8.6700 -13.8503 9.2408 -9.7338 -26.9132 8.3576 0.9672 1.0039 0.9787 0.0065 0.0317 -0.0169
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.00955 XXX
 + --- dist(#3,#1) = 0.0525 
 + --- dist(#4,#1) = 0.0996 
 + --- dist(#5,#1) = 0.221 
 + --- dist(#6,#1) = 0.296 
 + --- dist(#7,#1) = 0.287 
 + --- dist(#8,#1) = 0.291 
 + --- dist(#9,#1) = 0.341 
 + --- dist(#10,#1) = 0.279 
 + --- dist(#11,#1) = 0.27 
 + - cast out 1 parameter set for being too close to best set
 + - Total coarse refinement net CPU time = 0.0 s; 3314 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=78 usiz=194.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 27329 total points stored in 294 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.458080 *
 + -- Parameters = 0.3643 -0.6449 -0.2281 -0.4882 -2.5728 -0.0131 1.0057 0.9963 1.0039 0.0010 0.0134 -0.0160
 + - cost(#2)=-0.456234  
 + -- Parameters = 0.3317 -0.7386 -0.1998 -0.5818 -2.1898 -0.0917 1.0033 0.9953 1.0042 0.0009 0.0160 -0.0066
 + - cost(#3)=-0.454058  
 + -- Parameters = 0.5276 -0.8031 -0.1585 -0.3812 -2.0020 0.3385 1.0033 0.9961 0.9995 0.0047 0.0055 -0.0043
 + - cost(#4)=-0.448669  
 + -- Parameters = 0.0966 -0.4513 -0.1008 -0.6737 -2.9232 -0.8769 1.0035 1.0004 0.9987 -0.0004 0.0355 -0.0205
 + - cost(#5)=-0.399160  
 + -- Parameters = 0.0100 0.5058 0.2751 -0.8214 -5.1404 -0.6995 1.0105 1.0021 0.9718 -0.0122 0.0210 -0.0651
 + - cost(#6)=-0.066818  
 + -- Parameters = -2.9056 -17.5355 2.9090 -8.5685 -29.1980 -2.3857 0.9967 1.0016 0.9227 0.0103 0.0330 -0.0306
 + - cost(#7)=-0.064413  
 + -- Parameters = -2.7885 -17.3742 2.9468 -8.2642 -28.4174 -1.8064 1.0123 1.0056 0.9617 -0.0078 0.0105 -0.0091
 + - cost(#8)=-0.064198  
 + -- Parameters = -2.3284 -18.0340 2.4191 -7.7345 -28.7895 0.1172 0.9999 1.0023 1.0082 0.0004 -0.0009 0.0016
 + - cost(#9)=-0.058538  
 + -- Parameters = -3.7246 -18.5744 4.4135 -10.8377 -33.2937 -0.1572 1.0109 0.9914 0.9507 0.0183 0.0126 -0.0127
 + - cost(#10)=-0.055581  
 + -- Parameters = 1.9091 -15.2026 2.8394 3.8569 -27.6621 -0.7537 0.9653 1.0538 0.9815 0.0505 0.0002 -0.0321
 + - cost(#11)=-0.049952  
 + -- Parameters = -8.6700 -13.8503 9.2408 -9.7338 -26.9132 8.3576 0.9672 1.0039 0.9787 0.0065 0.0317 -0.0169
 + - cost(#12)=-0.025706  
 + -- Parameters = -0.0240 1.4416 -5.9443 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.458333 *
 + -- Parameters = 0.3844 -0.6573 -0.2700 -0.4721 -2.5874 0.0029 1.0046 0.9967 1.0048 0.0006 0.0135 -0.0168
 + - cost(#2)=-0.457473  
 + -- Parameters = 0.3692 -0.7256 -0.2729 -0.5018 -2.3088 -0.0787 1.0045 0.9948 1.0047 0.0009 0.0154 -0.0118
 + - cost(#3)=-0.457418  
 + -- Parameters = 0.4110 -0.6880 -0.2367 -0.5144 -2.3818 0.1500 1.0036 0.9951 1.0044 -0.0007 0.0107 -0.0117
 + - cost(#4)=-0.456051  
 + -- Parameters = 0.2400 -0.6604 -0.2990 -0.5262 -2.5358 -0.4906 1.0059 0.9939 1.0063 0.0005 0.0234 -0.0169
 + - cost(#5)=-0.437995  
 + -- Parameters = 0.2418 -0.1176 -0.3567 -0.5521 -4.3796 -0.4015 1.0060 0.9944 1.0003 -0.0031 0.0205 -0.0549
 + - cost(#6)=-0.067389  
 + -- Parameters = -2.8973 -17.4718 2.8708 -8.4547 -29.3786 -2.2408 0.9978 1.0035 0.9189 0.0061 0.0307 -0.0315
 + - cost(#7)=-0.066247  
 + -- Parameters = -2.5442 -17.7228 3.4839 -7.6884 -30.1373 -1.1327 1.0110 1.0059 0.9668 -0.0087 0.0109 -0.0096
 + - cost(#8)=-0.065252  
 + -- Parameters = -1.9717 -17.9686 2.6112 -7.3487 -29.0461 0.4931 1.0008 1.0048 1.0070 -0.0021 0.0040 0.0019
 + - cost(#9)=-0.058910  
 + -- Parameters = -3.6216 -18.5762 4.3191 -10.8481 -33.2697 -0.3138 1.0122 0.9901 0.9505 0.0217 0.0130 -0.0125
 + - cost(#10)=-0.056394  
 + -- Parameters = 1.8336 -15.1287 2.5671 3.7448 -27.9973 -0.6588 0.9657 1.0572 0.9697 0.0520 -0.0005 -0.0328
 + - cost(#11)=-0.051893  
 + -- Parameters = -8.2283 -13.8364 8.4075 -9.7901 -25.9490 8.4669 0.9713 1.0081 0.9759 0.0106 0.0335 -0.0172
 + - cost(#12)=-0.451479  
 + -- Parameters = 0.5175 -0.9759 -0.2304 -0.3989 -1.7074 0.3567 1.0008 0.9924 1.0010 0.0041 0.0033 -0.0012
 + - case #1 is now the best
 + - Initial  cost = -0.458333
 + - Initial fine Parameters = 0.3844 -0.6573 -0.2700 -0.4721 -2.5874 0.0029 1.0046 0.9967 1.0048 0.0006 0.0135 -0.0168
 + - Finalish cost = -0.458414 ; 145 funcs
 + - Final    cost = -0.458425 ; 147 funcs
 + Final fine fit Parameters:
       x-shift= 0.4033   y-shift=-0.6452   z-shift=-0.2694
       z-angle=-0.4557   x-angle=-2.6387   y-angle= 0.0423
       x-scale= 1.0046   y-scale= 0.9967   z-scale= 1.0043
     y/x-shear= 0.0012 z/x-shear= 0.0124 z/y-shear=-0.0179
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.4033 -0.6452 -0.2694 -0.4557 -2.6387 0.0423 1.0046 0.9967 1.0043 0.0012 0.0124 -0.0179
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.9
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0104 -0.9936 0.0523 239.4602 0.0124 0.0690 1.0037 95.1838 -1.0045 -0.0080 0.0007 201.1795
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.1 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 2255.110100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 92.0442 48.2197   ITER = 18/137
92.0442

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 96ms]
lev=0 0..171 0..213 0..166: [first cost=-0.70675] ... done [cost:-0.70675==>-0.76716]
lev=1 patch=129x161x125 [clock= 12m 39s 743ms]........:[cost=-0.78655]:........ done [cost:-0.76716==>-0.79170 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 17m 10s 802ms]......................... done [cost:-0.79170==>-0.87205 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 20m 48s 774ms].................. done [cost:-0.87205==>-0.92882 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 23m 30s 398ms].......... done [cost:-0.92882==>-0.98478 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 25m 31s 528ms]......................... done [cost:-0.98478==>-1.04886 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 27m 40s 198ms]........................ done [cost:-1.04886==>-1.09928 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 29m 57s 319ms].................................... done [cost:-1.09928==>-1.16295 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 32m 23s 599ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0312/tb0312.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 6.2 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0312.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.600002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0312.r01.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Reading input dataset ./pb01.tb0312.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 32939 voxels
 + 5354 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.108  pitch=-0.159  yaw=-0.016  dS=-0.189  dL=-0.075  dP=-0.069
++ Mean: roll=+0.032  pitch=-0.007  yaw=+0.186  dS=+0.021  dL=+0.072  dP=+0.030
++ Max : roll=+0.120  pitch=+0.202  yaw=+0.390  dS=+0.141  dL=+0.180  dP=+0.213
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.07(0.07) 0.07(0.07) 0.36(0.30) 0.40(0.42) 0.37(0.41) 0.19(0.19) 0.29(0.11) 0.22(0.20) 0.26(0.15) 0.20(0.18) 0.16(0.10) 0.13(0.07) 0.16(0.07) 0.14(0.05) 0.15(0.03) 0.17(0.05) 0.15(0.04) 0.17(0.03) 0.14(0.03) 0.14(0.03) 0.17(0.10) 0.20(0.12) 0.19(0.12) 0.16(0.08) 0.17(0.07) 0.18(0.03) 0.21(0.05) 0.21(0.05) 0.22(0.05) 0.25(0.06) 0.23(0.08) 0.29(0.10) 0.26(0.11) 0.33(0.15) 0.26(0.11) 0.28(0.08) 0.25(0.12) 0.26(0.09) 0.24(0.06) 0.23(0.05) 0.19(0.17) 0.16(0.10) 0.19(0.08) 0.17(0.10) 0.20(0.11) 0.19(0.08) 0.24(0.11) 0.21(0.11) 0.24(0.10) 0.21(0.07) 0.23(0.05) 0.25(0.03) 0.22(0.04) 0.29(0.11) 0.22(0.16) 0.30(0.14) 0.22(0.15) 0.29(0.15) 0.19(0.22) 0.18(0.24) 0.16(0.15) 0.21(0.13) 0.19(0.10) 0.20(0.08) 0.32(0.18) 0.37(0.12) 0.34(0.12) 0.35(0.04) 0.34(0.06) 0.30(0.10) 0.35(0.09) 0.33(0.06) 0.37(0.06) 0.35(0.06) 0.32(0.06) 0.42(0.14) 0.38(0.09) 0.42(0.06) 0.38(0.06) 0.38(0.07) 0.42(0.10) 0.38(0.10) 0.42(0.05) 0.40(0.05) 0.40(0.08) 0.47(0.13) 0.42(0.13) 0.48(0.09) 0.43(0.09) 0.50(0.13) 0.49(0.03) 0.48(0.05) 0.48(0.06) 0.43(0.10) 0.48(0.08) 0.45(0.05) 0.48(0.05) 0.49(0.07) 0.46(0.08) 0.52(0.11) 0.44(0.14) 0.47(0.09) 0.42(0.14) 0.46(0.10) 0.44(0.04) 0.43(0.06) 0.46(0.07) 0.44(0.10) 0.46(0.06) 0.43(0.07) 0.42(0.11) 0.44(0.10) 0.42(0.08) 0.46(0.09) 0.43(0.19) 0.43(0.09) 0.46(0.12) 0.45(0.12) 0.45(0.07) 0.47(0.06) 0.47(0.09) 0.47(0.06) 0.48(0.06) 0.53(0.12) 0.50(0.12) 0.52(0.05) 0.56(0.09) 0.53(0.09) 0.61(0.13) 0.58(0.07) 0.63(0.10) 0.59(0.06) 0.60(0.04) 0.63(0.08) 0.59(0.07) 0.67(0.11) 0.64(0.07) 0.73(0.12) 0.72(0.04) 0.75(0.05) 0.78(0.07) 0.81(0.05) 0.79(0.07) 0.77(0.07) 0.81(0.07) 0.82(0.05) 0.80(0.07) 0.76(0.10) 0.75(0.05)
++ Max displacement in automask = 0.82 (mm) at sub-brick 146
++ Max delta displ  in automask = 0.42 (mm) at sub-brick 4
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0312.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0312.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0312.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0312.r01.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./pb01.tb0312.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.600002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0312.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.600002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0312.r02.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Reading input dataset ./pb01.tb0312.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 32775 voxels
 + 5297 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.407  pitch=-0.802  yaw=+0.221  dS=-0.798  dL=-0.569  dP=-0.509
++ Mean: roll=-1.156  pitch=+0.193  yaw=+0.374  dS=-0.534  dL=-0.327  dP=+0.176
++ Max : roll=-0.856  pitch=+1.460  yaw=+0.611  dS=+0.045  dL=-0.200  dP=+0.927
++ Max displacements (mm) for each sub-brick:
 2.12(0.00) 2.23(0.46) 3.36(1.95) 2.91(0.75) 2.38(0.70) 2.41(0.27) 2.23(0.25) 2.33(0.16) 2.23(0.14) 2.15(0.12) 2.13(0.09) 2.17(0.30) 2.16(0.21) 2.18(0.22) 2.19(0.19) 2.18(0.16) 2.22(0.14) 2.23(0.06) 2.21(0.07) 2.23(0.04) 2.21(0.07) 2.20(0.04) 2.16(0.08) 2.17(0.08) 2.15(0.11) 2.16(0.10) 2.16(0.10) 2.15(0.13) 2.16(0.16) 2.19(0.27) 2.36(0.37) 2.28(0.28) 2.26(0.19) 2.26(0.08) 2.28(0.10) 2.26(0.11) 2.26(0.09) 2.24(0.03) 2.26(0.08) 2.26(0.03) 2.27(0.06) 2.26(0.13) 2.25(0.12) 2.26(0.11) 2.22(0.10) 2.22(0.06) 2.17(0.09) 2.75(1.41) 3.73(1.76) 3.21(1.97) 2.93(0.86) 2.72(0.62) 2.74(0.20) 2.73(0.06) 2.71(0.14) 2.69(0.06) 2.68(0.06) 2.70(0.11) 2.71(0.10) 2.72(0.06) 2.73(0.05) 2.72(0.12) 2.77(0.11) 2.76(0.09) 2.72(0.09) 2.74(0.07) 2.72(0.09) 2.72(0.13) 2.72(0.05) 2.72(0.11) 2.67(0.08) 2.69(0.07) 2.66(0.04) 2.67(0.06) 2.68(0.10) 2.65(0.11) 2.68(0.08) 2.64(0.05) 2.67(0.04) 2.65(0.04) 2.65(0.03) 2.65(0.12) 2.61(0.11) 2.65(0.11) 2.64(0.13) 2.65(0.11) 2.62(0.15) 2.63(0.10) 2.63(0.12) 2.64(0.03) 2.61(0.06) 2.65(0.05) 2.63(0.02) 2.64(0.06) 2.65(0.08) 2.70(0.19) 2.70(0.10) 2.71(0.08) 2.67(0.10) 2.71(0.18) 2.72(0.11) 2.73(0.09) 2.70(0.11) 2.69(0.18) 2.74(0.22) 2.72(0.17) 2.70(0.13) 2.71(0.18) 2.73(0.16) 2.73(0.14) 2.72(0.14) 2.72(0.11) 2.73(0.10) 2.71(0.11) 2.73(0.09) 2.72(0.03) 2.73(0.03) 2.70(0.04) 2.70(0.01) 2.70(0.10) 2.68(0.19) 2.68(0.15) 2.72(0.16) 2.72(0.12) 2.71(0.17) 2.72(0.07) 2.73(0.05) 2.73(0.03) 2.73(0.06) 2.73(0.14) 2.69(0.15) 2.76(0.10) 2.75(0.08) 2.75(0.12) 2.74(0.07) 2.74(0.07) 2.77(0.08) 2.74(0.05) 2.74(0.07) 2.72(0.08) 2.75(0.05) 2.71(0.07) 2.76(0.11) 2.89(0.54) 2.93(2.26) 3.26(1.22) 3.48(2.91) 2.52(1.30) 2.52(0.71) 2.45(0.12)
++ Max displacement in automask = 3.73 (mm) at sub-brick 48
++ Max delta displ  in automask = 2.91 (mm) at sub-brick 146
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0312.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0312.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0312.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0312.r02.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./pb01.tb0312.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.600002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.2
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0312.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.600002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0312.r03.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Reading input dataset ./pb01.tb0312.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 32717 voxels
 + 5261 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-1.404  pitch=-0.021  yaw=+0.468  dS=-1.465  dL=-0.391  dP=-0.217
++ Mean: roll=-0.907  pitch=+0.405  yaw=+0.565  dS=-0.975  dL=-0.008  dP=-0.029
++ Max : roll=-0.580  pitch=+1.548  yaw=+0.696  dS=-0.658  dL=+0.139  dP=+0.270
++ Max displacements (mm) for each sub-brick:
 1.68(0.00) 1.71(0.20) 1.75(0.09) 1.70(0.16) 1.70(0.08) 1.68(0.17) 1.69(0.22) 1.68(0.19) 1.74(0.21) 1.68(0.19) 1.67(0.22) 1.71(0.11) 1.74(0.06) 1.74(0.02) 1.71(0.07) 1.74(0.10) 1.70(0.12) 1.71(0.11) 1.71(0.10) 1.72(0.04) 1.73(0.03) 1.67(0.06) 1.70(0.05) 1.68(0.04) 1.71(0.09) 1.69(0.08) 1.75(0.12) 1.71(0.10) 1.72(0.10) 1.69(0.14) 1.71(0.10) 1.74(0.04) 1.75(0.03) 1.77(0.06) 1.72(0.11) 1.76(0.14) 1.78(0.19) 1.77(0.07) 1.70(0.10) 1.75(0.09) 1.70(0.14) 1.75(0.16) 1.70(0.12) 1.77(0.13) 1.72(0.20) 1.76(0.15) 1.73(0.11) 1.76(0.10) 1.75(0.10) 1.75(0.06) 1.80(0.07) 1.80(0.07) 1.81(0.10) 1.74(0.15) 1.75(0.10) 1.70(0.18) 1.73(0.12) 1.70(0.15) 1.74(0.17) 1.93(0.40) 4.82(3.06) 4.87(0.83) 4.00(0.93) 3.93(0.25) 3.93(0.11) 3.83(0.13) 3.65(0.19) 3.51(0.15) 3.42(0.10) 3.34(0.11) 3.30(0.13) 3.30(0.18) 3.22(0.16) 3.21(0.18) 3.15(0.13) 3.18(0.27) 3.17(0.07) 3.17(0.03) 3.13(0.05) 3.16(0.05) 3.11(0.05) 3.13(0.04) 3.10(0.06) 3.15(0.07) 3.07(0.13) 3.09(0.12) 3.01(0.16) 3.03(0.13) 2.98(0.12) 3.00(0.14) 3.00(0.14) 3.02(0.11) 3.01(0.09) 3.02(0.08) 3.02(0.04) 2.96(0.07) 2.97(0.05) 2.94(0.06) 2.97(0.05) 2.96(0.02) 2.99(0.05) 3.01(0.14) 2.97(0.13) 2.97(0.07) 2.92(0.13) 2.96(0.13) 2.90(0.17) 2.89(0.13) 2.89(0.14) 2.97(0.17) 3.00(0.06) 3.03(0.06) 3.04(0.06) 2.95(0.16) 2.99(0.05) 2.93(0.09) 2.99(0.19) 2.96(0.19) 2.99(0.18) 2.92(0.15) 3.00(0.13) 2.97(0.10) 2.99(0.11) 2.99(0.05) 2.98(0.08) 2.97(0.10) 2.94(0.07) 2.97(0.04) 2.97(0.04) 3.00(0.04) 2.93(0.09) 2.99(0.11) 3.01(0.09) 3.03(0.11) 3.01(0.03) 3.02(0.03) 3.04(0.03) 2.99(0.08) 3.06(0.10) 3.00(0.12) 3.05(0.13) 3.05(0.07) 3.05(0.07) 3.05(0.06) 3.06(0.07) 3.04(0.09) 3.01(0.08) 3.02(0.14) 2.99(0.14) 2.94(0.19)
++ Max displacement in automask = 4.87 (mm) at sub-brick 61
++ Max delta displ  in automask = 3.06 (mm) at sub-brick 60
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0312.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0312.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0312.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0312.r03.tshift+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./pb01.tb0312.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 5.600002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.8
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0312.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0312.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0312.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0312.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0312.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0312.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 5.600002 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0312
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0312+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0312+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1368715 voxels in source_automask+0
++ Zero-pad: zbot=1 ztop=3
++ Computing -autobox
++ 292800 voxels [64.3%] in weight mask
++ Number of points for matching = 137616
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.161518
   sp   = 0.333569
   mi   = -0.518068
   crM  = 0.0430176
   nmi  = 0.843132
   je   = 2.78451
   hel  = -0.105488
   crA  = 0.20788
   crU  = 0.221903
   lss  = 0.838482
   lpc  = 0.0184262
   lpa  = 0.981574
   lpc+ = 0.165009
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.6
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0312+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0312+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 25.5 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0312.r01.blur pb02.tb0312.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0312.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0312.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0312.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0312.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0312.r02.blur pb02.tb0312.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0312.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0312.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0312.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0312.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0312.r03.blur pb02.tb0312.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0312.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0312.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0312.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0312.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0312.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0312.r01.blur+orig
++ Forming automask
 + Fixed clip level = 375.529755
 + Used gradual clip level = 335.651215 .. 433.883362
 + Number voxels above clip level = 55467
 + Clustering voxels ...
 + Largest cluster has 55254 voxels
 + Clustering voxels ...
 + Largest cluster has 55224 voxels
 + Filled    37 voxels in small holes; now have 55261 voxels
 + Clustering voxels ...
 + Largest cluster has 55261 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 371014 voxels
 + Mask now has 55261 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 362712 voxels
++ 63563 voxels in the mask [out of 426275: 14.91%]
++ first  13 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  33 y-planes are zero [from I]
++ last    8 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    3 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0312.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0312.r02.blur+orig
++ Forming automask
 + Fixed clip level = 376.008026
 + Used gradual clip level = 337.015015 .. 434.633575
 + Number voxels above clip level = 55350
 + Clustering voxels ...
 + Largest cluster has 55184 voxels
 + Clustering voxels ...
 + Largest cluster has 55157 voxels
 + Filled    40 voxels in small holes; now have 55197 voxels
 + Clustering voxels ...
 + Largest cluster has 55197 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 371078 voxels
 + Mask now has 55197 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 362750 voxels
++ 63525 voxels in the mask [out of 426275: 14.90%]
++ first  13 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  33 y-planes are zero [from I]
++ last    8 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    3 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0312.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0312.r03.blur+orig
++ Forming automask
 + Fixed clip level = 376.398590
 + Used gradual clip level = 335.741455 .. 434.447083
 + Number voxels above clip level = 55481
 + Clustering voxels ...
 + Largest cluster has 55264 voxels
 + Clustering voxels ...
 + Largest cluster has 55236 voxels
 + Filled    45 voxels in small holes; now have 55281 voxels
 + Clustering voxels ...
 + Largest cluster has 55281 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 370994 voxels
 + Mask now has 55281 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 362660 voxels
++ 63615 voxels in the mask [out of 426275: 14.92%]
++ first  13 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  33 y-planes are zero [from I]
++ last    8 y-planes are zero [from S]
++ first   4 z-planes are zero [from L]
++ last    3 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0312
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 63812 survived, 362463 were zero
++ writing result full_mask.tb0312...
3dresample -master full_mask.tb0312+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0312
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 53910 survived, 372365 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0312...
3dABoverlap -no_automask full_mask.tb0312+orig mask_anat.tb0312+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0312+orig.BRIK  B=./mask_anat.tb0312+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
63812        53910        65101        52621        11191        1289         17.5375      2.3910     0.8424     0.9462     0.8684
3ddot -dodice full_mask.tb0312+orig mask_anat.tb0312+orig
tee out.mask_ae_dice.txt
0.893988	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0312
total number of censored TRs (simple form) = 24
1deval -a motion_tb0312_censor.1D -b outcount_tb0312_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0312_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0312.r01.blur+orig.HEAD pb03.tb0312.r02.blur+orig.HEAD pb03.tb0312.r03.blur+orig.HEAD -censor censor_tb0312_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0312 -errts errts.tb0312 -bucket stats.tb0312
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0312.r01.blur+orig.HEAD pb03.tb0312.r02.blur+orig.HEAD pb03.tb0312.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 55253 voxels (out of 426275 = 13.0%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 421 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0312.r01.blur+orig.HEAD pb03.tb0312.r02.blur+orig.HEAD pb03.tb0312.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0312_REML -Rvar stats.tb0312_REMLvar \
 -Rfitts fitts.tb0312_REML -Rerrts errts.tb0312_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (421x24):  4.72589  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (421x6):  1.03514  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (421x18):  4.44065  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (421x6):  3.3882  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (421x12):  1.18204  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.19374e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.20 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.239
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.253
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.267
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.282
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.296
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.310
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.324
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.340
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.354
++ Job #0: processing voxels 0 to 42626; elapsed time=7.364
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #1 finished; elapsed time=18.779
++ Job #4 finished; elapsed time=18.780
++ Job #3 finished; elapsed time=18.827
9.
++ Job #0 waiting for children to finish; elapsed time=18.859
++ Job #8 finished; elapsed time=18.871
++ Job #2 finished; elapsed time=18.881
++ Job #7 finished; elapsed time=18.901
++ Job #5 finished; elapsed time=18.922
++ Job #6 finished; elapsed time=18.981
++ Job #9 finished; elapsed time=19.027
++ Job #0 now finishing up; elapsed time=19.045
++ Smallest FDR q [0 Full_Fstat] = 5.35418e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 1.00053e-13
++ Smallest FDR q [3 uns1_Fstat] = 1.00049e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 1.39697e-14
++ Smallest FDR q [6 uns2_Fstat] = 1.39667e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 3.008e-11
++ Smallest FDR q [9 uns3_Fstat] = 3.008e-11
++ Smallest FDR q [11 str1#0_Tstat] = 2.76036e-13
++ Smallest FDR q [12 str1_Fstat] = 2.76071e-13
++ Smallest FDR q [14 str2#0_Tstat] = 9.99486e-15
++ Smallest FDR q [15 str2_Fstat] = 9.99216e-15
++ Smallest FDR q [17 str3#0_Tstat] = 2.76466e-12
++ Smallest FDR q [18 str3_Fstat] = 2.76466e-12
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.21943e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.21916e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.20316e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.20294e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 0.000126773
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 0.000126728
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 1.72866e-06
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 1.72879e-06
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 1.08165e-05
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 1.08164e-05
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 0.00258994
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 0.0025899
++ Wrote bucket dataset into ./stats.tb0312+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0312+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0312+orig.BRIK
++ Program finished; elapsed time=36.540
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.760       0.816  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.727       0.796  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.725       0.791  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.504       0.576  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.473       0.555  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.462       0.538  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0312.r01.blur+orig.HEAD pb03.tb0312.r02.blur+orig.HEAD pb03.tb0312.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0312_REML -Rvar stats.tb0312_REMLvar -Rfitts fitts.tb0312_REML -Rerrts errts.tb0312_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 55253 voxels (out of 426275 = 13.0%)
++ -----  matrix condition (421x24):  4.72589  ++ VERY GOOD ++
 + masked off 247906 voxels for being all zero; 178369 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 322 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=7.11
 + X matrix: 46.694% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=421 cols=24; 109*1 cases; total CPU=0.00 Elapsed=7.13
 +  average case bandwidth = 12.11
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=49.20
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=97.12
++ Output dataset ./stats.tb0312_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0312_REML+orig.BRIK
++ Output dataset ./errts.tb0312_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0312_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.96237e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 1.2922e-08
++ Smallest FDR q [3 uns1_Fstat] = 1.2922e-08
++ Smallest FDR q [5 uns2#0_Tstat] = 5.79596e-08
++ Smallest FDR q [6 uns2_Fstat] = 5.79597e-08
++ Smallest FDR q [8 uns3#0_Tstat] = 0.0180153
++ Smallest FDR q [9 uns3_Fstat] = 0.0180153
++ Smallest FDR q [11 str1#0_Tstat] = 1.32583e-05
++ Smallest FDR q [12 str1_Fstat] = 1.32583e-05
++ Smallest FDR q [14 str2#0_Tstat] = 4.81536e-08
++ Smallest FDR q [15 str2_Fstat] = 4.81538e-08
[7m*+ WARNING:[0m Smallest FDR q [17 str3#0_Tstat] = 0.396411 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [18 str3_Fstat] = 0.396411 ==> few true single voxel detections
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.11703e-12
++ Smallest FDR q [21 unstructured_Fstat] = 1.11703e-12
++ Smallest FDR q [23 structured#0_Tstat] = 2.59875e-12
++ Smallest FDR q [24 structured_Fstat] = 2.59875e-12
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.99975 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.99975 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999673 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999673 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.789057 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.789056 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.999897 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.999897 ==> few true single voxel detections
 + Added 25 FDR curves to dataset stats.tb0312_REML+orig
++ Output dataset ./stats.tb0312_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=114.46
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0312 pb03.tb0312.r01.blur+orig.HEAD pb03.tb0312.r02.blur+orig.HEAD pb03.tb0312.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.0 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0312+orig[0..2,5..149,155..195,202..291,299..358,368..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0312_REML+orig[0..2,5..149,155..195,202..291,299..358,368..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0312+orig -expr c*a/b -prefix TSNR.tb0312
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0312_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0312+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 63812 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.213971
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0312.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..2,5..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0312+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0312+orig[0..2,5..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63812
[7m*+ WARNING:[0m removed 202 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.08 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 155..195,202..291,299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0312+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0312+orig[155..195,202..291,299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63812
[7m*+ WARNING:[0m removed 202 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 132 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.31 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..358,368..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0312+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0312+orig[300..358,368..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63812
[7m*+ WARNING:[0m removed 202 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 141 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.28 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 10.7204 10.0837 10.4419 10.412
average errts FWHM blurs: 10.7204 10.0837 10.4419 10.412
echo 10.7204 10.0837 10.4419 10.412   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.453029 7.26745 13.6881 17.7719
average errts ACF blurs: 0.453029 7.26745 13.6881 17.7719
echo 0.453029 7.26745 13.6881 17.7719   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..2,5..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0312+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0312_REML+orig[0..2,5..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63812
[7m*+ WARNING:[0m removed 202 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.86 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 155..195,202..291,299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0312+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0312_REML+orig[155..195,202..291,299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63812
[7m*+ WARNING:[0m removed 202 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 132 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.78 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..358,368..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0312+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0312_REML+orig[300..358,368..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 63812
[7m*+ WARNING:[0m removed 202 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 141 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.75 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 10.5793 9.93446 10.3075 10.2703
average err_reml FWHM blurs: 10.5793 9.93446 10.3075 10.2703
echo 10.5793 9.93446 10.3075 10.2703   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.448579 7.19662 13.5687 17.6109
average err_reml ACF blurs: 0.448579 7.19662 13.5687 17.6109
echo 0.448579 7.19662 13.5687 17.6109   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0312.1D
3dClustSim -both -mask full_mask.tb0312+orig -acf 0.448579 7.19662 13.5687 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 63812 voxels in mask (14.97% of total)
++ Kernel function radius = 45.00 mm
++ ACF(0.45,7.20,13.57) => FWHM=17.62 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 495.8 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0312+orig stats.tb0312_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0312+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0312_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0312 -dsets pb00.tb0312.r01.tcat+orig.HEAD pb00.tb0312.r02.tcat+orig.HEAD pb00.tb0312.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0312.r01.blur+orig.BRIK rm.pb03.tb0312.r01.blur+orig.HEAD rm.pb03.tb0312.r02.blur+orig.BRIK rm.pb03.tb0312.r02.blur+orig.HEAD rm.pb03.tb0312.r03.blur+orig.BRIK rm.pb03.tb0312.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0312.txt
./@ss_review_basic

subject ID                : tb0312
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0312+orig.HEAD
final stats dset          : stats.tb0312_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 19
average motion (per TR)   : 0.0974269
average censored motion   : 0.0659766
max motion displacement   : 2.74936
max censored displacement : 2.0058
outlier limit             : 0.1
average outlier frac (TR) : 0.0114614
num TRs above out limit   : 18

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 148 132 141
num TRs per run (censored): 2 18 9
fraction censored per run : 0.0133333 0.12 0.06
TRs total (uncensored)    : 450
TRs total                 : 421
degrees of freedom used   : 24
degrees of freedom left   : 397

TRs censored              : 29
censor fraction           : 0.064444
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 0 7 9 0 6 7
fraction TRs censored     : 0.000 0.103 0.132 0.000 0.054 0.063
ave mot per sresp (orig)  : 0.056141 0.142329 0.102088 0.059960 0.097823 0.077031
ave mot per sresp (cens)  : 0.056141 0.068422 0.060259 0.059960 0.064632 0.067490

TSNR average              : 254.255
global correlation (GCOR) : 0.213971
anat/EPI mask Dice coef   : 0.893988
maximum F-stat (masked)   : 20.0391
blur estimates (ACF)      : 0.448579 7.19662 13.5687
blur estimates (FWHM)     : 10.5793 9.93446 10.3075


cd ..
echo execution finished: `date`
date
execution finished: Wed Aug  9 03:00:38 EDT 2017
