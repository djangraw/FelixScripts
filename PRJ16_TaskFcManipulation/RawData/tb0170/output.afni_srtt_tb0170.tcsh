echo auto-generated by afni_proc.py, Tue Aug  8 22:32:44 2017
auto-generated by afni_proc.py, Tue Aug  8 22:32:44 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Tue Aug  8 22:32:44 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0170
endif
set output_dir = tb0170.srtt
if ( -d tb0170.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0170.srtt
mkdir tb0170.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0170.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0170.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0170.srtt/pb00.tb0170.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0170.srtt/pb00.tb0170.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0170.srtt/pb00.tb0170.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0170.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0170.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0170.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0170.r01.tcat+orig.BRIK is 11.700010 degrees from plumb.
++ 26532 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0170.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0170.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0170.r02.tcat+orig.BRIK is 11.700010 degrees from plumb.
++ 26649 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0170.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0170.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0170.r03.tcat+orig.BRIK is 11.700010 degrees from plumb.
++ 26579 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0170.r01.tshift -tpattern alt+z2 pb00.tb0170.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0170.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0170.r01.tcat+orig.BRIK is 11.700010 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0170.r02.tshift -tpattern alt+z2 pb00.tb0170.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0170.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0170.r02.tcat+orig.BRIK is 11.700010 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0170.r03.tshift -tpattern alt+z2 pb00.tb0170.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0170.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0170.r03.tcat+orig.BRIK is 11.700010 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0170.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 96, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 108, avoid_vent -1
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 120, avoid_vent -1
Warning 3dSkullStrip: Stubborn intersection remaining at smoothing of 120. Ignoring it.#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 11.700010 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 354.014801
 + Used gradual clip level = 291.499207 .. 410.029785
 + Number voxels above clip level = 28250
 + Clustering voxels ...
 + Largest cluster has 27710 voxels
 + Clustering voxels ...
 + Largest cluster has 26204 voxels
 + Filled   403 voxels in small holes; now have 26607 voxels
 + Filled     5 voxels in large holes; now have 26612 voxels
 + Clustering voxels ...
 + Largest cluster has 26612 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 104452 voxels
 + Mask now has 26620 voxels
++ 26620 voxels in the mask [out of 131072: 20.31%]
++ first  15 x-planes are zero [from R]
++ last   10 x-planes are zero [from L]
++ first   6 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    1 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 901.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/901.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 11.700010 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 11.700010 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1440751 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=3
++ 26620 voxels [16.7%] in weight mask
++ Number of points for matching = 26620
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 33.131 28.877 20.625 (index)
 + source center of mass = 89.081 168.605 172.105 (index)
 + source-target CM = -3.411 1.080 -2.787 (xyz)
 + center of mass shifts = -3.411 1.080 -2.787
++ shift param auto-range: -72.9..66.1 -68.4..70.6 -51.6..46.0
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -13.410751 .. 6.589249
 + Range param#2 [y-shift] = -8.919853 .. 11.080147
 + Range param#3 [z-shift] = -12.786919 .. 7.213081
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -43.410751 .. 36.589249
 + Range param#2 [y-shift] = -38.919853 .. 41.080147
 + Range param#3 [z-shift] = -42.786919 .. 37.213081
 + 12 free parameters
++ Normalized convergence radius = 0.000455
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1440751 [out of 16158384] voxels
 + base mask has 37113 [out of 159744] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=64 usiz=177
 + - copying weight image
 + - using 26620 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 22484 total points stored in 212 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--+o.-..o.+.+....-.-++oo---..-$--..o + - best 45 costs found:
    0 v=-0.132668:  -3.41   1.08  -2.79   0.00   0.00   0.00  [grid]
    1 v=-0.047715: -27.61  -9.26  -7.31 -27.51 -29.30  27.65  [rand]
    2 v=-0.035962: -16.74 -25.59  10.55 -15.00 -30.00  15.00  [grid]
    3 v=-0.034996: -16.74 -12.25  10.55 -15.00 -30.00  15.00  [grid]
    4 v=-0.034653: -20.27 -17.51  11.67 -19.57 -37.09  16.59  [rand]
    5 v=-0.034175:   0.67  -5.15   5.01  -4.32 -22.85 -18.95  [rand]
    6 v=-0.033343:  -7.49   7.31   5.01   4.32 -22.85  18.95  [rand]
    7 v=-0.033243: -19.39 -18.41  -8.51 -20.53  -3.14  10.08  [rand]
    8 v=-0.033102: -25.73 -28.55   4.21  -8.73 -38.75  33.73  [rand]
    9 v=-0.032860: -30.08 -25.59  23.88 -30.00 -30.00  30.00  [grid]
   10 v=-0.031659: -16.74  27.75  23.88 -30.00  30.00  15.00  [grid]
   11 v=-0.030738: -29.72 -24.87  15.01 -15.82 -17.65  37.25  [rand]
   12 v=-0.030558:  28.43  12.87  -0.05  23.31   3.26 -40.47  [rand]
   13 v=-0.030541: -30.08 -25.59  10.55 -30.00 -15.00  30.00  [grid]
   14 v=-0.030060: -26.26 -22.49   7.63  -5.91 -29.74  29.45  [rand]
   15 v=-0.029719: -16.74 -25.59  10.55  15.00 -15.00  30.00  [grid]
   16 v=-0.029681: -16.74  27.75  23.88 -15.00  30.00  15.00  [grid]
   17 v=-0.029680: -30.08 -12.25  10.55 -30.00 -15.00  30.00  [grid]
   18 v=-0.029564:   9.92 -25.59  10.55  15.00 -30.00 -15.00  [grid]
   19 v=-0.029411:  31.45 -29.47  12.98  11.68 -29.04 -39.38  [rand]
   20 v=-0.027548: -30.08  14.41  23.88 -30.00 -15.00  30.00  [grid]
   21 v=-0.027459: -30.08 -12.25  23.88 -30.00 -15.00  30.00  [grid]
   22 v=-0.027322: -30.08 -25.59  10.55 -15.00 -30.00  30.00  [grid]
   23 v=-0.027056:  21.56 -27.97  32.66 -17.69 -14.58 -34.92  [rand]
   24 v=-0.026740: -30.08 -25.59  23.88 -15.00 -30.00  30.00  [grid]
   25 v=-0.026686: -16.74 -12.25  10.55 -15.00 -15.00  15.00  [grid]
   26 v=-0.026654:   8.19  -3.48   1.11 -24.53 -29.49 -26.10  [rand]
   27 v=-0.026608:   9.92  14.41  10.55 -30.00  15.00 -30.00  [grid]
   28 v=-0.026524: -16.74 -25.59  23.88 -30.00 -15.00  15.00  [grid]
   29 v=-0.026214: -30.08  27.75  23.88 -30.00  30.00  30.00  [grid]
   30 v=-0.026063: -30.08 -12.25  10.55 -15.00 -15.00  30.00  [grid]
   31 v=-0.025770:   9.92 -25.59  10.55 -15.00 -30.00 -30.00  [grid]
   32 v=-0.025629: -16.74  27.75  23.88 -30.00  15.00  15.00  [grid]
   33 v=-0.025594:  22.90 -24.87  15.01 -15.82 -17.65 -37.25  [rand]
   34 v=-0.025558: -30.08 -12.25  10.55 -15.00 -15.00  15.00  [grid]
   35 v=-0.025489: -16.74 -25.59  10.55 -30.00 -30.00  15.00  [grid]
   36 v=-0.025458:   9.92 -12.25  23.88  30.00 -15.00 -15.00  [grid]
   37 v=-0.025388: -16.74  14.41  10.55 -30.00  15.00  15.00  [grid]
   38 v=-0.025340: -30.08 -25.59  10.55 -30.00 -30.00  15.00  [grid]
   39 v=-0.025039:   8.19  -3.48   1.11  24.53 -29.49 -26.10  [rand]
   40 v=-0.024958:  27.98 -28.88   1.62  42.54  -9.20 -25.31  [rand]
   41 v=-0.024895:   9.92  14.41  10.55  30.00  15.00 -15.00  [grid]
   42 v=-0.024819:  23.26 -12.25  10.55  15.00 -15.00 -30.00  [grid]
   43 v=-0.024806:  30.92  17.67   5.82 -16.34   8.64 -40.54  [rand]
   44 v=-0.024667:  28.43  12.87  -0.05  23.31  -3.26 -40.47  [rand]
*[#8004=-0.216652] *[#8013=-0.235156] *[#8014=-0.305101] *[#8017=-0.366635] *[#8020=-0.372578] *[#8023=-0.386167] *[#8024=-0.397854] *[#8026=-0.403345] *[#8029=-0.416019] *[#8032=-0.428448] *[#8033=-0.430643] *[#8034=-0.438913] *[#8037=-0.440313] *[#8040=-0.442794] *[#8042=-0.443471] *[#8044=-0.445279]  + - costs of the above after a little optimization:
  * 0 v=-0.445279:  -1.77  -1.78  -0.30   0.75  -1.41   0.90  [grid]
    1 v=-0.054762: -27.20  -9.54  -7.10 -27.34 -27.07  30.06  [rand]
    2 v=-0.074507: -16.33 -29.73  11.19  -2.58 -28.19  14.68  [grid]
    3 v=-0.049660: -17.24 -17.98   9.88 -13.62 -28.61  11.98  [grid]
    4 v=-0.048145: -20.12 -15.49   9.16 -25.50 -32.21  10.17  [rand]
    5 v=-0.047366:   0.54  -4.99   4.09  -9.87 -22.97 -20.17  [rand]
    6 v=-0.036424:  -6.91   6.92   3.82   0.96 -24.46  16.47  [rand]
    7 v=-0.051817: -18.48 -16.94  -8.56 -16.41  -3.24   9.74  [rand]
    8 v=-0.039743: -27.19 -33.56   4.11  -6.74 -39.08  26.53  [rand]
    9 v=-0.038757: -30.69 -25.72  27.95 -30.13 -29.53  29.57  [grid]
   10 v=-0.035135: -15.77  27.48  23.95 -30.31  29.61  14.46  [grid]
   11 v=-0.032869: -30.28 -25.16  14.61 -17.00 -17.46  36.93  [rand]
   12 v=-0.045176:  26.92  14.02   0.55  30.96   4.08 -38.86  [rand]
   13 v=-0.039088: -31.10 -27.56  14.81 -30.65 -15.29  29.53  [grid]
   14 v=-0.066074: -24.35 -21.88   7.67  -2.04 -22.43  25.04  [rand]
   15 v=-0.038070: -16.96 -25.48  10.23  14.73 -14.32  34.41  [grid]
   16 v=-0.034815: -17.10  28.03  23.44 -16.10  28.38  13.12  [grid]
   17 v=-0.042766: -31.94 -11.57   9.34 -31.91  -6.27  33.73  [grid]
   18 v=-0.033383:  10.53 -25.67  10.94  15.88 -29.53 -15.68  [grid]
   19 v=-0.063898:  30.41 -37.73  15.10  20.47 -26.76 -32.34  [rand]
   20 v=-0.031401: -31.18  14.55  24.19 -29.16  -9.63  30.60  [grid]
   21 v=-0.045361: -34.76 -10.74  23.41 -31.12 -18.18  31.23  [grid]
   22 v=-0.038806: -32.60 -25.04   9.36 -16.30 -30.38  29.39  [grid]
   23 v=-0.033274:  21.55 -27.46  30.77 -18.76 -15.27 -36.30  [rand]
   24 v=-0.045198: -34.51 -25.58  28.68 -21.58 -30.34  31.39  [grid]
   25 v=-0.053114: -16.00 -10.49   8.18  -9.54 -17.48  12.51  [grid]
   26 v=-0.041564:   6.04  -3.92   5.62 -24.39 -29.88 -25.95  [rand]
   27 v=-0.039888:   5.96  12.57  10.87 -30.45  16.07 -27.74  [grid]
   28 v=-0.032368: -18.74 -25.76  23.80 -30.47 -13.83  15.39  [grid]
   29 v=-0.030245: -30.35  30.30  23.13 -30.66  29.44  29.07  [grid]
   30 v=-0.040489: -30.33  -9.04  11.30  -7.15 -14.58  29.82  [grid]
   31 v=-0.041494:   7.95 -33.26   8.27 -15.13 -31.50 -27.62  [grid]
   32 v=-0.034415: -20.41  27.54  24.03 -31.12  14.41  16.38  [grid]
   33 v=-0.050177:  20.03 -23.39  17.15  -9.66 -12.47 -31.34  [rand]
   34 v=-0.031839: -33.31 -11.61   9.91 -16.77 -15.27  15.78  [grid]
   35 v=-0.050594: -23.02 -26.17  10.57 -30.51 -30.90  14.83  [grid]
   36 v=-0.031534:   9.93 -15.79  24.17  30.46 -14.90 -15.31  [grid]
   37 v=-0.036729: -12.82  14.75  11.81 -29.02  14.84  14.79  [grid]
   38 v=-0.053129: -20.70 -25.28  10.80 -30.54 -31.43  12.32  [grid]
   39 v=-0.032502:   8.89  -1.47   1.29  23.79 -29.93 -26.91  [rand]
   40 v=-0.030683:  27.45 -30.44   3.11  41.73 -15.23 -26.65  [rand]
   41 v=-0.035995:   9.76  18.91  10.00  29.81  14.10 -14.77  [grid]
   42 v=-0.032537:  23.04 -12.35  11.56  15.38 -16.25 -25.19  [grid]
   43 v=-0.033725:  31.10  13.84   2.67 -15.66   7.23 -43.22  [rand]
   44 v=-0.044324:  28.36  11.67   1.81  30.62  -2.12 -39.61  [rand]
 + - save # 0 for twobest
 + - save # 2 for twobest
 + - save #14 for twobest
 + - save #19 for twobest
 + - save # 1 for twobest
 + - save #38 for twobest
 + - save #25 for twobest
 + - save # 7 for twobest
 + - skip #35 for twobest: too close to set #38
 + - save #33 for twobest
 + - save # 3 for twobest
 + - save # 4 for twobest
 + - save # 5 for twobest
 + - save #21 for twobest
 + - save #24 for twobest
 + - save #12 for twobest
 + - save #44 for twobest
 + - save #17 for twobest
 + - save #26 for twobest
 + - save #31 for twobest
 + - save #30 for twobest
 + - save #27 for twobest
 + - save # 8 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=64 usiz=177
 + - retaining old weight image
 + - using 26620 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22699 total points stored in 230 'RHDD(13.7332)' bloks
*[#9495=-0.445432] *[#9498=-0.445652] *[#9501=-0.445847] *[#9503=-0.446101] *[#9504=-0.446354] *[#9506=-0.446856] *[#9511=-0.447063] *[#9514=-0.447295] *[#9522=-0.447455] *[#9526=-0.447615] *[#9529=-0.447729] 
 + - param set #1 has cost=-0.447729
 + -- Parameters = -1.7578 -1.5684 -0.2586 0.8046 -1.4098 0.8964 1.0148 1.0030 0.9990 0.0002 -0.0007 -0.0010
 + - param set #2 has cost=-0.061524
 + -- Parameters = -16.6059 -29.8005 8.4062 -2.4590 -29.6594 15.5336 1.0019 1.0042 1.0012 0.0000 -0.0009 0.0020
 + - param set #3 has cost=-0.047493
 + -- Parameters = -24.4246 -21.9176 7.6839 -1.4530 -22.6441 25.4091 1.0000 1.0006 0.9976 -0.0011 -0.0008 -0.0018
 + - param set #4 has cost=-0.044285
 + -- Parameters = 30.2381 -37.6248 15.0510 20.5882 -26.8332 -31.9793 1.0011 1.0000 1.0178 -0.0006 -0.0001 0.0000
 + - param set #5 has cost=-0.042857
 + -- Parameters = -26.9630 -13.2109 -6.9542 -27.3650 -25.9726 30.4038 0.9984 1.0027 1.0006 -0.0001 0.0003 0.0004
 + - param set #6 has cost=-0.036731
 + -- Parameters = -21.8184 -24.6659 9.2644 -30.3699 -33.5914 10.9525 0.9998 0.9995 0.9977 -0.0054 -0.0028 -0.0035
 + - param set #7 has cost=-0.049654
 + -- Parameters = -16.0204 -10.3205 8.3587 -10.0194 -17.6032 11.9048 1.0051 1.0149 0.9981 0.0015 -0.0000 -0.0034
 + - param set #8 has cost=-0.056522
 + -- Parameters = -18.2296 -14.9758 -8.7303 -14.4152 -2.0535 10.1664 0.9968 0.9783 0.9817 -0.0031 -0.0027 0.0037
 + - param set #9 has cost=-0.037397
 + -- Parameters = 19.9042 -23.2708 17.4221 -10.2802 -13.5094 -33.7518 0.9965 0.9959 1.0066 0.0015 -0.0011 0.0112
 + - param set #10 has cost=-0.039818
 + -- Parameters = -16.3605 -17.5620 9.8641 -13.4810 -28.3821 12.3588 0.9981 1.0149 1.0004 -0.0012 -0.0022 -0.0006
 + - param set #11 has cost=-0.042523
 + -- Parameters = -20.7003 -14.1469 8.9697 -25.9548 -28.3545 8.5500 0.9961 0.9942 1.0103 -0.0067 -0.0070 -0.0069
*[#10303=-0.448531] *[#10314=-0.448813] *[#10317=-0.449362] *[#10321=-0.449511] *[#10325=-0.449686] *[#10328=-0.450053] 
 + - param set #12 has cost=-0.450053
 + -- Parameters = -1.6623 -1.6034 -0.5120 0.5856 -1.5070 0.8160 1.0015 0.9980 0.9851 -0.0046 -0.0008 -0.0036
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0379 
 + --- dist(#3,#1) = 0.352 
 + --- dist(#4,#1) = 0.207 
 + --- dist(#5,#1) = 0.179 
 + --- dist(#6,#1) = 0.285 
 + --- dist(#7,#1) = 0.45 
 + --- dist(#8,#1) = 0.329 
 + --- dist(#9,#1) = 0.298 
 + --- dist(#10,#1) = 0.299 
 + --- dist(#11,#1) = 0.384 
 + --- dist(#12,#1) = 0.356 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=64 usiz=177
 + - retaining old weight image
 + - using 26620 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 22745 total points stored in 235 'RHDD(13.5933)' bloks
*[#10337=-0.450066] *[#10365=-0.451277] *[#10369=-0.451369] *[#10370=-0.451461] *[#10378=-0.451546] *[#10383=-0.45168] *[#10388=-0.45169] *[#10392=-0.451912] *[#10393=-0.451981] *[#10395=-0.451993] *[#10400=-0.452027] *[#10402=-0.452031] *[#10406=-0.452167] *[#10412=-0.452185] 
 + - param set #1 has cost=-0.452185
 + -- Parameters = -1.7049 -1.6653 -0.5933 0.6649 -1.3355 0.8152 1.0043 0.9991 0.9852 -0.0055 -0.0001 -0.0022
 + - param set #2 has cost=-0.451533
 + -- Parameters = -1.7539 -1.6713 -0.2842 0.7743 -1.3930 0.8717 1.0098 1.0031 0.9973 -0.0015 -0.0011 -0.0031
 + - param set #3 has cost=-0.055670
 + -- Parameters = -16.4240 -30.2891 8.0699 -2.4159 -30.1803 15.1643 0.9993 1.0233 0.9613 -0.0039 -0.0255 0.0037
 + - param set #4 has cost=-0.054044
 + -- Parameters = -17.9785 -14.5343 -9.0870 -13.6826 -1.8881 10.4825 1.0028 0.9808 0.9806 -0.0005 0.0003 0.0052
 + - param set #5 has cost=-0.067729
 + -- Parameters = -11.2719 -10.4063 7.0912 -2.7776 -13.2418 8.9916 1.0349 1.0039 1.0051 -0.0120 0.0235 -0.0180
 + - param set #6 has cost=-0.034413
 + -- Parameters = -24.3749 -22.0020 7.7596 -1.4090 -22.6283 25.2934 0.9960 0.9997 0.9985 -0.0003 0.0015 -0.0005
 + - param set #7 has cost=-0.037707
 + -- Parameters = 30.4769 -37.8612 15.7021 21.3064 -27.0953 -30.6785 1.0013 0.9986 1.0241 0.0022 0.0015 0.0082
 + - param set #8 has cost=-0.037125
 + -- Parameters = -27.5864 -13.3232 -7.1579 -26.3196 -25.9436 31.9306 1.0024 1.0080 1.0016 -0.0015 -0.0001 0.0011
 + - param set #9 has cost=-0.032605
 + -- Parameters = -20.4965 -14.2894 8.7502 -26.0939 -28.3686 8.3098 1.0086 0.9943 1.0086 -0.0064 -0.0069 -0.0079
 + - param set #10 has cost=-0.035630
 + -- Parameters = -14.7657 -16.0202 8.6001 -13.0161 -27.7981 12.7362 0.9765 1.0068 1.0081 -0.0116 0.0239 -0.0101
 + - param set #11 has cost=-0.029830
 + -- Parameters = 23.9103 -23.4795 16.9725 -9.3069 -13.0927 -34.6747 0.9963 0.9901 1.0018 0.0021 0.0008 0.0121
 + - param set #12 has cost=-0.026368
 + -- Parameters = -21.8340 -24.2228 9.2775 -27.6424 -33.4334 10.9551 1.0001 1.0006 0.9979 -0.0051 -0.0029 -0.0029
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0329 
 + --- dist(#3,#1) = 0.132 
 + --- dist(#4,#1) = 0.358 
 + --- dist(#5,#1) = 0.203 
 + --- dist(#6,#1) = 0.452 
 + --- dist(#7,#1) = 0.346 
 + --- dist(#8,#1) = 0.294 
 + --- dist(#9,#1) = 0.283 
 + --- dist(#10,#1) = 0.3 
 + --- dist(#11,#1) = 0.394 
 + --- dist(#12,#1) = 0.357 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=64 usiz=177
 + - retaining old weight image
 + - using 26620 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 23051 total points stored in 246 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.432074
 + -- Parameters = -1.7379 -1.6444 -0.4855 0.7622 -1.4631 0.8330 1.0090 0.9987 0.9900 -0.0059 0.0008 -0.0053
 + - param set #2 has cost=-0.432464
 + -- Parameters = -1.7393 -1.6276 -0.3255 0.7600 -1.5426 0.8338 1.0091 1.0011 0.9965 -0.0053 -0.0004 -0.0069
 + - param set #3 has cost=-0.101602
 + -- Parameters = -9.7484 -13.9479 -0.0188 -1.8698 -11.0521 8.7039 1.0284 0.9665 0.9761 0.0323 -0.0568 -0.0599
 + - param set #4 has cost=-0.047267
 + -- Parameters = -16.4550 -30.0543 8.0684 -2.5269 -30.0626 14.9810 1.0004 1.0236 0.9615 0.0006 -0.0254 0.0040
 + - param set #5 has cost=-0.051933
 + -- Parameters = -17.0836 -14.5823 -9.3438 -13.2441 -1.4095 9.9611 1.0123 0.9802 0.9793 -0.0002 0.0005 0.0026
 + - param set #6 has cost=-0.033822
 + -- Parameters = 30.5422 -37.7243 15.7382 21.2010 -27.1561 -30.7032 0.9993 0.9979 1.0310 0.0023 0.0026 0.0085
 + - param set #7 has cost=-0.029690
 + -- Parameters = -27.5874 -13.2396 -7.0524 -26.1993 -26.0010 31.9764 1.0025 1.0155 1.0009 -0.0013 0.0001 0.0010
 + - param set #8 has cost=-0.033129
 + -- Parameters = -14.6621 -15.4670 8.4847 -12.4468 -27.9299 12.9862 0.9780 1.0085 0.9970 0.0222 0.0165 -0.0203
 + - param set #9 has cost=-0.029617
 + -- Parameters = -23.9701 -21.9889 7.8563 -1.0653 -22.7534 25.5057 0.9917 0.9868 0.9930 0.0041 0.0027 0.0074
 + - param set #10 has cost=-0.028316
 + -- Parameters = -20.3685 -14.2420 8.7898 -26.2946 -28.2639 8.1544 1.0069 0.9965 1.0078 -0.0061 -0.0074 -0.0079
 + - param set #11 has cost=-0.028431
 + -- Parameters = 23.6971 -23.7111 17.2273 -9.1420 -13.2827 -34.9798 1.0029 0.9849 1.0222 0.0029 0.0211 -0.0011
 + - param set #12 has cost=-0.024226
 + -- Parameters = -22.1499 -24.2745 7.7723 -26.7177 -34.2068 11.2032 0.9993 1.0007 0.9980 -0.0124 0.0017 0.0034
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0178 XXX
 + --- dist(#3,#1) = 0.192 
 + --- dist(#4,#1) = 0.355 
 + --- dist(#5,#1) = 0.451 
 + --- dist(#6,#1) = 0.293 
 + --- dist(#7,#1) = 0.346 
 + --- dist(#8,#1) = 0.278 
 + --- dist(#9,#1) = 0.398 
 + --- dist(#10,#1) = 0.301 
 + --- dist(#11,#1) = 0.363 
 + - cast out 1 parameter set for being too close to best set
 + - Total coarse refinement net CPU time = 0.0 s; 2865 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=64 usiz=177
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 23096 total points stored in 248 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.400215 *
 + -- Parameters = -1.7393 -1.6276 -0.3255 0.7600 -1.5426 0.8338 1.0091 1.0011 0.9965 -0.0053 -0.0004 -0.0069
 + - cost(#2)=-0.091626  
 + -- Parameters = -9.7484 -13.9479 -0.0188 -1.8698 -11.0521 8.7039 1.0284 0.9665 0.9761 0.0323 -0.0568 -0.0599
 + - cost(#3)=-0.045120  
 + -- Parameters = -17.0836 -14.5823 -9.3438 -13.2441 -1.4095 9.9611 1.0123 0.9802 0.9793 -0.0002 0.0005 0.0026
 + - cost(#4)=-0.041551  
 + -- Parameters = -16.4550 -30.0543 8.0684 -2.5269 -30.0626 14.9810 1.0004 1.0236 0.9615 0.0006 -0.0254 0.0040
 + - cost(#5)=-0.026046  
 + -- Parameters = 30.5422 -37.7243 15.7382 21.2010 -27.1561 -30.7032 0.9993 0.9979 1.0310 0.0023 0.0026 0.0085
 + - cost(#6)=-0.029139  
 + -- Parameters = -14.6621 -15.4670 8.4847 -12.4468 -27.9299 12.9862 0.9780 1.0085 0.9970 0.0222 0.0165 -0.0203
 + - cost(#7)=-0.023428  
 + -- Parameters = -27.5874 -13.2396 -7.0524 -26.1993 -26.0010 31.9764 1.0025 1.0155 1.0009 -0.0013 0.0001 0.0010
 + - cost(#8)=-0.024765  
 + -- Parameters = -23.9701 -21.9889 7.8563 -1.0653 -22.7534 25.5057 0.9917 0.9868 0.9930 0.0041 0.0027 0.0074
 + - cost(#9)=-0.022654  
 + -- Parameters = 23.6971 -23.7111 17.2273 -9.1420 -13.2827 -34.9798 1.0029 0.9849 1.0222 0.0029 0.0211 -0.0011
 + - cost(#10)=-0.023394  
 + -- Parameters = -20.3685 -14.2420 8.7898 -26.2946 -28.2639 8.1544 1.0069 0.9965 1.0078 -0.0061 -0.0074 -0.0079
 + - cost(#11)=-0.021924  
 + -- Parameters = -22.1499 -24.2745 7.7723 -26.7177 -34.2068 11.2032 0.9993 1.0007 0.9980 -0.0124 0.0017 0.0034
 + - cost(#12)=-0.106470  
 + -- Parameters = -3.4108 1.0801 -2.7869 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.400535 *
 + -- Parameters = -1.7397 -1.6467 -0.3347 0.7942 -1.5058 0.8086 1.0089 0.9994 0.9971 -0.0060 0.0004 -0.0066
 + - cost(#2)=-0.167296  
 + -- Parameters = -5.4370 -6.7781 -1.5930 -0.8601 -6.7987 4.2126 1.0599 0.9829 0.9253 0.0509 -0.0627 -0.1075
 + - cost(#3)=-0.054004  
 + -- Parameters = -15.9571 -11.9196 -8.0772 -12.5248 0.6424 7.8732 1.0193 0.9766 0.9866 -0.0046 0.0036 0.0120
 + - cost(#4)=-0.042382  
 + -- Parameters = -16.4543 -30.4392 8.0034 -2.3543 -30.2732 15.0552 1.0012 1.0243 0.9604 0.0004 -0.0202 0.0039
 + - cost(#5)=-0.027911  
 + -- Parameters = 30.3807 -37.7957 15.7698 21.5902 -26.8300 -31.2099 0.9995 0.9950 1.0286 0.0015 0.0046 0.0078
 + - cost(#6)=-0.029991  
 + -- Parameters = -14.5547 -15.2914 8.4254 -12.4579 -27.8329 12.8529 0.9775 1.0044 0.9954 0.0249 0.0178 -0.0174
 + - cost(#7)=-0.026508  
 + -- Parameters = -28.5774 -13.9388 -7.0061 -26.7632 -23.8566 32.0715 1.0013 1.0155 1.0001 -0.0010 -0.0005 0.0009
 + - cost(#8)=-0.026053  
 + -- Parameters = -23.8716 -21.7097 7.7643 -1.3243 -22.5973 25.0750 0.9925 0.9833 0.9806 0.0056 0.0013 0.0089
 + - cost(#9)=-0.025422  
 + -- Parameters = 23.9545 -23.5724 17.1215 -8.8173 -13.0404 -35.5420 0.9956 0.9677 1.0247 -0.0138 0.0297 -0.0129
 + - cost(#10)=-0.025984  
 + -- Parameters = -19.4390 -14.9782 8.6269 -27.0724 -28.3230 5.9213 1.0126 1.0226 0.9917 -0.0078 0.0002 -0.0154
 + - cost(#11)=-0.022880  
 + -- Parameters = -21.8965 -24.4093 7.7214 -26.4553 -34.2705 11.2931 0.9984 0.9925 1.0001 -0.0119 0.0014 0.0054
 + - cost(#12)=-0.400232  
 + -- Parameters = -1.6679 -1.5464 -0.2852 0.7885 -1.0779 0.6634 1.0080 1.0008 0.9986 -0.0050 0.0042 0.0026
 + - case #1 is now the best
 + - Initial  cost = -0.400535
 + - Initial fine Parameters = -1.7397 -1.6467 -0.3347 0.7942 -1.5058 0.8086 1.0089 0.9994 0.9971 -0.0060 0.0004 -0.0066
 + - Finalish cost = -0.400892 ; 201 funcs
 + - Final    cost = -0.400944 ; 222 funcs
 + Final fine fit Parameters:
       x-shift=-1.6596   y-shift=-1.6417   z-shift=-0.3501
       z-angle= 0.8129   x-angle=-1.4955   y-angle= 0.5666
       x-scale= 1.0087   y-scale= 0.9988   z-scale= 0.9972
     y/x-shear=-0.0055 z/x-shear= 0.0059 z/y-shear=-0.0063
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = -1.6596 -1.6417 -0.3501 0.8129 -1.4955 0.5666 1.0087 0.9988 0.9972 -0.0055 0.0059 -0.0063
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 19.0
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 11.700010 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0162 -0.9815 0.1767 235.9784 0.0192 0.1829 0.9815 60.0131 -1.0086 0.0141 0.0100 197.9953
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.1 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3279.990100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 79.3671 49.8459   ITER = 19/137
79.3671

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 65ms]
lev=0 0..171 0..213 0..166: [first cost=-0.68361] ... done [cost:-0.68361==>-0.75202]
lev=1 patch=129x161x125 [clock= 12m 27s 335ms]........:[cost=-0.77524]:........ done [cost:-0.75202==>-0.78237 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 17m 17s 543ms]......................... done [cost:-0.78237==>-0.85640 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 20m 41s 402ms]............... done [cost:-0.85640==>-0.92359 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 23m 35s 43ms].......... done [cost:-0.92359==>-0.97554 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 25m 38s 266ms]............. done [cost:-0.97554==>-1.03849 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 27m 47s 653ms].......................... done [cost:-1.03849==>-1.06986 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 30m 4s 525ms]................................... done [cost:-1.06986==>-1.15411 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 32m 32s 280ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0170/tb0170.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 6.3 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0170.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.700010 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0170.r01.tshift+orig.BRIK is 11.700010 degrees from plumb.
++ Reading input dataset ./pb01.tb0170.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30121 voxels
 + 5287 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.400  pitch=-0.672  yaw=-0.263  dS=-0.103  dL=-0.895  dP=-0.561
++ Mean: roll=-0.071  pitch=-0.251  yaw=-0.089  dS=+0.247  dL=-0.326  dP=-0.236
++ Max : roll=+0.087  pitch=+0.074  yaw=+0.029  dS=+0.629  dL=+0.000  dP=+0.041
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.18(0.18) 0.13(0.08) 0.11(0.05) 0.16(0.10) 0.14(0.09) 0.18(0.07) 0.20(0.02) 0.17(0.03) 0.25(0.09) 0.26(0.05) 0.28(0.09) 0.29(0.06) 0.25(0.05) 0.22(0.03) 0.23(0.02) 0.24(0.02) 0.23(0.03) 0.25(0.03) 0.23(0.03) 0.23(0.02) 0.25(0.04) 0.26(0.03) 0.27(0.03) 0.23(0.04) 0.24(0.03) 0.28(0.06) 0.29(0.03) 0.32(0.03) 0.33(0.03) 0.34(0.04) 0.37(0.03) 0.36(0.03) 0.38(0.03) 0.36(0.04) 0.34(0.04) 0.34(0.04) 0.33(0.03) 0.36(0.04) 0.36(0.04) 0.39(0.05) 0.42(0.05) 0.40(0.16) 0.37(0.20) 0.40(0.14) 0.39(0.10) 0.36(0.07) 0.34(0.08) 0.31(0.07) 0.31(0.03) 0.33(0.11) 0.36(0.09) 0.37(0.11) 0.31(0.20) 0.37(0.08) 0.38(0.08) 0.43(0.06) 0.53(0.11) 0.52(0.09) 0.55(0.03) 0.56(0.05) 0.56(0.03) 0.64(0.09) 0.67(0.03) 0.65(0.04) 0.65(0.05) 0.66(0.02) 0.71(0.06) 0.79(0.08) 0.80(0.05) 0.88(0.11) 1.00(0.12) 0.93(0.09) 0.93(0.03) 0.94(0.03) 0.97(0.03) 0.94(0.04) 0.90(0.05) 1.00(0.10) 1.16(0.17) 1.16(0.06) 1.04(0.12) 1.06(0.04) 1.19(0.14) 1.38(0.19) 1.23(0.18) 0.89(0.43) 1.04(0.16) 1.04(0.11) 1.09(0.13) 1.16(0.14) 1.20(0.07) 1.07(0.13) 1.03(0.11) 1.23(0.20) 1.44(0.26) 1.68(0.25) 1.72(0.07) 1.68(0.09) 1.65(0.06) 1.70(0.08) 1.71(0.06) 1.68(0.04) 1.65(0.05) 1.61(0.06) 1.70(0.09) 1.71(0.05) 1.67(0.05) 1.73(0.06) 1.74(0.04) 1.71(0.05) 1.73(0.07) 1.78(0.07) 1.76(0.10) 1.77(0.04) 1.82(0.05) 1.89(0.08) 1.75(0.17) 1.71(0.09) 1.75(0.06) 1.66(0.17) 1.59(0.22) 1.60(0.17) 1.74(0.20) 1.77(0.17) 1.82(0.11) 1.87(0.06) 1.78(0.16) 1.79(0.07) 1.80(0.09) 1.78(0.05) 1.79(0.04) 1.79(0.02) 1.80(0.08) 1.85(0.08) 1.86(0.05) 1.69(0.21) 1.84(0.17) 1.89(0.11) 1.94(0.08) 1.91(0.20) 2.02(0.13) 2.26(0.37) 2.13(0.17) 1.23(1.28) 1.45(0.52) 1.32(0.40) 1.06(0.48) 1.15(0.16) 1.07(0.09)
++ Max displacement in automask = 2.26 (mm) at sub-brick 142
++ Max delta displ  in automask = 1.28 (mm) at sub-brick 144
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0170.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0170.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0170.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0170.r01.tshift+orig.BRIK is 11.700010 degrees from plumb.
++ Source dataset: ./pb01.tb0170.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.700010 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.0
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0170.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.700010 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0170.r02.tshift+orig.BRIK is 11.700010 degrees from plumb.
++ Reading input dataset ./pb01.tb0170.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30230 voxels
 + 5402 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.039  pitch=-0.815  yaw=+0.387  dS=-0.215  dL=-0.751  dP=-0.821
++ Mean: roll=+0.252  pitch=-0.009  yaw=+0.735  dS=+0.312  dL=-0.331  dP=-0.732
++ Max : roll=+0.420  pitch=+0.933  yaw=+1.306  dS=+1.038  dL=-0.096  dP=-0.578
++ Max displacements (mm) for each sub-brick:
 1.64(0.00) 1.92(0.40) 1.93(0.23) 1.85(0.10) 1.84(0.07) 1.82(0.07) 1.74(0.15) 1.71(0.04) 1.70(0.06) 1.70(0.11) 1.67(0.17) 1.61(0.11) 1.62(0.04) 1.60(0.04) 1.56(0.06) 1.60(0.06) 1.63(0.05) 1.62(0.02) 1.69(0.12) 1.59(0.26) 1.56(0.07) 1.56(0.09) 1.54(0.17) 1.55(0.08) 1.55(0.10) 1.55(0.04) 1.55(0.06) 1.55(0.03) 1.52(0.16) 1.48(0.13) 1.48(0.06) 1.51(0.10) 1.51(0.05) 1.50(0.07) 1.46(0.10) 1.45(0.06) 1.48(0.07) 1.49(0.04) 1.48(0.08) 1.46(0.05) 1.46(0.03) 1.44(0.05) 1.42(0.04) 1.41(0.13) 1.42(0.08) 1.41(0.03) 1.41(0.03) 1.43(0.03) 1.44(0.05) 1.52(0.11) 1.55(0.12) 1.49(0.09) 1.52(0.06) 1.51(0.05) 1.53(0.18) 1.62(0.14) 1.63(0.08) 1.60(0.12) 1.61(0.06) 1.64(0.13) 1.63(0.07) 1.63(0.08) 1.66(0.05) 1.70(0.22) 1.74(0.16) 1.78(0.07) 1.82(0.07) 1.84(0.11) 1.90(0.07) 1.88(0.10) 1.89(0.04) 1.90(0.03) 1.94(0.10) 1.93(0.01) 1.92(0.04) 1.94(0.06) 1.97(0.06) 2.00(0.05) 1.99(0.07) 1.95(0.08) 1.98(0.07) 2.00(0.07) 2.00(0.03) 1.97(0.09) 1.97(0.09) 1.99(0.10) 2.02(0.06) 2.05(0.07) 2.06(0.23) 2.00(0.13) 2.03(0.08) 2.09(0.12) 2.12(0.11) 2.11(0.05) 2.15(0.06) 2.20(0.05) 2.23(0.08) 2.16(0.08) 2.19(0.05) 2.20(0.14) 2.19(0.07) 2.17(0.09) 2.05(0.22) 2.14(0.26) 2.23(0.14) 2.24(0.05) 2.29(0.09) 2.30(0.06) 2.28(0.05) 2.31(0.08) 2.40(0.11) 2.45(0.15) 2.36(0.12) 2.33(0.11) 2.41(0.21) 2.41(0.17) 2.41(0.27) 2.42(0.30) 2.56(0.29) 2.63(0.17) 2.69(0.20) 2.71(0.12) 2.53(0.26) 2.67(0.23) 2.70(0.06) 2.64(0.14) 2.70(0.12) 2.74(0.06) 2.85(0.12) 2.95(0.15) 3.06(0.18) 3.27(0.25) 3.15(0.37) 3.00(0.21) 3.01(0.15) 3.12(0.14) 3.06(0.12) 2.85(0.30) 2.89(0.11) 3.03(0.16) 3.04(0.06) 3.01(0.30) 2.49(0.94) 2.28(1.61) 2.73(1.36) 2.63(0.37) 2.68(0.13) 2.70(0.07) 2.74(0.07) 2.73(0.09)
++ Max displacement in automask = 3.27 (mm) at sub-brick 131
++ Max delta displ  in automask = 1.61 (mm) at sub-brick 143
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0170.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0170.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0170.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0170.r02.tshift+orig.BRIK is 11.700010 degrees from plumb.
++ Source dataset: ./pb01.tb0170.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.700010 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.3
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0170.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.700010 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0170.r03.tshift+orig.BRIK is 11.700010 degrees from plumb.
++ Reading input dataset ./pb01.tb0170.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 29782 voxels
 + 5174 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.288  pitch=-1.059  yaw=+0.393  dS=+0.501  dL=-1.148  dP=-0.904
++ Mean: roll=+0.081  pitch=-0.021  yaw=+0.598  dS=+0.857  dL=-0.780  dP=-0.678
++ Max : roll=+0.363  pitch=+0.911  yaw=+0.881  dS=+1.043  dL=-0.435  dP=-0.349
++ Max displacements (mm) for each sub-brick:
 2.86(0.00) 2.73(0.13) 2.74(0.04) 2.69(0.09) 2.70(0.07) 2.71(0.07) 2.72(0.07) 2.79(0.13) 2.81(0.17) 2.81(0.03) 2.85(0.07) 2.86(0.01) 2.84(0.07) 2.86(0.03) 2.86(0.05) 2.85(0.06) 2.87(0.03) 2.88(0.06) 2.86(0.06) 2.84(0.06) 2.80(0.06) 2.77(0.05) 2.76(0.11) 2.73(0.12) 2.69(0.07) 2.68(0.05) 2.71(0.06) 2.72(0.08) 2.64(0.09) 2.62(0.11) 2.61(0.11) 2.57(0.12) 2.58(0.05) 2.57(0.07) 2.56(0.08) 2.54(0.05) 2.54(0.02) 2.55(0.08) 2.54(0.09) 2.53(0.03) 2.52(0.09) 2.51(0.07) 2.45(0.06) 2.44(0.08) 2.43(0.04) 2.40(0.07) 2.37(0.16) 2.34(0.05) 2.34(0.05) 2.34(0.05) 2.32(0.04) 2.29(0.06) 2.34(0.18) 2.34(0.09) 2.28(0.07) 2.22(0.10) 2.27(0.16) 2.26(0.09) 2.27(0.07) 2.25(0.03) 2.24(0.06) 2.20(0.05) 2.24(0.08) 2.26(0.03) 2.24(0.04) 2.25(0.08) 2.27(0.10) 2.28(0.08) 2.24(0.04) 2.25(0.10) 2.26(0.01) 2.25(0.04) 2.21(0.09) 2.21(0.10) 2.23(0.05) 2.21(0.03) 2.23(0.03) 2.23(0.07) 2.26(0.05) 2.28(0.05) 2.29(0.06) 2.31(0.07) 2.34(0.12) 2.34(0.08) 2.35(0.03) 2.36(0.08) 2.36(0.02) 2.33(0.05) 2.29(0.05) 2.31(0.12) 2.22(0.14) 2.20(0.12) 2.20(0.05) 2.20(0.08) 2.24(0.09) 2.21(0.06) 2.21(0.06) 2.17(0.05) 2.13(0.07) 2.14(0.09) 2.16(0.24) 2.27(0.39) 2.29(0.27) 2.41(0.20) 2.43(0.15) 2.49(0.10) 2.52(0.06) 2.52(0.08) 2.60(0.09) 2.66(0.09) 2.67(0.06) 2.63(0.14) 2.69(0.08) 2.73(0.07) 2.76(0.04) 2.74(0.06) 2.67(0.12) 2.71(0.07) 2.79(0.14) 2.78(0.10) 2.78(0.07) 2.85(0.10) 2.85(0.06) 2.87(0.06) 2.93(0.07) 2.96(0.07) 2.98(0.06) 3.01(0.07) 3.10(0.12) 3.09(0.03) 3.08(0.03) 3.10(0.05) 3.23(0.15) 3.14(0.10) 3.19(0.13) 3.36(0.19) 3.44(0.09) 3.43(0.04) 3.44(0.04) 3.48(0.05) 3.37(0.11) 2.94(0.63) 2.78(0.32) 2.97(0.25) 2.83(0.17) 2.84(0.06) 2.88(0.05) 2.86(0.06) 2.89(0.06) 2.88(0.06)
++ Max displacement in automask = 3.48 (mm) at sub-brick 139
++ Max delta displ  in automask = 0.63 (mm) at sub-brick 141
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0170.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0170.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0170.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0170.r03.tshift+orig.BRIK is 11.700010 degrees from plumb.
++ Source dataset: ./pb01.tb0170.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 14.8
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 11.700010 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 14.8
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0170.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0170.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0170.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0170.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0170.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0170.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 11.700010 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0170
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0170+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0170+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1313238 voxels in source_automask+0
++ Zero-pad: zbot=2 ztop=0
++ Computing -autobox
++ 289926 voxels [65.8%] in weight mask
++ Number of points for matching = 136265
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.156085
   sp   = 0.34107
   mi   = -0.467227
   crM  = 0.0577602
   nmi  = 0.853836
   je   = 2.72941
   hel  = -0.0924788
   crA  = 0.240564
   crU  = 0.251083
   lss  = 0.843915
   lpc  = 0.0759671
   lpa  = 0.924033
   lpc+ = 0.243838
   ncd  = 1
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.8
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0170+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0170+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 26.1 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0170.r01.blur pb02.tb0170.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0170.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0170.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0170.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0170.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0170.r02.blur pb02.tb0170.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0170.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0170.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0170.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0170.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0170.r03.blur pb02.tb0170.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0170.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0170.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0170.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0170.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0170.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0170.r01.blur+orig
++ Forming automask
 + Fixed clip level = 346.590546
 + Used gradual clip level = 255.324081 .. 393.517090
 + Number voxels above clip level = 50117
 + Clustering voxels ...
 + Largest cluster has 49921 voxels
 + Clustering voxels ...
 + Largest cluster has 49482 voxels
 + Filled    61 voxels in small holes; now have 49543 voxels
 + Filled     1 voxels in large holes; now have 49544 voxels
 + Clustering voxels ...
 + Largest cluster has 49543 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376732 voxels
 + Mask now has 49543 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368071 voxels
++ 58204 voxels in the mask [out of 426275: 13.65%]
++ first  15 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  24 y-planes are zero [from I]
++ last   16 y-planes are zero [from S]
++ first   4 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0170.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0170.r02.blur+orig
++ Forming automask
 + Fixed clip level = 346.556885
 + Used gradual clip level = 255.687119 .. 393.672791
 + Number voxels above clip level = 49903
 + Clustering voxels ...
 + Largest cluster has 49699 voxels
 + Clustering voxels ...
 + Largest cluster has 49538 voxels
 + Filled    60 voxels in small holes; now have 49598 voxels
 + Clustering voxels ...
 + Largest cluster has 49597 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 376678 voxels
 + Mask now has 49597 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 367527 voxels
++ 58748 voxels in the mask [out of 426275: 13.78%]
++ first  14 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  24 y-planes are zero [from I]
++ last   16 y-planes are zero [from S]
++ first   4 z-planes are zero [from L]
++ last    6 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0170.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0170.r03.blur+orig
++ Forming automask
 + Fixed clip level = 346.935394
 + Used gradual clip level = 258.291748 .. 393.359253
 + Number voxels above clip level = 49436
 + Clustering voxels ...
 + Largest cluster has 48957 voxels
 + Clustering voxels ...
 + Largest cluster has 48811 voxels
 + Filled    53 voxels in small holes; now have 48864 voxels
 + Clustering voxels ...
 + Largest cluster has 48864 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 377411 voxels
 + Mask now has 48864 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 368917 voxels
++ 57358 voxels in the mask [out of 426275: 13.46%]
++ first  15 x-planes are zero [from A]
++ last    9 x-planes are zero [from P]
++ first  24 y-planes are zero [from I]
++ last   16 y-planes are zero [from S]
++ first   5 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0170
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 59161 survived, 367114 were zero
++ writing result full_mask.tb0170...
3dresample -master full_mask.tb0170+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0170
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 51776 survived, 374499 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0170...
3dABoverlap -no_automask full_mask.tb0170+orig mask_anat.tb0170+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0170+orig.BRIK  B=./mask_anat.tb0170+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
59161        51776        61900        49037        10124        2739         17.1126      5.2901     0.8316     0.9974     0.8238
3ddot -dodice full_mask.tb0170+orig mask_anat.tb0170+orig
tee out.mask_ae_dice.txt
0.884051	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0170
total number of censored TRs (simple form) = 10
1deval -a motion_tb0170_censor.1D -b outcount_tb0170_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0170_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0170.r01.blur+orig.HEAD pb03.tb0170.r02.blur+orig.HEAD pb03.tb0170.r03.blur+orig.HEAD -censor censor_tb0170_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0170 -errts errts.tb0170 -bucket stats.tb0170
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0170.r01.blur+orig.HEAD pb03.tb0170.r02.blur+orig.HEAD pb03.tb0170.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 49530 voxels (out of 426275 = 11.6%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 437 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0170.r01.blur+orig.HEAD pb03.tb0170.r02.blur+orig.HEAD pb03.tb0170.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0170_REML -Rvar stats.tb0170_REMLvar \
 -Rfitts fitts.tb0170_REML -Rerrts errts.tb0170_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (437x24):  5.50174  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (437x6):  1.03511  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (437x18):  4.60244  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (437x6):  2.39734  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (437x12):  1.09996  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 3.02369e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.32 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.647
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.661
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.676
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.691
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.705
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.719
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.734
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.748
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.762
++ Job #0: processing voxels 0 to 42626; elapsed time=7.772
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #1 finished; elapsed time=19.492
++ Job #3 finished; elapsed time=19.512
++ Job #4 finished; elapsed time=19.542
++ Job #5 finished; elapsed time=19.567
++ Job #6 finished; elapsed time=19.567
9.
++ Job #0 waiting for children to finish; elapsed time=19.583
++ Job #7 finished; elapsed time=19.597
++ Job #8 finished; elapsed time=19.626
++ Job #2 finished; elapsed time=19.638
++ Job #9 finished; elapsed time=19.817
++ Job #0 now finishing up; elapsed time=19.834
++ Smallest FDR q [0 Full_Fstat] = 7.4983e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 9.3167e-11
++ Smallest FDR q [3 uns1_Fstat] = 9.31788e-11
++ Smallest FDR q [5 uns2#0_Tstat] = 1.38501e-13
++ Smallest FDR q [6 uns2_Fstat] = 1.38499e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 1.59285e-14
++ Smallest FDR q [9 uns3_Fstat] = 1.59302e-14
++ Smallest FDR q [11 str1#0_Tstat] = 4.52175e-11
++ Smallest FDR q [12 str1_Fstat] = 4.52178e-11
++ Smallest FDR q [14 str2#0_Tstat] = 1.28718e-13
++ Smallest FDR q [15 str2_Fstat] = 1.28708e-13
++ Smallest FDR q [17 str3#0_Tstat] = 2.70953e-14
++ Smallest FDR q [18 str3_Fstat] = 2.70941e-14
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.38542e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.38513e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 1.38992e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 1.38951e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 7.28823e-11
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 7.28823e-11
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 0.000889872
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 0.000889868
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 4.48453e-10
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 4.48451e-10
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 2.21442e-08
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 2.21501e-08
++ Wrote bucket dataset into ./stats.tb0170+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0170+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0170+orig.BRIK
++ Program finished; elapsed time=37.407
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.742       0.804  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.736       0.799  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.731       0.796  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.482       0.558  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.468       0.544  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.465       0.543  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0170.r01.blur+orig.HEAD pb03.tb0170.r02.blur+orig.HEAD pb03.tb0170.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0170_REML -Rvar stats.tb0170_REMLvar -Rfitts fitts.tb0170_REML -Rerrts errts.tb0170_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 49530 voxels (out of 426275 = 11.6%)
++ -----  matrix condition (437x24):  5.50174  ++ VERY GOOD ++
 + masked off 247920 voxels for being all zero; 178355 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 322 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=7.55
 + X matrix: 46.691% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=437 cols=24; 109*1 cases; total CPU=0.00 Elapsed=7.58
 +  average case bandwidth = 12.38
++ REML voxel loop: [6 threads]0123456789.0123456789.0
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=50.44
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=99.62
++ Output dataset ./stats.tb0170_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0170_REML+orig.BRIK
++ Output dataset ./errts.tb0170_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0170_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 1.1968e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 0.000585344
++ Smallest FDR q [3 uns1_Fstat] = 0.000585344
++ Smallest FDR q [5 uns2#0_Tstat] = 1.5677e-10
++ Smallest FDR q [6 uns2_Fstat] = 1.5677e-10
++ Smallest FDR q [8 uns3#0_Tstat] = 4.1083e-12
++ Smallest FDR q [9 uns3_Fstat] = 4.10831e-12
++ Smallest FDR q [11 str1#0_Tstat] = 0.0011199
++ Smallest FDR q [12 str1_Fstat] = 0.0011199
++ Smallest FDR q [14 str2#0_Tstat] = 8.95713e-11
++ Smallest FDR q [15 str2_Fstat] = 8.9571e-11
++ Smallest FDR q [17 str3#0_Tstat] = 4.90318e-10
++ Smallest FDR q [18 str3_Fstat] = 4.90318e-10
++ Smallest FDR q [20 unstructured#0_Tstat] = 6.47637e-13
++ Smallest FDR q [21 unstructured_Fstat] = 6.47637e-13
++ Smallest FDR q [23 structured#0_Tstat] = 9.53213e-13
++ Smallest FDR q [24 structured_Fstat] = 9.53213e-13
++ Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.0371641
++ Smallest FDR q [27 unstructured-structured_Fstat] = 0.0371641
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.579963 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.579963 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.248811 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.248811 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.0451378
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.0451378
 + Added 25 FDR curves to dataset stats.tb0170_REML+orig
++ Output dataset ./stats.tb0170_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=116.86
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0170 pb03.tb0170.r01.blur+orig.HEAD pb03.tb0170.r02.blur+orig.HEAD pb03.tb0170.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.4 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0170+orig[0..84,87..142,145..147,150..290,295..297,299..439,442..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0170_REML+orig[0..84,87..142,145..147,150..290,295..297,299..439,442..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0170+orig -expr c*a/b -prefix TSNR.tb0170
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0170_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0170+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 59161 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.128408
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0170.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..84,87..142,145..147 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0170+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0170+orig[0..84,87..142,145..147]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59161
[7m*+ WARNING:[0m removed 87 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 144 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.88 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..290,295..297,299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0170+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0170+orig[150..290,295..297,299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59161
[7m*+ WARNING:[0m removed 87 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 145 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.98 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..439,442..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0170+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0170+orig[300..439,442..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59161
[7m*+ WARNING:[0m removed 87 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.22 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 10.0488 9.03793 9.98686 9.67901
average errts FWHM blurs: 10.0488 9.03793 9.98686 9.67901
echo 10.0488 9.03793 9.98686 9.67901   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.541641 6.86143 12.1101 16.3422
average errts ACF blurs: 0.541641 6.86143 12.1101 16.3422
echo 0.541641 6.86143 12.1101 16.3422   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..84,87..142,145..147 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0170+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0170_REML+orig[0..84,87..142,145..147]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59161
[7m*+ WARNING:[0m removed 87 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 144 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 29.81 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..290,295..297,299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0170+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0170_REML+orig[150..290,295..297,299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59161
[7m*+ WARNING:[0m removed 87 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 145 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.87 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..439,442..449 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0170+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0170_REML+orig[300..439,442..449]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 59161
[7m*+ WARNING:[0m removed 87 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 148 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 28.16 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 10.0172 9.01056 9.96425 9.6518
average err_reml FWHM blurs: 10.0172 9.01056 9.96425 9.6518
echo 10.0172 9.01056 9.96425 9.6518   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.544288 6.73015 12.3519 16.2244
average err_reml ACF blurs: 0.544288 6.73015 12.3519 16.2244
echo 0.544288 6.73015 12.3519 16.2244   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0170.1D
3dClustSim -both -mask full_mask.tb0170+orig -acf 0.544288 6.73015 12.3519 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 59161 voxels in mask (13.88% of total)
++ Kernel function radius = 38.61 mm
++ ACF(0.54,6.73,12.35) => FWHM=16.21 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 501.5 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0170+orig stats.tb0170_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0170+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0170_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0170 -dsets pb00.tb0170.r01.tcat+orig.HEAD pb00.tb0170.r02.tcat+orig.HEAD pb00.tb0170.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0170.r01.blur+orig.BRIK rm.pb03.tb0170.r01.blur+orig.HEAD rm.pb03.tb0170.r02.blur+orig.BRIK rm.pb03.tb0170.r02.blur+orig.HEAD rm.pb03.tb0170.r03.blur+orig.BRIK rm.pb03.tb0170.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0170.txt
./@ss_review_basic

subject ID                : tb0170
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0170+orig.HEAD
final stats dset          : stats.tb0170_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 6
average motion (per TR)   : 0.0664863
average censored motion   : 0.0588787
max motion displacement   : 2.5335
max censored displacement : 2.5335
outlier limit             : 0.1
average outlier frac (TR) : 0.00622609
num TRs above out limit   : 7

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 144 145 148
num TRs per run (censored): 6 5 2
fraction censored per run : 0.04 0.0333333 0.0133333
TRs total (uncensored)    : 450
TRs total                 : 437
degrees of freedom used   : 24
degrees of freedom left   : 413

TRs censored              : 13
censor fraction           : 0.028889
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 2 4 2 2 0 0
fraction TRs censored     : 0.029 0.059 0.029 0.018 0.000 0.000
ave mot per sresp (orig)  : 0.073109 0.098921 0.062940 0.058394 0.065901 0.049752
ave mot per sresp (cens)  : 0.062658 0.070131 0.058338 0.055231 0.065901 0.049752

TSNR average              : 292.969
global correlation (GCOR) : 0.128408
anat/EPI mask Dice coef   : 0.884051
maximum F-stat (masked)   : 22.4789
blur estimates (ACF)      : 0.544288 6.73015 12.3519
blur estimates (FWHM)     : 10.0172 9.01056 9.96425


cd ..
echo execution finished: `date`
date
execution finished: Tue Aug  8 23:29:00 EDT 2017
