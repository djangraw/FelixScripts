echo auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
auto-generated by afni_proc.py, Wed Aug  9 12:15:52 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Wed Aug  9 12:15:52 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb9369
endif
set output_dir = tb9369.srtt
if ( -d tb9369.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb9369.srtt
mkdir tb9369.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb9369.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb9369.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb9369.srtt/pb00.tb9369.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.8 s
3dTcat -prefix tb9369.srtt/pb00.tb9369.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.2 s
3dTcat -prefix tb9369.srtt/pb00.tb9369.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 1.7 s
set tr_counts = ( 150 150 150 )
cd tb9369.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9369.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9369.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9369.r01.tcat+orig.BRIK is 14.900002 degrees from plumb.
++ 28797 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9369.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9369.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9369.r02.tcat+orig.BRIK is 14.900002 degrees from plumb.
++ 28782 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb9369.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9369.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9369.r03.tcat+orig.BRIK is 14.900002 degrees from plumb.
++ 28804 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb9369.r01.tshift -tpattern alt+z2 pb00.tb9369.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9369.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9369.r01.tcat+orig.BRIK is 14.900002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb9369.r02.tshift -tpattern alt+z2 pb00.tb9369.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9369.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9369.r02.tcat+orig.BRIK is 14.900002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb9369.r03.tshift -tpattern alt+z2 pb00.tb9369.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb9369.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb9369.r03.tcat+orig.BRIK is 14.900002 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb9369.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 14.900002 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 382.104004
 + Used gradual clip level = 353.001587 .. 423.096008
 + Number voxels above clip level = 29407
 + Clustering voxels ...
 + Largest cluster has 29141 voxels
 + Clustering voxels ...
 + Largest cluster has 28482 voxels
 + Filled   315 voxels in small holes; now have 28797 voxels
 + Clustering voxels ...
 + Largest cluster has 28795 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 102277 voxels
 + Mask now has 28795 voxels
++ 28795 voxels in the mask [out of 131072: 21.97%]
++ first  12 x-planes are zero [from R]
++ last   12 x-planes are zero [from L]
++ first   5 y-planes are zero [from P]
++ last    7 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 948.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/948.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 14.900002 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1630860 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 28795 voxels [18.5%] in weight mask
++ Number of points for matching = 28795
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 32.096 29.398 19.746 (index)
 + source center of mass = 84.079 153.510 180.835 (index)
 + source-target CM = 0.031 2.192 -4.155 (xyz)
 + center of mass shifts = 0.031 2.192 -4.155
++ shift param auto-range: -69.5..69.5 -67.3..71.7 -51.7..43.4
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -9.968521 .. 10.031479
 + Range param#2 [y-shift] = -7.807510 .. 12.192490
 + Range param#3 [z-shift] = -14.155434 .. 5.844566
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -39.968521 .. 40.031479
 + Range param#2 [y-shift] = -37.807510 .. 42.192490
 + Range param#3 [z-shift] = -44.155434 .. 35.844566
 + 12 free parameters
++ Normalized convergence radius = 0.000456
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1630860 [out of 17352896] voxels
 + base mask has 39625 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=78 usiz=183.5
 + - copying weight image
 + - using 28795 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24886 total points stored in 233 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#o+oo.++-ooo+.o-o...o-ooo+o.$-.-++++ + - best 45 costs found:
    0 v=-0.116073:   0.03   2.19  -4.16   0.00   0.00   0.00  [grid]
    1 v=-0.049348: -13.30 -24.47  22.51 -15.00 -30.00  15.00  [grid]
    2 v=-0.048577:  -4.05   8.42   3.64  -4.32  22.85  18.95  [rand]
    3 v=-0.038461:  -4.05   8.42   3.64   4.32  22.85  18.95  [rand]
    4 v=-0.038062: -16.19 -11.92  30.98 -15.74 -34.09   7.78  [rand]
    5 v=-0.036163: -15.26 -18.70  26.23 -14.56 -29.40  15.92  [rand]
    6 v=-0.035525: -13.30  15.53  22.51 -15.00 -30.00 -15.00  [grid]
    7 v=-0.034886: -14.17  11.65   0.68 -15.99 -13.53 -29.93  [rand]
    8 v=-0.033700:  -5.95  -1.21  20.37 -29.81   4.26  23.54  [rand]
    9 v=-0.033426:  11.63   6.75  -8.05  24.53  29.49 -26.10  [rand]
   10 v=-0.033403:   4.11   8.42   3.64   4.32  22.85 -18.95  [rand]
   11 v=-0.033227: -13.39 -20.49  27.18  -4.37 -20.12  15.12  [rand]
   12 v=-0.032921: -13.30 -11.14  22.51 -15.00 -30.00 -15.00  [grid]
   13 v=-0.032672: -13.30  15.53   9.18 -15.00  15.00  30.00  [grid]
   14 v=-0.032046: -13.30 -11.14  22.51 -15.00 -30.00  15.00  [grid]
   15 v=-0.032008:  13.36 -11.14  22.51 -30.00 -15.00 -30.00  [grid]
   16 v=-0.030922:  26.70 -11.14   9.18  15.00 -15.00 -30.00  [grid]
   17 v=-0.030708: -15.95 -17.30  -9.88 -20.53   3.14  10.08  [rand]
   18 v=-0.030088: -13.30 -24.47  22.51 -15.00  15.00  15.00  [grid]
   19 v=-0.029261: -13.30  15.53   9.18 -30.00  15.00  30.00  [grid]
   20 v=-0.029188: -16.19 -11.92 -39.29 -15.74  34.09   7.78  [rand]
   21 v=-0.029082: -13.30  15.53  22.51 -15.00 -15.00  15.00  [grid]
   22 v=-0.028893:   6.02  -1.21  20.37 -29.81   4.26 -23.54  [rand]
   23 v=-0.028850: -19.46  18.86  -6.76 -30.54  19.59  20.03  [rand]
   24 v=-0.028772: -26.64 -11.14   9.18 -30.00  30.00 -15.00  [grid]
   25 v=-0.028563: -24.93 -26.86  31.29  17.69 -14.58  34.92  [rand]
   26 v=-0.028487: -16.19 -11.92  30.98 -15.74 -34.09  -7.78  [rand]
   27 v=-0.027821: -13.30 -24.47   9.18 -15.00 -15.00  30.00  [grid]
   28 v=-0.027410:  13.36 -11.14  22.51  30.00 -15.00 -30.00  [grid]
   29 v=-0.026851: -26.64 -11.14 -17.49 -15.00  15.00 -15.00  [grid]
   30 v=-0.026543:  -4.05   8.42   3.64  -4.32 -22.85 -18.95  [rand]
   31 v=-0.026420: -13.30 -11.14  22.51 -15.00 -15.00 -15.00  [grid]
   32 v=-0.026397: -26.64 -24.47  22.51 -30.00 -30.00  30.00  [grid]
   33 v=-0.026016: -26.64 -24.47  22.51 -15.00 -30.00  30.00  [grid]
   34 v=-0.025881: -13.30  15.53  22.51 -30.00 -30.00 -30.00  [grid]
   35 v=-0.025721:  13.36 -24.47   9.18  30.00 -30.00 -30.00  [grid]
   36 v=-0.025713: -13.30 -11.14   9.18 -15.00 -15.00 -15.00  [grid]
   37 v=-0.025232: -13.30  15.53   9.18  15.00  15.00 -30.00  [grid]
   38 v=-0.025005:  13.36 -11.14   9.18  30.00 -15.00 -15.00  [grid]
   39 v=-0.025003:  -4.05   8.42   3.64   4.32 -22.85 -18.95  [rand]
   40 v=-0.024953: -13.30  28.86   9.18 -30.00  15.00  30.00  [grid]
   41 v=-0.024864: -11.57   6.75  -0.26 -24.53  29.49 -26.10  [rand]
   42 v=-0.024761: -13.30  15.53   9.18 -15.00  15.00 -15.00  [grid]
   43 v=-0.024610: -26.64 -11.14  22.51 -30.00 -30.00  15.00  [grid]
   44 v=-0.024580: -13.30 -11.14   9.18 -15.00  30.00  15.00  [grid]
*[#8004=-0.442031] *[#8012=-0.451308] *[#8017=-0.460125] *[#8020=-0.47804] *[#8021=-0.483416] *[#8022=-0.495476] *[#8023=-0.504163] *[#8025=-0.514536] *[#8026=-0.517103] *[#8028=-0.527643] *[#8033=-0.539401] *[#8035=-0.539718] *[#8036=-0.542526] *[#8038=-0.54299] *[#8041=-0.550533] *[#8045=-0.552666]  + - costs of the above after a little optimization:
  * 0 v=-0.552666:   0.38   0.51  -1.04   0.04   1.93  -0.52  [grid]
    1 v=-0.062073: -14.05 -23.76  23.19  -8.28 -29.19  15.76  [grid]
    2 v=-0.057327:  -3.63   9.06   2.53  -2.78  20.97  21.26  [rand]
    3 v=-0.048302:  -4.20   8.68   3.01   4.23  22.90  12.46  [rand]
    4 v=-0.061693: -15.44 -16.36  25.78 -14.67 -33.86   8.34  [rand]
    5 v=-0.065729: -14.61 -19.61  26.99  -7.26 -30.08  16.53  [rand]
    6 v=-0.051952: -12.60  15.10  19.83 -18.05 -25.79 -14.93  [grid]
    7 v=-0.044454: -13.29  10.38   2.15 -14.78 -14.61 -27.45  [rand]
    8 v=-0.034382:  -6.11  -1.65  20.37 -29.81   4.58  23.38  [rand]
    9 v=-0.043236:   8.13   6.86  -7.94  23.03  29.75 -25.12  [rand]
   10 v=-0.055152:   5.24   8.59   1.11  10.04  19.41 -13.68  [rand]
   11 v=-0.071659: -13.93 -14.82  26.93  -5.36 -24.28  15.11  [rand]
   12 v=-0.077218:  -6.64 -14.48  17.47  -9.85 -27.41 -10.19  [grid]
   13 v=-0.046920: -13.27  11.89   8.27 -16.22  14.31  29.98  [grid]
   14 v=-0.071990: -15.86 -12.86  22.76 -14.46 -29.29   9.39  [grid]
   15 v=-0.039254:  12.82 -11.02  27.01 -30.44 -14.80 -29.73  [grid]
   16 v=-0.036103:  26.36  -7.98   9.18  15.21 -15.05 -29.27  [grid]
   17 v=-0.036284: -14.23 -16.42 -10.17 -20.11   2.77   9.28  [rand]
   18 v=-0.033415: -13.27 -23.92  23.14 -14.75  19.65  14.92  [grid]
   19 v=-0.040485: -14.18  10.88   8.33 -29.97  11.87  31.06  [grid]
   20 v=-0.034512: -15.14 -14.77 -39.60 -15.31  33.80   8.32  [rand]
   21 v=-0.043039: -12.94  10.79  21.11 -13.98 -14.06  15.51  [grid]
   22 v=-0.035725:   5.68  -1.57  20.24 -25.61   4.00 -23.52  [rand]
   23 v=-0.038547: -16.97  17.76  -6.33 -31.37  19.91  18.34  [rand]
   24 v=-0.036385: -26.61  -6.74   8.96 -28.28  29.36 -14.89  [grid]
   25 v=-0.030642: -24.76 -26.66  30.85  17.06 -16.50  33.63  [rand]
   26 v=-0.067984: -10.06 -16.22  26.75 -11.00 -32.58  -2.94  [rand]
   27 v=-0.037795: -14.36 -24.39  10.00 -15.37 -11.12  30.02  [grid]
   28 v=-0.033562:  13.86 -11.13  26.44  30.01 -15.05 -30.03  [grid]
   29 v=-0.040816: -27.45  -5.21 -16.80 -14.01  14.84 -14.30  [grid]
   30 v=-0.037666:  -4.75   8.51   3.63  -5.61 -25.30 -23.39  [rand]
   31 v=-0.058154:  -7.01  -8.74  17.07 -13.88 -14.01 -11.76  [grid]
   32 v=-0.044052: -23.97 -21.91  27.58 -26.79 -29.62  34.87  [grid]
   33 v=-0.071943: -19.51 -20.89  29.34  -6.31 -32.39  26.91  [grid]
   34 v=-0.049367: -15.25   9.93  20.58 -30.48 -24.88 -29.98  [grid]
   35 v=-0.037508:  17.98 -25.52   9.27  30.69 -30.73 -29.51  [grid]
   36 v=-0.049930: -10.03 -15.55   9.85 -11.07 -16.76 -12.03  [grid]
   37 v=-0.026821: -13.64  15.20  13.09  14.72  14.86 -29.98  [grid]
   38 v=-0.030392:  12.98 -11.47   7.10  30.55 -15.90 -16.42  [grid]
   39 v=-0.035429:  -5.04  12.02   3.56   4.29 -23.27 -18.87  [rand]
   40 v=-0.028406: -12.66  28.88  12.30 -29.68  13.92  29.37  [grid]
   41 v=-0.037014: -11.06  12.03   0.52 -26.83  26.87 -27.01  [rand]
   42 v=-0.033651: -13.13  17.86   8.26 -15.21  13.86 -14.91  [grid]
   43 v=-0.036290: -24.67 -11.77  23.32 -23.63 -28.80  16.78  [grid]
   44 v=-0.030656: -13.50 -10.96  11.60 -15.22  31.81  22.55  [grid]
 + - save # 0 for twobest
 + - save #12 for twobest
 + - save #14 for twobest
 + - save #33 for twobest
 + - save #11 for twobest
 + - save #26 for twobest
 + - save # 5 for twobest
 + - save # 1 for twobest
 + - save # 4 for twobest
 + - save #31 for twobest
 + - save # 2 for twobest
 + - save #10 for twobest
 + - save # 6 for twobest
 + - save #36 for twobest
 + - save #34 for twobest
 + - save # 3 for twobest
 + - save #13 for twobest
 + - save # 7 for twobest
 + - save #32 for twobest
 + - save # 9 for twobest
 + - save #21 for twobest
 + - save #29 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=78 usiz=183.5
 + - retaining old weight image
 + - using 28795 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 24866 total points stored in 250 'RHDD(13.7332)' bloks
*[#9480=-0.588591] *[#9488=-0.590577] *[#9491=-0.591511] *[#9506=-0.59219] *[#9508=-0.593886] *[#9509=-0.594072] *[#9510=-0.595922] *[#9511=-0.596185] *[#9515=-0.596426] 
 + - param set #1 has cost=-0.596426
 + -- Parameters = 0.2815 0.4911 -1.2811 0.1056 2.0388 -0.6507 1.0005 0.9998 1.0002 0.0003 0.0094 -0.0012
 + - param set #2 has cost=-0.069082
 + -- Parameters = -6.1827 -10.2970 18.9614 -8.3510 -21.5068 -7.7134 1.0050 1.0003 1.0129 0.0026 -0.0042 -0.0010
 + - param set #3 has cost=-0.059331
 + -- Parameters = -15.9482 -12.8104 22.3177 -14.1299 -28.9523 8.8198 0.9939 0.9971 0.9988 0.0032 -0.0000 0.0064
 + - param set #4 has cost=-0.051144
 + -- Parameters = -19.5269 -21.2043 29.9522 -5.9805 -32.4826 27.2500 1.0008 1.0043 1.0038 0.0117 0.0019 0.0020
 + - param set #5 has cost=-0.057887
 + -- Parameters = -13.7995 -14.1456 28.1468 -4.9946 -24.0054 12.8517 0.9939 0.9851 1.0007 0.0008 0.0006 -0.0024
 + - param set #6 has cost=-0.061886
 + -- Parameters = -9.3569 -15.1668 26.9959 -10.4042 -32.2705 2.3280 0.9985 0.9989 0.9957 0.0006 0.0008 -0.0012
 + - param set #7 has cost=-0.048265
 + -- Parameters = -14.8329 -20.3816 27.8889 -6.7200 -30.4474 16.7374 1.0185 1.0013 1.0025 0.0051 0.0006 0.0030
 + - param set #8 has cost=-0.061624
 + -- Parameters = -11.2491 -16.2723 25.0779 -7.7993 -31.5820 9.7478 1.0051 0.9978 0.9904 0.0017 0.0001 0.0003
 + - param set #9 has cost=-0.056669
 + -- Parameters = -15.7075 -15.8672 23.9206 -14.8985 -32.1211 7.7759 1.0003 1.0010 0.9998 0.0004 0.0019 0.0007
 + - param set #10 has cost=-0.073918
 + -- Parameters = -8.2618 -6.7468 17.2080 -7.8023 -16.7242 -2.1648 1.0535 1.0012 1.0038 -0.0049 0.0019 -0.0332
 + - param set #11 has cost=-0.038512
 + -- Parameters = -3.8328 7.9891 2.8266 -2.8888 21.0132 21.2634 0.9998 0.9998 0.9991 -0.0003 0.0001 -0.0004
*[#10348=-0.597917] *[#10351=-0.599251] *[#10352=-0.600202] *[#10353=-0.603686] *[#10356=-0.604158] *[#10357=-0.604535] *[#10360=-0.608822] *[#10362=-0.610309] *[#10367=-0.611447] 
 + - param set #12 has cost=-0.611447
 + -- Parameters = 0.3975 0.7741 -1.2262 0.0341 1.8827 -0.0836 0.9978 1.0074 0.9954 -0.0007 -0.0012 -0.0049
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0476 
 + --- dist(#3,#1) = 0.23 
 + --- dist(#4,#1) = 0.26 
 + --- dist(#5,#1) = 0.379 
 + --- dist(#6,#1) = 0.372 
 + --- dist(#7,#1) = 0.343 
 + --- dist(#8,#1) = 0.367 
 + --- dist(#9,#1) = 0.378 
 + --- dist(#10,#1) = 0.39 
 + --- dist(#11,#1) = 0.364 
 + --- dist(#12,#1) = 0.237 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=78 usiz=183.5
 + - retaining old weight image
 + - using 28795 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25159 total points stored in 262 'RHDD(13.5933)' bloks
*[#10380=-0.612091] *[#10400=-0.612545] *[#10401=-0.612628] *[#10403=-0.612959] *[#10404=-0.613746] *[#10405=-0.614044] *[#10408=-0.615925] *[#10409=-0.617831] *[#10410=-0.617909] *[#10412=-0.618289] *[#10413=-0.618297] *[#10428=-0.618434] 
 + - param set #1 has cost=-0.618434
 + -- Parameters = 0.4184 0.7783 -1.2313 0.0271 1.9035 -0.1960 1.0005 1.0103 0.9917 -0.0019 -0.0017 -0.0077
 + - param set #2 has cost=-0.616857
 + -- Parameters = 0.3415 0.6294 -1.2728 0.1221 2.0344 -0.6077 1.0002 1.0086 0.9914 -0.0023 0.0060 -0.0050
 + - param set #3 has cost=-0.085153
 + -- Parameters = -3.9619 -2.5239 15.3200 -4.8129 -15.0648 -2.2707 1.0327 1.0139 1.0053 -0.0068 -0.0081 -0.0313
 + - param set #4 has cost=-0.055248
 + -- Parameters = -5.7075 -10.5984 18.5947 -7.6471 -20.9478 -7.5426 1.0060 0.9975 1.0093 0.0036 0.0016 0.0015
 + - param set #5 has cost=-0.053599
 + -- Parameters = -9.7981 -14.7161 26.1415 -9.8792 -32.1080 3.0992 0.9952 1.0161 0.9684 0.0082 0.0062 -0.0161
 + - param set #6 has cost=-0.055733
 + -- Parameters = -11.1523 -14.9989 24.9518 -8.4925 -31.2621 7.3024 1.0159 1.0102 0.9710 0.0151 0.0098 0.0026
 + - param set #7 has cost=-0.052466
 + -- Parameters = -15.5004 -13.1601 21.9750 -13.5306 -27.9059 8.5348 0.9763 1.0140 1.0116 0.0017 0.0021 0.0102
 + - param set #8 has cost=-0.049709
 + -- Parameters = -14.6858 -12.6162 28.6222 -6.0708 -23.6542 14.1455 0.9824 0.9741 0.9761 0.0145 0.0045 -0.0051
 + - param set #9 has cost=-0.045215
 + -- Parameters = -16.3254 -15.9536 23.7598 -15.0638 -31.8384 7.0759 0.9964 0.9992 0.9899 -0.0028 0.0040 -0.0052
 + - param set #10 has cost=-0.036511
 + -- Parameters = -20.7215 -21.0389 32.5295 -5.6800 -31.8060 28.5355 0.9957 1.0000 1.0057 0.0119 0.0019 0.0050
 + - param set #11 has cost=-0.032289
 + -- Parameters = -14.9644 -20.5987 27.9168 -6.7525 -30.5668 16.8192 1.0185 1.0015 1.0020 0.0049 0.0001 0.0027
 + - param set #12 has cost=-0.035215
 + -- Parameters = -4.2122 7.8314 2.9007 -2.6321 19.6068 21.1226 0.9863 1.0003 0.9801 -0.0083 0.0048 -0.0065
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0343 
 + --- dist(#3,#1) = 0.207 
 + --- dist(#4,#1) = 0.369 
 + --- dist(#5,#1) = 0.254 
 + --- dist(#6,#1) = 0.378 
 + --- dist(#7,#1) = 0.331 
 + --- dist(#8,#1) = 0.373 
 + --- dist(#9,#1) = 0.375 
 + --- dist(#10,#1) = 0.422 
 + --- dist(#11,#1) = 0.237 
 + --- dist(#12,#1) = 0.364 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=78 usiz=183.5
 + - retaining old weight image
 + - using 28795 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25563 total points stored in 274 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.589468
 + -- Parameters = 0.3650 0.9203 -1.3830 0.0264 1.5668 -0.4732 1.0028 1.0106 0.9970 -0.0018 0.0030 -0.0142
 + - param set #2 has cost=-0.587194
 + -- Parameters = 0.3188 0.7952 -1.4677 0.0414 1.7563 -0.6927 1.0035 1.0093 0.9990 -0.0035 0.0061 -0.0110
 + - param set #3 has cost=-0.081868
 + -- Parameters = -4.5642 -1.7193 14.9432 -4.8530 -14.7685 -0.8067 1.0213 1.0301 1.0250 -0.0017 -0.0074 -0.0314
 + - param set #4 has cost=-0.049019
 + -- Parameters = -10.9680 -14.7108 24.7736 -8.3640 -31.2560 7.0278 1.0136 1.0191 0.9682 0.0154 0.0080 -0.0020
 + - param set #5 has cost=-0.049737
 + -- Parameters = -6.1163 -9.5401 19.1114 -8.2873 -20.4189 -6.8492 1.0046 0.9950 0.9924 0.0052 0.0002 0.0048
 + - param set #6 has cost=-0.048293
 + -- Parameters = -9.9106 -14.9302 25.9234 -9.9339 -32.0989 3.1002 0.9916 1.0235 0.9745 0.0133 0.0062 -0.0184
 + - param set #7 has cost=-0.044946
 + -- Parameters = -15.4424 -13.1928 21.9835 -13.5502 -27.8779 8.4506 0.9767 1.0141 1.0123 0.0008 0.0022 0.0103
 + - param set #8 has cost=-0.048107
 + -- Parameters = -14.5252 -12.9254 28.6195 -6.1120 -23.5405 14.3769 0.9840 0.9616 0.9722 0.0156 0.0047 -0.0045
 + - param set #9 has cost=-0.039463
 + -- Parameters = -16.5557 -16.3865 23.6968 -15.1013 -31.8876 7.2353 1.0001 1.0069 0.9848 -0.0006 0.0033 -0.0040
 + - param set #10 has cost=-0.029637
 + -- Parameters = -20.7813 -21.0843 32.3990 -5.8085 -31.5080 28.3582 0.9951 0.9991 1.0134 0.0130 0.0017 0.0058
 + - param set #11 has cost=-0.027704
 + -- Parameters = -4.2588 7.7939 2.7699 -2.7108 19.7920 21.0611 0.9868 1.0009 0.9730 -0.0093 0.0050 -0.0091
 + - param set #12 has cost=-0.026151
 + -- Parameters = -14.9305 -20.9898 28.2671 -6.7796 -30.8763 16.6301 1.0185 1.0010 1.0005 0.0057 0.0009 0.0034
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0147 XXX
 + --- dist(#3,#1) = 0.256 
 + --- dist(#4,#1) = 0.365 
 + --- dist(#5,#1) = 0.374 
 + --- dist(#6,#1) = 0.375 
 + --- dist(#7,#1) = 0.327 
 + --- dist(#8,#1) = 0.372 
 + --- dist(#9,#1) = 0.422 
 + --- dist(#10,#1) = 0.239 
 + --- dist(#11,#1) = 0.371 
 + - cast out 1 parameter set for being too close to best set
 + - Total coarse refinement net CPU time = 0.0 s; 3000 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=78 usiz=183.5
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 25426 total points stored in 273 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.567503 *
 + -- Parameters = 0.3650 0.9203 -1.3830 0.0264 1.5668 -0.4732 1.0028 1.0106 0.9970 -0.0018 0.0030 -0.0142
 + - cost(#2)=-0.078563  
 + -- Parameters = -4.5642 -1.7193 14.9432 -4.8530 -14.7685 -0.8067 1.0213 1.0301 1.0250 -0.0017 -0.0074 -0.0314
 + - cost(#3)=-0.046434  
 + -- Parameters = -6.1163 -9.5401 19.1114 -8.2873 -20.4189 -6.8492 1.0046 0.9950 0.9924 0.0052 0.0002 0.0048
 + - cost(#4)=-0.044622  
 + -- Parameters = -10.9680 -14.7108 24.7736 -8.3640 -31.2560 7.0278 1.0136 1.0191 0.9682 0.0154 0.0080 -0.0020
 + - cost(#5)=-0.045007  
 + -- Parameters = -9.9106 -14.9302 25.9234 -9.9339 -32.0989 3.1002 0.9916 1.0235 0.9745 0.0133 0.0062 -0.0184
 + - cost(#6)=-0.042506  
 + -- Parameters = -14.5252 -12.9254 28.6195 -6.1120 -23.5405 14.3769 0.9840 0.9616 0.9722 0.0156 0.0047 -0.0045
 + - cost(#7)=-0.044121  
 + -- Parameters = -15.4424 -13.1928 21.9835 -13.5502 -27.8779 8.4506 0.9767 1.0141 1.0123 0.0008 0.0022 0.0103
 + - cost(#8)=-0.037737  
 + -- Parameters = -16.5557 -16.3865 23.6968 -15.1013 -31.8876 7.2353 1.0001 1.0069 0.9848 -0.0006 0.0033 -0.0040
 + - cost(#9)=-0.028818  
 + -- Parameters = -20.7813 -21.0843 32.3990 -5.8085 -31.5080 28.3582 0.9951 0.9991 1.0134 0.0130 0.0017 0.0058
 + - cost(#10)=-0.024800  
 + -- Parameters = -4.2588 7.7939 2.7699 -2.7108 19.7920 21.0611 0.9868 1.0009 0.9730 -0.0093 0.0050 -0.0091
 + - cost(#11)=-0.024829  
 + -- Parameters = -14.9305 -20.9898 28.2671 -6.7796 -30.8763 16.6301 1.0185 1.0010 1.0005 0.0057 0.0009 0.0034
 + - cost(#12)=-0.115574  
 + -- Parameters = 0.0315 2.1925 -4.1554 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.569731 *
 + -- Parameters = 0.4259 0.9245 -1.4933 0.1111 1.4566 -0.5065 1.0025 1.0095 1.0006 -0.0009 0.0033 -0.0173
 + - cost(#2)=-0.080654  
 + -- Parameters = -4.0761 -1.5132 14.5513 -4.4644 -14.5434 -0.9674 1.0140 1.0348 1.0144 -0.0002 -0.0054 -0.0312
 + - cost(#3)=-0.051826  
 + -- Parameters = -5.5320 -7.8994 21.4407 -7.6717 -20.1742 -6.8428 1.0046 0.9921 0.9870 0.0058 -0.0042 0.0064
 + - cost(#4)=-0.045657  
 + -- Parameters = -11.1657 -14.6221 25.0183 -8.4452 -31.5506 6.8093 1.0156 1.0193 0.9697 0.0168 0.0128 -0.0097
 + - cost(#5)=-0.045781  
 + -- Parameters = -9.7219 -14.8544 26.2332 -9.6483 -32.3510 3.2465 0.9873 1.0254 0.9743 0.0184 0.0074 -0.0196
 + - cost(#6)=-0.043093  
 + -- Parameters = -14.5204 -13.1643 28.6498 -6.0102 -23.3553 14.2115 0.9875 0.9590 0.9715 0.0160 0.0093 -0.0030
 + - cost(#7)=-0.044889  
 + -- Parameters = -15.2540 -13.0852 22.0234 -13.6129 -27.1267 8.3241 0.9730 1.0131 1.0233 0.0051 0.0038 0.0136
 + - cost(#8)=-0.039923  
 + -- Parameters = -16.1480 -15.9676 23.7755 -14.8509 -31.2782 6.9006 1.0011 1.0069 0.9808 0.0148 0.0100 0.0004
 + - cost(#9)=-0.029483  
 + -- Parameters = -20.8058 -21.1898 32.3092 -5.7821 -31.4882 28.4380 0.9912 1.0000 1.0154 0.0186 0.0020 0.0063
 + - cost(#10)=-0.026789  
 + -- Parameters = -4.2962 7.6426 2.8563 -3.0615 21.4249 21.5274 0.9867 1.0005 0.9670 -0.0081 0.0054 -0.0081
 + - cost(#11)=-0.026978  
 + -- Parameters = -14.0492 -19.7427 28.1988 -6.8763 -31.1366 17.0675 1.0089 1.0014 0.9909 0.0090 0.0029 0.0079
 + - cost(#12)=-0.563172  
 + -- Parameters = 0.4920 0.8287 -1.6521 -0.0457 1.5392 -0.2002 1.0035 1.0089 1.0114 -0.0065 -0.0037 -0.0145
 + - case #1 is now the best
 + - Initial  cost = -0.569731
 + - Initial fine Parameters = 0.4259 0.9245 -1.4933 0.1111 1.4566 -0.5065 1.0025 1.0095 1.0006 -0.0009 0.0033 -0.0173
 + - Finalish cost = -0.572290 ; 441 funcs
 + - Final    cost = -0.572303 ; 166 funcs
 + Final fine fit Parameters:
       x-shift= 0.5129   y-shift= 1.2806   z-shift=-1.5149
       z-angle= 0.1409   x-angle= 0.8397   y-angle=-0.3558
       x-scale= 1.0034   y-scale= 1.0120   z-scale= 1.0009
     y/x-shear= 0.0018 z/x-shear= 0.0002 z/y-shear=-0.0286
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.5129 1.2806 -1.5149 0.1409 0.8397 -0.3558 1.0034 1.0120 1.0009 0.0018 0.0002 -0.0286
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 23.8
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = -0.0022 -0.9667 0.2716 212.3789 -0.0055 0.3024 0.9629 63.5775 -1.0034 0.0024 -0.0062 202.5939
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV.....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 19.0 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3107.930100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 79.9887 47.6078   ITER = 12/137
79.9887

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 959ms]
lev=0 0..171 0..213 0..166: [first cost=-0.67337] ... done [cost:-0.67337==>-0.73974]
lev=1 patch=129x161x125 [clock= 14m 59s 344ms]........:[cost=-0.77024]:........ done [cost:-0.73974==>-0.77454 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 23m 2s 457ms]......................... done [cost:-0.77454==>-0.84386 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 29m 16s 654ms]............... done [cost:-0.84386==>-0.89710 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 34m 20s 808ms].......... done [cost:-0.89710==>-0.94604 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 38m 9s 882ms].............. done [cost:-0.94604==>-1.01188 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 41m 43s 642ms]............................ done [cost:-1.01188==>-1.04770 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 45m 12s 115ms]................................... done [cost:-1.04770==>-1.12387 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 48m 54s 565ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb9369/tb9369.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 9.4 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb9369.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9369.r01.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb9369.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30481 voxels
 + 4834 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.265  pitch=-0.722  yaw=-0.113  dS=-0.261  dL=-0.297  dP=-0.613
++ Mean: roll=-0.011  pitch=-0.383  yaw=+0.104  dS=+0.279  dL=+0.016  dP=+0.009
++ Max : roll=+0.413  pitch=+0.211  yaw=+0.290  dS=+0.685  dL=+0.320  dP=+0.320
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.38(0.38) 0.38(0.06) 0.51(0.15) 0.46(0.09) 0.47(0.07) 0.46(0.09) 0.40(0.23) 0.67(0.39) 0.68(0.44) 0.43(0.28) 0.33(0.17) 0.22(0.16) 0.15(0.12) 0.17(0.08) 0.14(0.18) 0.17(0.09) 0.20(0.09) 0.20(0.06) 0.22(0.06) 0.29(0.09) 0.30(0.06) 0.36(0.08) 0.43(0.08) 0.39(0.09) 0.39(0.22) 0.46(0.18) 0.57(0.14) 0.60(0.03) 0.62(0.06) 0.63(0.04) 0.61(0.24) 0.63(0.09) 0.73(0.16) 0.72(0.15) 0.78(0.10) 0.70(0.13) 0.70(0.06) 0.72(0.11) 0.87(0.37) 1.05(0.75) 0.73(0.50) 0.88(0.62) 0.95(0.28) 1.02(0.14) 1.09(0.11) 1.15(0.07) 1.17(0.04) 1.16(0.04) 1.12(0.11) 0.99(0.19) 1.04(0.07) 1.09(0.07) 1.15(0.06) 1.13(0.09) 1.14(0.04) 1.21(0.20) 1.20(0.09) 1.19(0.10) 1.18(0.05) 1.12(0.08) 1.14(0.06) 1.24(0.11) 1.16(0.16) 0.79(1.14) 0.62(0.26) 0.70(0.34) 0.81(0.21) 0.85(0.10) 0.82(0.07) 0.93(0.15) 0.95(0.04) 0.98(0.23) 1.19(0.22) 1.32(0.21) 1.26(0.09) 1.28(0.05) 1.31(0.04) 1.26(0.13) 1.29(0.16) 1.26(0.09) 1.30(0.14) 1.35(0.08) 1.29(0.20) 1.23(0.11) 1.30(0.22) 1.39(0.14) 1.45(0.12) 1.41(0.05) 1.38(0.17) 1.49(0.12) 1.48(0.11) 1.49(0.05) 1.49(0.06) 1.47(0.06) 1.52(0.07) 1.56(0.10) 1.60(0.10) 1.21(0.48) 1.16(0.15) 1.36(0.26) 1.42(0.10) 1.35(0.16) 1.14(0.27) 1.25(0.32) 1.41(0.21) 1.42(0.33) 1.40(0.07) 1.43(0.05) 1.43(0.05) 1.47(0.08) 1.46(0.08) 1.29(0.19) 1.28(0.12) 1.44(0.17) 1.43(0.11) 1.44(0.04) 1.44(0.06) 1.31(0.29) 1.40(0.13) 1.63(0.23) 1.34(0.33) 1.33(0.20) 1.62(0.50) 1.51(0.32) 1.46(0.69) 1.57(0.25) 1.69(0.18) 1.75(0.11) 1.83(0.13) 1.88(0.07) 1.85(0.09) 1.74(0.23) 1.75(0.16) 1.77(0.12) 1.82(0.17) 1.63(0.38) 1.54(0.30) 1.64(0.14) 1.68(0.08) 1.65(0.10) 1.27(0.48) 1.13(0.35) 0.91(0.38) 1.10(0.64) 0.98(0.26) 1.01(0.32) 1.04(0.13) 1.20(0.25) 1.10(0.32)
++ Max displacement in automask = 1.88 (mm) at sub-brick 130
++ Max delta displ  in automask = 1.14 (mm) at sub-brick 64
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb9369.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9369.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9369.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9369.r01.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./pb01.tb9369.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.5
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 14.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb9369.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9369.r02.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb9369.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30536 voxels
 + 4862 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.024  pitch=-0.757  yaw=-0.426  dS=-0.544  dL=-0.036  dP=-1.146
++ Mean: roll=+0.321  pitch=-0.327  yaw=+0.022  dS=-0.046  dL=+0.379  dP=-0.422
++ Max : roll=+0.734  pitch=+0.427  yaw=+0.304  dS=+0.659  dL=+0.672  dP=+0.069
++ Max displacements (mm) for each sub-brick:
 1.25(0.00) 1.35(0.14) 1.38(0.10) 1.62(0.36) 1.55(0.47) 1.54(0.19) 1.49(0.18) 1.62(0.30) 1.77(0.16) 1.76(0.14) 1.59(0.34) 1.52(0.10) 1.43(0.11) 1.43(0.06) 1.40(0.10) 1.38(0.07) 1.31(0.10) 1.23(0.30) 1.14(0.22) 1.04(0.11) 1.08(0.09) 1.01(0.08) 1.11(0.12) 1.00(0.28) 0.98(0.14) 1.27(0.30) 1.25(0.28) 1.06(0.23) 1.08(0.10) 0.92(0.21) 1.20(0.31) 1.04(0.39) 0.96(0.18) 1.04(0.11) 1.01(0.05) 1.02(0.03) 0.95(0.28) 1.19(0.37) 1.05(0.23) 1.00(0.11) 1.04(0.07) 1.07(0.07) 1.17(0.12) 1.12(0.10) 1.11(0.06) 1.16(0.07) 1.20(0.04) 1.14(0.11) 1.13(0.11) 1.22(0.10) 1.22(0.04) 1.16(0.08) 1.17(0.05) 1.30(0.14) 1.31(0.07) 1.38(0.62) 1.29(0.55) 1.09(0.61) 1.18(0.14) 1.27(0.28) 1.35(0.12) 1.39(0.08) 1.39(0.10) 1.53(0.39) 1.54(0.11) 1.55(0.12) 1.52(0.08) 1.44(0.32) 1.29(0.30) 1.23(0.12) 1.25(0.21) 1.41(0.29) 1.38(0.25) 1.42(0.06) 1.45(0.17) 1.40(0.15) 1.43(0.08) 1.47(0.11) 1.50(0.04) 1.55(0.04) 1.54(0.06) 1.57(0.04) 1.56(0.06) 1.48(0.12) 1.75(0.40) 2.79(1.14) 2.44(0.49) 2.27(0.50) 2.13(0.18) 2.12(0.11) 2.18(0.21) 2.23(0.15) 2.28(0.13) 2.29(0.12) 2.17(0.46) 1.36(0.95) 1.40(0.30) 1.57(0.26) 1.54(0.12) 1.69(0.16) 1.62(0.15) 1.62(0.07) 1.58(0.16) 1.45(0.45) 1.49(0.25) 1.45(0.46) 1.32(0.30) 1.35(0.17) 1.34(0.04) 1.57(0.39) 1.56(0.10) 1.49(0.37) 1.55(0.14) 1.53(0.07) 1.51(0.03) 1.55(0.08) 1.55(0.03) 1.58(0.08) 1.36(0.54) 1.47(0.41) 1.43(0.30) 1.49(0.17) 1.51(0.07) 1.56(0.12) 1.49(0.08) 1.48(0.04) 1.49(0.05) 1.48(0.10) 1.50(0.04) 1.51(0.03) 1.60(0.28) 1.73(0.15) 1.70(0.07) 1.64(0.31) 1.54(0.37) 1.33(0.51) 1.39(0.17) 1.65(0.36) 1.78(0.23) 1.71(0.09) 1.73(0.11) 1.64(0.17) 1.78(0.19) 1.82(0.26) 1.78(0.15) 1.78(0.17) 1.69(0.18) 1.61(0.11) 1.57(0.10) 1.63(0.27)
++ Max displacement in automask = 2.79 (mm) at sub-brick 85
++ Max delta displ  in automask = 1.14 (mm) at sub-brick 85
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb9369.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9369.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9369.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9369.r02.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./pb01.tb9369.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 17.0
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 14.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.9
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb9369.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb9369.r03.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb9369.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30521 voxels
 + 4838 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.188  pitch=-0.420  yaw=-0.219  dS=-0.706  dL=+0.181  dP=-0.959
++ Mean: roll=-0.042  pitch=+0.076  yaw=+0.256  dS=+0.108  dL=+0.480  dP=-0.595
++ Max : roll=+0.264  pitch=+0.743  yaw=+0.775  dS=+1.069  dL=+0.865  dP=-0.214
++ Max displacements (mm) for each sub-brick:
 1.89(0.00) 2.02(0.28) 1.70(0.70) 1.71(0.21) 1.72(0.09) 1.74(0.09) 1.67(0.14) 1.63(0.18) 1.71(0.17) 1.66(0.12) 1.67(0.08) 1.60(0.09) 1.60(0.22) 1.57(0.16) 1.50(0.12) 1.50(0.06) 1.53(0.12) 1.51(0.05) 1.45(0.07) 1.48(0.08) 1.52(0.08) 1.52(0.07) 1.42(0.11) 1.50(0.08) 1.54(0.16) 1.47(0.12) 1.56(0.16) 1.52(0.14) 1.45(0.11) 1.51(0.17) 1.44(0.12) 1.39(0.06) 1.41(0.06) 1.43(0.04) 1.40(0.04) 1.37(0.06) 1.36(0.07) 1.35(0.08) 1.34(0.13) 1.38(0.18) 1.34(0.13) 1.31(0.07) 1.36(0.12) 1.27(0.20) 1.13(0.15) 1.06(0.10) 1.05(0.06) 1.04(0.03) 1.03(0.04) 0.99(0.06) 0.99(0.07) 0.98(0.09) 0.99(0.17) 0.99(0.15) 0.95(0.06) 1.13(0.23) 1.26(0.29) 0.98(0.38) 0.74(0.43) 0.82(0.26) 0.97(0.20) 0.92(0.09) 0.88(0.06) 0.92(0.22) 0.92(0.06) 0.93(0.11) 0.91(0.05) 0.92(0.11) 1.06(0.20) 1.05(0.16) 0.99(0.21) 0.94(0.24) 1.17(0.38) 0.90(0.43) 0.88(0.25) 1.00(0.27) 1.01(0.04) 1.04(0.06) 0.98(0.16) 1.08(0.28) 1.12(0.15) 1.09(0.15) 1.10(0.03) 1.06(0.06) 0.95(0.34) 0.89(0.15) 1.00(0.22) 1.01(0.09) 1.02(0.14) 1.06(0.10) 1.06(0.05) 1.07(0.05) 1.08(0.05) 1.03(0.16) 1.16(0.38) 1.09(0.28) 1.17(0.19) 1.24(0.16) 1.23(0.05) 1.32(0.12) 1.37(0.07) 1.42(0.13) 1.30(0.17) 1.07(0.77) 1.15(0.38) 1.15(0.25) 1.20(0.12) 1.37(0.18) 1.31(0.37) 1.21(0.43) 2.01(0.85) 1.98(0.22) 2.02(0.16) 2.05(0.12) 2.06(0.06) 2.08(0.09) 2.07(0.05) 2.28(0.32) 1.95(0.41) 1.91(0.24) 2.01(0.21) 2.11(0.17) 2.10(0.04) 2.10(0.06) 2.14(0.05) 2.16(0.05) 2.18(0.05) 2.18(0.04) 2.21(0.11) 2.14(0.18) 2.17(0.15) 2.17(0.08) 2.15(0.08) 2.14(0.08) 2.10(0.07) 2.10(0.11) 2.13(0.09) 2.13(0.03) 2.14(0.07) 2.12(0.07) 1.92(0.59) 1.84(0.29) 1.77(0.21) 1.92(0.74) 1.90(0.15) 1.87(0.16) 1.65(0.28) 1.64(0.16) 1.60(0.14) 1.61(0.16)
++ Max displacement in automask = 2.28 (mm) at sub-brick 117
++ Max delta displ  in automask = 0.85 (mm) at sub-brick 110
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb9369.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb9369.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb9369.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb9369.r03.tshift+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./pb01.tb9369.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 19.2
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 14.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.5
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9369.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9369.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9369.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9369.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb9369.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb9369.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 14.900002 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.3
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb9369
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb9369+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb9369+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1496688 voxels in source_automask+0
++ Zero-pad: zbot=0 ztop=2
++ Computing -autobox
++ 298337 voxels [67.7%] in weight mask
++ Number of points for matching = 140218
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.136878
   sp   = 0.313828
   mi   = -0.544955
   crM  = 0.0350376
   nmi  = 0.834466
   je   = 2.74714
   hel  = -0.108988
   crA  = 0.187231
   crU  = 0.191453
   lss  = 0.863122
   lpc  = 0.0833165
   lpa  = 0.916683
   lpc+ = 0.216248
   ncd  = 0.989239
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 3.6
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb9369+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb9369+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 41.4 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9369.r01.blur pb02.tb9369.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9369.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb9369.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9369.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9369.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9369.r02.blur pb02.tb9369.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9369.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb9369.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9369.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9369.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb9369.r03.blur pb02.tb9369.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb9369.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb9369.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb9369.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb9369.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb9369.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9369.r01.blur+orig
++ Forming automask
 + Fixed clip level = 375.543976
 + Used gradual clip level = 320.971252 .. 417.995789
 + Number voxels above clip level = 53127
 + Clustering voxels ...
 + Largest cluster has 53008 voxels
 + Clustering voxels ...
 + Largest cluster has 52972 voxels
 + Filled    32 voxels in small holes; now have 53004 voxels
 + Clustering voxels ...
 + Largest cluster has 53004 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373271 voxels
 + Mask now has 53004 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 364990 voxels
++ 61285 voxels in the mask [out of 426275: 14.38%]
++ first  11 x-planes are zero [from A]
++ last   14 x-planes are zero [from P]
++ first  27 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    4 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb9369.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9369.r02.blur+orig
++ Forming automask
 + Fixed clip level = 375.182617
 + Used gradual clip level = 321.624390 .. 418.596924
 + Number voxels above clip level = 53007
 + Clustering voxels ...
 + Largest cluster has 52888 voxels
 + Clustering voxels ...
 + Largest cluster has 52867 voxels
 + Filled    30 voxels in small holes; now have 52897 voxels
 + Clustering voxels ...
 + Largest cluster has 52897 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373378 voxels
 + Mask now has 52897 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365099 voxels
++ 61176 voxels in the mask [out of 426275: 14.35%]
++ first  11 x-planes are zero [from A]
++ last   14 x-planes are zero [from P]
++ first  27 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    4 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb9369.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb9369.r03.blur+orig
++ Forming automask
 + Fixed clip level = 374.830719
 + Used gradual clip level = 322.079224 .. 418.800140
 + Number voxels above clip level = 53031
 + Clustering voxels ...
 + Largest cluster has 52910 voxels
 + Clustering voxels ...
 + Largest cluster has 52890 voxels
 + Filled    29 voxels in small holes; now have 52919 voxels
 + Clustering voxels ...
 + Largest cluster has 52919 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373356 voxels
 + Mask now has 52919 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365060 voxels
++ 61215 voxels in the mask [out of 426275: 14.36%]
++ first  11 x-planes are zero [from A]
++ last   14 x-planes are zero [from P]
++ first  27 y-planes are zero [from I]
++ last   13 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    4 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb9369
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 61406 survived, 364869 were zero
++ writing result full_mask.tb9369...
3dresample -master full_mask.tb9369+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb9369
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 58593 survived, 367682 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb9369...
3dABoverlap -no_automask full_mask.tb9369+orig mask_anat.tb9369+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb9369+orig.BRIK  B=./mask_anat.tb9369+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
61406        58593        64738        55261        6145         3332         10.0072      5.6867     0.9021     1.0480     0.8874
3ddot -dodice full_mask.tb9369+orig mask_anat.tb9369+orig
tee out.mask_ae_dice.txt
0.921024	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb9369
total number of censored TRs (simple form) = 68
1deval -a motion_tb9369_censor.1D -b outcount_tb9369_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb9369_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb9369.r01.blur+orig.HEAD pb03.tb9369.r02.blur+orig.HEAD pb03.tb9369.r03.blur+orig.HEAD -censor censor_tb9369_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb9369 -errts errts.tb9369 -bucket stats.tb9369
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb9369.r01.blur+orig.HEAD pb03.tb9369.r02.blur+orig.HEAD pb03.tb9369.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,211,277 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 52938 voxels (out of 426275 = 12.4%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 382 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,678,300 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb9369.r01.blur+orig.HEAD pb03.tb9369.r02.blur+orig.HEAD pb03.tb9369.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb9369_REML -Rvar stats.tb9369_REMLvar \
 -Rfitts fitts.tb9369_REML -Rerrts errts.tb9369_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (382x24):  4.68056  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (382x6):  1.03562  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (382x18):  3.97993  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (382x6):  3.15334  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (382x12):  1.09385  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 2.16428e-15  ++ VERY GOOD ++
++ Matrix setup time = 3.11 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.978
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.995
++ Job #3: processing voxels 127881 to 170507; elapsed time=8.012
++ Job #4: processing voxels 170508 to 213134; elapsed time=8.032
++ Job #5: processing voxels 213135 to 255761; elapsed time=8.052
++ Job #6: processing voxels 255762 to 298388; elapsed time=8.072
++ Job #7: processing voxels 298389 to 341015; elapsed time=8.105
++ Job #8: processing voxels 341016 to 383642; elapsed time=8.120
++ Job #0: processing voxels 0 to 42626; elapsed time=8.142
++ voxel loop:++ Job #9: processing voxels 383643 to 426274; elapsed time=8.145
0123456789.0123456789.0123456789.01234++ Job #1 finished; elapsed time=32.902
5++ Job #5 finished; elapsed time=33.233
++ Job #7 finished; elapsed time=33.257
6++ Job #8 finished; elapsed time=33.931
++ Job #2 finished; elapsed time=33.939
789.++ Job #4 finished; elapsed time=34.502
012345678++ Job #3 finished; elapsed time=36.499
9.
++ Job #0 waiting for children to finish; elapsed time=36.523
++ Job #6 finished; elapsed time=37.534
++ Job #9 finished; elapsed time=37.597
++ Job #0 now finishing up; elapsed time=37.608
++ Smallest FDR q [0 Full_Fstat] = 5.66336e-15
++ Smallest FDR q [2 uns1#0_Tstat] = 1.83247e-11
++ Smallest FDR q [3 uns1_Fstat] = 1.83163e-11
++ Smallest FDR q [5 uns2#0_Tstat] = 1.10753e-13
++ Smallest FDR q [6 uns2_Fstat] = 1.10723e-13
++ Smallest FDR q [8 uns3#0_Tstat] = 4.46474e-13
++ Smallest FDR q [9 uns3_Fstat] = 4.46394e-13
++ Smallest FDR q [11 str1#0_Tstat] = 4.70843e-13
++ Smallest FDR q [12 str1_Fstat] = 4.70744e-13
++ Smallest FDR q [14 str2#0_Tstat] = 3.31919e-13
++ Smallest FDR q [15 str2_Fstat] = 3.31868e-13
++ Smallest FDR q [17 str3#0_Tstat] = 8.58212e-13
++ Smallest FDR q [18 str3_Fstat] = 8.58152e-13
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 1.19741e-13
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 1.19745e-13
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 7.17414e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 7.17171e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 9.53801e-12
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 9.54e-12
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 4.86858e-12
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 4.86744e-12
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 4.14201e-08
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 4.14172e-08
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.9694e-06
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.9693e-06
++ Wrote bucket dataset into ./stats.tb9369+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb9369+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb9369+orig.BRIK
++ Program finished; elapsed time=87.976
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.735       0.800  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.734       0.795  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.733       0.799  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  medium:       0.477       0.556  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:       0.463       0.535  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.461       0.539  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:      -0.401      -0.368  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb9369.r01.blur+orig.HEAD pb03.tb9369.r02.blur+orig.HEAD pb03.tb9369.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb9369_REML -Rvar stats.tb9369_REMLvar -Rfitts fitts.tb9369_REML -Rerrts errts.tb9369_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 52938 voxels (out of 426275 = 12.4%)
++ -----  matrix condition (382x24):  4.68056  ++ VERY GOOD ++
 + masked off 244341 voxels for being all zero; 181934 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 328 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=34.28
 + X matrix: 46.640% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=382 cols=24; 109*1 cases; total CPU=0.00 Elapsed=34.30
 +  average case bandwidth = 10.91
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=94.50
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=136.26
++ Output dataset ./stats.tb9369_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb9369_REML+orig.BRIK
++ Output dataset ./errts.tb9369_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb9369_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.58332e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 0.00511804
++ Smallest FDR q [3 uns1_Fstat] = 0.00511804
++ Smallest FDR q [5 uns2#0_Tstat] = 7.11708e-09
++ Smallest FDR q [6 uns2_Fstat] = 7.11708e-09
++ Smallest FDR q [8 uns3#0_Tstat] = 1.28106e-08
++ Smallest FDR q [9 uns3_Fstat] = 1.28106e-08
++ Smallest FDR q [11 str1#0_Tstat] = 0.00031497
++ Smallest FDR q [12 str1_Fstat] = 0.00031497
++ Smallest FDR q [14 str2#0_Tstat] = 4.58776e-07
++ Smallest FDR q [15 str2_Fstat] = 4.58776e-07
++ Smallest FDR q [17 str3#0_Tstat] = 1.4447e-09
++ Smallest FDR q [18 str3_Fstat] = 1.4447e-09
++ Smallest FDR q [20 unstructured#0_Tstat] = 4.23381e-12
++ Smallest FDR q [21 unstructured_Fstat] = 4.23381e-12
++ Smallest FDR q [23 structured#0_Tstat] = 2.47259e-12
++ Smallest FDR q [24 structured_Fstat] = 2.47259e-12
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.629817 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.629817 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.160484 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.160483 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.708505 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.708505 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.0403307
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.0403308
 + Added 25 FDR curves to dataset stats.tb9369_REML+orig
++ Output dataset ./stats.tb9369_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=174.96
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb9369 pb03.tb9369.r01.blur+orig.HEAD pb03.tb9369.r02.blur+orig.HEAD pb03.tb9369.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
*** Datablock write error: Write error in brick file: Is disk full, or write_protected?
++ elapsed time = 253.5 s
3dTstat -mean -prefix rm.signal.all all_runs.tb9369+orig[0..6,10..37,43..62,65..96,99..121,126..139,142,145..151,155..179,182..203,208..233,238..242,246..251,256,257,262..266,269..283,286..300,303..355,359..370,374..401,404..406,411..416,419..438,441,444..449]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox

*** failure while reading from brick file ./all_runs.tb9369+orig.BRIK
*** desired 325674100 bytes but only got 312033300
*** Unix error message: Success
   THD_load_datablock
  3dTstat main
** Command line was:
3dTstat -mean -prefix rm.signal.all 'all_runs.tb9369+orig[0..6,10..37,43..62,65..96,99..121,126..139,142,145..151,155..179,182..203,208..233,238..242,246..251,256,257,262..266,269..283,286..300,303..355,359..370,374..401,404..406,411..416,419..438,441,444..449]'
[7m** FATAL ERROR:[0m Unable to compute output dataset!
** Program compile date = Jul 20 2017
