echo auto-generated by afni_proc.py, Tue Aug  8 21:38:13 2017
auto-generated by afni_proc.py, Tue Aug  8 21:38:13 2017
echo (version 5.15, April 25, 2017)
(version 5.15, April 25, 2017)
echo execution started: `date`
date
execution started: Tue Aug  8 21:38:13 EDT 2017
afni -ver
Precompiled binary linux_openmp_64: Jul 20 2017 (Version AFNI_17.2.03)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   19 Jul 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0169
endif
set output_dir = tb0169.srtt
if ( -d tb0169.srtt ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0169.srtt
mkdir tb0169.srtt/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0169.srtt/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0169.srtt/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dTcat -prefix tb0169.srtt/pb00.tb0169.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0169.srtt/pb00.tb0169.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0169.srtt/pb00.tb0169.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0169.srtt
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0169.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r01.tcat+orig.BRIK is 12.900002 degrees from plumb.
++ 29341 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0169.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r02.tcat+orig.BRIK is 12.900002 degrees from plumb.
++ 29343 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0169.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r03.tcat+orig.BRIK is 12.900002 degrees from plumb.
++ 29439 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb01.tb0169.r01.tshift -tpattern alt+z2 pb00.tb0169.r01.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r01.tcat+orig.BRIK is 12.900002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0169.r02.tshift -tpattern alt+z2 pb00.tb0169.r02.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r02.tcat+orig.BRIK is 12.900002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb01.tb0169.r03.tshift -tpattern alt+z2 pb00.tb0169.r03.tcat+orig
++ 3dTshift: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r03.tcat+orig.BRIK is 12.900002 degrees from plumb.
end
3dbucket -prefix vr_base pb01.tb0169.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.900002 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 379.028015
 + Used gradual clip level = 342.980408 .. 427.009705
 + Number voxels above clip level = 29624
 + Clustering voxels ...
 + Largest cluster has 29284 voxels
 + Clustering voxels ...
 + Largest cluster has 29034 voxels
 + Filled   264 voxels in small holes; now have 29298 voxels
 + Filled     3 voxels in large holes; now have 29301 voxels
 + Clustering voxels ...
 + Largest cluster has 29299 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 101769 voxels
 + Mask now has 29303 voxels
++ 29303 voxels in the mask [out of 131072: 22.36%]
++ first  13 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   4 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 937.000000 on /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/937.000000))'
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 12.900002 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.900002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1603364 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 29303 voxels [18.8%] in weight mask
++ Number of points for matching = 29303
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.136 28.514 18.595 (index)
 + source center of mass = 85.833 166.396 179.803 (index)
 + source-target CM = -0.896 0.422 -4.001 (xyz)
 + center of mass shifts = -0.896 0.422 -4.001
++ shift param auto-range: -70.4..68.6 -69.1..69.9 -51.5..43.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.896408 .. 9.103592
 + Range param#2 [y-shift] = -9.578354 .. 10.421646
 + Range param#3 [z-shift] = -14.001045 .. 5.998955
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.896408 .. 39.103592
 + Range param#2 [y-shift] = -39.578354 .. 40.421646
 + Range param#3 [z-shift] = -44.001045 .. 35.998955
 + 12 free parameters
++ Normalized convergence radius = 0.000462
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1603364 [out of 16587824] voxels
 + base mask has 40513 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=79 usiz=182
 + - copying weight image
 + - using 29303 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24916 total points stored in 232 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--+o--o...o.-o+-.-$- + - best 45 costs found:
    0 v=-0.053538:  -0.90   0.42  -4.00   0.00   0.00   0.00  [grid]
    1 v=-0.044652: -14.23 -12.91   9.33 -15.00 -30.00  15.00  [grid]
    2 v=-0.039301: -14.23  27.09 -17.33 -15.00  30.00  15.00  [grid]
    3 v=-0.039081: -17.75 -18.16  10.45 -19.57 -37.09  16.59  [rand]
    4 v=-0.038683: -27.56 -12.91   9.33 -30.00 -15.00  30.00  [grid]
    5 v=-0.037899: -14.23 -26.25   9.33 -15.00 -30.00  15.00  [grid]
    6 v=-0.035423: -14.23 -26.25   9.33 -30.00 -30.00  15.00  [grid]
    7 v=-0.034377: -27.56 -12.91   9.33 -15.00 -15.00  15.00  [grid]
    8 v=-0.034102: -14.23 -12.91   9.33 -15.00 -15.00  15.00  [grid]
    9 v=-0.032491: -10.72 -24.34   7.38  -3.10 -34.36   2.55  [rand]
   10 v=-0.032253: -14.93 -15.30  10.67 -24.25 -37.55   4.41  [rand]
   11 v=-0.031699: -27.56 -26.25   9.33 -15.00 -30.00  30.00  [grid]
   12 v=-0.030355: -27.56 -12.91   9.33 -30.00 -30.00  15.00  [grid]
   13 v=-0.029961: -23.75 -23.15   6.41  -5.91 -29.74  29.45  [rand]
   14 v=-0.029800:  21.45 -15.96 -19.83  41.11 -22.86   3.97  [rand]
   15 v=-0.029648: -32.74  12.22  -6.74  23.31   3.26  40.47  [rand]
   16 v=-0.029623:   3.18   6.65   3.80  -4.32 -22.85 -18.95  [rand]
   17 v=-0.029267: -20.39  17.09  -6.60 -30.54  19.59  20.03  [rand]
   18 v=-0.029244:  -9.54  20.85  13.47 -25.20  18.50  13.54  [rand]
   19 v=-0.029148: -27.56 -26.25  22.67 -30.00 -15.00  30.00  [grid]
   20 v=-0.028722: -27.56  13.75  22.67 -30.00 -15.00  30.00  [grid]
   21 v=-0.028656:  18.59  17.09  -6.60  30.54 -19.59 -20.03  [rand]
   22 v=-0.028552: -14.23  27.09 -17.33 -15.00 -15.00  15.00  [grid]
   23 v=-0.028152:  -9.54 -20.01  13.47  25.20 -18.50 -13.54  [rand]
   24 v=-0.027450:   3.18   6.65   3.80   4.32 -22.85 -18.95  [rand]
   25 v=-0.027350:  10.70  -4.14  -0.11  24.53 -29.49 -26.10  [rand]
   26 v=-0.027209:  25.77 -12.91   9.33  30.00 -15.00 -30.00  [grid]
   27 v=-0.026964:  25.77  27.09  22.67 -30.00  30.00 -30.00  [grid]
   28 v=-0.026739: -14.23  27.09 -17.33 -15.00  30.00  30.00  [grid]
   29 v=-0.026633: -32.74  12.22  -1.26  23.31   3.26  40.47  [rand]
   30 v=-0.026498: -35.70 -13.36  30.01 -10.62  -7.10 -10.42  [rand]
   31 v=-0.026474: -21.87 -27.96  28.25  -3.65 -28.33  14.78  [rand]
   32 v=-0.026358:  25.41  26.38  13.79  15.82  17.65 -37.25  [rand]
   33 v=-0.026254: -27.56 -12.91   9.33  30.00 -15.00  30.00  [grid]
   34 v=-0.026008: -14.23  13.75   9.33 -15.00  15.00  15.00  [grid]
   35 v=-0.025851: -27.56 -12.91  22.67 -30.00 -30.00  30.00  [grid]
   36 v=-0.025175:  31.31 -28.62  32.14 -40.41 -19.09 -40.75  [rand]
   37 v=-0.025137: -14.23 -26.25   9.33  30.00 -30.00 -15.00  [grid]
   38 v=-0.024514:  12.44 -26.25  22.67 -15.00 -30.00 -30.00  [grid]
   39 v=-0.024432: -14.23 -12.91   9.33 -30.00 -30.00 -15.00  [grid]
   40 v=-0.024326: -27.56  13.75   9.33  15.00  15.00  30.00  [grid]
   41 v=-0.024213:  25.77 -26.25  22.67  30.00 -15.00 -30.00  [grid]
   42 v=-0.024213: -27.56 -26.25   9.33 -30.00 -30.00  15.00  [grid]
   43 v=-0.024132: -25.10  -9.92   0.52 -27.51 -29.30  27.65  [rand]
   44 v=-0.024131: -10.72  25.18 -15.38  -3.10  34.36   2.55  [rand]
*[#8004=-0.326285] *[#8012=-0.343245] *[#8013=-0.355082] *[#8015=-0.384868] *[#8016=-0.401231] *[#8019=-0.419379] *[#8021=-0.426806] *[#8023=-0.435531]  + - costs of the above after a little optimization:
  * 0 v=-0.435531:   0.29  -0.45  -0.16  -0.57   0.25  -0.31  [grid]
    1 v=-0.062774: -15.56 -13.38   9.18 -16.87 -22.51  11.58  [grid]
    2 v=-0.052986: -14.25  29.57 -18.87 -18.21  28.86  21.27  [grid]
    3 v=-0.052619: -18.12 -29.31   8.51 -17.91 -32.55   8.73  [rand]
    4 v=-0.045679: -23.87 -13.42   9.36 -29.37 -14.68  29.51  [grid]
    5 v=-0.064305: -13.14 -26.37   9.07  -9.35 -31.97  15.73  [grid]
    6 v=-0.050091: -17.92 -25.02   9.10 -27.25 -32.48   8.90  [grid]
    7 v=-0.052478: -22.94 -13.25   8.88 -15.23 -16.20  15.06  [grid]
    8 v=-0.058332: -20.16 -14.54   8.44 -14.50 -16.66  12.33  [grid]
    9 v=-0.060656:  -4.25 -27.18   9.52  -5.52 -29.57  -0.02  [rand]
   10 v=-0.054774: -14.76 -23.24   8.52 -29.71 -34.73   5.42  [rand]
   11 v=-0.047353: -27.32 -30.61   8.70 -15.62 -30.89  29.83  [grid]
   12 v=-0.038542: -23.02 -12.85   9.99 -31.21 -29.95  15.14  [grid]
   13 v=-0.038624: -21.48 -23.54   5.77  -6.69 -30.31  25.85  [rand]
   14 v=-0.033128:  21.96 -15.95 -19.81  40.83 -18.62   4.23  [rand]
   15 v=-0.048545: -32.95  13.02  -4.86  25.11   5.26  44.57  [rand]
   16 v=-0.052251:  -0.25   0.71   2.43  -5.48 -19.55 -20.11  [rand]
   17 v=-0.043612: -20.41  17.43  -6.96 -33.25  16.29  17.97  [rand]
   18 v=-0.040850:  -9.25  20.63  12.22 -25.64  19.07  16.89  [rand]
   19 v=-0.030677: -27.70 -27.15  22.79 -25.15 -14.51  29.88  [grid]
   20 v=-0.031333: -26.19  14.83  22.94 -29.25 -14.59  29.95  [grid]
   21 v=-0.030608:  17.64  16.46  -7.30  28.72 -20.63 -23.11  [rand]
   22 v=-0.032811: -14.73  27.06 -18.02 -15.61 -15.33  19.05  [grid]
   23 v=-0.043530:  -9.84 -15.96  12.17  24.09 -17.25 -13.67  [rand]
   24 v=-0.044533:  -2.87   6.01   0.75   3.95 -21.53 -15.53  [rand]
   25 v=-0.033658:  10.21  -3.84   1.17  23.26 -28.46 -19.62  [rand]
   26 v=-0.030375:  25.52 -12.56   8.78  29.62 -15.34 -31.57  [grid]
   27 v=-0.030731:  24.11  26.80  22.87 -29.14  30.05 -26.39  [grid]
   28 v=-0.058158: -18.17  29.06 -20.46 -23.60  28.94  28.13  [grid]
   29 v=-0.049040: -33.54  11.95  -2.91  28.49   5.04  42.73  [rand]
   30 v=-0.032243: -37.37 -13.99  30.08 -11.34  -6.87  -9.58  [rand]
   31 v=-0.039568: -20.98 -27.15  28.04  -3.49 -30.06  17.66  [rand]
   32 v=-0.032331:  25.07  26.31  13.73  15.36  14.34 -41.44  [rand]
   33 v=-0.030436: -27.03 -12.60   9.63  33.96 -14.88  29.76  [grid]
   34 v=-0.072837: -15.58  12.40   0.99 -15.29   5.28  13.91  [grid]
   35 v=-0.035166: -27.18 -13.48  21.03 -30.92 -30.62  34.68  [grid]
   36 v=-0.026175:  31.32 -28.07  32.18 -40.40 -19.43 -40.55  [rand]
   37 v=-0.027463: -13.16 -26.82   7.07  29.36 -33.28  -9.26  [grid]
   38 v=-0.031193:  11.48 -27.33  27.14 -14.56 -29.46 -28.88  [grid]
   39 v=-0.033449: -12.86  -6.42  10.17 -29.32 -28.97 -15.43  [grid]
   40 v=-0.039655: -26.57  14.45   4.24  16.59  12.29  32.31  [grid]
   41 v=-0.031006:  27.61 -26.32  22.53  29.44 -14.84 -26.95  [grid]
   42 v=-0.035204: -27.49 -21.89   7.32 -31.97 -29.81  14.47  [grid]
   43 v=-0.030512: -25.19 -13.40   1.93 -28.04 -28.66  27.36  [rand]
   44 v=-0.046385:  -8.76  25.23 -19.91  -8.89  32.42   2.28  [rand]
 + - save # 0 for twobest
 + - save #34 for twobest
 + - save # 5 for twobest
 + - save # 1 for twobest
 + - save # 9 for twobest
 + - save # 8 for twobest
 + - save #28 for twobest
 + - save #10 for twobest
 + - save # 2 for twobest
 + - save # 3 for twobest
 + - skip # 7 for twobest: too close to set # 8
 + - save #16 for twobest
 + - skip # 6 for twobest: too close to set #10
 + - save #29 for twobest
 + - skip #15 for twobest: too close to set #29
 + - save #11 for twobest
 + - save #44 for twobest
 + - save # 4 for twobest
 + - save #24 for twobest
 + - save #17 for twobest
 + - save #23 for twobest
 + - save #18 for twobest
 + - save #40 for twobest
 + - save #31 for twobest
 + - save #13 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=79 usiz=182
 + - retaining old weight image
 + - using 29303 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25380 total points stored in 258 'RHDD(13.7332)' bloks
*[#9543=-0.486449] *[#9565=-0.493304] *[#9566=-0.494045] *[#9571=-0.495098] *[#9572=-0.496497] *[#9575=-0.497333] *[#9576=-0.499476] *[#9577=-0.499961] *[#9578=-0.500175] *[#9579=-0.500844] *[#9580=-0.501486] *[#9589=-0.502104] *[#9593=-0.502117] *[#9594=-0.502284] *[#9595=-0.50236] *[#9598=-0.502919] 
 + - param set #1 has cost=-0.502919
 + -- Parameters = 0.4179 -0.5900 0.1087 -0.3649 -0.1883 -0.0394 1.0012 1.0049 0.9975 -0.0004 -0.0011 0.0003
 + - param set #2 has cost=-0.064414
 + -- Parameters = -16.1768 11.9602 1.7557 -13.8575 6.1710 14.2256 1.0001 1.0223 1.0050 0.0017 0.0020 -0.0002
 + - param set #3 has cost=-0.065358
 + -- Parameters = -11.9747 -26.4329 10.4561 -6.4506 -29.4692 10.9159 1.0433 1.0090 0.9872 0.0045 0.0057 0.0110
 + - param set #4 has cost=-0.054223
 + -- Parameters = -15.3152 -13.6086 8.8327 -15.0000 -19.9309 11.9904 0.9947 0.9986 0.9891 -0.0029 -0.0020 -0.0015
 + - param set #5 has cost=-0.061062
 + -- Parameters = -4.2743 -27.3845 8.9240 -4.9816 -28.7902 0.2695 1.0020 1.0246 0.9992 -0.0019 0.0003 -0.0010
 + - param set #6 has cost=-0.060828
 + -- Parameters = -17.3324 -14.2364 7.0940 -12.9207 -15.8025 10.4531 1.0015 1.0158 0.9948 -0.0052 0.0018 0.0002
 + - param set #7 has cost=-0.043921
 + -- Parameters = -18.3366 28.1753 -19.4652 -23.7093 27.4714 27.4052 1.0027 1.0036 1.0007 0.0007 0.0098 0.0046
 + - param set #8 has cost=-0.042292
 + -- Parameters = -15.0339 -23.6932 8.1072 -30.1694 -33.4051 6.5069 0.9935 0.9981 1.0002 0.0154 0.0013 0.0013
 + - param set #9 has cost=-0.042108
 + -- Parameters = -14.0964 29.4306 -18.8856 -18.2495 28.8475 21.0474 0.9983 1.0161 0.9979 -0.0011 -0.0007 -0.0006
 + - param set #10 has cost=-0.044811
 + -- Parameters = -18.0673 -30.0678 7.8130 -17.5596 -28.9992 8.6697 0.9988 1.0051 1.0022 -0.0031 0.0009 0.0006
 + - param set #11 has cost=-0.036033
 + -- Parameters = -0.1562 0.9751 2.4287 -5.5784 -19.7870 -20.2216 1.0014 0.9980 0.9982 -0.0002 -0.0001 0.0102
 + - param set #12 has cost=-0.500338
 + -- Parameters = 0.3840 -0.6071 0.1333 -0.3713 -0.2699 0.0497 0.9981 1.0032 0.9959 -0.0020 -0.0025 -0.0012
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.00848 XXX
 + --- dist(#3,#1) = 0.207 
 + --- dist(#4,#1) = 0.335 
 + --- dist(#5,#1) = 0.222 
 + --- dist(#6,#1) = 0.219 
 + --- dist(#7,#1) = 0.368 
 + --- dist(#8,#1) = 0.36 
 + --- dist(#9,#1) = 0.369 
 + --- dist(#10,#1) = 0.375 
 + --- dist(#11,#1) = 0.224 
 + - cast out 1 parameter set for being too close to best set
++ Start refinement #2 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=79 usiz=182
 + - retaining old weight image
 + - using 29303 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25590 total points stored in 267 'RHDD(13.5933)' bloks
*[#10483=-0.503138] *[#10491=-0.505827] *[#10511=-0.507042] *[#10514=-0.507125] *[#10518=-0.507361] *[#10519=-0.507454] *[#10521=-0.507739] *[#10522=-0.507789] *[#10524=-0.508037] *[#10525=-0.508121] *[#10526=-0.508193] *[#10529=-0.508214] *[#10533=-0.508377] *[#10540=-0.508394] *[#10541=-0.508412] *[#10544=-0.508443] *[#10552=-0.508555] 
 + - param set #1 has cost=-0.508555
 + -- Parameters = 0.4562 -0.6204 0.0858 -0.3716 -0.3732 -0.0404 1.0044 1.0139 0.9958 -0.0001 -0.0006 -0.0002
 + - param set #2 has cost=-0.058326
 + -- Parameters = -11.7353 -26.3069 10.7925 -6.3504 -29.5849 10.4383 1.0415 1.0076 0.9790 -0.0001 0.0144 0.0113
 + - param set #3 has cost=-0.084555
 + -- Parameters = -12.6074 8.5342 3.2691 -11.5475 1.9824 9.0130 0.9878 1.0458 0.9728 0.0378 -0.0021 0.0280
 + - param set #4 has cost=-0.059239
 + -- Parameters = -4.0616 -26.9837 8.5562 -5.7347 -28.3709 0.2284 1.0147 1.0403 0.9893 -0.0023 -0.0013 -0.0024
 + - param set #5 has cost=-0.055577
 + -- Parameters = -16.9854 -14.1032 6.7231 -12.5621 -15.8017 10.6303 0.9775 1.0434 0.9800 0.0125 0.0050 0.0026
 + - param set #6 has cost=-0.043971
 + -- Parameters = -15.2768 -13.5774 8.8962 -14.7907 -19.7957 12.0375 0.9934 0.9993 0.9900 0.0038 -0.0018 -0.0012
 + - param set #7 has cost=-0.042536
 + -- Parameters = -17.6385 -29.3602 7.5543 -15.4396 -29.1035 7.8060 1.0195 1.0148 0.9758 -0.0069 -0.0074 -0.0098
 + - param set #8 has cost=-0.038792
 + -- Parameters = -18.4581 28.1893 -19.4056 -23.6891 27.5408 27.5298 1.0018 1.0044 0.9996 0.0005 0.0164 0.0038
 + - param set #9 has cost=-0.034827
 + -- Parameters = -15.1239 -22.9514 7.2894 -30.5329 -33.2269 6.1693 0.9875 0.9884 0.9825 0.0205 -0.0002 0.0016
 + - param set #10 has cost=-0.046726
 + -- Parameters = -13.3680 29.2105 -19.2023 -17.7677 28.7345 17.7654 0.9632 1.0155 1.0230 -0.0137 0.0017 -0.0124
 + - param set #11 has cost=-0.033557
 + -- Parameters = 0.3512 1.1132 2.6454 -5.1973 -19.4200 -17.2561 1.0027 0.9961 0.9986 -0.0006 -0.0012 0.0095
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.17 
 + --- dist(#3,#1) = 0.33 
 + --- dist(#4,#1) = 0.325 
 + --- dist(#5,#1) = 0.218 
 + --- dist(#6,#1) = 0.373 
 + --- dist(#7,#1) = 0.216 
 + --- dist(#8,#1) = 0.359 
 + --- dist(#9,#1) = 0.36 
 + --- dist(#10,#1) = 0.365 
 + --- dist(#11,#1) = 0.212 
++ Start refinement #3 on 11 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=79 usiz=182
 + - retaining old weight image
 + - using 29303 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25777 total points stored in 275 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.497054
 + -- Parameters = 0.4739 -0.6273 0.1379 -0.4300 -0.4609 -0.0849 1.0051 1.0153 0.9991 -0.0025 0.0010 -0.0021
 + - param set #2 has cost=-0.174799
 + -- Parameters = -2.9224 4.0617 1.2987 -3.7127 0.6890 3.8164 0.9920 1.1116 1.0306 0.0303 -0.0675 0.0308
 + - param set #3 has cost=-0.051483
 + -- Parameters = -4.0447 -26.9776 8.4311 -5.6997 -28.6643 0.5427 1.0181 1.0422 0.9822 -0.0067 -0.0051 -0.0017
 + - param set #4 has cost=-0.050621
 + -- Parameters = -11.5129 -26.2560 10.7698 -6.3865 -29.7532 10.1358 1.0413 1.0059 0.9855 -0.0015 0.0180 0.0146
 + - param set #5 has cost=-0.055744
 + -- Parameters = -13.6966 -14.5801 8.1301 -7.8280 -17.0801 9.7895 0.9791 1.0413 0.9811 0.0121 0.0110 -0.0012
 + - param set #6 has cost=-0.040607
 + -- Parameters = -13.2041 28.9596 -19.2122 -17.7294 28.8282 17.6827 0.9589 1.0158 1.0219 -0.0126 0.0006 -0.0192
 + - param set #7 has cost=-0.050022
 + -- Parameters = -14.8445 -14.0754 9.6951 -11.2519 -19.0750 11.5915 0.9668 1.0045 1.0051 0.0036 -0.0142 -0.0095
 + - param set #8 has cost=-0.036147
 + -- Parameters = -17.0894 -28.6082 8.0615 -14.8078 -28.7777 7.5991 1.0225 1.0175 0.9805 -0.0054 -0.0019 -0.0081
 + - param set #9 has cost=-0.035672
 + -- Parameters = -18.2391 28.2486 -19.2245 -23.4182 27.6401 26.8390 0.9959 0.9975 1.0012 0.0006 0.0215 0.0036
 + - param set #10 has cost=-0.031533
 + -- Parameters = -15.1695 -22.9209 7.1756 -30.6053 -33.1250 6.0729 0.9866 0.9842 0.9772 0.0191 -0.0016 0.0078
 + - param set #11 has cost=-0.030089
 + -- Parameters = 0.3601 0.9228 2.6534 -5.1774 -19.4109 -17.1889 1.0029 0.9959 0.9992 0.0044 -0.0012 0.0097
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.308 
 + --- dist(#3,#1) = 0.185 
 + --- dist(#4,#1) = 0.329 
 + --- dist(#5,#1) = 0.325 
 + --- dist(#6,#1) = 0.207 
 + --- dist(#7,#1) = 0.37 
 + --- dist(#8,#1) = 0.35 
 + --- dist(#9,#1) = 0.361 
 + --- dist(#10,#1) = 0.363 
 + --- dist(#11,#1) = 0.211 
 + - Total coarse refinement net CPU time = 0.0 s; 2849 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=79 usiz=182
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 25702 total points stored in 275 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.502321 *
 + -- Parameters = 0.4739 -0.6273 0.1379 -0.4300 -0.4609 -0.0849 1.0051 1.0153 0.9991 -0.0025 0.0010 -0.0021
 + - cost(#2)=-0.170518  
 + -- Parameters = -2.9224 4.0617 1.2987 -3.7127 0.6890 3.8164 0.9920 1.1116 1.0306 0.0303 -0.0675 0.0308
 + - cost(#3)=-0.051596  
 + -- Parameters = -13.6966 -14.5801 8.1301 -7.8280 -17.0801 9.7895 0.9791 1.0413 0.9811 0.0121 0.0110 -0.0012
 + - cost(#4)=-0.048638  
 + -- Parameters = -4.0447 -26.9776 8.4311 -5.6997 -28.6643 0.5427 1.0181 1.0422 0.9822 -0.0067 -0.0051 -0.0017
 + - cost(#5)=-0.047847  
 + -- Parameters = -11.5129 -26.2560 10.7698 -6.3865 -29.7532 10.1358 1.0413 1.0059 0.9855 -0.0015 0.0180 0.0146
 + - cost(#6)=-0.047775  
 + -- Parameters = -14.8445 -14.0754 9.6951 -11.2519 -19.0750 11.5915 0.9668 1.0045 1.0051 0.0036 -0.0142 -0.0095
 + - cost(#7)=-0.039464  
 + -- Parameters = -13.2041 28.9596 -19.2122 -17.7294 28.8282 17.6827 0.9589 1.0158 1.0219 -0.0126 0.0006 -0.0192
 + - cost(#8)=-0.035360  
 + -- Parameters = -17.0894 -28.6082 8.0615 -14.8078 -28.7777 7.5991 1.0225 1.0175 0.9805 -0.0054 -0.0019 -0.0081
 + - cost(#9)=-0.035091  
 + -- Parameters = -18.2391 28.2486 -19.2245 -23.4182 27.6401 26.8390 0.9959 0.9975 1.0012 0.0006 0.0215 0.0036
 + - cost(#10)=-0.030223  
 + -- Parameters = -15.1695 -22.9209 7.1756 -30.6053 -33.1250 6.0729 0.9866 0.9842 0.9772 0.0191 -0.0016 0.0078
 + - cost(#11)=-0.026882  
 + -- Parameters = 0.3601 0.9228 2.6534 -5.1774 -19.4109 -17.1889 1.0029 0.9959 0.9992 0.0044 -0.0012 0.0097
 + - cost(#12)=-0.060306  
 + -- Parameters = -0.8964 0.4216 -4.0010 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.506655 *
 + -- Parameters = 0.5125 -0.5881 0.1380 -0.4024 -0.4141 -0.1604 1.0061 1.0058 0.9987 -0.0045 0.0023 -0.0032
 + - cost(#2)=-0.377547  
 + -- Parameters = 0.7314 -0.6740 0.2877 0.4722 1.6584 2.6526 0.9720 1.0154 1.0028 0.0237 -0.0681 0.0391
 + - cost(#3)=-0.088712  
 + -- Parameters = -4.3560 -11.3325 5.7405 -4.3635 -13.3705 4.4972 0.9796 1.0207 1.0258 -0.0008 -0.0045 -0.0169
 + - cost(#4)=-0.048821  
 + -- Parameters = -4.0482 -26.9882 8.3830 -5.5124 -28.6994 0.7747 1.0186 1.0428 0.9798 -0.0011 -0.0043 -0.0013
 + - cost(#5)=-0.048212  
 + -- Parameters = -11.4454 -26.2073 10.6735 -6.5995 -29.6199 9.8307 1.0440 1.0024 0.9871 -0.0021 0.0221 0.0147
 + - cost(#6)=-0.051624  
 + -- Parameters = -14.2664 -13.5467 10.1069 -11.0576 -19.3113 11.3461 0.9419 1.0288 1.0043 -0.0009 -0.0244 -0.0116
 + - cost(#7)=-0.039827  
 + -- Parameters = -13.2661 28.9772 -19.1809 -17.6271 28.8663 17.7892 0.9549 1.0135 1.0209 -0.0113 -0.0036 -0.0191
 + - cost(#8)=-0.036134  
 + -- Parameters = -16.9774 -28.6281 8.1600 -14.7197 -28.7178 7.6181 1.0249 1.0218 0.9825 -0.0046 -0.0034 -0.0061
 + - cost(#9)=-0.035609  
 + -- Parameters = -18.0916 28.4116 -19.1839 -23.2637 27.6722 26.6493 0.9948 0.9982 1.0010 0.0009 0.0216 -0.0014
 + - cost(#10)=-0.030465  
 + -- Parameters = -15.1908 -22.9212 7.0793 -30.6987 -33.0846 6.1274 0.9873 0.9851 0.9766 0.0184 -0.0066 0.0085
 + - cost(#11)=-0.031140  
 + -- Parameters = 0.2329 1.4836 3.6762 -4.9876 -20.1207 -15.9163 1.0066 0.9852 1.0054 0.0224 -0.0050 -0.0113
 + - cost(#12)=-0.501217  
 + -- Parameters = 0.4600 -0.6087 0.1256 -0.3821 -0.2975 -0.1817 0.9998 1.0022 1.0042 -0.0020 0.0032 -0.0023
 + - case #1 is now the best
 + - Initial  cost = -0.506655
 + - Initial fine Parameters = 0.5125 -0.5881 0.1380 -0.4024 -0.4141 -0.1604 1.0061 1.0058 0.9987 -0.0045 0.0023 -0.0032
 + - Finalish cost = -0.507305 ; 254 funcs
 + - Final    cost = -0.507309 ; 130 funcs
 + Final fine fit Parameters:
       x-shift= 0.5067   y-shift=-0.6197   z-shift= 0.1091
       z-angle=-0.4521   x-angle=-0.6756   y-angle=-0.2557
       x-scale= 1.0049   y-scale= 1.0063   z-scale= 0.9967
     y/x-shear=-0.0058 z/x-shear= 0.0042 z/y-shear=-0.0080
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.5067 -0.6197 0.1091 -0.4521 -0.6756 -0.2557 1.0049 1.0063 0.9967 -0.0058 0.0042 -0.0080
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 19.5
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.900002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0020 -0.9816 0.2109 231.1750 -0.0006 0.2210 0.9742 74.6596 -1.0049 -0.0079 -0.0045 197.5980
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.8
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base TT_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 15.4 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/TT_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3173.650100 ...
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 81.254 47.409   ITER = 7/137
81.254

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/awpy/base.nii data to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=6 xtop=5  ybot=11 ytop=12  zbot=10 ztop=6 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 172 x 214 x 167 volume ; autobbox = 13..158 18..197 13..153 [clock= 5s 160ms]
lev=0 0..171 0..213 0..166: [first cost=-0.70132] ... done [cost:-0.70132==>-0.76585]
lev=1 patch=129x161x125 [clock= 12m 30s 771ms]........:[cost=-0.79503]:........ done [cost:-0.76585==>-0.79878 ; 16 patches optimized, 0 skipped]
lev=2 patch=97x121x95 [clock= 17m 8s 440ms]......................... done [cost:-0.79878==>-0.86823 ; 25 patches optimized, 2 skipped]
lev=3 patch=73x91x71 [clock= 20m 54s 974ms]........... done [cost:-0.86823==>-0.92650 ; 46 patches optimized, 18 skipped]
lev=4 patch=55x69x53 [clock= 23m 52s 573ms].................. done [cost:-0.92650==>-0.98141 ; 79 patches optimized, 46 skipped]
lev=5 patch=41x51x39 [clock= 25m 53s 771ms].................. done [cost:-0.98141==>-1.04210 ; 213 patches optimized, 130 skipped]
lev=6 patch=31x39x29 [clock= 28m 3s 905ms]................. done [cost:-1.04210==>-1.07151 ; 518 patches optimized, 382 skipped]
lev=7 patch=25x25x25 [clock= 30m 22s 964ms]...................................... done [cost:-1.07151==>-1.16735 ; 1154 patches optimized, 1006 skipped]
++ ========== total number of parameters 'optimized' = 49521
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 32m 52s 472ms
#++ Applying warps to /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs5/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 6.3 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base TT_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb01.tb0169.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0169.r01.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb0169.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30870 voxels
 + 4921 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.022  pitch=-0.522  yaw=-0.304  dS=-0.722  dL=-0.033  dP=-0.193
++ Mean: roll=+0.187  pitch=-0.174  yaw=-0.081  dS=+0.074  dL=+0.177  dP=-0.042
++ Max : roll=+0.363  pitch=+0.686  yaw=+0.074  dS=+0.330  dL=+0.487  dP=+0.106
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.18(0.18) 0.17(0.06) 0.18(0.11) 0.15(0.10) 0.14(0.12) 0.32(0.22) 0.23(0.12) 0.27(0.07) 0.25(0.07) 0.18(0.09) 0.13(0.08) 0.27(0.15) 0.26(0.07) 0.30(0.08) 0.39(0.11) 0.47(0.12) 0.52(0.08) 0.52(0.10) 0.58(0.07) 0.55(0.08) 0.57(0.08) 0.56(0.07) 0.62(0.08) 0.60(0.12) 0.62(0.05) 0.59(0.09) 0.58(0.09) 0.63(0.06) 0.48(0.18) 0.59(0.13) 0.53(0.07) 0.59(0.08) 0.57(0.07) 0.62(0.10) 0.57(0.06) 0.63(0.08) 0.59(0.05) 0.57(0.05) 0.59(0.06) 0.57(0.04) 0.58(0.05) 0.54(0.07) 0.27(0.68) 0.45(0.38) 0.55(0.41) 0.64(0.29) 0.58(0.12) 0.61(0.07) 0.68(0.11) 0.67(0.05) 0.71(0.07) 0.71(0.14) 0.78(0.08) 0.69(0.12) 0.64(0.08) 1.16(1.70) 1.83(0.67) 1.69(0.35) 1.56(0.15) 1.49(0.09) 1.05(0.45) 0.78(0.30) 0.77(0.09) 0.84(0.09) 0.77(0.13) 0.69(0.12) 0.83(0.15) 0.96(0.23) 0.82(0.51) 0.85(0.04) 0.83(0.05) 0.83(0.05) 0.77(0.09) 0.77(0.06) 0.76(0.03) 0.72(0.09) 0.77(0.32) 0.76(0.12) 0.75(0.04) 0.76(0.11) 0.74(0.10) 0.75(0.06) 0.78(0.07) 0.79(0.04) 0.73(0.07) 0.74(0.05) 0.76(0.10) 0.76(0.14) 0.74(0.08) 0.74(0.07) 0.79(0.07) 0.78(0.04) 0.80(0.06) 0.86(0.13) 0.83(0.12) 0.84(0.60) 0.64(0.67) 1.27(0.93) 1.19(0.19) 1.25(0.07) 1.31(0.07) 1.31(0.04) 1.31(0.06) 1.33(0.07) 1.35(0.07) 1.43(0.18) 1.40(0.06) 1.33(0.10) 1.33(0.03) 1.37(0.05) 1.39(0.04) 1.38(0.04) 1.38(0.05) 1.41(0.04) 1.45(0.06) 1.45(0.06) 1.45(0.03) 1.48(0.04) 1.48(0.05) 1.50(0.09) 1.46(0.09) 1.44(0.04) 1.46(0.08) 1.50(0.06) 1.48(0.08) 1.46(0.10) 1.47(0.11) 1.46(0.06) 1.50(0.15) 1.51(0.15) 1.46(0.11) 1.45(0.08) 1.43(0.14) 1.38(0.09) 1.41(0.07) 1.51(0.11) 1.12(0.43) 0.66(0.77) 1.03(0.68) 1.09(0.08) 1.04(0.09) 1.14(0.17) 1.26(0.13) 1.41(0.19) 1.12(0.35) 0.86(0.52) 1.07(0.28) 1.10(0.13) 1.28(0.28)
++ Max displacement in automask = 1.83 (mm) at sub-brick 57
++ Max delta displ  in automask = 1.70 (mm) at sub-brick 56
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb01.tb0169.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0169.r01.tshift+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0169.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0169.r01.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ Source dataset: ./pb01.tb0169.r01.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r01+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.6
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r01.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r01
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.1
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb01.tb0169.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0169.r02.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb0169.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30928 voxels
 + 4958 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.300  pitch=-0.498  yaw=-0.020  dS=-1.005  dL=+0.230  dP=-0.367
++ Mean: roll=+0.489  pitch=-0.159  yaw=+0.223  dS=-0.254  dL=+0.623  dP=-0.207
++ Max : roll=+0.591  pitch=+0.645  yaw=+0.336  dS=+0.028  dL=+0.720  dP=+0.077
++ Max displacements (mm) for each sub-brick:
 1.43(0.00) 1.43(0.21) 1.45(0.07) 1.40(0.06) 1.42(0.08) 1.31(0.22) 1.29(0.21) 1.29(0.15) 1.34(0.05) 1.37(0.14) 1.35(0.07) 1.34(0.13) 1.33(0.03) 1.36(0.11) 1.33(0.04) 1.32(0.06) 1.32(0.05) 1.31(0.09) 1.35(0.05) 1.33(0.08) 1.37(0.06) 1.35(0.03) 1.37(0.07) 1.38(0.04) 1.36(0.07) 1.41(0.10) 1.38(0.09) 1.42(0.07) 1.40(0.06) 1.41(0.05) 1.38(0.07) 1.41(0.13) 1.45(0.13) 1.44(0.11) 1.48(0.15) 1.48(0.16) 1.49(0.08) 1.48(0.03) 1.51(0.17) 1.32(0.47) 1.16(0.32) 1.27(0.33) 1.29(0.06) 1.32(0.09) 1.32(0.11) 1.34(0.08) 1.35(0.07) 1.35(0.09) 1.35(0.02) 1.37(0.03) 1.38(0.08) 1.38(0.01) 1.39(0.04) 1.41(0.06) 1.40(0.05) 1.43(0.05) 1.46(0.06) 1.46(0.04) 1.48(0.06) 1.47(0.03) 1.48(0.03) 1.45(0.06) 1.45(0.08) 1.48(0.05) 1.49(0.04) 1.50(0.07) 1.52(0.11) 1.56(0.14) 1.61(0.10) 1.62(0.08) 1.60(0.13) 1.59(0.18) 1.58(0.03) 1.58(0.04) 1.60(0.07) 1.63(0.07) 1.62(0.06) 1.63(0.03) 1.63(0.04) 1.63(0.05) 1.65(0.06) 1.63(0.09) 1.59(0.07) 1.61(0.12) 1.65(0.14) 1.64(0.05) 1.61(0.11) 1.63(0.08) 1.60(0.15) 1.43(0.90) 1.47(0.48) 1.54(0.43) 1.57(0.08) 1.63(0.11) 1.34(0.76) 1.72(1.42) 2.26(0.75) 1.72(1.04) 1.33(0.81) 1.30(0.16) 1.31(0.27) 1.30(0.11) 1.34(0.08) 1.34(0.06) 1.35(0.08) 1.34(0.13) 1.37(0.55) 1.37(0.23) 1.32(0.15) 1.33(0.08) 1.37(0.13) 1.44(0.11) 1.43(0.12) 1.45(0.10) 1.47(0.13) 1.51(0.07) 1.53(0.04) 1.56(0.08) 1.53(0.06) 1.57(0.07) 1.54(0.07) 1.60(0.08) 1.60(0.10) 1.63(0.07) 1.64(0.05) 1.70(0.22) 1.65(0.09) 1.51(0.27) 1.51(0.23) 1.56(0.11) 1.59(0.11) 1.63(0.06) 1.64(0.04) 1.63(0.04) 1.64(0.05) 1.64(0.05) 1.64(0.06) 1.65(0.05) 1.65(0.02) 1.62(0.07) 1.62(0.08) 1.49(0.24) 1.61(0.27) 1.36(0.59) 1.67(1.03) 1.42(0.59) 1.39(0.16) 1.37(0.21) 1.38(0.19) 1.35(0.17)
++ Max displacement in automask = 2.26 (mm) at sub-brick 96
++ Max delta displ  in automask = 1.42 (mm) at sub-brick 95
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb01.tb0169.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0169.r02.tshift+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0169.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0169.r02.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ Source dataset: ./pb01.tb0169.r02.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r02+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 15.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r02.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r02
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb01.tb0169.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb01.tb0169.r03.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ Reading input dataset ./pb01.tb0169.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31034 voxels
 + 4961 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.131  pitch=-0.503  yaw=-0.315  dS=-1.835  dL=+0.253  dP=-0.513
++ Mean: roll=+0.450  pitch=-0.127  yaw=+0.112  dS=-0.520  dL=+0.553  dP=-0.239
++ Max : roll=+0.561  pitch=+1.129  yaw=+0.432  dS=-0.150  dL=+0.658  dP=-0.103
++ Max displacements (mm) for each sub-brick:
 1.31(0.00) 1.47(0.47) 1.45(0.06) 1.42(0.09) 1.33(0.24) 1.28(0.27) 1.26(0.12) 1.27(0.08) 1.31(0.20) 1.25(0.07) 1.29(0.13) 1.27(0.04) 1.27(0.04) 1.28(0.06) 1.26(0.05) 1.27(0.02) 1.29(0.05) 1.25(0.07) 1.30(0.07) 1.26(0.18) 1.29(0.07) 1.27(0.14) 1.35(0.31) 1.31(0.17) 1.19(0.36) 1.24(0.12) 1.29(0.12) 1.32(0.27) 1.62(0.70) 1.35(0.44) 1.30(0.33) 1.30(0.17) 1.33(0.07) 1.34(0.07) 1.32(0.08) 1.33(0.07) 1.32(0.06) 1.33(0.05) 1.35(0.13) 1.38(0.08) 1.37(0.07) 1.39(0.07) 1.39(0.10) 1.40(0.11) 1.45(0.07) 1.43(0.12) 1.44(0.19) 1.44(0.14) 1.48(0.10) 1.47(0.06) 1.48(0.06) 1.47(0.04) 1.45(0.05) 1.46(0.05) 1.44(0.07) 1.46(0.09) 1.45(0.08) 1.47(0.10) 1.46(0.07) 1.47(0.07) 1.45(0.05) 1.48(0.03) 1.53(0.07) 1.52(0.07) 1.51(0.05) 1.53(0.05) 1.54(0.04) 1.56(0.05) 1.54(0.07) 1.55(0.07) 1.54(0.12) 1.58(0.11) 1.54(0.07) 1.57(0.05) 1.59(0.16) 1.60(0.11) 1.57(0.09) 1.56(0.12) 1.58(0.03) 1.44(0.24) 1.47(0.67) 1.40(0.25) 1.41(0.63) 1.45(0.09) 1.44(0.03) 1.50(0.15) 1.41(0.34) 3.72(3.79) 2.28(1.54) 1.18(1.66) 1.27(0.23) 1.31(0.28) 1.29(0.06) 1.21(0.16) 1.33(0.20) 1.36(0.21) 1.35(0.19) 1.27(0.10) 1.31(0.08) 1.30(0.21) 1.25(0.16) 1.30(0.10) 1.35(0.12) 1.37(0.05) 1.34(0.04) 1.33(0.28) 1.42(0.13) 1.39(0.19) 1.49(0.15) 1.39(0.44) 1.62(0.70) 1.55(0.29) 1.45(0.34) 1.42(0.18) 1.33(0.24) 1.30(0.12) 1.16(0.26) 1.17(0.03) 1.33(0.33) 1.38(0.16) 1.28(0.56) 1.77(1.44) 1.85(0.30) 1.52(0.59) 1.49(0.12) 1.39(0.26) 1.37(0.08) 1.37(0.08) 1.44(0.11) 1.41(0.11) 1.94(1.06) 2.57(0.70) 1.97(0.79) 1.61(0.55) 1.58(0.14) 1.49(0.21) 2.03(1.01) 2.93(1.37) 3.56(0.77) 3.49(0.57) 2.55(1.16) 1.56(1.39) 1.68(0.37) 1.56(0.44) 1.59(0.12) 1.75(0.34) 1.67(0.10) 1.70(0.10) 1.80(0.11) 1.59(0.56)
++ Max displacement in automask = 3.72 (mm) at sub-brick 87
++ Max delta displ  in automask = 3.79 (mm) at sub-brick 87
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb01.tb0169.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input pb01.tb0169.r03.tshift+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -prefix rm.epi.nomask.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0169.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0169.r03.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ Source dataset: ./pb01.tb0169.r03.tshift+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 150 sub-bricks ==========
volume 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149J++ Output dataset ./rm.epi.nomask.r03+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 14.7
++ ###########################################################
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input rm.epi.all1+orig -1Dmatrix_apply mat.r03.warp.aff12.1D -mast_dxyz 3 -final NN -quiet -prefix rm.epi.1.r03
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.900002 degrees from plumb.
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 16.0
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.HEAD
++ 3dMean: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dcalc -a rm.epi.mean+orig -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0169.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0169.r01.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r02+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0169.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0169.r02.volreg+orig.BRIK
end
3dcalc -a rm.epi.nomask.r03+orig -b mask_epi_extents+orig -expr a*b -prefix pb02.tb0169.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb02.tb0169.r03.volreg+orig.BRIK
end
cat_matvec -ONELINE Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dAllineate -base Sag3DMPRAGEs002a1001_ns+orig -input vr_base+orig -1Dmatrix_apply mat.basewarp.aff12.1D -mast_dxyz 3 -prefix final_epi_vr_base
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.900002 degrees from plumb.
++ Source dataset: ./vr_base+orig.HEAD
++ Base dataset:   ./Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Loading datasets
++ master dataset for output = base
++ changing output grid spacing to 3.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
volume 0J++ Output dataset ./final_epi_vr_base+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 0.4
++ ###########################################################
3dcopy Sag3DMPRAGEs002a1001_ns+orig anat_final.tb0169
++ 3dcopy: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
3dAllineate -base final_epi_vr_base+orig -allcostX -input anat_final.tb0169+orig
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0169+orig.HEAD
++ Base dataset:   ./final_epi_vr_base+orig.HEAD
++ Loading datasets
++ 1463938 voxels in source_automask+0
++ Zero-pad: not needed
++ Computing -autobox
++ 283689 voxels [66.6%] in weight mask
++ Number of points for matching = 133333
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0J + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.12899
   sp   = 0.315294
   mi   = -0.54632
   crM  = 0.0368674
   nmi  = 0.839154
   je   = 2.85021
   hel  = -0.111577
   crA  = 0.192384
   crU  = 0.204399
   lss  = 0.87101
   lpc  = 0.0989626
   lpa  = 0.901037
   lpc+ = 0.23232
   ncd  = 0.997489
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 4.0
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0169+orig -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0169+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+orig.BRIK
++ total Elapsed time = 25.3 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0169.r01.blur pb02.tb0169.r01.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0169.r01.blur+orig.BRIK

3dcalc -a rm.pb03.tb0169.r01.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0169.r01.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0169.r01.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0169.r02.blur pb02.tb0169.r02.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0169.r02.blur+orig.BRIK

3dcalc -a rm.pb03.tb0169.r02.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0169.r02.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0169.r02.blur+orig.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb03.tb0169.r03.blur pb02.tb0169.r03.volreg+orig
++ 3dmerge: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (122.0 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb03.tb0169.r03.blur+orig.BRIK

3dcalc -a rm.pb03.tb0169.r03.blur+orig -b mask_epi_extents+orig -expr a*b -prefix pb03.tb0169.r03.blur
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0169.r03.blur+orig.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb03.tb0169.r01.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0169.r01.blur+orig
++ Forming automask
 + Fixed clip level = 370.564880
 + Used gradual clip level = 314.503448 .. 420.475494
 + Number voxels above clip level = 52890
 + Clustering voxels ...
 + Largest cluster has 52582 voxels
 + Clustering voxels ...
 + Largest cluster has 52557 voxels
 + Filled    35 voxels in small holes; now have 52592 voxels
 + Clustering voxels ...
 + Largest cluster has 52592 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373683 voxels
 + Mask now has 52592 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365389 voxels
++ 60886 voxels in the mask [out of 426275: 14.28%]
++ first  14 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   12 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb03.tb0169.r02.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0169.r02.blur+orig
++ Forming automask
 + Fixed clip level = 370.402954
 + Used gradual clip level = 314.683289 .. 421.515320
 + Number voxels above clip level = 52913
 + Clustering voxels ...
 + Largest cluster has 52635 voxels
 + Clustering voxels ...
 + Largest cluster has 52610 voxels
 + Filled    29 voxels in small holes; now have 52639 voxels
 + Clustering voxels ...
 + Largest cluster has 52639 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373636 voxels
 + Mask now has 52639 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365324 voxels
++ 60951 voxels in the mask [out of 426275: 14.30%]
++ first  14 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   12 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb03.tb0169.r03.blur+orig
++ 3dAutomask: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb03.tb0169.r03.blur+orig
++ Forming automask
 + Fixed clip level = 369.729614
 + Used gradual clip level = 314.355835 .. 421.143982
 + Number voxels above clip level = 53025
 + Clustering voxels ...
 + Largest cluster has 52751 voxels
 + Clustering voxels ...
 + Largest cluster has 52722 voxels
 + Filled    40 voxels in small holes; now have 52762 voxels
 + Clustering voxels ...
 + Largest cluster has 52762 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 373513 voxels
 + Mask now has 52762 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 365234 voxels
++ 61041 voxels in the mask [out of 426275: 14.32%]
++ first  14 x-planes are zero [from A]
++ last    8 x-planes are zero [from P]
++ first  28 y-planes are zero [from I]
++ last   12 y-planes are zero [from S]
++ first   7 z-planes are zero [from L]
++ last    7 z-planes are zero [from R]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+orig.HEAD rm.mask_r02+orig.HEAD rm.mask_r03+orig.HEAD -union -prefix full_mask.tb0169
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 61149 survived, 365126 were zero
++ writing result full_mask.tb0169...
3dresample -master full_mask.tb0169+orig -input Sag3DMPRAGEs002a1001_ns+orig -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+orig -prefix mask_anat.tb0169
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 57904 survived, 368371 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0169...
3dABoverlap -no_automask full_mask.tb0169+orig mask_anat.tb0169+orig
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
#A=./full_mask.tb0169+orig.BRIK  B=./mask_anat.tb0169+orig.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
61149        57904        64694        54359        6790         3545         11.1040      6.1222     0.8704     1.0115     0.9264
3ddot -dodice full_mask.tb0169+orig mask_anat.tb0169+orig
tee out.mask_ae_dice.txt
0.91319	
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0169
total number of censored TRs (simple form) = 58
1deval -a motion_tb0169_censor.1D -b outcount_tb0169_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0169_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb03.tb0169.r01.blur+orig.HEAD pb03.tb0169.r02.blur+orig.HEAD pb03.tb0169.r03.blur+orig.HEAD -censor censor_tb0169_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0169 -errts errts.tb0169 -bucket stats.tb0169
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 306,172 bytes (about 306 thousand [kilo])
++ loading dataset pb03.tb0169.r01.blur+orig.HEAD pb03.tb0169.r02.blur+orig.HEAD pb03.tb0169.r03.blur+orig.HEAD
++ current memory malloc-ated = 384,238,509 bytes (about 384 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 52671 voxels (out of 426275 = 12.4%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 392 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 1,597,678,700 bytes (about 1.6 billion [giga])
++ current memory malloc-ated = 384,705,532 bytes (about 385 million [mega])
++ mmap() memory allocated: 1,597,678,700 bytes (about 1.6 billion [giga])
++ Memory required for output bricks = 1,597,678,700 bytes (about 1.6 billion [giga])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb03.tb0169.r01.blur+orig.HEAD pb03.tb0169.r02.blur+orig.HEAD pb03.tb0169.r03.blur+orig.HEAD" \
 -fout -tout -Rbuck stats.tb0169_REML -Rvar stats.tb0169_REMLvar \
 -Rfitts fitts.tb0169_REML -Rerrts errts.tb0169_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (392x24):  3.78175  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (392x6):  1.03999  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (392x18):  3.42504  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (392x6):  2.46882  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (392x12):  1.24033  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.13121e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.19 s
++ Voxels in dataset: 426275
++ Voxels per job:    42627
++ Job #1: processing voxels 42627 to 85253; elapsed time=7.050
++ Job #2: processing voxels 85254 to 127880; elapsed time=7.064
++ Job #3: processing voxels 127881 to 170507; elapsed time=7.078
++ Job #4: processing voxels 170508 to 213134; elapsed time=7.092
++ Job #5: processing voxels 213135 to 255761; elapsed time=7.107
++ Job #6: processing voxels 255762 to 298388; elapsed time=7.121
++ Job #7: processing voxels 298389 to 341015; elapsed time=7.135
++ Job #8: processing voxels 341016 to 383642; elapsed time=7.150
++ Job #9: processing voxels 383643 to 426274; elapsed time=7.164
++ Job #0: processing voxels 0 to 42626; elapsed time=7.174
++ voxel loop:0123456789.0123456789.0123456789.0123456789.012345678++ Job #2 finished; elapsed time=17.939
++ Job #3 finished; elapsed time=17.945
++ Job #6 finished; elapsed time=17.960
++ Job #1 finished; elapsed time=17.968
++ Job #4 finished; elapsed time=17.974
9.
++ Job #0 waiting for children to finish; elapsed time=18.016
++ Job #7 finished; elapsed time=18.062
++ Job #8 finished; elapsed time=18.073
++ Job #5 finished; elapsed time=18.151
++ Job #9 finished; elapsed time=18.171
++ Job #0 now finishing up; elapsed time=18.188
++ Smallest FDR q [0 Full_Fstat] = 1.24524e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 4.26334e-13
++ Smallest FDR q [3 uns1_Fstat] = 4.26312e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 9.05432e-14
++ Smallest FDR q [6 uns2_Fstat] = 9.05281e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 7.10316e-11
++ Smallest FDR q [9 uns3_Fstat] = 7.10377e-11
++ Smallest FDR q [11 str1#0_Tstat] = 3.0888e-11
++ Smallest FDR q [12 str1_Fstat] = 3.089e-11
++ Smallest FDR q [14 str2#0_Tstat] = 4.69158e-14
++ Smallest FDR q [15 str2_Fstat] = 4.69022e-14
++ Smallest FDR q [17 str3#0_Tstat] = 1.11862e-10
++ Smallest FDR q [18 str3_Fstat] = 1.11863e-10
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 3.48111e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 3.48044e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 2.48892e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 2.48864e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 2.51816e-08
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 2.51771e-08
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 3.36121e-05
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 3.36058e-05
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 7.45365e-05
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 7.45225e-05
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.97486e-11
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.97444e-11
++ Wrote bucket dataset into ./stats.tb0169+orig.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0169+orig.BRIK
++ Wrote 3D+time dataset into ./errts.tb0169+orig.BRIK
++ Program finished; elapsed time=34.642
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.758       0.821  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.746       0.812  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  high:         0.725       0.783  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  medium:       0.485       0.553  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.444       0.525  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.435       0.513  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.408      -0.390  (10 vs. 17)  Run#3Pol#2  vs.  str3#0
  medium:      -0.407       0.000  ( 4 vs. 15)  Run#2Pol#0  vs.  str1#0
  medium:      -0.407      -0.357  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0
  medium:      -0.401       0.000  ( 0 vs. 16)  Run#1Pol#0  vs.  str2#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb03.tb0169.r01.blur+orig.HEAD pb03.tb0169.r02.blur+orig.HEAD pb03.tb0169.r03.blur+orig.HEAD -fout -tout -Rbuck stats.tb0169_REML -Rvar stats.tb0169_REMLvar -Rfitts fitts.tb0169_REML -Rerrts errts.tb0169_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 426275 voxels
++ FDR automask has 52671 voxels (out of 426275 = 12.4%)
++ -----  matrix condition (392x24):  3.78175  ++ VERY GOOD ++
 + masked off 246224 voxels for being all zero; 180051 left in mask
++ Converting input dataset to vector image
 +  dataset = 384 million [mega] bytes
 +  vectim  = 325 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=8.22
 + X matrix: 46.577% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=392 cols=24; 109*1 cases; total CPU=0.00 Elapsed=8.24
 +  average case bandwidth = 11.41
++ REML voxel loop: [6 threads]0123456789.0123456789.01
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=47.94
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=94.82
++ Output dataset ./stats.tb0169_REMLvar+orig.BRIK
++ Output dataset ./fitts.tb0169_REML+orig.BRIK
++ Output dataset ./errts.tb0169_REML+orig.BRIK
++ creating FDR curves in dataset stats.tb0169_REML+orig
++ Smallest FDR q [0 Full_Fstat] = 2.63392e-11
++ Smallest FDR q [2 uns1#0_Tstat] = 3.99021e-05
++ Smallest FDR q [3 uns1_Fstat] = 3.99021e-05
++ Smallest FDR q [5 uns2#0_Tstat] = 2.53873e-06
++ Smallest FDR q [6 uns2_Fstat] = 2.53873e-06
[7m*+ WARNING:[0m Smallest FDR q [8 uns3#0_Tstat] = 0.2079 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [9 uns3_Fstat] = 0.2079 ==> few true single voxel detections
++ Smallest FDR q [11 str1#0_Tstat] = 0.00014066
++ Smallest FDR q [12 str1_Fstat] = 0.00014066
++ Smallest FDR q [14 str2#0_Tstat] = 1.13014e-07
++ Smallest FDR q [15 str2_Fstat] = 1.13013e-07
++ Smallest FDR q [17 str3#0_Tstat] = 0.0013804
++ Smallest FDR q [18 str3_Fstat] = 0.0013804
++ Smallest FDR q [20 unstructured#0_Tstat] = 1.5292e-11
++ Smallest FDR q [21 unstructured_Fstat] = 1.52919e-11
++ Smallest FDR q [23 structured#0_Tstat] = 1.03767e-11
++ Smallest FDR q [24 structured_Fstat] = 1.03767e-11
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.34722 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.34722 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.999883 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.999883 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.446659 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.446659 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.0842622
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.0842622
 + Added 25 FDR curves to dataset stats.tb0169_REML+orig
++ Output dataset ./stats.tb0169_REML+orig.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=112.26
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0169 pb03.tb0169.r01.blur+orig.HEAD pb03.tb0169.r02.blur+orig.HEAD pb03.tb0169.r03.blur+orig.HEAD
++ 3dTcat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ elapsed time = 2.1 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0169+orig[0..41,44..54,58..94,99..136,140..144,147..237,240..242,249..291,296..326,329..378,383..385,390..408,411..418,424..428,434,443..447]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+orig.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0169_REML+orig[0..41,44..54,58..94,99..136,140..144,147..237,240..242,249..291,296..326,329..378,383..385,390..408,411..418,424..428,434,443..447]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+orig.BRIK
3dcalc -a rm.signal.all+orig -b rm.noise.all+orig -c full_mask.tb0169+orig -expr c*a/b -prefix TSNR.tb0169
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0169_REML+orig
++ 3dTnorm: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+orig.BRIK
3dmaskave -quiet -mask full_mask.tb0169+orig rm.errts.unit+orig
++ 3dmaskave: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
+++ 61149 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.272207
3dcalc -a rm.errts.unit+orig -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+orig.BRIK
3dTstat -sum -prefix corr_brain rm.DP+orig
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+orig.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0169.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..41,44..54,58..94,99..136,140..144,147..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0169+orig[0..41,44..54,58..94,99..136,140..144,147..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 61149
[7m*+ WARNING:[0m removed 322 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 136 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.00 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..237,240..242,249..291,296..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0169+orig[150..237,240..242,249..291,296..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 61149
[7m*+ WARNING:[0m removed 322 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 138 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.42 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..326,329..378,383..385,390..408,411..418,424..428,434,443..447 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+orig -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0169+orig[300..326,329..378,383..385,390..408,411..418,424..428,434,443..447]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 61149
[7m*+ WARNING:[0m removed 322 voxels from mask because they are constant in time
++ detrending start: 9 baseline funcs, 118 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 31.23 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 10.6337 9.83769 10.4408 10.2984
average errts FWHM blurs: 10.6337 9.83769 10.4408 10.2984
echo 10.6337 9.83769 10.4408 10.2984   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.460931 7.15185 13.1125 17.321
average errts ACF blurs: 0.460931 7.15185 13.1125 17.321
echo 0.460931 7.15185 13.1125 17.321   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..41,44..54,58..94,99..136,140..144,147..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0169_REML+orig[0..41,44..54,58..94,99..136,140..144,147..149]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 61149
[7m*+ WARNING:[0m removed 322 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 136 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.55 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..237,240..242,249..291,296..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0169_REML+orig[150..237,240..242,249..291,296..299]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 61149
[7m*+ WARNING:[0m removed 322 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 138 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.38 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..326,329..378,383..385,390..408,411..418,424..428,434,443..447 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+orig -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0169_REML+orig[300..326,329..378,383..385,390..408,411..418,424..428,434,443..447]
++ 3dFWHMx: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 61149
[7m*+ WARNING:[0m removed 322 voxels from mask because they are constant in time
++ detrending start: 9 baseline funcs, 118 time points
 + detrending done (0.00 CPU s thus far)
++ start FWHM calculations
 + FWHM done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 30.83 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 10.538 9.7356 10.3399 10.1987
average err_reml FWHM blurs: 10.538 9.7356 10.3399 10.1987
echo 10.538 9.7356 10.3399 10.1987   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.459569 7.21674 12.8817 17.3008
average err_reml ACF blurs: 0.459569 7.21674 12.8817 17.3008
echo 0.459569 7.21674 12.8817 17.3008   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0169.1D
3dClustSim -both -mask full_mask.tb0169+orig -acf 0.459569 7.21674 12.8817 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 61149 voxels in mask (14.34% of total)
++ Kernel function radius = 42.47 mm
++ ACF(0.46,7.22,12.88) => FWHM=17.31 => 85x85x59 pads to 120x120x96
 + Kernel image dimensions 59 x 59 x47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 550.4 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0169+orig stats.tb0169_REML+orig
++ 3drefit: AFNI version=AFNI_17.2.03 (Jul 20 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0169+orig
++ applying attributes
++ Processing AFNI dataset stats.tb0169_REML+orig
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0169 -dsets pb00.tb0169.r01.tcat+orig.HEAD pb00.tb0169.r02.tcat+orig.HEAD pb00.tb0169.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+orig.BRIK rm.DP+orig.HEAD rm.epi.1.r01+orig.BRIK.gz rm.epi.1.r01+orig.HEAD rm.epi.1.r02+orig.BRIK.gz rm.epi.1.r02+orig.HEAD rm.epi.1.r03+orig.BRIK.gz rm.epi.1.r03+orig.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+orig.BRIK.gz rm.epi.mean+orig.HEAD rm.epi.min.r01+orig.BRIK.gz rm.epi.min.r01+orig.HEAD rm.epi.min.r02+orig.BRIK.gz rm.epi.min.r02+orig.HEAD rm.epi.min.r03+orig.BRIK.gz rm.epi.min.r03+orig.HEAD rm.epi.nomask.r01+orig.BRIK rm.epi.nomask.r01+orig.HEAD rm.epi.nomask.r02+orig.BRIK rm.epi.nomask.r02+orig.HEAD rm.epi.nomask.r03+orig.BRIK rm.epi.nomask.r03+orig.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+orig.BRIK rm.errts.unit+orig.HEAD rm.mask_r01+orig.BRIK.gz rm.mask_r01+orig.HEAD rm.mask_r02+orig.BRIK.gz rm.mask_r02+orig.HEAD rm.mask_r03+orig.BRIK.gz rm.mask_r03+orig.HEAD rm.noise.all+orig.BRIK rm.noise.all+orig.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb03.tb0169.r01.blur+orig.BRIK rm.pb03.tb0169.r01.blur+orig.HEAD rm.pb03.tb0169.r02.blur+orig.BRIK rm.pb03.tb0169.r02.blur+orig.HEAD rm.pb03.tb0169.r03.blur+orig.BRIK rm.pb03.tb0169.r03.blur+orig.HEAD rm.resam.anat+orig.BRIK.gz rm.resam.anat+orig.HEAD rm.signal.all+orig.BRIK rm.signal.all+orig.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0169.txt
./@ss_review_basic

subject ID                : tb0169
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0169+orig.HEAD
final stats dset          : stats.tb0169_REML+orig.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 40
average motion (per TR)   : 0.117087
average censored motion   : 0.0744298
max motion displacement   : 2.62335
max censored displacement : 1.49118
outlier limit             : 0.1
average outlier frac (TR) : 0.0100268
num TRs above out limit   : 14

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 136 138 118
num TRs per run (censored): 14 12 32
fraction censored per run : 0.0933333 0.08 0.213333
TRs total (uncensored)    : 450
TRs total                 : 392
degrees of freedom used   : 24
degrees of freedom left   : 368

TRs censored              : 58
censor fraction           : 0.128889
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 12 10 12 9 7 25
fraction TRs censored     : 0.176 0.147 0.176 0.081 0.063 0.225
ave mot per sresp (orig)  : 0.121715 0.111129 0.144364 0.086111 0.089507 0.165642
ave mot per sresp (cens)  : 0.075057 0.060138 0.077825 0.067181 0.068325 0.084937

TSNR average              : 250.158
global correlation (GCOR) : 0.272207
anat/EPI mask Dice coef   : 0.91319
maximum F-stat (masked)   : 15.5457
blur estimates (ACF)      : 0.459569 7.21674 12.8817
blur estimates (FWHM)     : 10.538 9.7356 10.3399


cd ..
echo execution finished: `date`
date
execution finished: Tue Aug  8 22:32:43 EDT 2017
