echo auto-generated by afni_proc.py, Wed Dec 27 16:23:13 2017
auto-generated by afni_proc.py, Wed Dec 27 16:23:13 2017
echo (version 6.02, December 12, 2017)
(version 6.02, December 12, 2017)
echo execution started: `date`
date
execution started: Wed Dec 27 16:23:13 EST 2017
afni -ver
Precompiled binary linux_openmp_64: Dec 22 2017 (Version AFNI_17.3.09)
afni_history -check_date 23 Sep 2016
-- is current: afni_history as new as: 23 Sep 2016
               most recent entry is:   22 Dec 2017
if ( 0 ) then
if ( 0 > 0 ) then
set subj = tb0169
endif
set output_dir = tb0169.srtt_v2
if ( -d tb0169.srtt_v2 ) then
set runs = ( `count -digits 2 1 3` )
count -digits 2 1 3
mkdir tb0169.srtt_v2
mkdir tb0169.srtt_v2/stimuli
cp stim_times/stim_times_srtt/bl1_c1_unstr.txt stim_times/stim_times_srtt/bl2_c1_unstr.txt stim_times/stim_times_srtt/bl3_c1_unstr.txt stim_times/stim_times_srtt/bl1_c2_str.txt stim_times/stim_times_srtt/bl2_c2_str.txt stim_times/stim_times_srtt/bl3_c2_str.txt tb0169.srtt_v2/stimuli
3dcopy anat/Sag3DMPRAGEs002a1001.nii.gz tb0169.srtt_v2/Sag3DMPRAGEs002a1001
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dTcat -prefix tb0169.srtt_v2/pb00.tb0169.r01.tcat func_srtt/ep2dbold156s004a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 0.7 s
3dTcat -prefix tb0169.srtt_v2/pb00.tb0169.r02.tcat func_srtt/ep2dbold156s006a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 0.6 s
3dTcat -prefix tb0169.srtt_v2/pb00.tb0169.r03.tcat func_srtt/ep2dbold156s008a001.nii.gz[6..$]
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 0.6 s
set tr_counts = ( 150 150 150 )
cd tb0169.srtt_v2
touch out.pre_ss_warn.txt
foreach run ( 01 02 03 )
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0169.r01.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r01.tcat+orig.BRIK is 12.900002 degrees from plumb.
++ 29341 voxels passed mask/clip
1deval -a outcount.r01.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r01.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0169.r02.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r02.tcat+orig.BRIK is 12.900002 degrees from plumb.
++ 29343 voxels passed mask/clip
1deval -a outcount.r02.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r02.1D{0} -expr step(a-0.4)
end
3dToutcount -automask -fraction -polort 3 -legendre pb00.tb0169.r03.tcat+orig
++ 3dToutcount: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r03.tcat+orig.BRIK is 12.900002 degrees from plumb.
++ 29439 voxels passed mask/clip
1deval -a outcount.r03.1D -expr 1-step(a-0.1)
if ( `1deval -a outcount.r$run.1D"{0}" -expr "step(a-0.4)"` ) then
1deval -a outcount.r03.1D{0} -expr step(a-0.4)
end
cat outcount.r01.1D outcount.r02.1D outcount.r03.1D
cat rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D
foreach run ( 01 02 03 )
3dDespike -NEW -nomask -prefix pb01.tb0169.r01.despike pb00.tb0169.r01.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r01.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r01.tcat+orig.BRIK is 12.900002 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb0169.r01.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #1
++ start OpenMP thread #3
++ start OpenMP thread #4
........................................................
++ Elapsed despike time =  1s 668ms

++ FINAL: 19353600 data points, 835708 edits [4.318%], 98152 big edits [0.507%]
++ Output dataset ./pb01.tb0169.r01.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb0169.r02.despike pb00.tb0169.r02.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r02.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r02.tcat+orig.BRIK is 12.900002 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb0169.r02.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #0
++ start OpenMP thread #3
++ start OpenMP thread #1
++ start OpenMP thread #2
++ start OpenMP thread #4
++ start OpenMP thread #5
........................................................
++ Elapsed despike time =  1s 649ms

++ FINAL: 19353600 data points, 829479 edits [4.286%], 112661 big edits [0.582%]
++ Output dataset ./pb01.tb0169.r02.despike+orig.BRIK
end
3dDespike -NEW -nomask -prefix pb01.tb0169.r03.despike pb00.tb0169.r03.tcat+orig
++ 3dDespike: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb00.tb0169.r03.tcat+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb00.tb0169.r03.tcat+orig.BRIK is 12.900002 degrees from plumb.
++ Input dataset is in short format, but output will be in float format
++ ignoring first 0 time points, using last 150
++ using 150 time points => -corder 5
++ Loading dataset pb00.tb0169.r03.tcat+orig
++ processing all 131072 voxels in dataset
++ Procesing time series with NEW model fit algorithm
++ smash edit thresholds: 3.1 .. 5.0 MADs
 +   [ 3.457% .. 0.072% of normal distribution]
 +   [ 8.839% .. 3.125% of Laplace distribution]
++ start OpenMP thread #2
++ start OpenMP thread #0
++ start OpenMP thread #5
++ start OpenMP thread #1
++ start OpenMP thread #4
++ start OpenMP thread #3
........................................................
++ Elapsed despike time =  1s 605ms

++ FINAL: 19353600 data points, 958551 edits [4.953%], 187097 big edits [0.967%]
++ Output dataset ./pb01.tb0169.r03.despike+orig.BRIK
end
foreach run ( 01 02 03 )
3dTshift -tzero 0 -quintic -prefix pb02.tb0169.r01.tshift -tpattern alt+z2 pb01.tb0169.r01.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0169.r01.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0169.r01.despike+orig.BRIK is 12.900002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb0169.r02.tshift -tpattern alt+z2 pb01.tb0169.r02.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0169.r02.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0169.r02.despike+orig.BRIK is 12.900002 degrees from plumb.
end
3dTshift -tzero 0 -quintic -prefix pb02.tb0169.r03.tshift -tpattern alt+z2 pb01.tb0169.r03.despike+orig
++ 3dTshift: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb01.tb0169.r03.despike+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb01.tb0169.r03.despike+orig.BRIK is 12.900002 degrees from plumb.
end
3dbucket -prefix vr_base pb02.tb0169.r01.tshift+orig[0]
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 -epi_strip 3dAutomask -giant_move -volreg off -tshift off
#++ align_epi_anat version: 1.57
#++ turning off volume registration
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./vr_base+orig
#Script is running (command trimmed):
  3dAttribute DELTA ./Sag3DMPRAGEs002a1001+orig
#++ Multi-cost is lpc
#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*
#Script is running (command trimmed):
  3dcopy ./Sag3DMPRAGEs002a1001+orig ./__tt_Sag3DMPRAGEs002a1001+orig
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Removing skull from anat data
#Script is running (command trimmed):
  3dSkullStrip -orig_vol -input ./__tt_Sag3DMPRAGEs002a1001+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns
Warning 3dSkullStrip:****************
 Surface self intersecting! trying again:
 smoothing of 84, avoid_vent -1
#Script is running (command trimmed):
  3dinfo ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/__tt_Sag3DMPRAGEs002a1001_ns+orig is not oblique
#Script is running (command trimmed):
  3dinfo ./vr_base+orig | \grep 'Data Axes Tilt:'|\grep 'Oblique'
#++ Dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/vr_base+orig is ***oblique****
#Script is running (command trimmed):
  3dAttribute DELTA ./__tt_Sag3DMPRAGEs002a1001_ns+orig
#++ Spacing for anat to oblique epi alignment is 1.000000
#++ Matching obliquity of anat to epi
#Script is running (command trimmed):
  3dWarp -verb -card2oblique ./vr_base+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob -newgrid 1.000000 ./__tt_Sag3DMPRAGEs002a1001_ns+orig | \grep -A 4 '# mat44 Obliquity Transformation ::' > ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
#++ using 0th sub-brick because only one found
#Script is running (command trimmed):
  3dbucket -prefix ./__tt_vr_base_ts ./vr_base+orig'[0]'
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ removing skull or area outside brain
#Script is running (command trimmed):
  3dAutomask -apply_prefix ./__tt_vr_base_ts_ns ./__tt_vr_base_ts+orig
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts+orig.BRIK is 12.900002 degrees from plumb.
++ Loading dataset ./__tt_vr_base_ts+orig
++ Forming automask
 + Fixed clip level = 378.865845
 + Used gradual clip level = 342.889496 .. 427.199036
 + Number voxels above clip level = 29628
 + Clustering voxels ...
 + Largest cluster has 29287 voxels
 + Clustering voxels ...
 + Largest cluster has 29038 voxels
 + Filled   263 voxels in small holes; now have 29301 voxels
 + Filled     3 voxels in large holes; now have 29304 voxels
 + Clustering voxels ...
 + Largest cluster has 29302 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 101766 voxels
 + Mask now has 29306 voxels
++ 29306 voxels in the mask [out of 131072: 22.36%]
++ first  13 x-planes are zero [from R]
++ last   14 x-planes are zero [from L]
++ first   4 y-planes are zero [from P]
++ last    6 y-planes are zero [from A]
++ first   0 z-planes are zero [from I]
++ last    2 z-planes are zero [from S]
++ applying mask to original data
++ Writing masked data
++ Output dataset ./__tt_vr_base_ts_ns+orig.BRIK
++ CPU time = 0.000000 sec
#++ Computing weight mask
#Script is running (command trimmed):
  3dBrickStat -automask -percentile 90.000000 1 90.000000 ./__tt_vr_base_ts_ns+orig
#++ Applying threshold of 937.296204 on /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/__tt_vr_base_ts_ns+orig
#Script is running (command trimmed):
  3dcalc -datum float -prefix ./__tt_vr_base_ts_ns_wt -a ./__tt_vr_base_ts_ns+orig -expr 'min(1,(a/937.296204))'
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ././__tt_vr_base_ts_ns_wt+orig.BRIK
#++ Aligning anat data to epi data
#Script is running (command trimmed):
  3dAllineate -lpc -wtprefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal -weight ./__tt_vr_base_ts_ns_wt+orig -source ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig -prefix ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk -base ./__tt_vr_base_ts_ns+orig -cmass -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2 
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns_wt+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns_wt+orig.BRIK is 12.900002 degrees from plumb.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.900002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns_ob+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
++ 1603364 voxels in -source_automask+2
++ Zero-pad: zbot=4 ztop=2
++ 29306 voxels [18.8%] in weight mask
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_al_junk_wtal+orig.BRIK
++ Number of points for matching = 29306
++ NOTE: base and source coordinate systems have different handedness
 +       Orientations: base=Left handed (RPI); source=Right handed (RAI)
++ Local correlation: blok type = 'RHDD(13.3763)'
++ base center of mass = 31.136 28.515 18.595 (index)
 + source center of mass = 85.833 166.396 179.803 (index)
 + source-target CM = -0.894 0.424 -3.999 (xyz)
 + center of mass shifts = -0.894 0.424 -3.999
++ shift param auto-range: -70.4..68.6 -69.1..69.9 -51.5..43.5
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.894287 .. 9.105713
 + Range param#2 [y-shift] = -9.576454 .. 10.423546
 + Range param#3 [z-shift] = -13.999016 .. 6.000984
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.894287 .. 39.105713
 + Range param#2 [y-shift] = -39.576454 .. 40.423546
 + Range param#3 [z-shift] = -43.999016 .. 36.000984
 + 12 free parameters
++ Normalized convergence radius = 0.000462
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ======= Allineation of 1 sub-bricks using Local Pearson Correlation Signed =======
 + source mask has 1603364 [out of 16587824] voxels
 + base mask has 40511 [out of 155648] voxels
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
++ *** Coarse pass begins ***
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - Smoothing base; radius=4.00
 + - Smoothing source; radius=4.00
 + !source mask fill: ubot=79 usiz=182
 + - copying weight image
 + - using 29306 points from base image [use_all=2]
 + * Exit alignment setup routine
 + - Search for coarse starting parameters
 + 24918 total points stored in 232 'RHDD(13.9615)' bloks
 + - number of free params = 6
 + - Testing (64+61)*64 params:#oo--+o.--o...o.-o+-.-$- + - best 45 costs found:
    0 v=-0.053716:  -0.89   0.42  -4.00   0.00   0.00   0.00  [grid]
    1 v=-0.044589: -14.23 -12.91   9.33 -15.00 -30.00  15.00  [grid]
    2 v=-0.039207: -14.23  27.09 -17.33 -15.00  30.00  15.00  [grid]
    3 v=-0.039005: -17.75 -18.16  10.45 -19.57 -37.09  16.59  [rand]
    4 v=-0.038721: -27.56 -12.91   9.33 -30.00 -15.00  30.00  [grid]
    5 v=-0.038001: -14.23 -26.24   9.33 -15.00 -30.00  15.00  [grid]
    6 v=-0.035414: -14.23 -26.24   9.33 -30.00 -30.00  15.00  [grid]
    7 v=-0.034500: -27.56 -12.91   9.33 -15.00 -15.00  15.00  [grid]
    8 v=-0.034181: -14.23 -12.91   9.33 -15.00 -15.00  15.00  [grid]
    9 v=-0.032461: -10.72 -24.34   7.38  -3.10 -34.36   2.55  [rand]
   10 v=-0.032204: -14.92 -15.30  10.67 -24.25 -37.55   4.41  [rand]
   11 v=-0.031703: -27.56 -26.24   9.33 -15.00 -30.00  30.00  [grid]
   12 v=-0.030188: -27.56 -12.91   9.33 -30.00 -30.00  15.00  [grid]
   13 v=-0.029910: -23.75 -23.15   6.42  -5.91 -29.74  29.45  [rand]
   14 v=-0.029777:  21.46 -15.96 -19.83  41.11 -22.86   3.97  [rand]
   15 v=-0.029683: -32.73  12.22  -6.74  23.31   3.26  40.47  [rand]
   16 v=-0.029600:   3.18   6.65   3.80  -4.32 -22.85 -18.95  [rand]
   17 v=-0.029267: -20.39  17.09  -6.60 -30.54  19.59  20.03  [rand]
   18 v=-0.029173:  -9.54  20.86  13.47 -25.20  18.50  13.54  [rand]
   19 v=-0.029109: -27.56 -26.24  22.67 -30.00 -15.00  30.00  [grid]
   20 v=-0.028828: -27.56  13.76  22.67 -30.00 -15.00  30.00  [grid]
   21 v=-0.028673:  18.60  17.09  -6.60  30.54 -19.59 -20.03  [rand]
   22 v=-0.028563: -14.23  27.09 -17.33 -15.00 -15.00  15.00  [grid]
   23 v=-0.028028:  -9.54 -20.01  13.47  25.20 -18.50 -13.54  [rand]
   24 v=-0.027482:   3.18   6.65   3.80   4.32 -22.85 -18.95  [rand]
   25 v=-0.027280:  10.70  -4.13  -0.10  24.53 -29.49 -26.10  [rand]
   26 v=-0.027262:  25.77 -12.91   9.33  30.00 -15.00 -30.00  [grid]
   27 v=-0.026966:  25.77  27.09  22.67 -30.00  30.00 -30.00  [grid]
   28 v=-0.026715: -14.23  27.09 -17.33 -15.00  30.00  30.00  [grid]
   29 v=-0.026694: -32.73  12.22  -1.26  23.31   3.26  40.47  [rand]
   30 v=-0.026486: -35.69 -13.36  30.01 -10.62  -7.10 -10.42  [rand]
   31 v=-0.026447: -21.87 -27.96  28.25  -3.65 -28.33  14.78  [rand]
   32 v=-0.026401:  25.41  26.38  13.79  15.82  17.65 -37.25  [rand]
   33 v=-0.026262: -27.56 -12.91   9.33  30.00 -15.00  30.00  [grid]
   34 v=-0.025928: -27.56 -12.91  22.67 -30.00 -30.00  30.00  [grid]
   35 v=-0.025920: -14.23  13.76   9.33 -15.00  15.00  15.00  [grid]
   36 v=-0.025198:  31.31 -28.62  32.14 -40.41 -19.09 -40.75  [rand]
   37 v=-0.025129: -14.23 -26.24   9.33  30.00 -30.00 -15.00  [grid]
   38 v=-0.024594:  12.44 -26.24  22.67 -15.00 -30.00 -30.00  [grid]
   39 v=-0.024423: -14.23 -12.91   9.33 -30.00 -30.00 -15.00  [grid]
   40 v=-0.024334: -27.56  13.76   9.33  15.00  15.00  30.00  [grid]
   41 v=-0.024289: -27.56 -26.24   9.33 -30.00 -30.00  15.00  [grid]
   42 v=-0.024233: -27.56 -12.91  22.67 -30.00 -15.00  30.00  [grid]
   43 v=-0.024209:  25.77 -26.24  22.67  30.00 -15.00 -30.00  [grid]
   44 v=-0.024179: -10.72  25.18 -15.38  -3.10  34.36   2.55  [rand]
*[#8004=-0.326522] *[#8012=-0.343409] *[#8013=-0.355183] *[#8015=-0.384959] *[#8016=-0.401338] *[#8019=-0.419484] *[#8021=-0.426907] *[#8023=-0.435687]  + - costs of the above after a little optimization:
  * 0 v=-0.435687:   0.29  -0.45  -0.16  -0.57   0.25  -0.31  [grid]
    1 v=-0.062904: -15.65 -13.44   9.16 -17.00 -22.19  11.60  [grid]
    2 v=-0.052560: -13.78  27.49 -18.79 -18.45  28.96  21.58  [grid]
    3 v=-0.054654: -17.88 -27.11   7.94 -18.31 -32.71  10.89  [rand]
    4 v=-0.045689: -23.92 -13.42   9.49 -29.42 -14.40  29.48  [grid]
    5 v=-0.063727: -13.30 -26.28   8.95 -10.02 -32.02  15.32  [grid]
    6 v=-0.053584: -17.09 -23.64   8.59 -25.58 -33.46   7.19  [grid]
    7 v=-0.052546: -22.94 -13.26   8.89 -15.23 -16.20  15.05  [grid]
    8 v=-0.063596: -19.12 -14.70   8.46 -12.78 -16.51  12.59  [grid]
    9 v=-0.048697:  -5.31 -25.68   9.38  -2.73 -33.56   1.65  [rand]
   10 v=-0.056499: -14.55 -23.26   8.63 -29.98 -33.64   4.80  [rand]
   11 v=-0.047489: -27.42 -30.33   8.83 -15.40 -30.63  29.67  [grid]
   12 v=-0.038981: -23.66 -12.97  10.93 -29.42 -28.68  14.39  [grid]
   13 v=-0.038675: -20.45 -24.43   7.87  -6.50 -29.75  26.21  [rand]
   14 v=-0.033108:  21.96 -15.95 -19.81  40.83 -18.62   4.23  [rand]
   15 v=-0.045907: -32.82  12.35  -5.47  23.93   4.21  44.71  [rand]
   16 v=-0.047398:   0.14   2.05   2.92  -4.35 -19.75 -16.53  [rand]
   17 v=-0.043486: -20.43  17.15  -6.95 -33.12  16.66  17.86  [rand]
   18 v=-0.041161:  -9.28  20.75  11.93 -25.92  18.80  16.47  [rand]
   19 v=-0.030416: -27.34 -27.08  22.81 -25.13 -14.63  29.93  [grid]
   20 v=-0.031460: -26.09  14.88  22.97 -28.83 -14.59  30.14  [grid]
   21 v=-0.030628:  17.64  16.45  -7.29  28.73 -20.62 -23.11  [rand]
   22 v=-0.032752: -14.94  27.41 -18.01 -15.81 -15.34  19.22  [grid]
   23 v=-0.042946: -10.03 -16.03  12.31  24.12 -17.01 -13.48  [rand]
   24 v=-0.040316:  -0.40   5.87   3.19   2.54 -22.06 -16.74  [rand]
   25 v=-0.032124:   9.77  -4.34   1.02  24.46 -28.41 -19.92  [rand]
   26 v=-0.030690:  25.37 -13.53   8.35  29.13 -16.05 -31.59  [grid]
   27 v=-0.030423:  24.29  26.86  22.89 -29.55  30.15 -25.61  [grid]
   28 v=-0.048430: -17.86  30.04 -20.99 -21.10  27.57  28.43  [grid]
   29 v=-0.049273: -33.72  11.83  -3.03  28.60   4.63  42.66  [rand]
   30 v=-0.031598: -37.22 -13.65  30.13 -11.77  -6.68  -9.30  [rand]
   31 v=-0.039669: -20.96 -27.43  28.20  -3.54 -30.08  17.47  [rand]
   32 v=-0.031373:  24.64  26.64  13.54  15.00  14.33 -40.55  [rand]
   33 v=-0.030459: -27.03 -12.60   9.64  33.96 -14.88  29.76  [grid]
   34 v=-0.036504: -27.62 -13.83  21.69 -31.42 -31.10  34.92  [grid]
   35 v=-0.071763: -15.67  12.58   1.12 -15.83   5.86  13.36  [grid]
   36 v=-0.026918:  31.45 -27.69  32.42 -40.37 -19.11 -40.90  [rand]
   37 v=-0.027523: -13.17 -26.82   7.04  29.42 -33.27  -9.24  [grid]
   38 v=-0.031825:  11.67 -27.10  26.81 -14.44 -29.09 -28.73  [grid]
   39 v=-0.033157: -13.42  -7.95   9.96 -29.42 -28.93 -15.57  [grid]
   40 v=-0.043795: -27.32  14.78   5.33  18.02  14.96  33.60  [grid]
   41 v=-0.035998: -27.45 -22.12   8.13 -31.17 -30.89  15.12  [grid]
   42 v=-0.032367: -26.52 -12.91  23.21 -31.41  -4.26  31.47  [grid]
   43 v=-0.031172:  27.62 -26.33  22.53  29.41 -14.87 -26.98  [grid]
   44 v=-0.036573:  -9.79  24.66 -18.16  -7.67  32.60   0.64  [rand]
 + - save # 0 for twobest
 + - save #35 for twobest
 + - save # 5 for twobest
 + - save # 8 for twobest
 + - save # 1 for twobest
 + - save #10 for twobest
 + - save # 3 for twobest
 + - skip # 6 for twobest: too close to set #10
 + - save # 2 for twobest
 + - skip # 7 for twobest: too close to set # 8
 + - save #29 for twobest
 + - save # 9 for twobest
 + - save #28 for twobest
 + - save #11 for twobest
 + - save #16 for twobest
 + - save #15 for twobest
 + - save # 4 for twobest
 + - save #40 for twobest
 + - save #17 for twobest
 + - save #23 for twobest
 + - save #18 for twobest
 + - save #24 for twobest
 + - save #31 for twobest
 + - save #12 for twobest
 + - Coarse startup search net CPU time = 0.0 s
++ Start refinement #1 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=3.11
 + - Smoothing source; radius=3.11
 + !source mask fill: ubot=79 usiz=182
 + - retaining old weight image
 + - using 29306 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25383 total points stored in 258 'RHDD(13.7332)' bloks
*[#9523=-0.486408] *[#9545=-0.493177] *[#9546=-0.49391] *[#9551=-0.49498] *[#9552=-0.4963] *[#9553=-0.496304] *[#9555=-0.496495] *[#9557=-0.498773] *[#9560=-0.498984] *[#9561=-0.499346] *[#9562=-0.499999] *[#9565=-0.500359] *[#9570=-0.500428] *[#9574=-0.50095] *[#9576=-0.501463] 
 + - param set #1 has cost=-0.501463
 + -- Parameters = 0.4523 -0.6304 0.1676 -0.3850 -0.2173 -0.0355 1.0019 1.0031 0.9996 -0.0006 0.0002 -0.0000
 + - param set #2 has cost=-0.065237
 + -- Parameters = -15.5350 11.5620 2.3734 -13.8854 5.3424 13.1852 1.0035 1.0130 1.0061 0.0039 0.0032 0.0021
 + - param set #3 has cost=-0.062088
 + -- Parameters = -12.1451 -26.6291 11.0218 -7.7290 -29.8068 8.5257 1.0240 1.0160 0.9926 0.0067 0.0079 0.0060
 + - param set #4 has cost=-0.066032
 + -- Parameters = -17.5133 -13.7329 8.7687 -10.9786 -16.2612 12.9049 1.0000 1.0183 0.9995 0.0031 0.0002 0.0049
 + - param set #5 has cost=-0.084034
 + -- Parameters = -10.8959 -16.8661 8.2063 -10.2604 -18.6379 3.6140 1.0167 1.0273 0.9661 0.0106 0.0043 0.0252
 + - param set #6 has cost=-0.040638
 + -- Parameters = -14.6072 -22.9153 8.9886 -30.0076 -33.5106 4.7245 0.9970 0.9989 0.9968 0.0021 0.0092 -0.0011
 + - param set #7 has cost=-0.044892
 + -- Parameters = -17.7079 -27.4513 8.2547 -18.8803 -32.3392 11.4194 0.9906 0.9955 0.9985 -0.0016 0.0062 0.0024
 + - param set #8 has cost=-0.043621
 + -- Parameters = -13.1831 28.0510 -19.3341 -18.5385 29.5046 21.2667 1.0036 1.0036 1.0038 0.0023 0.0022 0.0112
 + - param set #9 has cost=-0.035266
 + -- Parameters = -33.2220 12.0652 -3.1861 28.3933 4.1629 42.2947 0.9984 0.9986 0.9989 -0.0008 -0.0010 0.0091
 + - param set #10 has cost=-0.066697
 + -- Parameters = -3.6509 -27.7997 7.2171 -2.5503 -25.8343 4.6537 1.0106 0.9902 1.0066 0.0053 0.0020 0.0027
 + - param set #11 has cost=-0.043587
 + -- Parameters = -18.7266 28.5028 -19.5189 -24.1103 26.9495 29.2723 0.9988 1.0203 1.0098 -0.0045 -0.0015 0.0019
*[#10497=-0.501792] *[#10498=-0.502426] *[#10501=-0.502861] *[#10504=-0.503146] *[#10505=-0.503343] *[#10508=-0.503684] *[#10509=-0.503857] *[#10514=-0.504239] *[#10515=-0.504268] *[#10517=-0.504394] *[#10518=-0.50465] 
 + - param set #12 has cost=-0.504650
 + -- Parameters = 0.4070 -0.5901 -0.0400 -0.3649 -0.1109 0.1837 1.0067 1.0046 0.9877 -0.0024 -0.0049 0.0028
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0322 
 + --- dist(#3,#1) = 0.206 
 + --- dist(#4,#1) = 0.34 
 + --- dist(#5,#1) = 0.224 
 + --- dist(#6,#1) = 0.199 
 + --- dist(#7,#1) = 0.33 
 + --- dist(#8,#1) = 0.358 
 + --- dist(#9,#1) = 0.358 
 + --- dist(#10,#1) = 0.364 
 + --- dist(#11,#1) = 0.371 
 + --- dist(#12,#1) = 0.468 
++ Start refinement #2 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=2.42
 + - Smoothing source; radius=2.42
 + !source mask fill: ubot=79 usiz=182
 + - retaining old weight image
 + - using 29306 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25593 total points stored in 267 'RHDD(13.5933)' bloks
*[#10552=-0.505184] *[#10553=-0.505452] *[#10555=-0.505488] *[#10557=-0.505831] *[#10558=-0.505833] *[#10562=-0.505926] *[#10563=-0.505926] *[#10565=-0.506037] *[#10568=-0.50604] *[#10572=-0.506231] *[#10573=-0.506301] *[#10576=-0.506365] *[#10578=-0.506557] *[#10579=-0.506583] *[#10580=-0.506599] 
 + - param set #1 has cost=-0.506599
 + -- Parameters = 0.4496 -0.6183 0.0263 -0.4326 -0.3312 0.0888 1.0056 1.0150 0.9875 -0.0032 -0.0045 0.0010
*[#10628=-0.507357] *[#10629=-0.507481] *[#10632=-0.507616] *[#10635=-0.507874] *[#10636=-0.508011] *[#10637=-0.508067] *[#10638=-0.508132] *[#10639=-0.508242] *[#10640=-0.508346] *[#10645=-0.508636] *[#10646=-0.508706] *[#10655=-0.50889] *[#10656=-0.508993] *[#10657=-0.509022] *[#10658=-0.509097] 
 + - param set #2 has cost=-0.509097
 + -- Parameters = 0.4693 -0.6274 0.0876 -0.4291 -0.4357 -0.0796 1.0063 1.0140 0.9952 -0.0027 -0.0000 -0.0015
 + - param set #3 has cost=-0.084186
 + -- Parameters = -8.8864 -16.2998 8.2362 -8.5745 -18.5408 3.7925 1.0186 1.0357 0.9654 0.0123 0.0051 0.0327
 + - param set #4 has cost=-0.060609
 + -- Parameters = -3.9022 -27.8200 6.9583 -2.3962 -25.5523 5.1425 1.0234 0.9945 0.9989 0.0037 0.0032 0.0020
 + - param set #5 has cost=-0.060813
 + -- Parameters = -16.4638 -13.5438 8.7921 -9.3047 -16.2753 14.0133 0.9798 1.0188 0.9816 0.0227 -0.0030 -0.0008
 + - param set #6 has cost=-0.080440
 + -- Parameters = -10.8668 9.1392 2.8486 -11.7025 1.4260 6.8206 1.0170 1.0179 0.9804 0.0333 0.0129 0.0116
 + - param set #7 has cost=-0.055623
 + -- Parameters = -12.0321 -26.4641 10.9689 -7.6144 -29.6156 8.5494 1.0234 1.0267 0.9903 0.0062 0.0077 0.0063
 + - param set #8 has cost=-0.033885
 + -- Parameters = -17.8094 -27.4677 8.4108 -18.9359 -32.3177 11.4682 0.9832 0.9944 0.9994 -0.0019 0.0065 0.0100
 + - param set #9 has cost=-0.044654
 + -- Parameters = -13.0425 28.4836 -19.4192 -17.8035 30.5452 14.9753 0.9968 1.0047 1.0024 0.0050 0.0034 0.0044
 + - param set #10 has cost=-0.040314
 + -- Parameters = -18.0068 27.9388 -18.9253 -23.4592 26.8726 30.1056 0.9937 1.0083 0.9906 -0.0033 0.0063 0.0009
 + - param set #11 has cost=-0.030938
 + -- Parameters = -14.5514 -22.9122 8.9395 -29.9817 -33.4944 4.6375 0.9970 0.9982 0.9959 0.0017 0.0093 -0.0007
 + - param set #12 has cost=-0.034812
 + -- Parameters = -32.8766 11.0196 -4.6950 28.3812 5.0513 43.0921 0.9889 0.9817 0.9915 -0.0006 -0.0011 0.0085
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.0208 
 + --- dist(#3,#1) = 0.201 
 + --- dist(#4,#1) = 0.162 
 + --- dist(#5,#1) = 0.212 
 + --- dist(#6,#1) = 0.34 
 + --- dist(#7,#1) = 0.324 
 + --- dist(#8,#1) = 0.364 
 + --- dist(#9,#1) = 0.357 
 + --- dist(#10,#1) = 0.48 
 + --- dist(#11,#1) = 0.354 
 + --- dist(#12,#1) = 0.367 
++ Start refinement #3 on 12 coarse parameter sets
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.88
 + - Smoothing source; radius=1.88
 + !source mask fill: ubot=79 usiz=182
 + - retaining old weight image
 + - using 29306 points from base image [use_all=2]
 + * Exit alignment setup routine
 + 25779 total points stored in 275 'RHDD(13.5079)' bloks
 + - param set #1 has cost=-0.497174
 + -- Parameters = 0.4755 -0.6621 0.1090 -0.4763 -0.4866 -0.1094 1.0057 1.0133 0.9978 -0.0054 0.0012 -0.0032
 + - param set #2 has cost=-0.496803
 + -- Parameters = 0.4544 -0.6455 0.1333 -0.4711 -0.4090 -0.0365 1.0052 1.0131 0.9987 -0.0048 -0.0005 -0.0015
 + - param set #3 has cost=-0.077549
 + -- Parameters = -8.1524 -14.3502 8.0472 -7.8317 -17.4772 3.4859 1.0212 1.0379 0.9643 0.0072 -0.0008 0.0256
 + - param set #4 has cost=-0.267435
 + -- Parameters = 0.7710 0.2836 2.5130 -0.6132 -0.0990 2.1220 0.9927 1.0729 0.9698 0.0408 0.0154 0.0848
 + - param set #5 has cost=-0.053716
 + -- Parameters = -16.1813 -14.1287 8.7988 -8.1516 -16.8616 13.0073 0.9756 1.0352 0.9846 0.0311 -0.0091 -0.0144
 + - param set #6 has cost=-0.052087
 + -- Parameters = -3.8438 -27.6583 6.7816 -2.5507 -25.7619 4.9128 1.0179 0.9900 0.9990 0.0021 0.0027 0.0061
 + - param set #7 has cost=-0.046733
 + -- Parameters = -11.9188 -26.3126 10.2843 -7.6440 -29.5427 8.7876 1.0223 1.0182 0.9874 0.0088 0.0112 0.0066
 + - param set #8 has cost=-0.040442
 + -- Parameters = -12.2484 28.8558 -19.4062 -17.9093 30.4478 15.4931 0.9985 1.0022 0.9948 0.0047 0.0054 0.0073
 + - param set #9 has cost=-0.038191
 + -- Parameters = -18.0404 28.3518 -18.6997 -23.7009 26.7132 30.8102 0.9729 1.0109 0.9782 -0.0004 0.0091 0.0036
 + - param set #10 has cost=-0.030751
 + -- Parameters = -32.5061 10.7717 -4.9369 26.7614 4.9166 43.3921 0.9836 0.9575 0.9950 -0.0018 -0.0004 0.0081
 + - param set #11 has cost=-0.029492
 + -- Parameters = -18.3760 -25.1760 8.8782 -18.6413 -32.7577 12.1950 0.9800 0.9929 0.9994 -0.0034 0.0048 0.0097
 + - param set #12 has cost=-0.034061
 + -- Parameters = -15.9174 -20.8289 10.2941 -27.1124 -31.2545 4.5119 0.9943 0.9869 0.9739 0.0057 -0.0054 -0.0083
 + - sorting parameter sets by cost
 + -- scanning for distances from #1
 + --- dist(#2,#1) = 0.00808 XXX
 + --- dist(#3,#1) = 0.189 
 + --- dist(#4,#1) = 0.208 
 + --- dist(#5,#1) = 0.337 
 + --- dist(#6,#1) = 0.323 
 + --- dist(#7,#1) = 0.369 
 + --- dist(#8,#1) = 0.363 
 + --- dist(#9,#1) = 0.342 
 + --- dist(#10,#1) = 0.483 
 + --- dist(#11,#1) = 0.359 
 + - cast out 1 parameter set for being too close to best set
 + - Total coarse refinement net CPU time = 0.0 s; 3189 funcs
++ *** Fine pass begins ***
 + * Enter alignment setup routine
 + - Smoothing base; radius=1.00
 + - Smoothing source; radius=1.00
 + !source mask fill: ubot=79 usiz=182
 + - retaining old weight image
 + * Exit alignment setup routine
++ Picking best parameter set out of 12 cases
 + 25704 total points stored in 275 'RHDD(13.4252)' bloks
 + - cost(#1)=-0.503525 *
 + -- Parameters = 0.4755 -0.6621 0.1090 -0.4763 -0.4866 -0.1094 1.0057 1.0133 0.9978 -0.0054 0.0012 -0.0032
 + - cost(#2)=-0.264283  
 + -- Parameters = 0.7710 0.2836 2.5130 -0.6132 -0.0990 2.1220 0.9927 1.0729 0.9698 0.0408 0.0154 0.0848
 + - cost(#3)=-0.072201  
 + -- Parameters = -8.1524 -14.3502 8.0472 -7.8317 -17.4772 3.4859 1.0212 1.0379 0.9643 0.0072 -0.0008 0.0256
 + - cost(#4)=-0.048485  
 + -- Parameters = -16.1813 -14.1287 8.7988 -8.1516 -16.8616 13.0073 0.9756 1.0352 0.9846 0.0311 -0.0091 -0.0144
 + - cost(#5)=-0.051041  
 + -- Parameters = -3.8438 -27.6583 6.7816 -2.5507 -25.7619 4.9128 1.0179 0.9900 0.9990 0.0021 0.0027 0.0061
 + - cost(#6)=-0.044242  
 + -- Parameters = -11.9188 -26.3126 10.2843 -7.6440 -29.5427 8.7876 1.0223 1.0182 0.9874 0.0088 0.0112 0.0066
 + - cost(#7)=-0.038988  
 + -- Parameters = -12.2484 28.8558 -19.4062 -17.9093 30.4478 15.4931 0.9985 1.0022 0.9948 0.0047 0.0054 0.0073
 + - cost(#8)=-0.036612  
 + -- Parameters = -18.0404 28.3518 -18.6997 -23.7009 26.7132 30.8102 0.9729 1.0109 0.9782 -0.0004 0.0091 0.0036
 + - cost(#9)=-0.030198  
 + -- Parameters = -15.9174 -20.8289 10.2941 -27.1124 -31.2545 4.5119 0.9943 0.9869 0.9739 0.0057 -0.0054 -0.0083
 + - cost(#10)=-0.029431  
 + -- Parameters = -32.5061 10.7717 -4.9369 26.7614 4.9166 43.3921 0.9836 0.9575 0.9950 -0.0018 -0.0004 0.0081
 + - cost(#11)=-0.027824  
 + -- Parameters = -18.3760 -25.1760 8.8782 -18.6413 -32.7577 12.1950 0.9800 0.9929 0.9994 -0.0034 0.0048 0.0097
 + - cost(#12)=-0.060337  
 + -- Parameters = -0.8943 0.4235 -3.9990 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
 + -num_rtb 99 ==> refine all 12 cases
 + - cost(#1)=-0.506482 *
 + -- Parameters = 0.4961 -0.5963 0.1369 -0.4252 -0.4073 -0.1272 1.0057 1.0061 0.9978 -0.0054 0.0015 -0.0029
 + - cost(#2)=-0.448087  
 + -- Parameters = 0.6883 -0.4147 0.2088 -0.5984 1.4282 -0.1311 1.0109 1.0395 0.9914 0.0045 0.0121 0.0428
 + - cost(#3)=-0.078100  
 + -- Parameters = -4.7302 -13.2358 6.6197 -6.9489 -15.4754 1.1147 1.0461 1.0291 0.9559 0.0182 0.0030 0.0257
 + - cost(#4)=-0.048959  
 + -- Parameters = -15.9232 -14.0294 8.7035 -8.2560 -16.8991 12.8658 0.9759 1.0402 0.9849 0.0321 -0.0098 -0.0141
 + - cost(#5)=-0.053060  
 + -- Parameters = -4.6902 -27.9022 5.9393 -3.0728 -25.4934 5.1467 1.0196 0.9848 0.9920 -0.0020 0.0049 0.0043
 + - cost(#6)=-0.045328  
 + -- Parameters = -11.9611 -26.0422 10.6390 -7.5163 -29.3533 8.6938 1.0232 1.0079 0.9854 0.0070 0.0112 0.0071
 + - cost(#7)=-0.039377  
 + -- Parameters = -12.1868 29.1471 -19.4512 -17.9956 30.5409 15.5080 0.9979 1.0040 0.9939 0.0049 0.0057 0.0117
 + - cost(#8)=-0.037246  
 + -- Parameters = -18.0077 28.4051 -18.5688 -23.4813 26.8332 30.6127 0.9749 1.0133 0.9784 0.0007 0.0118 -0.0017
 + - cost(#9)=-0.033266  
 + -- Parameters = -16.1197 -21.8762 9.5554 -27.3522 -31.3662 5.1065 1.0006 0.9782 0.9599 0.0025 -0.0094 -0.0186
 + - cost(#10)=-0.030334  
 + -- Parameters = -32.6007 10.7209 -4.8309 27.0153 4.9251 43.3602 0.9783 0.9623 0.9952 -0.0032 0.0018 0.0034
 + - cost(#11)=-0.029804  
 + -- Parameters = -17.6173 -25.2604 10.5121 -18.7128 -33.0801 12.2344 0.9755 0.9910 0.9951 -0.0027 0.0043 0.0100
 + - cost(#12)=-0.506370  
 + -- Parameters = 0.5076 -0.6345 0.1480 -0.4284 -0.5248 -0.0986 1.0078 1.0063 0.9994 -0.0054 0.0013 -0.0045
 + - case #1 is now the best
 + - Initial  cost = -0.506482
 + - Initial fine Parameters = 0.4961 -0.5963 0.1369 -0.4252 -0.4073 -0.1272 1.0057 1.0061 0.9978 -0.0054 0.0015 -0.0029
 + - Finalish cost = -0.507129 ; 235 funcs
 + - Final    cost = -0.507154 ; 144 funcs
 + Final fine fit Parameters:
       x-shift= 0.5090   y-shift=-0.6193   z-shift= 0.1083
       z-angle=-0.4462   x-angle=-0.6465   y-angle=-0.2777
       x-scale= 1.0051   y-scale= 1.0062   z-scale= 0.9967
     y/x-shear=-0.0056 z/x-shear= 0.0048 z/y-shear=-0.0074
 + - Fine net CPU time = 0.0 s
++ Computing output image
++ image warp: parameters = 0.5090 -0.6193 0.1083 -0.4462 -0.6465 -0.2777 1.0051 1.0062 0.9967 -0.0056 0.0048 -0.0074
++ Output dataset ./__tt_Sag3DMPRAGEs002a1001_ns_ob_temp_al_junk+orig.BRIK
++ Wrote -1Dmatrix_save ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 29.2
++ ###########################################################
++ #   Please check results visually for alignment quality   #
++ ###########################################################
++ #   '-autoweight' is recommended when using -lpc or -lpa  #
++ #   If your results are not good, please try again.       #
++ ###########################################################
#Script is running (command trimmed):
  cat_matvec -ONELINE ./Sag3DMPRAGEs002a1001_al_junk_e2a_only_mat.aff12.1D ./__tt_Sag3DMPRAGEs002a1001_ns_obla2e_mat.1D -I > ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D
#++ Combining anat to epi and oblique transformations
#Script is running (command trimmed):
  3dAllineate -base ./__tt_vr_base_ts_ns+orig -1Dmatrix_apply ./Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -prefix ./Sag3DMPRAGEs002a1001_al_junk -input ./__tt_Sag3DMPRAGEs002a1001_ns+orig -master BASE -mast_dxyz 1.000000 -weight_frac 1.0 -maxrot 6 -maxshf 10 -VERB -warp aff -source_automask+4 -twobest 11 -twopass -VERB -maxrot 45 -maxshf 40 -fineblur 1 -source_automask+2
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./__tt_vr_base_ts_ns+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./__tt_vr_base_ts_ns+orig.BRIK is 12.900002 degrees from plumb.
++ Source dataset: ./__tt_Sag3DMPRAGEs002a1001_ns+orig.HEAD
++ Base dataset:   ./__tt_vr_base_ts_ns+orig.HEAD
++ Loading datasets
 + Range param#4 [z-angle] = -6.000000 .. 6.000000
 + Range param#5 [x-angle] = -6.000000 .. 6.000000
 + Range param#6 [y-angle] = -6.000000 .. 6.000000
 + Range param#1 [x-shift] = -10.000000 .. 10.000000
 + Range param#2 [y-shift] = -10.000000 .. 10.000000
 + Range param#3 [z-shift] = -10.000000 .. 10.000000
 + Range param#4 [z-angle] = -45.000000 .. 45.000000
 + Range param#5 [x-angle] = -45.000000 .. 45.000000
 + Range param#6 [y-angle] = -45.000000 .. 45.000000
 + Range param#1 [x-shift] = -40.000000 .. 40.000000
 + Range param#2 [y-shift] = -40.000000 .. 40.000000
 + Range param#3 [z-shift] = -40.000000 .. 40.000000
++ changing output grid spacing to 1.0000 mm
++ OpenMP thread count = 6
++ ========== Applying transformation to 1 sub-bricks ==========
++ ========== sub-brick #0 ========== [total CPU to here=0.0 s]
 + * Enter alignment setup routine
 + - copying base image
 + - copying source image
 + - no weight image
 + - using 11 points from base image [use_all=0]
 + * Exit alignment setup routine
++ using -1Dmatrix_apply
++ Computing output image
++ image warp: parameters = 0.0021 -0.9816 0.2114 231.1217 -0.0004 0.2210 0.9741 74.6510 -1.0050 -0.0078 -0.0049 197.6338
++ Output dataset ./Sag3DMPRAGEs002a1001_al_junk+orig.BRIK
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 1.2
++ ###########################################################
#++ Creating final output: skullstripped anat data
copying from dataset /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/__tt_Sag3DMPRAGEs002a1001_ns+orig to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dcopy ./__tt_Sag3DMPRAGEs002a1001_ns+orig Sag3DMPRAGEs002a1001_ns
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Creating final output: anat data aligned to epi
# copy is not necessary
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "align_epi_anat.py -anat2epi -anat Sag3DMPRAGEs002a1001+orig \
 -save_skullstrip -suffix _al_junk -epi vr_base+orig -epi_base 0 \
 -epi_strip 3dAutomask -giant_move -volreg off -tshift off" \
 ./Sag3DMPRAGEs002a1001_al_junk+orig

#++ Removing all the temporary files
#Script is running:
  \rm -f ./__tt_vr_base*
#Script is running:
  \rm -f ./__tt_Sag3DMPRAGEs002a1001*

# Finished alignment successfully

auto_warp.py -base MNI_caez_N27+tlrc -input Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no
#++ auto_warp.py version: 0.03
# Output directory /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/awpy/
#Script is running (command trimmed):
  mkdir ./awpy/
cd /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/awpy/
#Script is running (command trimmed):
  3dcopy /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/Sag3DMPRAGEs002a1001_ns+orig ./anat.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#Script is running (command trimmed):
  3dUnifize -GM -input ./anat.nii -prefix ./anat.un.nii
++ 3dUnifize: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
 + Pre-processing: ADV....UWG
++ Output dataset ./anat.un.nii
++ ===== Elapsed = 26.1 sec
#Script is running (command trimmed):
  3dcopy /usr/local/apps/afni/current/linux_openmp_64/MNI_caez_N27+tlrc ./base.nii
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/awpy/anat.un.nii data
#Script is running (command trimmed):
  @auto_tlrc -base ./base.nii -input ./anat.un.nii -suffix .aff -no_ss -no_pre -init_xform CENTER 
Copying NIFTI volume to ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]

Performing center alignment with @Align_Centers

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig
 + deoblique
++ 3drefit processed 1 datasets
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.HEAD
++ THD_rename_dataset_files: rename anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz -> __ats_tmp__anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+orig.BRIK.gz
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+acpc.HEAD doesn't exist!
** THD_rename_dataset_files: old header anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA_shft+tlrc.HEAD doesn't exist!
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Center distance of 0.000000 mm
Padding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp__ref_base.nii_40pad+tlrc.BRIK
Resampling ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Clipping -0.000100 3173.650100 ...
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_NN+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp__resamp_edge_art+tlrc.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Registration (linear final interpolation) ...
++ 3dWarpDrive: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
RMS[0] = 85.4784 47.5769   ITER = 6/137
85.4784

Warping has converged.

++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
Applying brain mask
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ 3dWarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK.gz -> __ats_tmp___pad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff.skl+orig.BRIK.gz
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
Unpadding ...
++ 3dZeropad: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ output dataset: ./__ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.BRIK
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig
[7m*+ WARNING:[0m Changing the space of an ORIG view dataset may cause confusion!
[7m*+ WARNING:[0m  NIFTI copies will be interpreted as TLRC view (not TLRC space).
[7m*+ WARNING:[0m  Consider changing the view of the dataset to TLRC view also
++ 3drefit processed 1 datasets
Changing view of transformed anatomy
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+orig.HEAD
 + changing dataset view code
 + Changed dataset view type and filenames.
++ 3drefit processed 1 datasets
Setting parent with 3drefit -wset ./anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset __ats_tmp___upad40_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA.aff+tlrc
 + setting Warp parent
++ 3drefit processed 1 datasets
++ 3dAFNItoNIFTI: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
Cleanup ...
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> __ats_tmp___rs_pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename __ats_tmp___rs_pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> __ats_tmp___rs_pre.anat.un+orig.BRIK.gz
++ 3drename: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Warning: ignoring +orig on new_prefix.
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.HEAD -> pre.anat.un+orig.HEAD
++ THD_rename_dataset_files: rename pre.anat.un_AFN_OYmeqfZ3JqF7n9LNC7gDAA+orig.BRIK.gz -> pre.anat.un+orig.BRIK.gz
#Script is running (command trimmed):
  3dAttribute DELTA ./anat.un.aff.nii
#Script is running (command trimmed):
  3dAttribute DELTA ./base.nii
1.000000 1.000000
#Script is running (command trimmed):
  3dinfo -same_grid ./anat.un.aff.nii ./base.nii
#++ Aligning /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/awpy/base.nii data to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/awpy/anat.un.aff.nii data
#Script is running (command trimmed):
  3dQwarp -prefix ./anat.un.aff.qw.nii -blur -3 -3 -workhard:0:1 -base ./base.nii -source ./anat.un.aff.nii 
++ OpenMP thread count = 6
++ 3dQwarp: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the (Hermite) Cubically Warped
++ Dataset zero-pad: xbot=15 xtop=14  ybot=17 ytop=18  zbot=14 ztop=15 voxels
++ Weightizing the base image
++ +++++++++++ Begin warp optimization:  base=./base.nii  source=./anat.un.aff.nii
++ AFNI warpomatic: 180 x 223 x 183 volume ; autobbox = 13..167 16..205 13..169 [clock= 10s 204ms]
lev=0 0..179 0..222 0..182: [first cost=-0.66599] ... done [cost:-0.66599==>-0.72668]
lev=1 patch=135x167x137 [clock= 28m 4s 457ms]........:[cost=-0.76132]:........ done [cost:-0.72668==>-0.76460 ; 16 patches optimized, 0 skipped]
lev=2 patch=101x125x103 [clock= 46m 14s 809ms].......................... done [cost:-0.76460==>-0.83322 ; 26 patches optimized, 1 skipped]
lev=3 patch=77x95x77 [clock= 1h 0m 18s 967ms].............. done [cost:-0.83322==>-0.89052 ; 46 patches optimized, 18 skipped]
lev=4 patch=57x71x59 [clock= 1h 11m 25s 819ms]............ done [cost:-0.89052==>-0.94142 ; 81 patches optimized, 44 skipped]
lev=5 patch=43x53x43 [clock= 1h 21m 7s 416ms]................. done [cost:-0.94142==>-1.00797 ; 218 patches optimized, 125 skipped]
lev=6 patch=33x39x33 [clock= 1h 30m 45s 226ms]......................... done [cost:-1.00797==>-1.05842 ; 543 patches optimized, 457 skipped]
lev=7 patch=25x25x25 [clock= 1h 40m 42s 878ms]................................. done [cost:-1.05842==>-1.13297 ; 1453 patches optimized, 1251 skipped]
++ ========== total number of parameters 'optimized' = 57489
++ Output dataset ./anat.un.aff.qw.nii
++ Output dataset ./anat.un.aff.qw_WARP.nii
++ ===== clock time = 1h 51m 40s 230ms
#++ Applying warps to /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/Sag3DMPRAGEs002a1001_ns+orig
#Script is running (command trimmed):
  3dNwarpApply -nwarp "./anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D" -master ./base.nii -source /gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/Sag3DMPRAGEs002a1001_ns+orig -prefix ./Sag3DMPRAGEs002a1001_ns.aw.nii 
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is './base.nii'
++ opened source dataset '/gpfs/gsfs8/users/jangrawdc/PRJ16_TaskFcManipulation/RawData/tb0169/tb0169.srtt_v2/Sag3DMPRAGEs002a1001_ns+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./Sag3DMPRAGEs002a1001_ns.aw.nii
++ total Elapsed time = 11.8 sec
#++ Saving history
#Script is running (command trimmed):
  3dNotes -h "auto_warp.py -base MNI_caez_N27+tlrc -input \
 Sag3DMPRAGEs002a1001_ns+orig -skull_strip_input no" \
 ./Sag3DMPRAGEs002a1001_ns.aw.nii


3dbucket -prefix Sag3DMPRAGEs002a1001_ns awpy/Sag3DMPRAGEs002a1001_ns.aw.nii
++ 3dbucket: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
mv awpy/anat.un.aff.Xat.1D .
mv awpy/anat.un.aff.qw_WARP.nii .
if ( ! -f Sag3DMPRAGEs002a1001_ns+tlrc.HEAD ) then
foreach run ( 01 02 03 )
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r01.1D -prefix rm.epi.volreg.r01 -cubic -1Dmatrix_save mat.r01.vr.aff12.1D pb02.tb0169.r01.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb0169.r01.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ Reading input dataset ./pb02.tb0169.r01.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30867 voxels
 + 4922 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=-0.022  pitch=-0.519  yaw=-0.304  dS=-0.602  dL=-0.013  dP=-0.192
++ Mean: roll=+0.187  pitch=-0.176  yaw=-0.082  dS=+0.076  dL=+0.177  dP=-0.042
++ Max : roll=+0.363  pitch=+0.569  yaw=+0.073  dS=+0.327  dL=+0.487  dP=+0.098
++ Max displacements (mm) for each sub-brick:
 0.00(0.00) 0.17(0.17) 0.17(0.06) 0.17(0.11) 0.15(0.10) 0.14(0.12) 0.32(0.22) 0.22(0.12) 0.27(0.07) 0.25(0.07) 0.18(0.09) 0.12(0.08) 0.27(0.15) 0.25(0.07) 0.30(0.08) 0.38(0.11) 0.47(0.12) 0.52(0.08) 0.51(0.10) 0.57(0.07) 0.55(0.08) 0.57(0.08) 0.56(0.06) 0.61(0.08) 0.59(0.12) 0.62(0.05) 0.58(0.09) 0.58(0.09) 0.62(0.06) 0.47(0.18) 0.59(0.13) 0.53(0.07) 0.59(0.08) 0.57(0.07) 0.62(0.10) 0.57(0.06) 0.63(0.08) 0.59(0.05) 0.56(0.05) 0.59(0.06) 0.57(0.04) 0.58(0.05) 0.52(0.09) 0.23(0.45) 0.47(0.35) 0.56(0.27) 0.63(0.25) 0.57(0.12) 0.61(0.06) 0.68(0.11) 0.66(0.05) 0.69(0.07) 0.66(0.14) 0.70(0.08) 0.60(0.12) 0.55(0.08) 0.98(1.39) 1.52(0.54) 1.44(0.27) 1.45(0.11) 1.44(0.08) 1.05(0.40) 0.79(0.30) 0.77(0.09) 0.84(0.09) 0.77(0.13) 0.70(0.12) 0.83(0.15) 0.96(0.23) 0.82(0.50) 0.85(0.04) 0.83(0.05) 0.83(0.05) 0.77(0.09) 0.77(0.06) 0.76(0.03) 0.72(0.09) 0.77(0.32) 0.76(0.11) 0.75(0.04) 0.76(0.11) 0.75(0.10) 0.75(0.06) 0.78(0.07) 0.79(0.04) 0.73(0.07) 0.74(0.05) 0.76(0.09) 0.77(0.14) 0.74(0.08) 0.74(0.07) 0.79(0.07) 0.78(0.04) 0.80(0.06) 0.86(0.12) 0.83(0.12) 0.81(0.43) 0.72(0.63) 1.25(0.78) 1.19(0.16) 1.24(0.07) 1.30(0.07) 1.31(0.04) 1.30(0.06) 1.34(0.07) 1.36(0.07) 1.42(0.16) 1.40(0.06) 1.33(0.10) 1.33(0.03) 1.37(0.05) 1.39(0.04) 1.38(0.04) 1.38(0.05) 1.41(0.04) 1.45(0.06) 1.44(0.06) 1.45(0.03) 1.47(0.04) 1.48(0.05) 1.50(0.09) 1.46(0.08) 1.45(0.04) 1.46(0.08) 1.49(0.06) 1.48(0.08) 1.46(0.10) 1.47(0.11) 1.46(0.06) 1.50(0.15) 1.50(0.15) 1.45(0.11) 1.44(0.08) 1.43(0.14) 1.38(0.09) 1.40(0.07) 1.50(0.11) 1.14(0.39) 0.71(0.65) 1.03(0.53) 1.09(0.07) 1.04(0.08) 1.14(0.17) 1.26(0.13) 1.39(0.18) 1.13(0.32) 0.86(0.50) 1.06(0.26) 1.10(0.13) 1.27(0.28)
++ Max displacement in automask = 1.52 (mm) at sub-brick 57
++ Max delta displ  in automask = 1.39 (mm) at sub-brick 56
++ Wrote dataset to disk in ./rm.epi.volreg.r01+orig.BRIK
3dcalc -overwrite -a pb02.tb0169.r01.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r01.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb0169.r01.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -prefix rm.epi.nomask.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb0169.r01.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb0169.r01.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ opened source dataset 'pb02.tb0169.r01.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r01+tlrc.BRIK
++ total Elapsed time = 296.9 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r01.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r01
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.900002 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r01 rm.epi.1.r01+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r02.1D -prefix rm.epi.volreg.r02 -cubic -1Dmatrix_save mat.r02.vr.aff12.1D pb02.tb0169.r02.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb0169.r02.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ Reading input dataset ./pb02.tb0169.r02.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 30924 voxels
 + 4963 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.359  pitch=-0.490  yaw=+0.037  dS=-0.748  dL=+0.403  dP=-0.361
++ Mean: roll=+0.491  pitch=-0.165  yaw=+0.223  dS=-0.251  dL=+0.625  dP=-0.208
++ Max : roll=+0.588  pitch=+0.273  yaw=+0.335  dS=+0.027  dL=+0.718  dP=-0.063
++ Max displacements (mm) for each sub-brick:
 1.43(0.00) 1.43(0.21) 1.45(0.07) 1.40(0.06) 1.42(0.08) 1.31(0.21) 1.29(0.21) 1.29(0.16) 1.34(0.05) 1.36(0.14) 1.35(0.06) 1.34(0.13) 1.33(0.03) 1.36(0.11) 1.33(0.04) 1.32(0.06) 1.32(0.05) 1.31(0.09) 1.35(0.05) 1.33(0.08) 1.37(0.06) 1.35(0.03) 1.37(0.07) 1.38(0.04) 1.36(0.07) 1.41(0.10) 1.38(0.09) 1.42(0.07) 1.40(0.06) 1.41(0.05) 1.39(0.07) 1.41(0.13) 1.45(0.13) 1.44(0.11) 1.47(0.14) 1.48(0.16) 1.49(0.08) 1.47(0.03) 1.51(0.16) 1.34(0.42) 1.19(0.30) 1.27(0.30) 1.29(0.06) 1.32(0.09) 1.31(0.11) 1.33(0.08) 1.35(0.07) 1.35(0.09) 1.35(0.02) 1.37(0.03) 1.38(0.08) 1.38(0.01) 1.39(0.04) 1.41(0.06) 1.40(0.05) 1.43(0.05) 1.45(0.06) 1.46(0.04) 1.48(0.06) 1.47(0.03) 1.48(0.03) 1.45(0.05) 1.45(0.07) 1.48(0.04) 1.49(0.04) 1.50(0.07) 1.52(0.11) 1.56(0.14) 1.61(0.10) 1.62(0.07) 1.60(0.13) 1.58(0.17) 1.58(0.03) 1.57(0.04) 1.60(0.07) 1.63(0.07) 1.62(0.06) 1.63(0.03) 1.63(0.04) 1.63(0.05) 1.65(0.06) 1.63(0.08) 1.60(0.07) 1.61(0.12) 1.65(0.14) 1.63(0.05) 1.61(0.11) 1.63(0.08) 1.59(0.13) 1.41(0.76) 1.47(0.39) 1.53(0.37) 1.56(0.07) 1.59(0.07) 1.34(0.61) 1.46(0.90) 1.52(0.24) 1.52(0.35) 1.34(0.42) 1.31(0.16) 1.31(0.26) 1.29(0.11) 1.34(0.08) 1.33(0.07) 1.35(0.08) 1.33(0.13) 1.36(0.49) 1.37(0.18) 1.32(0.14) 1.34(0.08) 1.37(0.13) 1.44(0.11) 1.43(0.12) 1.45(0.10) 1.47(0.13) 1.51(0.07) 1.53(0.04) 1.56(0.08) 1.53(0.06) 1.57(0.07) 1.54(0.07) 1.60(0.08) 1.62(0.08) 1.63(0.04) 1.64(0.05) 1.69(0.20) 1.64(0.09) 1.52(0.27) 1.52(0.22) 1.56(0.11) 1.58(0.11) 1.62(0.06) 1.63(0.04) 1.63(0.04) 1.64(0.05) 1.64(0.05) 1.64(0.06) 1.65(0.05) 1.65(0.02) 1.62(0.07) 1.62(0.08) 1.49(0.21) 1.59(0.22) 1.39(0.52) 1.50(0.67) 1.42(0.25) 1.39(0.11) 1.37(0.21) 1.37(0.19) 1.35(0.17)
++ Max displacement in automask = 1.69 (mm) at sub-brick 125
++ Max delta displ  in automask = 0.90 (mm) at sub-brick 95
++ Wrote dataset to disk in ./rm.epi.volreg.r02+orig.BRIK
3dcalc -overwrite -a pb02.tb0169.r02.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r02.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb0169.r02.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -prefix rm.epi.nomask.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb0169.r02.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb0169.r02.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ opened source dataset 'pb02.tb0169.r02.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r02+tlrc.BRIK
++ total Elapsed time = 294.0 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r02.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r02
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.900002 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r02 rm.epi.1.r02+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
3dvolreg -verbose -zpad 1 -base vr_base+orig -1Dfile dfile.r03.1D -prefix rm.epi.volreg.r03 -cubic -1Dmatrix_save mat.r03.vr.aff12.1D pb02.tb0169.r03.tshift+orig
++ 3dvolreg: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.900002 degrees from plumb.
++ Reading in base dataset ./vr_base+orig.BRIK
++ Oblique dataset:./pb02.tb0169.r03.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ Reading input dataset ./pb02.tb0169.r03.tshift+orig.BRIK
++ Edging: x=3 y=3 z=2
++ Creating mask for -maxdisp
 + Automask has 31019 voxels
 + 4958 voxels left in -maxdisp mask after erosion
++ Initializing alignment base
++ Starting final pass on 150 sub-bricks: 0..1..2..3..4..5..6..7..8..9..10..11..12..13..14..15..16..17..18..19..20..21..22..23..24..25..26..27..28..29..30..31..32..33..34..35..36..37..38..39..40..41..42..43..44..45..46..47..48..49..50..51..52..53..54..55..56..57..58..59..60..61..62..63..64..65..66..67..68..69..70..71..72..73..74..75..76..77..78..79..80..81..82..83..84..85..86..87..88..89..90..91..92..93..94..95..96..97..98..99..100..101..102..103..104..105..106..107..108..109..110..111..112..113..114..115..116..117..118..119..120..121..122..123..124..125..126..127..128..129..130..131..132..133..134..135..136..137..138..139..140..141..142..143..144..145..146..147..148..149..
++ CPU time for realignment=0 s  [=0 s/sub-brick]
++ Min : roll=+0.298  pitch=-0.494  yaw=-0.212  dS=-1.417  dL=+0.417  dP=-0.463
++ Mean: roll=+0.455  pitch=-0.147  yaw=+0.110  dS=-0.505  dL=+0.556  dP=-0.239
++ Max : roll=+0.561  pitch=+0.673  yaw=+0.389  dS=-0.151  dL=+0.644  dP=-0.134
++ Max displacements (mm) for each sub-brick:
 1.32(0.00) 1.47(0.45) 1.45(0.06) 1.42(0.09) 1.33(0.24) 1.28(0.27) 1.26(0.12) 1.27(0.08) 1.31(0.20) 1.25(0.07) 1.29(0.13) 1.27(0.04) 1.27(0.04) 1.28(0.06) 1.26(0.05) 1.27(0.02) 1.29(0.05) 1.25(0.07) 1.30(0.07) 1.26(0.18) 1.29(0.07) 1.27(0.14) 1.35(0.31) 1.31(0.17) 1.19(0.35) 1.24(0.12) 1.29(0.12) 1.31(0.24) 1.51(0.58) 1.32(0.36) 1.30(0.29) 1.30(0.17) 1.33(0.08) 1.35(0.06) 1.32(0.08) 1.33(0.07) 1.32(0.06) 1.33(0.05) 1.35(0.13) 1.37(0.08) 1.37(0.07) 1.39(0.07) 1.39(0.10) 1.40(0.11) 1.45(0.07) 1.43(0.12) 1.44(0.19) 1.44(0.14) 1.48(0.10) 1.47(0.06) 1.48(0.06) 1.47(0.04) 1.45(0.05) 1.45(0.05) 1.44(0.07) 1.46(0.09) 1.45(0.08) 1.47(0.09) 1.46(0.07) 1.47(0.07) 1.45(0.05) 1.48(0.04) 1.53(0.07) 1.52(0.07) 1.51(0.05) 1.53(0.05) 1.54(0.04) 1.56(0.05) 1.54(0.06) 1.55(0.07) 1.54(0.12) 1.58(0.11) 1.54(0.07) 1.57(0.05) 1.59(0.15) 1.60(0.11) 1.57(0.09) 1.56(0.12) 1.58(0.03) 1.44(0.25) 1.43(0.51) 1.38(0.26) 1.41(0.43) 1.45(0.08) 1.44(0.03) 1.49(0.12) 1.41(0.21) 1.67(1.37) 1.50(0.22) 1.22(0.49) 1.27(0.25) 1.31(0.27) 1.29(0.06) 1.21(0.16) 1.33(0.20) 1.36(0.21) 1.35(0.19) 1.27(0.10) 1.31(0.08) 1.30(0.21) 1.25(0.16) 1.30(0.10) 1.34(0.12) 1.37(0.05) 1.34(0.04) 1.33(0.27) 1.41(0.13) 1.38(0.18) 1.48(0.14) 1.38(0.41) 1.54(0.60) 1.54(0.22) 1.45(0.32) 1.42(0.18) 1.32(0.23) 1.30(0.12) 1.17(0.25) 1.17(0.03) 1.33(0.32) 1.38(0.15) 1.27(0.53) 1.62(1.15) 1.72(0.31) 1.52(0.40) 1.49(0.11) 1.39(0.26) 1.37(0.08) 1.38(0.08) 1.44(0.11) 1.42(0.10) 1.88(0.93) 2.30(0.48) 1.93(0.52) 1.63(0.49) 1.58(0.15) 1.52(0.16) 1.98(0.86) 2.50(0.87) 2.58(0.22) 2.55(0.40) 2.17(0.54) 1.61(0.79) 1.68(0.29) 1.56(0.41) 1.59(0.12) 1.75(0.32) 1.67(0.09) 1.70(0.10) 1.79(0.10) 1.59(0.52)
++ Max displacement in automask = 2.58 (mm) at sub-brick 138
++ Max delta displ  in automask = 1.37 (mm) at sub-brick 87
++ Wrote dataset to disk in ./rm.epi.volreg.r03+orig.BRIK
3dcalc -overwrite -a pb02.tb0169.r03.tshift+orig -expr 1 -prefix rm.epi.all1
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
[7m*+ WARNING:[0m input 'a' is not used in the expression
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I mat.r03.vr.aff12.1D
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source pb02.tb0169.r03.tshift+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -prefix rm.epi.nomask.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./pb02.tb0169.r03.tshift+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./pb02.tb0169.r03.tshift+orig.BRIK is 12.900002 degrees from plumb.
++ opened source dataset 'pb02.tb0169.r03.tshift+orig'
++ Processing -nwarp 
++ Warping: ......................................Z
++ Output dataset ./rm.epi.nomask.r03+tlrc.BRIK
++ total Elapsed time = 293.7 sec
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source rm.epi.all1+orig -nwarp anat.un.aff.qw_WARP.nii mat.r03.warp.aff12.1D -interp cubic -ainterp NN -quiet -prefix rm.epi.1.r03
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./rm.epi.all1+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./rm.epi.all1+orig.BRIK is 12.900002 degrees from plumb.
++ opened source dataset 'rm.epi.all1+orig'
3dTstat -min -prefix rm.epi.min.r03 rm.epi.1.r03+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
end
cat dfile.r01.1D dfile.r02.1D dfile.r03.1D
3dMean -datum short -prefix rm.epi.mean rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.HEAD
++ 3dMean: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dcalc -a rm.epi.mean+tlrc -expr step(a-0.999) -prefix mask_epi_extents
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
foreach run ( 01 02 03 )
3dcalc -a rm.epi.nomask.r01+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb0169.r01.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0169.r01.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r02+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb0169.r02.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0169.r02.volreg+tlrc.BRIK
end
3dcalc -a rm.epi.nomask.r03+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb03.tb0169.r03.volreg
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb03.tb0169.r03.volreg+tlrc.BRIK
end
cat_matvec -ONELINE anat.un.aff.Xat.1D Sag3DMPRAGEs002a1001_al_junk_mat.aff12.1D -I
3dNwarpApply -master Sag3DMPRAGEs002a1001_ns+tlrc -dxyz 3 -source vr_base+orig -nwarp anat.un.aff.qw_WARP.nii mat.basewarp.aff12.1D -prefix final_epi_vr_base
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ -master dataset is 'Sag3DMPRAGEs002a1001_ns+tlrc'
++ output grid size = 3 mm
[7m*+ WARNING:[0m   If you are performing spatial transformations on an oblique dset, 
  such as ./vr_base+orig.BRIK,
  or viewing/combining it with volumes of differing obliquity,
  you should consider running: 
     3dWarp -deoblique 
  on this and  other oblique datasets in the same session.
 See 3dWarp -help for details.
++ Oblique dataset:./vr_base+orig.BRIK is 12.900002 degrees from plumb.
++ opened source dataset 'vr_base+orig'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./final_epi_vr_base+tlrc.BRIK
++ total Elapsed time = 7.0 sec
3dcopy Sag3DMPRAGEs002a1001_ns+tlrc anat_final.tb0169
++ 3dcopy: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
3dAllineate -base final_epi_vr_base+tlrc -allcostX -input anat_final.tb0169+tlrc
tee out.allcostX.txt
++ 3dAllineate: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Registrator
++ Source dataset: ./anat_final.tb0169+tlrc.HEAD
++ Base dataset:   ./final_epi_vr_base+tlrc.HEAD
++ Loading datasets
++ 1765165 voxels in source_automask+0
++ Zero-pad: xbot=4 xtop=4
++ Zero-pad: ybot=4 ytop=4
++ Zero-pad: zbot=0 ztop=4
++ Computing -autobox
++ 207121 voxels [91.4%] in weight mask
++ Number of points for matching = 97346
++ Local correlation: blok type = 'RHDD(11.07)'
[7m*+ WARNING:[0m No output dataset will be calculated
++ OpenMP thread count = 6
volume 0
 + initial Parameters = 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 1.0000 1.0000 1.0000 0.0000 0.0000 0.0000
++ allcost output: init #0
   ls   = 0.151724
   sp   = 0.181434
   mi   = -0.683291
   crM  = 0.0481534
   nmi  = 0.867698
   je   = 4.48135
   hel  = -0.145546
   crA  = 0.219683
   crU  = 0.230036
   lss  = 0.848276
   lpc  = 0.122309
   lpa  = 0.877691
   lpc+ = 0.257775
   ncd  = 0.913386
++ 3dAllineate: total CPU time = 0.0 sec  Elapsed = 2.0
++ ###########################################################
3dNwarpApply -source Sag3DMPRAGEs002a1001+orig -master anat_final.tb0169+tlrc -ainterp wsinc5 -nwarp anat.un.aff.qw_WARP.nii anat.un.aff.Xat.1D -prefix anat_w_skull_warped
++ 3dNwarpApply: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Zhark the Warped
++ opened source dataset 'Sag3DMPRAGEs002a1001+orig'
++ -master dataset is 'anat_final.tb0169+tlrc'
++ Processing -nwarp 
++ Warping: .Z
++ Output dataset ./anat_w_skull_warped+tlrc.BRIK
++ total Elapsed time = 11.6 sec
foreach run ( 01 02 03 )
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb04.tb0169.r01.blur pb03.tb0169.r01.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (91.9 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb04.tb0169.r01.blur+tlrc.BRIK

3dcalc -a rm.pb04.tb0169.r01.blur+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.tb0169.r01.blur
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.tb0169.r01.blur+tlrc.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb04.tb0169.r02.blur pb03.tb0169.r02.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (91.9 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb04.tb0169.r02.blur+tlrc.BRIK

3dcalc -a rm.pb04.tb0169.r02.blur+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.tb0169.r02.blur
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.tb0169.r02.blur+tlrc.BRIK
end
3dmerge -1blur_fwhm 8 -doall -prefix rm.pb04.tb0169.r03.blur pb03.tb0169.r03.volreg+tlrc
++ 3dmerge: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ default -1dindex = 0
++ default -1tindex = 1
Program 3dmerge 
3dmerge: edit and combine 3D datasets, by RW Cox
++ editing input dataset in memory (91.9 MB)
......................................................................................................................................................-- Wrote edited dataset: ./rm.pb04.tb0169.r03.blur+tlrc.BRIK

3dcalc -a rm.pb04.tb0169.r03.blur+tlrc -b mask_epi_extents+tlrc -expr a*b -prefix pb04.tb0169.r03.blur
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./pb04.tb0169.r03.blur+tlrc.BRIK
end
foreach run ( 01 02 03 )
3dAutomask -dilate 1 -prefix rm.mask_r01 pb04.tb0169.r01.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb0169.r01.blur+tlrc
++ Forming automask
 + Fixed clip level = 369.383698
 + Used gradual clip level = 332.469208 .. 414.088257
 + Number voxels above clip level = 65289
 + Clustering voxels ...
 + Largest cluster has 64883 voxels
 + Clustering voxels ...
 + Largest cluster has 64855 voxels
 + Filled    65 voxels in small holes; now have 64920 voxels
 + Clustering voxels ...
 + Largest cluster has 64920 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 95730 voxels
 + Mask now has 64920 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 86716 voxels
++ 73934 voxels in the mask [out of 160650: 46.02%]
++ first   0 x-planes are zero [from L]
++ last    0 x-planes are zero [from R]
++ first   0 y-planes are zero [from P]
++ last    0 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r02 pb04.tb0169.r02.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb0169.r02.blur+tlrc
++ Forming automask
 + Fixed clip level = 369.436829
 + Used gradual clip level = 332.691254 .. 415.235687
 + Number voxels above clip level = 65291
 + Clustering voxels ...
 + Largest cluster has 64918 voxels
 + Clustering voxels ...
 + Largest cluster has 64882 voxels
 + Filled    57 voxels in small holes; now have 64939 voxels
 + Clustering voxels ...
 + Largest cluster has 64939 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 95711 voxels
 + Mask now has 64939 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 86713 voxels
++ 73937 voxels in the mask [out of 160650: 46.02%]
++ first   0 x-planes are zero [from L]
++ last    0 x-planes are zero [from R]
++ first   0 y-planes are zero [from P]
++ last    0 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dAutomask -dilate 1 -prefix rm.mask_r03 pb04.tb0169.r03.blur+tlrc
++ 3dAutomask: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: Emperor Zhark
++ Loading dataset pb04.tb0169.r03.blur+tlrc
++ Forming automask
 + Fixed clip level = 368.699310
 + Used gradual clip level = 332.110779 .. 414.786743
 + Number voxels above clip level = 65461
 + Clustering voxels ...
 + Largest cluster has 65097 voxels
 + Clustering voxels ...
 + Largest cluster has 65068 voxels
 + Filled    59 voxels in small holes; now have 65127 voxels
 + Clustering voxels ...
 + Largest cluster has 65127 voxels
 + Clustering non-brain voxels ...
 + Clustering voxels ...
 + Largest cluster has 95523 voxels
 + Mask now has 65127 voxels
++ Dilating automask
 + Clustering voxels ...
 + Largest cluster has 86514 voxels
++ 74136 voxels in the mask [out of 160650: 46.15%]
++ first   0 x-planes are zero [from L]
++ last    0 x-planes are zero [from R]
++ first   0 y-planes are zero [from P]
++ last    0 y-planes are zero [from A]
++ first   4 z-planes are zero [from I]
++ last    0 z-planes are zero [from S]
++ CPU time = 0.000000 sec
end
3dmask_tool -inputs rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.HEAD -union -prefix full_mask.tb0169
++ processing 3 input datasets...
++ padding all datasets by 0 (for dilations)
++ frac 0 over 3 volumes gives min count 0
++ voxel limits: 0 clipped, 74248 survived, 86402 were zero
++ writing result full_mask.tb0169...
3dresample -master full_mask.tb0169+tlrc -input Sag3DMPRAGEs002a1001_ns+tlrc -prefix rm.resam.anat
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.anat+tlrc -prefix mask_anat.tb0169
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 92570 survived, 68080 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_anat.tb0169...
3dABoverlap -no_automask full_mask.tb0169+tlrc mask_anat.tb0169+tlrc
tee out.mask_ae_overlap.txt
++ 3dOverlap: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
#A=./full_mask.tb0169+tlrc.BRIK  B=./mask_anat.tb0169+tlrc.BRIK
#A           #B           #(A uni B)   #(A int B)   #(A \ B)     #(B \ A)     %(A \ B)    %(B \ A)    Rx(B/A)    Ry(B/A)    Rz(B/A)
74248        92570        93040        73778        470          18792         0.6330     20.3003     1.0886     1.0043     1.3033
3ddot -dodice full_mask.tb0169+tlrc mask_anat.tb0169+tlrc
tee out.mask_ae_dice.txt
0.884533	
3dresample -master full_mask.tb0169+tlrc -prefix ./rm.resam.group -input /usr/local/apps/afni/current/linux_openmp_64/MNI_caez_N27+tlrc
3dmask_tool -dilate_input 5 -5 -fill_holes -input rm.resam.group+tlrc -prefix mask_group
++ no -frac option: defaulting to -union
++ processing 1 input datasets...
++ padding all datasets by 5 (for dilations)
++ frac 0 over 1 volumes gives min count 0
++ voxel limits: 0 clipped, 70239 survived, 90411 were zero
++ filled 0 holes (0 voxels)
++ writing result mask_group...
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -demean -write motion_demean.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -derivative -demean -write motion_deriv.1D
1d_tool.py -infile dfile_rall.1D -set_nruns 3 -show_censor_count -censor_prev_TR -censor_motion 0.3 motion_tb0169
total number of censored TRs (simple form) = 35
1deval -a motion_tb0169_censor.1D -b outcount_tb0169_censor.1D -expr a*b
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              
                       -show_trs_uncensored encoded`
1d_tool.py -infile censor_tb0169_combined_2.1D -show_trs_uncensored encoded
3dDeconvolve -input pb04.tb0169.r01.blur+tlrc.HEAD pb04.tb0169.r02.blur+tlrc.HEAD pb04.tb0169.r03.blur+tlrc.HEAD -censor censor_tb0169_combined_2.1D -polort 3 -local_times -num_stimts 12 -stim_times_AM1 1 stimuli/bl1_c1_unstr.txt dmBLOCK(1) -stim_label 1 uns1 -stim_times_AM1 2 stimuli/bl2_c1_unstr.txt dmBLOCK(1) -stim_label 2 uns2 -stim_times_AM1 3 stimuli/bl3_c1_unstr.txt dmBLOCK(1) -stim_label 3 uns3 -stim_times_AM1 4 stimuli/bl1_c2_str.txt dmBLOCK(1) -stim_label 4 str1 -stim_times_AM1 5 stimuli/bl2_c2_str.txt dmBLOCK(1) -stim_label 5 str2 -stim_times_AM1 6 stimuli/bl3_c2_str.txt dmBLOCK(1) -stim_label 6 str3 -stim_file 7 motion_demean.1D[0] -stim_base 7 -stim_label 7 roll -stim_file 8 motion_demean.1D[1] -stim_base 8 -stim_label 8 pitch -stim_file 9 motion_demean.1D[2] -stim_base 9 -stim_label 9 yaw -stim_file 10 motion_demean.1D[3] -stim_base 10 -stim_label 10 dS -stim_file 11 motion_demean.1D[4] -stim_base 11 -stim_label 11 dL -stim_file 12 motion_demean.1D[5] -stim_base 12 -stim_label 12 dP -num_glt 10 -gltsym SYM: +uns1 +uns2 +uns3 -glt_label 1 unstructured -gltsym SYM: +str1 +str2 +str3 -glt_label 2 structured -gltsym SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3 -glt_label 3 unstructured-structured -gltsym SYM: +str1 -uns1 -glt_label 4 structured-unstructured BL1 -gltsym SYM: +str2 -uns2 -glt_label 5 structured-unstructured BL2 -gltsym SYM: +str3 -uns3 -glt_label 6 structured-unstructured BL3 -jobs 10 -fout -tout -x1D X.xmat.1D -xjpeg X.jpg -x1D_uncensored X.nocensor.xmat.1D -fitts fitts.tb0169 -errts errts.tb0169 -bucket stats.tb0169
++ '-stim_times_AM1 1 stimuli/bl1_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 1': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c1_unstr.txt'
++ '-stim_times_AM1 2 stimuli/bl2_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 2': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c1_unstr.txt'
++ '-stim_times_AM1 3 stimuli/bl3_c1_unstr.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 3': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c1_unstr.txt'
++ '-stim_times_AM1 4 stimuli/bl1_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 4': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl1_c2_str.txt'
++ '-stim_times_AM1 5 stimuli/bl2_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 5': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl2_c2_str.txt'
++ '-stim_times_AM1 6 stimuli/bl3_c2_str.txt' has 1 auxiliary values per time point
++ '-stim_times_AM1 6': basis function model 'dmBLOCK(1)' uses 1 parameters,
    out of the 1 found in timing file 'stimuli/bl3_c2_str.txt'
++ 3dDeconvolve: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: B. Douglas Ward, et al.
++ current memory malloc-ated = 522,931 bytes (about 523 thousand [kilo])
++ loading dataset pb04.tb0169.r01.blur+tlrc.HEAD pb04.tb0169.r02.blur+tlrc.HEAD pb04.tb0169.r03.blur+tlrc.HEAD
++ current memory malloc-ated = 290,006,350 bytes (about 290 million [mega])
++ Auto-catenated input datasets treated as multiple imaging runs
++ Auto-catenated datasets start at:  0 150 300
++ STAT automask has 65013 voxels (out of 160650 = 40.5%)
++ Skipping check for initial transients
++ Input polort=3; Longest run=300.0 s; Recommended minimum polort=3 ++ OK ++
++ -stim_times using TR=2 s for stimulus timing conversion
++ -stim_times using TR=2 s for any -iresp output datasets
++  [you can alter the -iresp TR via the -TR_times option]
++ -stim_times_AM1 1 using LOCAL times
++ -stim_times_AM1 2 using LOCAL times
++ -stim_times_AM1 3 using LOCAL times
++ -stim_times_AM1 4 using LOCAL times
++ -stim_times_AM1 5 using LOCAL times
++ -stim_times_AM1 6 using LOCAL times
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 +str2 +str3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +uns1 +uns2 +uns3 -str1 -str2 -str3':
   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1  -1  -1  -1   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str1 -uns1':
   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str2 -uns2':
   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0   0 
 
------------------------------------------------------------
GLT matrix from 'SYM: +str3 -uns3':
   0   0   0   0   0   0   0   0   0   0   0   0   0   0  -1   0   0   1   0   0   0   0   0   0 
 
++ Number of time points: 450 (before censor) ; 411 (after)
 + Number of parameters:  24 [18 baseline ; 6 signal]
++ total shared memory needed = 602,116,200 bytes (about 602 million [mega])
++ current memory malloc-ated = 290,207,748 bytes (about 290 million [mega])
++ mmap() memory allocated: 602,116,200 bytes (about 602 million [mega])
++ Memory required for output bricks = 602,116,200 bytes (about 602 million [mega])
++ Wrote matrix image to file X.jpg
++ Wrote matrix values to file X.xmat.1D
++ ========= Things you can do with the matrix file =========
++ (a) Linear regression with ARMA(1,1) modeling of serial correlation:

3dREMLfit -matrix X.xmat.1D \
 -input "pb04.tb0169.r01.blur+tlrc.HEAD pb04.tb0169.r02.blur+tlrc.HEAD pb04.tb0169.r03.blur+tlrc.HEAD" \
 -fout -tout -Rbuck stats.tb0169_REML -Rvar stats.tb0169_REMLvar \
 -Rfitts fitts.tb0169_REML -Rerrts errts.tb0169_REML -verb
 
++ N.B.: 3dREMLfit command above written to file stats.REML_cmd
++ (b) Visualization/analysis of the matrix via ExamineXmat.R
++ (c) Synthesis of sub-model datasets using 3dSynthesize
++ ==========================================================
++ Wrote matrix values to file X.nocensor.xmat.1D
++ ----- Signal+Baseline matrix condition [X] (411x24):  3.68849  ++ VERY GOOD ++
++ ----- Signal-only matrix condition [X] (411x6):  1.03835  ++ VERY GOOD ++
++ ----- Baseline-only matrix condition [X] (411x18):  3.27413  ++ VERY GOOD ++
++ ----- stim_base-only matrix condition [X] (411x6):  2.42813  ++ VERY GOOD ++
++ ----- polort-only matrix condition [X] (411x12):  1.18784  ++ VERY GOOD ++
++ +++++ Matrix inverse average error = 1.16131e-15  ++ VERY GOOD ++
++ Matrix setup time = 1.36 s
++ Voxels in dataset: 160650
++ Voxels per job:    16065
++ Job #1: processing voxels 16065 to 32129; elapsed time=3.903
++ Job #2: processing voxels 32130 to 48194; elapsed time=3.918
++ Job #3: processing voxels 48195 to 64259; elapsed time=3.938
++ Job #4: processing voxels 64260 to 80324; elapsed time=3.959
++ Job #5: processing voxels 80325 to 96389; elapsed time=3.989
++ Job #6: processing voxels 96390 to 112454; elapsed time=4.009
++ Job #7: processing voxels 112455 to 128519; elapsed time=4.029
++ Job #8: processing voxels 128520 to 144584; elapsed time=4.056
++ Job #0: processing voxels 0 to 16064; elapsed time=4.066
++ voxel loop:++ Job #9: processing voxels 144585 to 160649; elapsed time=4.071
0123456789.0123456789.0123456789.0123456789.01234++ Job #7 finished; elapsed time=23.283
++ Job #2 finished; elapsed time=23.304
++ Job #1 finished; elapsed time=23.314
++ Job #6 finished; elapsed time=23.376
++ Job #8 finished; elapsed time=23.461
56++ Job #4 finished; elapsed time=23.698
7++ Job #9 finished; elapsed time=23.782
++ Job #3 finished; elapsed time=23.828
8++ Job #5 finished; elapsed time=23.916
9.
++ Job #0 waiting for children to finish; elapsed time=23.943
++ Job #0 now finishing up; elapsed time=23.943
++ Smallest FDR q [0 Full_Fstat] = 1.36158e-14
++ Smallest FDR q [2 uns1#0_Tstat] = 2.68928e-13
++ Smallest FDR q [3 uns1_Fstat] = 2.68944e-13
++ Smallest FDR q [5 uns2#0_Tstat] = 8.15008e-14
++ Smallest FDR q [6 uns2_Fstat] = 8.14922e-14
++ Smallest FDR q [8 uns3#0_Tstat] = 5.88297e-10
++ Smallest FDR q [9 uns3_Fstat] = 5.88272e-10
++ Smallest FDR q [11 str1#0_Tstat] = 2.30494e-12
++ Smallest FDR q [12 str1_Fstat] = 2.30518e-12
++ Smallest FDR q [14 str2#0_Tstat] = 5.75983e-14
++ Smallest FDR q [15 str2_Fstat] = 5.75838e-14
++ Smallest FDR q [17 str3#0_Tstat] = 1.00397e-10
++ Smallest FDR q [18 str3_Fstat] = 1.00381e-10
++ Smallest FDR q [20 unstructured_GLT#0_Tstat] = 3.61431e-14
++ Smallest FDR q [21 unstructured_GLT_Fstat] = 3.61395e-14
++ Smallest FDR q [23 structured_GLT#0_Tstat] = 2.69423e-14
++ Smallest FDR q [24 structured_GLT_Fstat] = 2.69361e-14
++ Smallest FDR q [26 unstructured-structured_GLT#0_Tstat] = 5.43886e-10
++ Smallest FDR q [27 unstructured-structured_GLT_Fstat] = 5.43865e-10
++ Smallest FDR q [29 structured-unstructured BL1_GLT#0_Tstat] = 2.05215e-06
++ Smallest FDR q [30 structured-unstructured BL1_GLT_Fstat] = 2.05209e-06
++ Smallest FDR q [32 structured-unstructured BL2_GLT#0_Tstat] = 3.01509e-06
++ Smallest FDR q [33 structured-unstructured BL2_GLT_Fstat] = 3.01507e-06
++ Smallest FDR q [35 structured-unstructured BL3_GLT#0_Tstat] = 1.17913e-11
++ Smallest FDR q [36 structured-unstructured BL3_GLT_Fstat] = 1.17882e-11
++ Wrote bucket dataset into ./stats.tb0169+tlrc.BRIK
 + created 25 FDR curves in bucket header
++ Wrote 3D+time dataset into ./fitts.tb0169+tlrc.BRIK
++ Wrote 3D+time dataset into ./errts.tb0169+tlrc.BRIK
++ Program finished; elapsed time=41.404
if ( 0 != 0 ) then
1d_tool.py -show_cormat_warnings -infile X.xmat.1D
tee out.cormat_warn.txt

Warnings regarding Correlation Matrix: X.xmat.1D

  severity   correlation   cosine  regressor pair
  --------   -----------   ------  ----------------------------------------
  high:         0.748       0.812  ( 0 vs. 15)  Run#1Pol#0  vs.  str1#0
  high:         0.737       0.796  ( 8 vs. 17)  Run#3Pol#0  vs.  str3#0
  high:         0.734       0.801  ( 4 vs. 16)  Run#2Pol#0  vs.  str2#0
  medium:       0.471       0.540  ( 8 vs. 14)  Run#3Pol#0  vs.  uns3#0
  medium:       0.458       0.537  ( 4 vs. 13)  Run#2Pol#0  vs.  uns2#0
  medium:       0.438       0.516  ( 0 vs. 12)  Run#1Pol#0  vs.  uns1#0
  medium:      -0.415      -0.398  (10 vs. 17)  Run#3Pol#2  vs.  str3#0
  medium:      -0.404      -0.350  ( 2 vs. 15)  Run#1Pol#2  vs.  str1#0

tcsh -x stats.REML_cmd
3dREMLfit -matrix X.xmat.1D -input pb04.tb0169.r01.blur+tlrc.HEAD pb04.tb0169.r02.blur+tlrc.HEAD pb04.tb0169.r03.blur+tlrc.HEAD -fout -tout -Rbuck stats.tb0169_REML -Rvar stats.tb0169_REMLvar -Rfitts fitts.tb0169_REML -Rerrts errts.tb0169_REML -verb
++ 3dREMLfit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWCox
++ Number of OpenMP threads = 6
++ No mask ==> computing for all 160650 voxels
++ FDR automask has 65013 voxels (out of 160650 = 40.5%)
++ -----  matrix condition (411x24):  3.68849  ++ VERY GOOD ++
 + masked off 17156 voxels for being all zero; 143494 left in mask
++ Converting input dataset to vector image
 +  dataset = 289 million [mega] bytes
 +  vectim  = 259 million [mega] bytes
++ starting REML setup calculations; total CPU=0.00 Elapsed=4.18
 + X matrix: 46.573% of elements are nonzero
 + starting 6 OpenMP threads for REML setup
 + REML setup finished: matrix rows=411 cols=24; 109*1 cases; total CPU=0.00 Elapsed=4.22
 +  average case bandwidth = 11.74
++ REML voxel loop: [6 threads]0123456789.0123456789.0123456789.0123456789.01234
 + ARMA voxel parameters estimated: total CPU=0.00 Elapsed=95.95
++ GLSQ loop:0123456789.0123456789.0123456789.0123456789.0123456789.
 + GLSQ regression done: total CPU=0.00 Elapsed=139.05
++ Output dataset ./stats.tb0169_REMLvar+tlrc.BRIK
++ Output dataset ./fitts.tb0169_REML+tlrc.BRIK
++ Output dataset ./errts.tb0169_REML+tlrc.BRIK
++ creating FDR curves in dataset stats.tb0169_REML+tlrc
++ Smallest FDR q [0 Full_Fstat] = 6.09799e-12
++ Smallest FDR q [2 uns1#0_Tstat] = 1.57216e-05
++ Smallest FDR q [3 uns1_Fstat] = 1.57216e-05
++ Smallest FDR q [5 uns2#0_Tstat] = 1.69669e-07
++ Smallest FDR q [6 uns2_Fstat] = 1.69669e-07
[7m*+ WARNING:[0m Smallest FDR q [8 uns3#0_Tstat] = 0.101316 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [9 uns3_Fstat] = 0.101316 ==> few true single voxel detections
++ Smallest FDR q [11 str1#0_Tstat] = 0.00360767
++ Smallest FDR q [12 str1_Fstat] = 0.00360767
++ Smallest FDR q [14 str2#0_Tstat] = 6.60939e-08
++ Smallest FDR q [15 str2_Fstat] = 6.60939e-08
++ Smallest FDR q [17 str3#0_Tstat] = 0.0144506
++ Smallest FDR q [18 str3_Fstat] = 0.0144505
++ Smallest FDR q [20 unstructured#0_Tstat] = 4.73964e-12
++ Smallest FDR q [21 unstructured_Fstat] = 4.73964e-12
++ Smallest FDR q [23 structured#0_Tstat] = 6.37164e-12
++ Smallest FDR q [24 structured_Fstat] = 6.37162e-12
[7m*+ WARNING:[0m Smallest FDR q [26 unstructured-structured#0_Tstat] = 0.524222 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [27 unstructured-structured_Fstat] = 0.524222 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [29 structured-unstructured_BL1#0_Tstat] = 0.99987 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [30 structured-unstructured_BL1_Fstat] = 0.99987 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [32 structured-unstructured_BL2#0_Tstat] = 0.814801 ==> few true single voxel detections
[7m*+ WARNING:[0m Smallest FDR q [33 structured-unstructured_BL2_Fstat] = 0.814801 ==> few true single voxel detections
++ Smallest FDR q [35 structured-unstructured_BL3#0_Tstat] = 0.0822621
++ Smallest FDR q [36 structured-unstructured_BL3_Fstat] = 0.0822621
 + Added 25 FDR curves to dataset stats.tb0169_REML+tlrc
++ Output dataset ./stats.tb0169_REML+tlrc.BRIK
 + unloading input dataset and REML matrices
++ 3dREMLfit is all done! total CPU=0.00 Elapsed=157.68
if ( 0 != 0 ) then
3dTcat -prefix all_runs.tb0169 pb04.tb0169.r01.blur+tlrc.HEAD pb04.tb0169.r02.blur+tlrc.HEAD pb04.tb0169.r03.blur+tlrc.HEAD
++ 3dTcat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ elapsed time = 1.3 s
3dTstat -mean -prefix rm.signal.all all_runs.tb0169+tlrc[0..54,58..95,99..136,139..237,240..242,247..292,295..326,329..385,389..408,411..418,422..428,431,434,442..447]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.signal.all+tlrc.BRIK
3dTstat -stdev -prefix rm.noise.all errts.tb0169_REML+tlrc[0..54,58..95,99..136,139..237,240..242,247..292,295..326,329..385,389..408,411..418,422..428,431,434,442..447]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./rm.noise.all+tlrc.BRIK
3dcalc -a rm.signal.all+tlrc -b rm.noise.all+tlrc -c full_mask.tb0169+tlrc -expr c*a/b -prefix TSNR.tb0169
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./TSNR.tb0169+tlrc.BRIK
3dTnorm -norm2 -prefix rm.errts.unit errts.tb0169_REML+tlrc
++ 3dTnorm: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Output dataset ./rm.errts.unit+tlrc.BRIK
3dmaskave -quiet -mask full_mask.tb0169+tlrc rm.errts.unit+tlrc
++ 3dmaskave: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
+++ 74248 voxels survive the mask
3dTstat -sos -prefix - gmean.errts.unit.1D'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo -- GCOR = `cat out.gcor.1D`
cat out.gcor.1D
-- GCOR =  0.24479
3dcalc -a rm.errts.unit+tlrc -b gmean.errts.unit.1D -expr a*b -prefix rm.DP
++ 3dcalc: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: A cast of thousands
++ Output dataset ./rm.DP+tlrc.BRIK
3dTstat -sum -prefix corr_brain rm.DP+tlrc
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
++ Output dataset ./corr_brain+tlrc.BRIK
1dcat X.nocensor.xmat.1D[12]
1dcat X.nocensor.xmat.1D[13]
1dcat X.nocensor.xmat.1D[14]
1dcat X.nocensor.xmat.1D[15]
1dcat X.nocensor.xmat.1D[16]
1dcat X.nocensor.xmat.1D[17]
set reg_cols = `1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest`
1d_tool.py -infile X.nocensor.xmat.1D -show_indices_interest
3dTstat -sum -prefix sum_ideal.1D X.nocensor.xmat.1D[12..17]
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
++ Output dataset ./sum_ideal.1D
1dcat X.nocensor.xmat.1D[12..17]
touch blur_est.tb0169.1D
mkdir files_ACF
touch blur.errts.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..54,58..95,99..136,139..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r01.1D errts.tb0169+tlrc[0..54,58..95,99..136,139..149]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 74248
[7m*+ WARNING:[0m removed 348 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 142 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 33.55 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r01.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..237,240..242,247..292,295..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r02.1D errts.tb0169+tlrc[150..237,240..242,247..292,295..299]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 74248
[7m*+ WARNING:[0m removed 348 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 142 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.89 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r02.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..326,329..385,389..408,411..418,422..428,431,434,442..447 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+tlrc -ACF files_ACF/out.3dFWHMx.ACF.errts.r03.1D errts.tb0169+tlrc[300..326,329..385,389..408,411..418,422..428,431,434,442..447]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 74248
[7m*+ WARNING:[0m removed 348 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 127 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 33.54 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.errts.r03.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.errts.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts FWHM blurs: 0 0 0 0
average errts FWHM blurs: 0 0 0 0
echo 0 0 0 0   # errts FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.errts.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.errts.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average errts ACF blurs: 0.501763 6.87071 13.9899 17.1581
average errts ACF blurs: 0.501763 6.87071 13.9899 17.1581
echo 0.501763 6.87071 13.9899 17.1581   # errts ACF blur estimates
touch blur.err_reml.1D
foreach run ( 01 02 03 )
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 01
if ( 0..54,58..95,99..136,139..149 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D errts.tb0169_REML+tlrc[0..54,58..95,99..136,139..149]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 74248
[7m*+ WARNING:[0m removed 348 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 142 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 33.06 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r01.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 02
if ( 150..237,240..242,247..292,295..299 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D errts.tb0169_REML+tlrc[150..237,240..242,247..292,295..299]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 74248
[7m*+ WARNING:[0m removed 348 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 142 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 32.82 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r02.1D.png
end
set trs = `1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded 
                          -show_trs_run $run`
1d_tool.py -infile X.xmat.1D -show_trs_uncensored encoded -show_trs_run 03
if ( 300..326,329..385,389..408,411..418,422..428,431,434,442..447 ==  ) continue
3dFWHMx -detrend -mask full_mask.tb0169+tlrc -ACF files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D errts.tb0169_REML+tlrc[300..326,329..385,389..408,411..418,422..428,431,434,442..447]
++ 3dFWHMx: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: The Bob
++ Number of voxels in mask = 74248
[7m*+ WARNING:[0m removed 348 voxels from mask because they are constant in time
++ detrending start: 11 baseline funcs, 127 time points
 + detrending done (0.00 CPU s thus far)
++ start ACF calculations out to radius = 33.08 mm
 + ACF done (0.00 CPU s thus far)
++ ACF 1D file [radius ACF mixed_model gaussian_NEWmodel] written to files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D
++ 1dplot: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RWC et al.
 + and 1dplot-ed to file files_ACF/out.3dFWHMx.ACF.err_reml.r03.1D.png
end
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{0..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{0..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml FWHM blurs: 0 0 0 0
average err_reml FWHM blurs: 0 0 0 0
echo 0 0 0 0   # err_reml FWHM blur estimates
set blurs = ( `3dTstat -mean -prefix - blur.err_reml.1D'{1..$(2)}'\'` )
3dTstat -mean -prefix - blur.err_reml.1D{1..$(2)}'
++ 3dTstat: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: KR Hammett & RW Cox
[7m*+ WARNING:[0m Input dataset is not 3D+time; assuming TR=1.0
echo average err_reml ACF blurs: 0.524645 6.85665 14.0283 17.0822
average err_reml ACF blurs: 0.524645 6.85665 14.0283 17.0822
echo 0.524645 6.85665 14.0283 17.0822   # err_reml ACF blur estimates
mkdir files_ClustSim
set params = ( `grep ACF blur_est.$subj.1D | tail -n 1` )
tail -n 1
grep ACF blur_est.tb0169.1D
3dClustSim -both -mask full_mask.tb0169+tlrc -acf 0.524645 6.85665 14.0283 -cmd 3dClustSim.ACF.cmd -prefix files_ClustSim/ClustSim.ACF
++ 3dClustSim: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox and BD Ward
++ 74248 voxels in mask (46.22% of total)
++ Kernel function radius = 44.45 mm
++ ACF(0.52,6.86,14.03) => FWHM=17.08 => 50x63x51 pads to 80x96x96
 + Kernel image dimensions 39 x 47 x 47
++ Startup clock time = 0.2 s
++ Using 6 OpenMP threads
Simulating:0123456789.0123456789.0123456789.0123456789.012345678!
++ Clock time now = 604.0 s
++ Command fragment to put cluster results into a dataset header;
 + (also echoed to file 3dClustSim.ACF.cmd for your scripting pleasure)
 + Append the name of the datasets to be patched to this command:
 3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml 
set cmd = ( `cat 3dClustSim.ACF.cmd` )
cat 3dClustSim.ACF.cmd
3drefit -atrstring AFNI_CLUSTSIM_NN1_1sided file:files_ClustSim/ClustSim.ACF.NN1_1sided.niml -atrstring AFNI_CLUSTSIM_MASK file:files_ClustSim/ClustSim.ACF.mask -atrstring AFNI_CLUSTSIM_NN2_1sided file:files_ClustSim/ClustSim.ACF.NN2_1sided.niml -atrstring AFNI_CLUSTSIM_NN3_1sided file:files_ClustSim/ClustSim.ACF.NN3_1sided.niml -atrstring AFNI_CLUSTSIM_NN1_2sided file:files_ClustSim/ClustSim.ACF.NN1_2sided.niml -atrstring AFNI_CLUSTSIM_NN2_2sided file:files_ClustSim/ClustSim.ACF.NN2_2sided.niml -atrstring AFNI_CLUSTSIM_NN3_2sided file:files_ClustSim/ClustSim.ACF.NN3_2sided.niml -atrstring AFNI_CLUSTSIM_NN1_bisided file:files_ClustSim/ClustSim.ACF.NN1_bisided.niml -atrstring AFNI_CLUSTSIM_NN2_bisided file:files_ClustSim/ClustSim.ACF.NN2_bisided.niml -atrstring AFNI_CLUSTSIM_NN3_bisided file:files_ClustSim/ClustSim.ACF.NN3_bisided.niml stats.tb0169+tlrc stats.tb0169_REML+tlrc
++ 3drefit: AFNI version=AFNI_17.3.09 (Dec 22 2017) [64-bit]
++ Authored by: RW Cox
++ Processing AFNI dataset stats.tb0169+tlrc
 + atrcopy
++ applying attributes
++ Processing AFNI dataset stats.tb0169_REML+tlrc
 + atrcopy
++ applying attributes
++ 3drefit processed 2 datasets
gen_epi_review.py -script @epi_review.tb0169 -dsets pb00.tb0169.r01.tcat+orig.HEAD pb00.tb0169.r02.tcat+orig.HEAD pb00.tb0169.r03.tcat+orig.HEAD
gen_ss_review_scripts.py -mot_limit 0.3 -out_limit 0.1 -exit0
++ writing ss review basic:          @ss_review_basic
++ writing ss review driver:         @ss_review_driver
++ writing ss review drive commands: @ss_review_driver_commands
rm -fr rm.DP+tlrc.BRIK rm.DP+tlrc.HEAD rm.epi.1.r01+tlrc.BRIK.gz rm.epi.1.r01+tlrc.HEAD rm.epi.1.r02+tlrc.BRIK.gz rm.epi.1.r02+tlrc.HEAD rm.epi.1.r03+tlrc.BRIK.gz rm.epi.1.r03+tlrc.HEAD rm.epi.all1+orig.BRIK.gz rm.epi.all1+orig.HEAD rm.epi.mean+tlrc.BRIK.gz rm.epi.mean+tlrc.HEAD rm.epi.min.r01+tlrc.BRIK.gz rm.epi.min.r01+tlrc.HEAD rm.epi.min.r02+tlrc.BRIK.gz rm.epi.min.r02+tlrc.HEAD rm.epi.min.r03+tlrc.BRIK.gz rm.epi.min.r03+tlrc.HEAD rm.epi.nomask.r01+tlrc.BRIK rm.epi.nomask.r01+tlrc.HEAD rm.epi.nomask.r02+tlrc.BRIK rm.epi.nomask.r02+tlrc.HEAD rm.epi.nomask.r03+tlrc.BRIK rm.epi.nomask.r03+tlrc.HEAD rm.epi.volreg.r01+orig.BRIK rm.epi.volreg.r01+orig.HEAD rm.epi.volreg.r02+orig.BRIK rm.epi.volreg.r02+orig.HEAD rm.epi.volreg.r03+orig.BRIK rm.epi.volreg.r03+orig.HEAD rm.errts.unit+tlrc.BRIK rm.errts.unit+tlrc.HEAD rm.mask_r01+tlrc.BRIK.gz rm.mask_r01+tlrc.HEAD rm.mask_r02+tlrc.BRIK.gz rm.mask_r02+tlrc.HEAD rm.mask_r03+tlrc.BRIK.gz rm.mask_r03+tlrc.HEAD rm.noise.all+tlrc.BRIK rm.noise.all+tlrc.HEAD rm.out.cen.r01.1D rm.out.cen.r02.1D rm.out.cen.r03.1D rm.pb04.tb0169.r01.blur+tlrc.BRIK rm.pb04.tb0169.r01.blur+tlrc.HEAD rm.pb04.tb0169.r02.blur+tlrc.BRIK rm.pb04.tb0169.r02.blur+tlrc.HEAD rm.pb04.tb0169.r03.blur+tlrc.BRIK rm.pb04.tb0169.r03.blur+tlrc.HEAD rm.resam.anat+tlrc.BRIK rm.resam.anat+tlrc.HEAD rm.resam.group+tlrc.BRIK rm.resam.group+tlrc.HEAD rm.signal.all+tlrc.BRIK rm.signal.all+tlrc.HEAD awpy
if ( -e @ss_review_basic ) ./@ss_review_basic
tee out.ss_review.tb0169.txt
./@ss_review_basic

subject ID                : tb0169
TRs removed (per run)     : 6
num stim classes provided : 6
final anatomy dset        : anat_final.tb0169+tlrc.HEAD
final stats dset          : stats.tb0169_REML+tlrc.HEAD
final voxel resolution    : 3.000000	3.000000	3.000000

motion limit              : 0.3
num TRs above mot limit   : 20
average motion (per TR)   : 0.0982838
average censored motion   : 0.0782104
max motion displacement   : 2.01505
max censored displacement : 1.80863
outlier limit             : 0.1
average outlier frac (TR) : 0.0100268
num TRs above out limit   : 14

num runs found            : 3
num TRs per run           : 150 150 150
num TRs per run (applied) : 142 142 127
num TRs per run (censored): 8 8 23
fraction censored per run : 0.0533333 0.0533333 0.153333
TRs total (uncensored)    : 450
TRs total                 : 411
degrees of freedom used   : 24
degrees of freedom left   : 387

TRs censored              : 39
censor fraction           : 0.086667
num regs of interest      : 6
num TRs per stim (orig)   : 68 68 68 111 111 111
num TRs censored per stim : 8 6 10 6 6 17
fraction TRs censored     : 0.118 0.088 0.147 0.054 0.054 0.153
ave mot per sresp (orig)  : 0.109333 0.086011 0.116460 0.079945 0.077544 0.128803
ave mot per sresp (cens)  : 0.080598 0.066546 0.082296 0.066869 0.067512 0.093961

TSNR average              : 246.579
global correlation (GCOR) : 0.24479
anat/EPI mask Dice coef   : 0.884533
maximum F-stat (masked)   : 17.8293
blur estimates (ACF)      : 0.524645 6.85665 14.0283
blur estimates (FWHM)     : 0 0 0


cd ..
echo execution finished: `date`
date
execution finished: Wed Dec 27 19:00:30 EST 2017
